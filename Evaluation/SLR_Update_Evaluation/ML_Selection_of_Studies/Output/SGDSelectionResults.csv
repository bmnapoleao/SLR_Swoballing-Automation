Title,Abstract,Relevance,Merged,Predicted,,,Legend,,
Protocol and tools for conducting agile software engineering research in an industrial-academic setting,"Conducting empirical research in software engineering industry is a process, and as such, it should be generalizable. The aim of this paper is to discuss how academic researchers may address some of the challenges they encounter during conducting empirical research in the software industry by means of a systematic and structured approach. The protocol developed in this paper should serve as a practical guide for researchers and help them with conducting empirical research in this complex environment.",1,"Protocol and tools for conducting agile software engineering research in an industrial-academic settingConducting empirical research in software engineering industry is a process, and as such, it should be generalizable. The aim of this paper is to discuss how academic researchers may address some of the challenges they encounter during conducting empirical research in the software industry by means of a systematic and structured approach. The protocol developed in this paper should serve as a practical guide for researchers and help them with conducting empirical research in this complex environment.",1,, ,Relevance,Predicted,Result
Industry{\textendash}academia collaborations in software testing: experience and success stories from Canada and Turkey, ,1,Industry{\textendash}academia collaborations in software testing: experience and success stories from Canada and Turkey ,1,,,1,1,True Positive
Challenges and best practices in industry-academia collaborations in software engineering: A systematic literature review,"Context: The global software industry and the software engineering (SE) academia are two large communities. However, unfortunately, the level of joint industry-academia collaborations in SE is still relatively very low, compared to the amount of activity in each of the two communities. It seems that the two ’camps’ show only limited interest/motivation to collaborate with one other. Many researchers and practitioners have written about the challenges, success patterns (what to do, i.e., how to collaborate) and anti-patterns (what not do do) for industry-academia collaborations.",0,"Challenges and best practices in industry-academia collaborations in software engineering: A systematic literature reviewContext: The global software industry and the software engineering (SE) academia are two large communities. However, unfortunately, the level of joint industry-academia collaborations in SE is still relatively very low, compared to the amount of activity in each of the two communities. It seems that the two ’camps’ show only limited interest/motivation to collaborate with one other. Many researchers and practitioners have written about the challenges, success patterns (what to do, i.e., how to collaborate) and anti-patterns (what not do do) for industry-academia collaborations.",1,,,0,1,False Positive
Characterizing industry-academia collaborations in software engineering: evidence from 101 projects, ,1,Characterizing industry-academia collaborations in software engineering: evidence from 101 projects ,1,,,,,
Case Studies of Industry-Academia Research Collaborations for Software Development with Agile, ,0,Case Studies of Industry-Academia Research Collaborations for Software Development with Agile ,1,,,,,
Industry-Academia research collaboration in software engineering: The Certus model, ,1,Industry-Academia research collaboration in software engineering: The Certus model ,1,,,,,
A Researcher's Experiences in Supporting Industrial Software Process Improvement,"Industry–academia collaboration in software engineering is essential for the relevance of research, as research may make important contributions to the improvement of software engineering. Thus, software engineering researchers are an asset in software process improvement. In this chapter, I present different experiences of being an embedded researcher in industry contributing to software process improvement. The process improvement works were focused on helping organizations to move from plan-driven processes to agile and lean processes. We will elaborate on the challenges, essential practices, and related benefits that were observed when working closely with industry in the role of embedded researchers. Supporting examples from different published cases form the basis for this experience report.",1,"A Researcher's Experiences in Supporting Industrial Software Process ImprovementIndustry–academia collaboration in software engineering is essential for the relevance of research, as research may make important contributions to the improvement of software engineering. Thus, software engineering researchers are an asset in software process improvement. In this chapter, I present different experiences of being an embedded researcher in industry contributing to software process improvement. The process improvement works were focused on helping organizations to move from plan-driven processes to agile and lean processes. We will elaborate on the challenges, essential practices, and related benefits that were observed when working closely with industry in the role of embedded researchers. Supporting examples from different published cases form the basis for this experience report.",1,,,,,
Guiding the selection of research methodology in industry{\textendash}academia collaboration in software engineering, ,1,Guiding the selection of research methodology in industry{\textendash}academia collaboration in software engineering ,1,,,,,
A proposal for using design science in small-scale postgraduate research projects in information technology,Design science is a research paradigm where the development and evaluation of an artefact is a key contribution. Design science is used in many domains and this paper draws on those domains to formulate a generic structure for design science research suitable for small-scale postgraduate information technology research projects. The paper includes guidelines for writing proposals and a generic research report structure. The paper presents ethical issues to consider in design science research and contributes guidelines for assessment.,0,A proposal for using design science in small-scale postgraduate research projects in information technologyDesign science is a research paradigm where the development and evaluation of an artefact is a key contribution. Design science is used in many domains and this paper draws on those domains to formulate a generic structure for design science research suitable for small-scale postgraduate information technology research projects. The paper includes guidelines for writing proposals and a generic research report structure. The paper presents ethical issues to consider in design science research and contributes guidelines for assessment.,1,,,,,
Challenges of Structured Reuse Adoption {\textemdash} Lessons Learned,"Adoption of structured reuse approaches in practice often poses multiple challenges. Research-industry collaborations are considered as suitable vehicle to mitigate adoption difficulties as well as to validate the applicability of scientific results. However, research cooperations with industry do not always live up to the expectations of either of the partners. Unfortunately for researchers and practitioners alike, insights behind the scenes of failed adoption and cooperation are often difficult to obtain. This hinders discussions on lessons learned by organizations during the adoption process and delays improvements. This paper aims to mitigate this issue by presenting lessons learned from interviews we conducted with practitioners in the context of a study on software reuse in industry. The study covered a wide range of aspects, including the process of reuse adoption. One of the participating companies had undertaken two attempts to adopt a form of structured reuse. However, both attempts did not succeed as expected. In our study, we identified tacit assumptions that were related to the encountered difficulties and present the lessons learned from the adoption approach. Furthermore , we report strategies that helped us to overcome the skepticism caused by a previous unsuccessful guided collaboration.",0,"Challenges of Structured Reuse Adoption {\textemdash} Lessons LearnedAdoption of structured reuse approaches in practice often poses multiple challenges. Research-industry collaborations are considered as suitable vehicle to mitigate adoption difficulties as well as to validate the applicability of scientific results. However, research cooperations with industry do not always live up to the expectations of either of the partners. Unfortunately for researchers and practitioners alike, insights behind the scenes of failed adoption and cooperation are often difficult to obtain. This hinders discussions on lessons learned by organizations during the adoption process and delays improvements. This paper aims to mitigate this issue by presenting lessons learned from interviews we conducted with practitioners in the context of a study on software reuse in industry. The study covered a wide range of aspects, including the process of reuse adoption. One of the participating companies had undertaken two attempts to adopt a form of structured reuse. However, both attempts did not succeed as expected. In our study, we identified tacit assumptions that were related to the encountered difficulties and present the lessons learned from the adoption approach. Furthermore , we report strategies that helped us to overcome the skepticism caused by a previous unsuccessful guided collaboration.",1,,,,,
"Approaches, success factors, and barriers for technology transfer in software engineering-Results of a systematic literature review","Introduction
Technology transfer aims at supporting the transfer of results from software engineering research from academia to industrial application.

Objective
This paper reports on the current state of technology transfer in software engineering.

Method
We conducted a systematic literature review, in which we investigated 3070 papers. We identified in total 70 relevant papers, which were subject of a detailed analysis.

Results
Many different approaches are proposed to foster technology transfer in software engineering. The majority of these approaches suggest direct collaboration between industry and academia or teaching new technologies in industrial training or university education. In addition, a considerable number of experience reports on technology transfer exist. Hence, a multitude of best practices, success stories, and lessons learned is reported. Among others, empirical evidence, maturity, and adaptability of the technology seem important preconditions for successful transfer, while social and organizational factors seem important barriers to successful technology transfer.

Conclusion
Our findings can aid software engineering researchers in determining how best to support the transfer of their research results into practice. Furthermore, analysis of the literature also revealed that no reports exist on the combination of various technology transfer approaches, which could increase advantages of existing approaches while reducing their disadvantages.",0,"Approaches, success factors, and barriers for technology transfer in software engineering-Results of a systematic literature reviewIntroduction
Technology transfer aims at supporting the transfer of results from software engineering research from academia to industrial application.

Objective
This paper reports on the current state of technology transfer in software engineering.

Method
We conducted a systematic literature review, in which we investigated 3070 papers. We identified in total 70 relevant papers, which were subject of a detailed analysis.

Results
Many different approaches are proposed to foster technology transfer in software engineering. The majority of these approaches suggest direct collaboration between industry and academia or teaching new technologies in industrial training or university education. In addition, a considerable number of experience reports on technology transfer exist. Hence, a multitude of best practices, success stories, and lessons learned is reported. Among others, empirical evidence, maturity, and adaptability of the technology seem important preconditions for successful transfer, while social and organizational factors seem important barriers to successful technology transfer.

Conclusion
Our findings can aid software engineering researchers in determining how best to support the transfer of their research results into practice. Furthermore, analysis of the literature also revealed that no reports exist on the combination of various technology transfer approaches, which could increase advantages of existing approaches while reducing their disadvantages.",1,,,,,
Knowledge Management in University-Software Industry Collaboration,"The university-software industry collaboration relationship has been represented a key resource, to the extent that together they can more easily promote technological development that underpins innovation solutions. Through a literature review, this chapter aims to explore the concepts and the facilitator or inhibitor factors associated with the collaboration relationships between university and software industry, taking knowledge management into account. This chapter is organized as follows. In the first section, the
authors briefly introduce university, software industry, and knowledge management. The following section, based on the literature reviewed, provides a critical discussion of the university-software industry collaboration relationship, knowledge management in knowledge intensive organizations or community, and knowledge management in collaboration relationship between these two types of industries. Finally, in the rest of the sections, the authors point to future research directions and conclude.",1,"Knowledge Management in University-Software Industry CollaborationThe university-software industry collaboration relationship has been represented a key resource, to the extent that together they can more easily promote technological development that underpins innovation solutions. Through a literature review, this chapter aims to explore the concepts and the facilitator or inhibitor factors associated with the collaboration relationships between university and software industry, taking knowledge management into account. This chapter is organized as follows. In the first section, the
authors briefly introduce university, software industry, and knowledge management. The following section, based on the literature reviewed, provides a critical discussion of the university-software industry collaboration relationship, knowledge management in knowledge intensive organizations or community, and knowledge management in collaboration relationship between these two types of industries. Finally, in the rest of the sections, the authors point to future research directions and conclude.",1,,,,,
University-industry collaboration and open source software (OSS) dataset in mining software repositories (MSR) research,"Mining Software Repositories (MSR) is an applied and practise-oriented field aimed at solving real problems encountered by practitioners and bringing value to Industry. We believe that empirical studies on both Open Source Software (OSS) and Closed or Proprietary Source (CSS/PSS) is required in MSR research to increase generalizability or transferability of findings and reduce external (or threats) validity concerns. Furthermore, we believe that a collaboration between University and Industry is must or important in achieving the stated goals and agenda of MSR research (such as deployment and technology transfer). We analyse past five years of research papers published in MSR series of conferences (2010-2014) and count the number of studies using solely OSS data or solely CSS data or both OSS and CSS data. We also count the number of papers published by authors solely from Universities, solely from Industry and from both University and Industry. We present our findings which indicate lack of University-Industry collaboration (measured using co-authorship in scientific publications) and paucity of empirical studies on CSS/PSS data. Our analysis reveals that out of 187 studies over a period of 5 years, 90:9% studies are conducted solely on OSS dataset. We present our findings which indicate that only 14:43% of the studies involve a University-Industry collaboration.",0,"University-industry collaboration and open source software (OSS) dataset in mining software repositories (MSR) researchMining Software Repositories (MSR) is an applied and practise-oriented field aimed at solving real problems encountered by practitioners and bringing value to Industry. We believe that empirical studies on both Open Source Software (OSS) and Closed or Proprietary Source (CSS/PSS) is required in MSR research to increase generalizability or transferability of findings and reduce external (or threats) validity concerns. Furthermore, we believe that a collaboration between University and Industry is must or important in achieving the stated goals and agenda of MSR research (such as deployment and technology transfer). We analyse past five years of research papers published in MSR series of conferences (2010-2014) and count the number of studies using solely OSS data or solely CSS data or both OSS and CSS data. We also count the number of papers published by authors solely from Universities, solely from Industry and from both University and Industry. We present our findings which indicate lack of University-Industry collaboration (measured using co-authorship in scientific publications) and paucity of empirical studies on CSS/PSS data. Our analysis reveals that out of 187 studies over a period of 5 years, 90:9% studies are conducted solely on OSS dataset. We present our findings which indicate that only 14:43% of the studies involve a University-Industry collaboration.",1,,,,,
An alumni-based collaborative model to strengthen academia and industry partnership: The current challenges and strengths,"Industry-academia collaboration (IAC) has long been a source of discussion in various ways. A vital first step toward closing the gap is fostering alumni engagement in industry and academia. Industry-academia collaborations are like earth and water, and they live in harmony. They cannot exist apart from one another. The collaborative effort between industry and academia promotes improvement and innovation in technology and innovative research and enables the university to be more relevant to the industry. This article proposes a collaborative approach based on alumni influences and uses secondary data on the influences of alumni in engineering to enrich the collaboration between industry and academia. The industry and academia utilize the alumni’s potential to facilitate communication and offer their students and staff facilities. The research findings can be used by policymakers to innovate in the field of engineering and to strengthen the partnership between industry and academia in society. The model enables academia and industry to utilize the alumni strengths in enriching the collaboration; it also enhances academic research output, recruitment, fundraising, marketing, product promotion, and internship opportunities for students via alumni active participation. We propose some significant agendas for future work.",0,"An alumni-based collaborative model to strengthen academia and industry partnership: The current challenges and strengthsIndustry-academia collaboration (IAC) has long been a source of discussion in various ways. A vital first step toward closing the gap is fostering alumni engagement in industry and academia. Industry-academia collaborations are like earth and water, and they live in harmony. They cannot exist apart from one another. The collaborative effort between industry and academia promotes improvement and innovation in technology and innovative research and enables the university to be more relevant to the industry. This article proposes a collaborative approach based on alumni influences and uses secondary data on the influences of alumni in engineering to enrich the collaboration between industry and academia. The industry and academia utilize the alumni’s potential to facilitate communication and offer their students and staff facilities. The research findings can be used by policymakers to innovate in the field of engineering and to strengthen the partnership between industry and academia in society. The model enables academia and industry to utilize the alumni strengths in enriching the collaboration; it also enhances academic research output, recruitment, fundraising, marketing, product promotion, and internship opportunities for students via alumni active participation. We propose some significant agendas for future work.",1,,,,,
Lessons Learned on Research Co-Creation: Making Industry-Academia Collaboration Work,"How to increase the impact of software engineering research in the software industry and the society at large is a critical yet perplexing question to answer. Constrained by curtailed communication between researchers and practitioners, research conducted in a vacuum, or the ""publish or perish"" mindset, research collaborations between industry and academia often fail to deliver on the promise of creating a meaningful impact for practitioners. In an attempt to address these circumstances, this paper gives insights on applying research value co-creation to industry-academia collaboration in software engineering. We observe that the core of co-creation includes commitment, continuous engagement and alignment, aiming to produce value for both sides. Further we contend that co-creation has the potential to bridge the acknowledged research-practice collaboration gap through participative knowledge generation. Our experience stems from an eight-year long large collaborative project between a research organization and Norwegian software industry and public sector services. We suggest that for achieving research impact one needs to rethink the way industry and academia engage in and run collaborative projects. Traditional technology-transfer workflows where research is created in a lab and then pushed to industry practice do not stand the best chance of success. Instead, co-creating research with all stakeholders is likely to bring about the best research impact.",1,"Lessons Learned on Research Co-Creation: Making Industry-Academia Collaboration WorkHow to increase the impact of software engineering research in the software industry and the society at large is a critical yet perplexing question to answer. Constrained by curtailed communication between researchers and practitioners, research conducted in a vacuum, or the ""publish or perish"" mindset, research collaborations between industry and academia often fail to deliver on the promise of creating a meaningful impact for practitioners. In an attempt to address these circumstances, this paper gives insights on applying research value co-creation to industry-academia collaboration in software engineering. We observe that the core of co-creation includes commitment, continuous engagement and alignment, aiming to produce value for both sides. Further we contend that co-creation has the potential to bridge the acknowledged research-practice collaboration gap through participative knowledge generation. Our experience stems from an eight-year long large collaborative project between a research organization and Norwegian software industry and public sector services. We suggest that for achieving research impact one needs to rethink the way industry and academia engage in and run collaborative projects. Traditional technology-transfer workflows where research is created in a lab and then pushed to industry practice do not stand the best chance of success. Instead, co-creating research with all stakeholders is likely to bring about the best research impact.",1,,,,,
{SERP}-test: a taxonomy for supporting industry{\textendash}academia communication,"This paper presents the construction and evaluation of SERP-test, a taxonomy aimed to improve communication between researchers and practitioners in the area of software testing. SERP-test can be utilized for direct communication in industry academia collaborations. It may also facilitate indirect communication between practitioners adopting software engineering research and researchers who are striving for industry relevance. SERP-test was constructed through a systematic and goal-oriented approach which included literature reviews and interviews with practitioners and researchers. SERP-test was evaluated through an online survey and by utilizing it in an industry–academia collaboration project. SERP-test comprises four facets along which both research contributions and practical challenges may be classified: Intervention, Scope, Effect target and Context constraints. This paper explains the available categories for each of these facets (i.e., their definitions and rationales) and presents examples of categorized entities. Several tasks may benefit from SERP-test, such as formulating research goals from a problem perspective, describing practical challenges in a researchable fashion, analyzing primary studies in a literature review, or identifying relevant points of comparison and generalization of research.",1,"{SERP}-test: a taxonomy for supporting industry{\textendash}academia communicationThis paper presents the construction and evaluation of SERP-test, a taxonomy aimed to improve communication between researchers and practitioners in the area of software testing. SERP-test can be utilized for direct communication in industry academia collaborations. It may also facilitate indirect communication between practitioners adopting software engineering research and researchers who are striving for industry relevance. SERP-test was constructed through a systematic and goal-oriented approach which included literature reviews and interviews with practitioners and researchers. SERP-test was evaluated through an online survey and by utilizing it in an industry–academia collaboration project. SERP-test comprises four facets along which both research contributions and practical challenges may be classified: Intervention, Scope, Effect target and Context constraints. This paper explains the available categories for each of these facets (i.e., their definitions and rationales) and presents examples of categorized entities. Several tasks may benefit from SERP-test, such as formulating research goals from a problem perspective, describing practical challenges in a researchable fashion, analyzing primary studies in a literature review, or identifying relevant points of comparison and generalization of research.",1,,,,,
Industry{\textendash}Academia Research Collaboration and Knowledge Co-creation: Patterns and Anti-patterns,"Increasing the impact of software engineering research in the software industry and the society at large has long been a concern of high priority for the software engineering community. The problem of two cultures, research conducted in a vacuum (disconnected from the real world), or misaligned time horizons are just some of the many complex challenges standing in the way of successful industry–academia collaborations. This article reports on the experience of research collaboration and knowledge co-creation between industry and academia in software engineering as a way to bridge the research–practice collaboration gap. Our experience spans 14 years of collaboration between researchers in software engineering and the European and Norwegian software and IT industry. Using the participant observation and interview methods, we have collected and afterwards analyzed an extensive record of qualitative data. Drawing upon the findings made and the experience gained, we provide a set of 14 patterns and 14 anti-patterns for industry–academia collaborations, aimed to support other researchers and practitioners in establishing and running research collaboration projects in software engineering.",0,"Industry{\textendash}Academia Research Collaboration and Knowledge Co-creation: Patterns and Anti-patternsIncreasing the impact of software engineering research in the software industry and the society at large has long been a concern of high priority for the software engineering community. The problem of two cultures, research conducted in a vacuum (disconnected from the real world), or misaligned time horizons are just some of the many complex challenges standing in the way of successful industry–academia collaborations. This article reports on the experience of research collaboration and knowledge co-creation between industry and academia in software engineering as a way to bridge the research–practice collaboration gap. Our experience spans 14 years of collaboration between researchers in software engineering and the European and Norwegian software and IT industry. Using the participant observation and interview methods, we have collected and afterwards analyzed an extensive record of qualitative data. Drawing upon the findings made and the experience gained, we provide a set of 14 patterns and 14 anti-patterns for industry–academia collaborations, aimed to support other researchers and practitioners in establishing and running research collaboration projects in software engineering.",1,,,,,
A case study of industry{\textendash}academia communication in a joint software engineering research project, ,1,A case study of industry{\textendash}academia communication in a joint software engineering research project ,1,,,,,
Industry-academia collaboration in software testing: An overview of TAIC PART 2015,"Collaboration between industry and academia in software testing leads to improvement and innovation in industry and it is the basis for achieving sustainable and empirically evaluated results. Thus, the aim of TAIC PART is to forge collaboration between industry and academia on the challenging and exciting problem of real-world software testing. The workshop is promoted by representatives of both industry and academia, bringing together industrial software engineers and testers with researchers working on theory and practice of software testing. This paper presents an overview of the 10th Testing: Academic and Industrial Conference - Practice and Research Techniques (TAIC PART 2015) and its contributions.",0,"Industry-academia collaboration in software testing: An overview of TAIC PART 2015Collaboration between industry and academia in software testing leads to improvement and innovation in industry and it is the basis for achieving sustainable and empirically evaluated results. Thus, the aim of TAIC PART is to forge collaboration between industry and academia on the challenging and exciting problem of real-world software testing. The workshop is promoted by representatives of both industry and academia, bringing together industrial software engineers and testers with researchers working on theory and practice of software testing. This paper presents an overview of the 10th Testing: Academic and Industrial Conference - Practice and Research Techniques (TAIC PART 2015) and its contributions.",1,,,,,
Selecting the Right Topics for Industry-Academia Collaborations in Software Testing: An Experience Report,"The global software industry and the Software Engineering (SE) academia are two large communities. However, unfortunately, the level of joint industry-academia collaborations (IAC) in SE is still relatively very low, compared to the amount of activity in each of the two communities. Selecting the right topic for a new IAC has been reported to be challenging and often a deal-maker or-breaker for the start of IACs. Motivated by the above need, the goal of this paper is to propose experience-based guidelines from our 10+ software testing IACs in the past several years in Canada and Turkey to effectively and efficiently select right topics for IACs in software testing (also easily generalizable to other areas of SE), for the benefit of SE researchers and practitioners in starting new IACs. The experience and evidence supporting the guidelines in this paper are drawn from the authors' past projects and also seven on-going software-testing projects in the context of a large Turkish software and systems company. The topic-selection process has involved interaction with company representatives in the form of both multiple group discussions and separate face-to-face meetings while utilizing grounded-theory to find (converge to) topics which would be 'interesting' and useful from both industrial and academic perspectives. To increase the success of our topic selection process, we also utilized two other sources of information from the literature: (1) a set of four fitness criteria for topic selection in industry experiments, and (2) challenges and best practices for IAC, specific to project inception, as synthesized in a recent systematic literature review. We believe the results of this paper would be helpful for other researchers and practitioners not only in software testing but also in software engineering in general in increasing their chances of success in project inception and topic selection phase.",0,"Selecting the Right Topics for Industry-Academia Collaborations in Software Testing: An Experience ReportThe global software industry and the Software Engineering (SE) academia are two large communities. However, unfortunately, the level of joint industry-academia collaborations (IAC) in SE is still relatively very low, compared to the amount of activity in each of the two communities. Selecting the right topic for a new IAC has been reported to be challenging and often a deal-maker or-breaker for the start of IACs. Motivated by the above need, the goal of this paper is to propose experience-based guidelines from our 10+ software testing IACs in the past several years in Canada and Turkey to effectively and efficiently select right topics for IACs in software testing (also easily generalizable to other areas of SE), for the benefit of SE researchers and practitioners in starting new IACs. The experience and evidence supporting the guidelines in this paper are drawn from the authors' past projects and also seven on-going software-testing projects in the context of a large Turkish software and systems company. The topic-selection process has involved interaction with company representatives in the form of both multiple group discussions and separate face-to-face meetings while utilizing grounded-theory to find (converge to) topics which would be 'interesting' and useful from both industrial and academic perspectives. To increase the success of our topic selection process, we also utilized two other sources of information from the literature: (1) a set of four fitness criteria for topic selection in industry experiments, and (2) challenges and best practices for IAC, specific to project inception, as synthesized in a recent systematic literature review. We believe the results of this paper would be helpful for other researchers and practitioners not only in software testing but also in software engineering in general in increasing their chances of success in project inception and topic selection phase.",1,,,,,
Industry-Academia Collaboration in Software Testing: An Overview of TAIC PART 2016,"Collaboration between industry and academia in software testing leads to improvement and innovation in industry, and it is the basis for achieving transferable and empirically evaluated results. Thus, the aim of TAIC PART is to forge collaboration between industry and academia on the challenging and exciting problem of real-world software testing. The workshop is promoted by representatives of both industry and academia, bringing together industrial software engineers and testers with researchers working on theory and practice of software testing. We present an overview of the 11th Workshop on Testing: Academia-Industry Collaboration, Practice and Research Techniques (TAIC PART 2016) and its contributions.",0,"Industry-Academia Collaboration in Software Testing: An Overview of TAIC PART 2016Collaboration between industry and academia in software testing leads to improvement and innovation in industry, and it is the basis for achieving transferable and empirically evaluated results. Thus, the aim of TAIC PART is to forge collaboration between industry and academia on the challenging and exciting problem of real-world software testing. The workshop is promoted by representatives of both industry and academia, bringing together industrial software engineers and testers with researchers working on theory and practice of software testing. We present an overview of the 11th Workshop on Testing: Academia-Industry Collaboration, Practice and Research Techniques (TAIC PART 2016) and its contributions.",1,,,,,
Strengthening the Bridge Between Academic and the Industry Through the Academia-Industry Collaboration Plan Design Model,"The study has been undertaken to integrate two different aspects of the triple helix model: universities and the industry. Special attention has been paid to the prevailing difference between the two, hampering their working as a coherent unit. Integrating the existing knowledge in the study, we proposed the Academia-Industry Collaboration Plan (AICP) design model. The model comprises processes, methods or approaches, and tools. Processes serve as a road map to third parties for establishing collaboration between academia and the industry. It has all the essential process models and a series of steps that help minimize the organizational complexity of the collaboration process between academia and the industry. Methods or approaches serve the purpose of implementing those processes effectively. Finally, appropriate tools are selected to integrate possible collaboration improvements that lead to innovation.",0,"Strengthening the Bridge Between Academic and the Industry Through the Academia-Industry Collaboration Plan Design ModelThe study has been undertaken to integrate two different aspects of the triple helix model: universities and the industry. Special attention has been paid to the prevailing difference between the two, hampering their working as a coherent unit. Integrating the existing knowledge in the study, we proposed the Academia-Industry Collaboration Plan (AICP) design model. The model comprises processes, methods or approaches, and tools. Processes serve as a road map to third parties for establishing collaboration between academia and the industry. It has all the essential process models and a series of steps that help minimize the organizational complexity of the collaboration process between academia and the industry. Methods or approaches serve the purpose of implementing those processes effectively. Finally, appropriate tools are selected to integrate possible collaboration improvements that lead to innovation.",1,,,,,
A Survey of Types of Industry-Academia Collaboration, ,0,A Survey of Types of Industry-Academia Collaboration ,1,,,,,
An empirical investigation of transferring research to software technology innovation,"Context: Governments are providing more and more support for academia-industry collaborations for industry led research and innovation via Cooperative Research Centers (CRC). It is important to understand the processes and practices of such programs for transferring scientific R&D to innovation. Goal: We aimed at empirically investigating the processes and practices implemented in the context of one of the Australian CRCs, aimed at transferring big data research to innovative software solutions for national security. Method: We applied case study method and collected and analyzed data from 17 interviews and observations of the participants of the studied CRC program. Findings: We present the innovation process implemented in the studied CRC. We particularly highlight the practices used to involve end-users in the innovation process. We further elaborate on the challenges of running this collaborative model for software technology innovation.",0,"An empirical investigation of transferring research to software technology innovationContext: Governments are providing more and more support for academia-industry collaborations for industry led research and innovation via Cooperative Research Centers (CRC). It is important to understand the processes and practices of such programs for transferring scientific R&D to innovation. Goal: We aimed at empirically investigating the processes and practices implemented in the context of one of the Australian CRCs, aimed at transferring big data research to innovative software solutions for national security. Method: We applied case study method and collected and analyzed data from 17 interviews and observations of the participants of the studied CRC program. Findings: We present the innovation process implemented in the studied CRC. We particularly highlight the practices used to involve end-users in the innovation process. We further elaborate on the challenges of running this collaborative model for software technology innovation.",1,,,,,
Academy-industry collaboration and the effects of the involvement of undergraduate students in real world activities,"As stated by the IEEE Curriculum Guidelines for Undergraduate Degree Programs in Software Engineering, elements outside the classroom such as field trips, visits to industry and technical presentations can affect student's preparation for professional practice. This work describes a framework of academy-industry collaboration where students develop practical and academic activities in a real world scenario. It is a methodological research, in which a case study was conducted with a Government Agency that has a close collaboration with a University. This joint project led to the proposition of new software processes for the organization and produced research and capstone project papers. Results demonstrate that students have acquired experience in solving real world problems in the industry; they received recognition in the academic community through the acceptance of papers in international conferences; and also, the projects executed with the students produced outcomes that brought benefits to the government agency, under study.",0,"Academy-industry collaboration and the effects of the involvement of undergraduate students in real world activitiesAs stated by the IEEE Curriculum Guidelines for Undergraduate Degree Programs in Software Engineering, elements outside the classroom such as field trips, visits to industry and technical presentations can affect student's preparation for professional practice. This work describes a framework of academy-industry collaboration where students develop practical and academic activities in a real world scenario. It is a methodological research, in which a case study was conducted with a Government Agency that has a close collaboration with a University. This joint project led to the proposition of new software processes for the organization and produced research and capstone project papers. Results demonstrate that students have acquired experience in solving real world problems in the industry; they received recognition in the academic community through the acceptance of papers in international conferences; and also, the projects executed with the students produced outcomes that brought benefits to the government agency, under study.",1,,,,,
Generative Modeling Games for Exploratory Industry-Academic Research,"We present an approach to industry-academic research collaboration in which generative modeling is the central mechanism for not only enabling tactical coordination in exploratory research, but also for ensuring strategic alignment of both partners through a cooperative/competitive game approach of model evolution. Thoughts and experiences are offered for its applicability in contexts common relevant to software engineering research.",1,"Generative Modeling Games for Exploratory Industry-Academic ResearchWe present an approach to industry-academic research collaboration in which generative modeling is the central mechanism for not only enabling tactical coordination in exploratory research, but also for ensuring strategic alignment of both partners through a cooperative/competitive game approach of model evolution. Thoughts and experiences are offered for its applicability in contexts common relevant to software engineering research.",1,,,,,
The University Challenge in the Collaboration Relationship With the Industry,"Universities suffer from the impact of (1) life cycles associated with technological innovations, (2) the globalization of the economy and culture, (3) the educational needs of an increasingly knowledgedriven society, and (4) the training needs for high-performing professional activities. Solutions to these factors may be found in a positive attitude toward knowledge sharing and collaboration relationships. Collaboration has been considered a way to address the challenges of the 21st century, fostering the necessary innovation, growth, and productivity for all parties involved. Several studies reveal that collaboration can be strongly influenced by knowledge sharing. Collaboration relationships, besides the creation of new knowledge, may result in several outcomes and benefits for the university and society. This chapter aims to address and discuss the university challenges in the collaboration relationships with the industry based on the main results of some empirical studies developed during a research project.",0,"The University Challenge in the Collaboration Relationship With the IndustryUniversities suffer from the impact of (1) life cycles associated with technological innovations, (2) the globalization of the economy and culture, (3) the educational needs of an increasingly knowledgedriven society, and (4) the training needs for high-performing professional activities. Solutions to these factors may be found in a positive attitude toward knowledge sharing and collaboration relationships. Collaboration has been considered a way to address the challenges of the 21st century, fostering the necessary innovation, growth, and productivity for all parties involved. Several studies reveal that collaboration can be strongly influenced by knowledge sharing. Collaboration relationships, besides the creation of new knowledge, may result in several outcomes and benefits for the university and society. This chapter aims to address and discuss the university challenges in the collaboration relationships with the industry based on the main results of some empirical studies developed during a research project.",1,,,,,
Guidelines for conducting interactive rapid reviews in software engineering -- from a focus on technology transfer to knowledge exchange, ,0,Guidelines for conducting interactive rapid reviews in software engineering -- from a focus on technology transfer to knowledge exchange ,1,,,,,
Practical experiences in designing and conducting empirical studies in industry-academia collaboration,"More and more, software engineering researchers are motivated to solve real problems that bring value to industry. An example is the industry-academia collaboration described in this paper among everis, an IT consulting firm, and the GESSI research group at UPC. The goal of this paper is twofold: to evaluate the success of the collaboration, and to report the experience with conducting empirical studies in the industry and lessons learnt. We evaluated our collaboration with an existing model for technology transfer, and performed a focus group discussion to identify challenges we have faced. After initialization and alignment of the collaboration, a high maturity level has been achieved: we have obtained the first results in form of proposed solutions, scientific publications, and pilots run in real projects. In spite of this positive progress, further initiatives need to be undertaken in the last phases of the collaboration to achieve high degrees of maturity in deployment impact, industry benefit and innovativeness. Evaluating the collaboration has been positive, since we identified the next steps to be taken to achieve a high degree of technology transfer and innovation dissemination. We think it is a needed step in industry-academia collaborations in order to improve their success.",0,"Practical experiences in designing and conducting empirical studies in industry-academia collaborationMore and more, software engineering researchers are motivated to solve real problems that bring value to industry. An example is the industry-academia collaboration described in this paper among everis, an IT consulting firm, and the GESSI research group at UPC. The goal of this paper is twofold: to evaluate the success of the collaboration, and to report the experience with conducting empirical studies in the industry and lessons learnt. We evaluated our collaboration with an existing model for technology transfer, and performed a focus group discussion to identify challenges we have faced. After initialization and alignment of the collaboration, a high maturity level has been achieved: we have obtained the first results in form of proposed solutions, scientific publications, and pilots run in real projects. In spite of this positive progress, further initiatives need to be undertaken in the last phases of the collaboration to achieve high degrees of maturity in deployment impact, industry benefit and innovativeness. Evaluating the collaboration has been positive, since we identified the next steps to be taken to achieve a high degree of technology transfer and innovation dissemination. We think it is a needed step in industry-academia collaborations in order to improve their success.",1,,,,,
Lessons learned on applying design science for bridging the collaboration gap between industry and academia in empirical software engineering,"Collaboration between industry practitioners and researchers has been reported as a challenge to conduct empirical studies in software engineering. Gaining practitioners interest in research activities is challenging in the software development industry characterized by tough competition and short time-to-market. Often, practitioners do not see the direct value in collaborating with researchers. Meanwhile, researchers are frequently frustrated because they have no access to the real-world data that would enable them to develop scientific knowledge. Design science has become a popular research framework in Information Systems. This paper describes our lessons learned on how design science can help to attract and motivate industry practitioners to take part in empirical research. We present our practical experiences with using design science in the context of empirical software engineering, and how the design science framework helped us to bridge the collaborative gap with our industry partners. In illustrating our experiences, we present two case studies conducted in collaboration with Ericsson and Elektrobit in which the design science framework was followed. Based on our experience, design science is a suitable research framework for empirical software engineering since much of the research in the field is constructive. The similarities between the design science practices and the day-to-day work of practitioners in industry make it easy for them to understand the research approach. Thus, it supports their willingness to participate in research activities.",0,"Lessons learned on applying design science for bridging the collaboration gap between industry and academia in empirical software engineeringCollaboration between industry practitioners and researchers has been reported as a challenge to conduct empirical studies in software engineering. Gaining practitioners interest in research activities is challenging in the software development industry characterized by tough competition and short time-to-market. Often, practitioners do not see the direct value in collaborating with researchers. Meanwhile, researchers are frequently frustrated because they have no access to the real-world data that would enable them to develop scientific knowledge. Design science has become a popular research framework in Information Systems. This paper describes our lessons learned on how design science can help to attract and motivate industry practitioners to take part in empirical research. We present our practical experiences with using design science in the context of empirical software engineering, and how the design science framework helped us to bridge the collaborative gap with our industry partners. In illustrating our experiences, we present two case studies conducted in collaboration with Ericsson and Elektrobit in which the design science framework was followed. Based on our experience, design science is a suitable research framework for empirical software engineering since much of the research in the field is constructive. The similarities between the design science practices and the day-to-day work of practitioners in industry make it easy for them to understand the research approach. Thus, it supports their willingness to participate in research activities.",1,,,,,
Get the cogs in synch,"In industry–academia collaboration projects, there are many issues related to different time horizons in industry and academia. If not adressed upfront, they may hinder collabora-tion in such projects. We analyze our expe-riences from a 10 year industry–academia col-laboration program, the EASE Industrial Ex-cellence Center in Sweden, and identify issues and feasible practices to overcome the hur-dles of different time horizons. Specifically, we identify issues related to contracts, goals, re-sults, organization (in)stability, and work prac-tices. We identify several areas where the time horizon is different, and conclude that mutual awareness of these differences and management commitment to the collaboration are the key means to overcome the differences. The launch of a mediating institute may also be part of the solution.",0,"Get the cogs in synchIn industry–academia collaboration projects, there are many issues related to different time horizons in industry and academia. If not adressed upfront, they may hinder collabora-tion in such projects. We analyze our expe-riences from a 10 year industry–academia col-laboration program, the EASE Industrial Ex-cellence Center in Sweden, and identify issues and feasible practices to overcome the hur-dles of different time horizons. Specifically, we identify issues related to contracts, goals, re-sults, organization (in)stability, and work prac-tices. We identify several areas where the time horizon is different, and conclude that mutual awareness of these differences and management commitment to the collaboration are the key means to overcome the differences. The launch of a mediating institute may also be part of the solution.",1,,,,,
The 4$\mathplus$1 view model of industry--academia collaboration,"Industry–academia projects exist in complex contexts of various stakeholders, time perspec-tives, and goals. In order to analyze projects and communicate about them, we have de-fined an ""architectural"" model for industry– academia collaboration, inspired by Kruchten's software architecture model. The model has four views of i) time, ii) space, iii) activity and iv) domain, corresponding to the ques-tions: when, where, how and what. The +1 view is the scenario, binding the other four to-gether. We illustrate the model by applying it to the Industrial Excellence Center EASE and the Sigrun Software Innovation and En-gineering Institute. The model helps analyz-ing industry–academia collaboration projects, to find gaps and reduce redundant work.",0,"The 4$\mathplus$1 view model of industry--academia collaborationIndustry–academia projects exist in complex contexts of various stakeholders, time perspec-tives, and goals. In order to analyze projects and communicate about them, we have de-fined an ""architectural"" model for industry– academia collaboration, inspired by Kruchten's software architecture model. The model has four views of i) time, ii) space, iii) activity and iv) domain, corresponding to the ques-tions: when, where, how and what. The +1 view is the scenario, binding the other four to-gether. We illustrate the model by applying it to the Industrial Excellence Center EASE and the Sigrun Software Innovation and En-gineering Institute. The model helps analyz-ing industry–academia collaboration projects, to find gaps and reduce redundant work.",1,,,,,
Bridging the Gap in Technology Transfer for Advanced Process Control with Industrial Applications,"In the present paper, a software framework comprising the implementation of Model Predictive Control—a popular industrial control method—is presented. The framework is versatile and can be run on a variety of target systems including programmable logic controllers and distributed control system implementations. However, the main attractive property of the framework stems from the goal of achieving smooth technology transfer from the academic setting to real industrial applications. Technology transfer is, in general, difficult to achieve, because of the apparent disconnect between academic studies and actual industry. The proposed software framework aims at bridging this gap for model predictive control—a powerful control technique which can result in substantial performance improvement of industrial control loops, thus adhering to modern trends for reducing energy waste and fulfilling sustainable development goals. In the paper, the proposed solution is motivated and described, and experimental evidence of its successful deployment is provided using a real industrial plant.",0,"Bridging the Gap in Technology Transfer for Advanced Process Control with Industrial ApplicationsIn the present paper, a software framework comprising the implementation of Model Predictive Control—a popular industrial control method—is presented. The framework is versatile and can be run on a variety of target systems including programmable logic controllers and distributed control system implementations. However, the main attractive property of the framework stems from the goal of achieving smooth technology transfer from the academic setting to real industrial applications. Technology transfer is, in general, difficult to achieve, because of the apparent disconnect between academic studies and actual industry. The proposed software framework aims at bridging this gap for model predictive control—a powerful control technique which can result in substantial performance improvement of industrial control loops, thus adhering to modern trends for reducing energy waste and fulfilling sustainable development goals. In the paper, the proposed solution is motivated and described, and experimental evidence of its successful deployment is provided using a real industrial plant.",1,,,,,
Towards improving industrial adoption,"While promising software engineering approaches are proposed every day, only few are adapted by professional developers. There are many potential reasons for this, such as, problems in identifying helpful approaches, missing tools, or lacking practical relevance. With our current research, we are concerned to improve the knowledge transfer from research to practice. In this paper, we discuss the impact of development environments and programming languages on knowledge transfer - considering that many scientific approaches and tools are interesting for professional developers, but rarely adopted by them. We base our discussion mainly on our personal experiences with industry-academia collaborations. To determine whether these experiences also apply to other developers, we additionally conducted a survey with 89 participants from academia and industry. The first results of our on-going work indicate a gap between the development environments and programming languages that are supported or used by researchers and those that are applied in industry. Based on our results, we describe initial discussions that can help to improve collaborations between industry and research.",0,"Towards improving industrial adoptionWhile promising software engineering approaches are proposed every day, only few are adapted by professional developers. There are many potential reasons for this, such as, problems in identifying helpful approaches, missing tools, or lacking practical relevance. With our current research, we are concerned to improve the knowledge transfer from research to practice. In this paper, we discuss the impact of development environments and programming languages on knowledge transfer - considering that many scientific approaches and tools are interesting for professional developers, but rarely adopted by them. We base our discussion mainly on our personal experiences with industry-academia collaborations. To determine whether these experiences also apply to other developers, we additionally conducted a survey with 89 participants from academia and industry. The first results of our on-going work indicate a gap between the development environments and programming languages that are supported or used by researchers and those that are applied in industry. Based on our results, we describe initial discussions that can help to improve collaborations between industry and research.",1,,,,,
It Takes Two to Tango -- An Experience Report on Industry -- Academia Collaboration,"Industry - academia collaboration is critical for empirical research to exist. However, there are many obstacles in the collaboration process. This paper reports on the experiences gained by the author, in a 2-year collaboration project on software testing which involved on-site work by the researcher in the industry premises. Based on notes, minutes of meetings, and progress reports, the project history is outlined. The project is analyzed, using collaboration models as a frame of reference. We conclude that there must be a balance between company 'pull' and academia 'push' in the collaboration Management support is inevitably a key factor to success, while other factors like cross-cultural skills and interfaces towards key resources also contribute.",0,"It Takes Two to Tango -- An Experience Report on Industry -- Academia CollaborationIndustry - academia collaboration is critical for empirical research to exist. However, there are many obstacles in the collaboration process. This paper reports on the experiences gained by the author, in a 2-year collaboration project on software testing which involved on-site work by the researcher in the industry premises. Based on notes, minutes of meetings, and progress reports, the project history is outlined. The project is analyzed, using collaboration models as a frame of reference. We conclude that there must be a balance between company 'pull' and academia 'push' in the collaboration Management support is inevitably a key factor to success, while other factors like cross-cultural skills and interfaces towards key resources also contribute.",1,,,,,
University-industry collaboration chairs: Initiatives at the Public University of Navarre,"In the current context of economic crisis, the university Chairs funded by private companies emerge as useful tools to establish a steady and fruitful collaboration between universities and industry. The activities, configuration and management of the Chairs at the Public University of Navarre (UPNa) are described along the paper. The UPNa Chair for Renewable Energies is shown as a successful initiative, particularly concerning its Engineering Degree Final Project and Master Thesis Program.",0,"University-industry collaboration chairs: Initiatives at the Public University of NavarreIn the current context of economic crisis, the university Chairs funded by private companies emerge as useful tools to establish a steady and fruitful collaboration between universities and industry. The activities, configuration and management of the Chairs at the Public University of Navarre (UPNa) are described along the paper. The UPNa Chair for Renewable Energies is shown as a successful initiative, particularly concerning its Engineering Degree Final Project and Master Thesis Program.",1,,,,,
Meeting Industry-Academia Research Collaboration Challenges with Agile Methodologies,"Continuous and long-term collaboration between industry and academia is crucial to develop front-line research in context-dependent areas like software development where both practitioners and researchers are searched for data collection, analysis and results. Despite many mutual benefits, this collaboration is often challenging, not only due to different goals, but also because of different pace in providing the results. The software development industry has during the last decade aligned around and organized their development adopting agile methodologies. For the researchers, the agile methodologies are a topic for a research, rather than a means of performing the research itself. We can state a question, whether the agile methodologies can be a good common ground for enabling successful research collaboration between industry and academia? This paper reports on a longitudinal industry - academia research collaboration case, which has stepwise adapted SCRUM over a six-year period. The implementation of SCRUM and the collaboration successes and challenges are presented, and findings are discussed.",1,"Meeting Industry-Academia Research Collaboration Challenges with Agile MethodologiesContinuous and long-term collaboration between industry and academia is crucial to develop front-line research in context-dependent areas like software development where both practitioners and researchers are searched for data collection, analysis and results. Despite many mutual benefits, this collaboration is often challenging, not only due to different goals, but also because of different pace in providing the results. The software development industry has during the last decade aligned around and organized their development adopting agile methodologies. For the researchers, the agile methodologies are a topic for a research, rather than a means of performing the research itself. We can state a question, whether the agile methodologies can be a good common ground for enabling successful research collaboration between industry and academia? This paper reports on a longitudinal industry - academia research collaboration case, which has stepwise adapted SCRUM over a six-year period. The implementation of SCRUM and the collaboration successes and challenges are presented, and findings are discussed.",1,,,,,
A framework to improve university--industry collaboration, ,1,A framework to improve university--industry collaboration ,1,,,,,
Complementary Technology Traces in Software Practice: A Retrospective Reflection over Sixteen Years of Evolution at Ericsson,"To advance knowledge about evolution of practices within a software organisation, we offer a retrospective reflection based on several years of research into a software unit at Ericsson AB. Covering 16 years of evolution, we developed multiple publications from continuously expanding sources of software technology implementation data. While these publications report from specific junctures of software practice evolution at the unit, our retrospective reflection allows us to consider the impacts of the unit’s investments into two technology paradigms over the sixteen-year period: first into CMM-RUP with a focus on discipline and structured practices and years later into Agile-Lean with a focus on flexibility and responsive practices. Hence, we adopt retrospective reflection to investigate how imprints from the two paradigms, despite considerable timespan between the related technology implementations, eventually complemented each other in the unit’s software practices. Because one paradigm focuses on discipline and structured practices and the other on flexibility and responsive practices, our retrospective reflections consider how the two paradigms together impacted the software unit’s ambidextrous capability. As a result, we advance the idea that as software organisations over time invest in complementary technology paradigms they leave important technology traces with sustainable impacts on their software practices.",0,"Complementary Technology Traces in Software Practice: A Retrospective Reflection over Sixteen Years of Evolution at EricssonTo advance knowledge about evolution of practices within a software organisation, we offer a retrospective reflection based on several years of research into a software unit at Ericsson AB. Covering 16 years of evolution, we developed multiple publications from continuously expanding sources of software technology implementation data. While these publications report from specific junctures of software practice evolution at the unit, our retrospective reflection allows us to consider the impacts of the unit’s investments into two technology paradigms over the sixteen-year period: first into CMM-RUP with a focus on discipline and structured practices and years later into Agile-Lean with a focus on flexibility and responsive practices. Hence, we adopt retrospective reflection to investigate how imprints from the two paradigms, despite considerable timespan between the related technology implementations, eventually complemented each other in the unit’s software practices. Because one paradigm focuses on discipline and structured practices and the other on flexibility and responsive practices, our retrospective reflections consider how the two paradigms together impacted the software unit’s ambidextrous capability. As a result, we advance the idea that as software organisations over time invest in complementary technology paradigms they leave important technology traces with sustainable impacts on their software practices.",1,,,,,
Leading {FAIR} Adoption Across the Institution: A Collaboration Between an Academic Library and a Technology Provider, ,0,Leading {FAIR} Adoption Across the Institution: A Collaboration Between an Academic Library and a Technology Provider ,1,,,,,
Increasing the Impact of Industry{\textendash}Academia Collaboration through Co-Production,"Increased competition and globalization motivate us to join forces to enhance the impact of the research conducted. Collaboration between organizations with different views can, however, be difficult to manage and needs awareness and skills to meet different expecta-tions. This article will consider both a mutual industrial and academic perspective into the development of action research and, in six research project cases, empirically explore how the impact can be enhanced by considering certain key factors in the research process. How the phases of problem formulation, methodology, and results are managed is critical for the success of a collaboration and, thereby, its impact. Counter-productive forces that could dilute the progress over time need to be considered given that combining practical relevance and scientific rigour comes with challenges.",0,"Increasing the Impact of Industry{\textendash}Academia Collaboration through Co-ProductionIncreased competition and globalization motivate us to join forces to enhance the impact of the research conducted. Collaboration between organizations with different views can, however, be difficult to manage and needs awareness and skills to meet different expecta-tions. This article will consider both a mutual industrial and academic perspective into the development of action research and, in six research project cases, empirically explore how the impact can be enhanced by considering certain key factors in the research process. How the phases of problem formulation, methodology, and results are managed is critical for the success of a collaboration and, thereby, its impact. Counter-productive forces that could dilute the progress over time need to be considered given that combining practical relevance and scientific rigour comes with challenges.",1,,,,,
Industry-academia collaboration for realism in software engineering research: Insights and recommendations,"Context
Effective industry-academia collaboration may increase software engineering research relevance by increased realism, yet very challenging for reasons like confidentiality concerns, different objectives and priorities.

Objective
We analyse industry-academia collaboration scenarios based on our own experiences as Ph.D. student and supervisor, and provide insights and recommendations to facilitate future collaborations with industry.

Method
We first present our industry-academia collaboration experiences that span over two and a half years with different companies. Then, we analyse both facilitators and problems from those scenarios and synthesize recommendations based on that.

Results
Five different scenarios are analysed, including both success and failure scenarios. Reflections and insights into these experiences as well as some general recommendations are presented.

Conclusion
We believe such experiences and insights are helpful for academic researchers to pursue industry-academia collaboration. We plan to continuously report our experience and provide our suggestions for effective collaboration with industry.",0,"Industry-academia collaboration for realism in software engineering research: Insights and recommendationsContext
Effective industry-academia collaboration may increase software engineering research relevance by increased realism, yet very challenging for reasons like confidentiality concerns, different objectives and priorities.

Objective
We analyse industry-academia collaboration scenarios based on our own experiences as Ph.D. student and supervisor, and provide insights and recommendations to facilitate future collaborations with industry.

Method
We first present our industry-academia collaboration experiences that span over two and a half years with different companies. Then, we analyse both facilitators and problems from those scenarios and synthesize recommendations based on that.

Results
Five different scenarios are analysed, including both success and failure scenarios. Reflections and insights into these experiences as well as some general recommendations are presented.

Conclusion
We believe such experiences and insights are helpful for academic researchers to pursue industry-academia collaboration. We plan to continuously report our experience and provide our suggestions for effective collaboration with industry.",1,,,,,
Action Research as Research Methodology in Software Engineering,"Compared to other research methodologies, action research is probably the youngest one. It’s been introduced in the middle of the twentieth century and has gained attention ever since. It became popular because it appeals to both researchers and organizations who seek impact and utilization of scientific results in practice. In this chapter, we present the principles of action research and provide concrete guidelines on how to propose an action research project. We elaborate on the main parts of the action research methodology and exemplify them. We show how we can use experiment systems to involve customers in action research, and we finish the chapter by presenting how to manage action research projects.",0,"Action Research as Research Methodology in Software EngineeringCompared to other research methodologies, action research is probably the youngest one. It’s been introduced in the middle of the twentieth century and has gained attention ever since. It became popular because it appeals to both researchers and organizations who seek impact and utilization of scientific results in practice. In this chapter, we present the principles of action research and provide concrete guidelines on how to propose an action research project. We elaborate on the main parts of the action research methodology and exemplify them. We show how we can use experiment systems to involve customers in action research, and we finish the chapter by presenting how to manage action research projects.",1,,,,,
Action Research in Software Engineering,"This book addresses action research (AR), one of the main research methodologies used for academia-industry research collaborations. It elaborates on how to find the right research activities and how to distinguish them from non-significant ones. Further, it details how to glean lessons from the research results, no matter whether they are positive or negative. Lastly, it shows how companies can evolve and build talents while expanding their product portfolio.

The book’s structure is based on that of AR projects; it sequentially covers and discusses each phase of the project. Each chapter shares new insights into AR and provides the reader with a better understanding of how to apply it. In addition, each chapter includes a number of practical use cases or examples. Taken together, the chapters cover the entire software lifecycle: from problem diagnosis to project (or action) planning and execution, to documenting and disseminating results, including validity assessments for AR studies.

The goal of this book is to help everyone interested in industry-academia collaborations to conduct joint research. It is for students of software engineering who need to learn about how to set up an evaluation, how to run a project, and how to document the results. It is for all academics who aren’t afraid to step out of their comfort zone and enter industry. It is for industrial researchers who know that they want to do more than just develop software blindly. And finally, it is for stakeholders who want to learn how to manage industrial research projects and how to set up guidelines for their own role and expectations.",0,"Action Research in Software EngineeringThis book addresses action research (AR), one of the main research methodologies used for academia-industry research collaborations. It elaborates on how to find the right research activities and how to distinguish them from non-significant ones. Further, it details how to glean lessons from the research results, no matter whether they are positive or negative. Lastly, it shows how companies can evolve and build talents while expanding their product portfolio.

The book’s structure is based on that of AR projects; it sequentially covers and discusses each phase of the project. Each chapter shares new insights into AR and provides the reader with a better understanding of how to apply it. In addition, each chapter includes a number of practical use cases or examples. Taken together, the chapters cover the entire software lifecycle: from problem diagnosis to project (or action) planning and execution, to documenting and disseminating results, including validity assessments for AR studies.

The goal of this book is to help everyone interested in industry-academia collaborations to conduct joint research. It is for students of software engineering who need to learn about how to set up an evaluation, how to run a project, and how to document the results. It is for all academics who aren’t afraid to step out of their comfort zone and enter industry. It is for industrial researchers who know that they want to do more than just develop software blindly. And finally, it is for stakeholders who want to learn how to manage industrial research projects and how to set up guidelines for their own role and expectations.",1,,,,,
Collaborative Research Project Networks,"Many businesses seeking enhanced innovation have corporate research teams that engage in collaborative research projects (CRPs), with external entities such as universities, public organizations, or customers. Anecdotal evidence, however, suggests mixed outcomes of CRPs in terms of corporate research impact, which implies successful transfer of novel knowledge generated within CRPs to company-internal business networks to develop radically innovative products. We use the multiple regression quadratic assignment procedure (MRQAP) and meta-analysis to analyze six CRP networks. Our findings indicate that the network’s relational characteristics (tie strength) and structural characteristics (network range) are important determinants of knowledge transfer at the fuzzy front end of innovation.",0,"Collaborative Research Project NetworksMany businesses seeking enhanced innovation have corporate research teams that engage in collaborative research projects (CRPs), with external entities such as universities, public organizations, or customers. Anecdotal evidence, however, suggests mixed outcomes of CRPs in terms of corporate research impact, which implies successful transfer of novel knowledge generated within CRPs to company-internal business networks to develop radically innovative products. We use the multiple regression quadratic assignment procedure (MRQAP) and meta-analysis to analyze six CRP networks. Our findings indicate that the network’s relational characteristics (tie strength) and structural characteristics (network range) are important determinants of knowledge transfer at the fuzzy front end of innovation.",1,,,,,
Difficulty Factors of Obtaining Access for Empirical Studies in Industry,"Context: The difficulty (not just effort) of obtaining access for software engineering empirical studies in industry varies greatly. Supposedly, some of this variance in difficulty is particular, stemming from properties of individual contexts (the industrial partners and their work), while the rest is repeatable, related to properties of the research question and research design. Question: What are these recurring difficulty factors that arise from research question and research design? What mechanisms produce their influence? Method: We use ideation and knowledge extraction from research experience to identify potential difficulty factors, use expert discussion to understand their mechanisms, and use concept analysis to arrange them into a taxonomy. We evaluate the result by comparatively applying it to two research efforts pursued by the same research group. Results: We find six scope factors, five problematic intervention effects factors, and seven helpful intervention (side-)effects factors. Conclusion: Considering these factors systematically during the formulation of a research question and the design of a research method can help with balancing data collection difficulty with results validity and relevance.",0,"Difficulty Factors of Obtaining Access for Empirical Studies in IndustryContext: The difficulty (not just effort) of obtaining access for software engineering empirical studies in industry varies greatly. Supposedly, some of this variance in difficulty is particular, stemming from properties of individual contexts (the industrial partners and their work), while the rest is repeatable, related to properties of the research question and research design. Question: What are these recurring difficulty factors that arise from research question and research design? What mechanisms produce their influence? Method: We use ideation and knowledge extraction from research experience to identify potential difficulty factors, use expert discussion to understand their mechanisms, and use concept analysis to arrange them into a taxonomy. We evaluate the result by comparatively applying it to two research efforts pursued by the same research group. Results: We find six scope factors, five problematic intervention effects factors, and seven helpful intervention (side-)effects factors. Conclusion: Considering these factors systematically during the formulation of a research question and the design of a research method can help with balancing data collection difficulty with results validity and relevance.",1,,,,,
Empirical Strategies in Software Engineering Research: A Literature Survey,"Context: The Software Engineering (SE) research continues to gain strength and interest for researchers considering the need to apply rigor and scientific validity to research results. Objective: Establishing an overview of the topic through a classification scheme of publications and structure the field of interest. Method: We conducted a Systematic Mapping Study, including articles published until 2019, that report at least one study of empirical strategies in SE. Results: 80 initial sets of studies were selected and analyzed, identifying: i) empirical strategy type used and ii) Software Engineering hypotheses types used. Also, 20 papers of the set of studies for mapping were selected and analyzed, identifying 17 empirical strategies and 11 main characteristics to address the empirical research inception in SE. Conclusions: We corroborate that the selection of an empirical strategy in Software Engineering research depends on the nature and scope of the research and on the resources that the researcher has at that moment, in addition to the degree of scientific and methodological knowledge that he has to carry out an empirical study. It is necessary to continue studying in-depth the behavior and nature of the empirical strategies in Software Engineering research that allows strengthening the scientific taxonomy in SE, besides walking towards the automation of the experimental process.",0,"Empirical Strategies in Software Engineering Research: A Literature SurveyContext: The Software Engineering (SE) research continues to gain strength and interest for researchers considering the need to apply rigor and scientific validity to research results. Objective: Establishing an overview of the topic through a classification scheme of publications and structure the field of interest. Method: We conducted a Systematic Mapping Study, including articles published until 2019, that report at least one study of empirical strategies in SE. Results: 80 initial sets of studies were selected and analyzed, identifying: i) empirical strategy type used and ii) Software Engineering hypotheses types used. Also, 20 papers of the set of studies for mapping were selected and analyzed, identifying 17 empirical strategies and 11 main characteristics to address the empirical research inception in SE. Conclusions: We corroborate that the selection of an empirical strategy in Software Engineering research depends on the nature and scope of the research and on the resources that the researcher has at that moment, in addition to the degree of scientific and methodological knowledge that he has to carry out an empirical study. It is necessary to continue studying in-depth the behavior and nature of the empirical strategies in Software Engineering research that allows strengthening the scientific taxonomy in SE, besides walking towards the automation of the experimental process.",1,,,,,
"Recruitment, engagement and feedback in empirical software engineering studies in industrial contexts","Context
Research carried out in industrial contexts are recognized as important to the advancement of software engineering knowledge and practice. However, several challenges present themselves in the three key phases of research carried out in industrial contexts, recruitment, engagement and feedback.

Objective
The aim of this paper is to report the challenges related to each of the three phases of research carried out in industrial contexts, and the associated solutions we have found useful from our combined body of industrial empirical software engineering research studies spanning four case studies, five grounded theory studies, seven survey studies and two quasi-experimental studies involving a total of over 400 industrial participants in the past decade.

Method
We designed an instrument to gather details of our studies carried out in industrial contexts and performed thematic analysis to synthesise and draw out the most prominent challenges faced.

Results
We present a set of recommendations around study design, conduct and reporting to try and mitigate some of these challenges as they apply specifically to industrial empirical research.

Conclusion
These recommendations can guide researchers, novice and experienced, working in close collaboration with industry stakeholders to make the most of their industrial software engineering research.",1,"Recruitment, engagement and feedback in empirical software engineering studies in industrial contextsContext
Research carried out in industrial contexts are recognized as important to the advancement of software engineering knowledge and practice. However, several challenges present themselves in the three key phases of research carried out in industrial contexts, recruitment, engagement and feedback.

Objective
The aim of this paper is to report the challenges related to each of the three phases of research carried out in industrial contexts, and the associated solutions we have found useful from our combined body of industrial empirical software engineering research studies spanning four case studies, five grounded theory studies, seven survey studies and two quasi-experimental studies involving a total of over 400 industrial participants in the past decade.

Method
We designed an instrument to gather details of our studies carried out in industrial contexts and performed thematic analysis to synthesise and draw out the most prominent challenges faced.

Results
We present a set of recommendations around study design, conduct and reporting to try and mitigate some of these challenges as they apply specifically to industrial empirical research.

Conclusion
These recommendations can guide researchers, novice and experienced, working in close collaboration with industry stakeholders to make the most of their industrial software engineering research.",1,,,,,
The {ABC} of Software Engineering Research,"A variety of research methods and techniques are available to SE researchers, and while several overviews exist, there is neither consistency in the research methods covered nor in the terminology used. Furthermore, research is sometimes critically reviewed for characteristics inherent to the methods. We adopt a taxonomy from the social sciences, termed here the ABC framework for SE research, which offers a holistic view of eight archetypal research strategies. ABC refers to the research goal which strives for generalizability over Actors (A), precise measurement of their Behavior (B), in a realistic Context (C). The ABC framework uses two dimensions widely considered to be key in research design: the level of obtrusiveness of the research, and generalizability of research findings. We discuss metaphors for each strategy and their inherent limitations and potential strengths. We illustrate these research strategies in two key SE domains: global software engineering and requirements engineering, and apply the framework on a sample of 75 articles. Finally, we discuss six ways in which the framework can advance SE research.",0,"The {ABC} of Software Engineering ResearchA variety of research methods and techniques are available to SE researchers, and while several overviews exist, there is neither consistency in the research methods covered nor in the terminology used. Furthermore, research is sometimes critically reviewed for characteristics inherent to the methods. We adopt a taxonomy from the social sciences, termed here the ABC framework for SE research, which offers a holistic view of eight archetypal research strategies. ABC refers to the research goal which strives for generalizability over Actors (A), precise measurement of their Behavior (B), in a realistic Context (C). The ABC framework uses two dimensions widely considered to be key in research design: the level of obtrusiveness of the research, and generalizability of research findings. We discuss metaphors for each strategy and their inherent limitations and potential strengths. We illustrate these research strategies in two key SE domains: global software engineering and requirements engineering, and apply the framework on a sample of 75 articles. Finally, we discuss six ways in which the framework can advance SE research.",1,,,,,
Towards customer-based requirements engineering practices,"Factors related to the requirements engineering process and customers have been repeatedly reported among those that most strongly influence the success of a software project. However, requirements engineering research has so far barely studied practice from a customer-based perspective. Furthermore, rigorous evidence about customers' perspectives regarding requirements engineering approaches is scarce, and links between customer-based requirements engineering research and the industrial practices are necessary. This paper argues that new research is necessary to tackle the above weaknesses. Our position is that: requirements specification approaches must be validated from a customer-based perspective; the influence of customers' characteristics on the requirements engineering process must be studied in more depth; and potential customer-based improvements in practice must be assessed. We also present situations in which the results from these activities would help practitioners, propose a research agenda to execute these activities, and discuss challenges that might hinder their execution.",0,"Towards customer-based requirements engineering practicesFactors related to the requirements engineering process and customers have been repeatedly reported among those that most strongly influence the success of a software project. However, requirements engineering research has so far barely studied practice from a customer-based perspective. Furthermore, rigorous evidence about customers' perspectives regarding requirements engineering approaches is scarce, and links between customer-based requirements engineering research and the industrial practices are necessary. This paper argues that new research is necessary to tackle the above weaknesses. Our position is that: requirements specification approaches must be validated from a customer-based perspective; the influence of customers' characteristics on the requirements engineering process must be studied in more depth; and potential customer-based improvements in practice must be assessed. We also present situations in which the results from these activities would help practitioners, propose a research agenda to execute these activities, and discuss challenges that might hinder their execution.",1,,,,,
Specifying a framework for evaluating requirements Engineering Technology: Challenges and lessons learned,"Evaluating requirements engineering technology is a challenging activity. It becomes even more difficult when having to evaluate the technology and thus to show its suitability in real settings, as access to industrial resources might be limited and the target domain might be complex or very sensitive. This paper reports on our experience in specifying an evaluation framework for requirements engineering technology. The technology aims to improve safety assurance and certification practices, and is being developed in the scope of a large-scale European research project. We focus on presenting the challenges encountered and the lessons learned while specifying the framework. These lessons summarise how we addressed, plan to address, or propose to address the challenges. This information can be useful for other researchers and practitioners that have to evaluate requirements engineering technology in general, and with industry and for safety assurance and certification in particular.",0,"Specifying a framework for evaluating requirements Engineering Technology: Challenges and lessons learnedEvaluating requirements engineering technology is a challenging activity. It becomes even more difficult when having to evaluate the technology and thus to show its suitability in real settings, as access to industrial resources might be limited and the target domain might be complex or very sensitive. This paper reports on our experience in specifying an evaluation framework for requirements engineering technology. The technology aims to improve safety assurance and certification practices, and is being developed in the scope of a large-scale European research project. We focus on presenting the challenges encountered and the lessons learned while specifying the framework. These lessons summarise how we addressed, plan to address, or propose to address the challenges. This information can be useful for other researchers and practitioners that have to evaluate requirements engineering technology in general, and with industry and for safety assurance and certification in particular.",1,,,,,
Success factors for empirical studies in industry-academia collaboration: A reflection,"We conducted several empirical studies over the last couple of years as part of a collaboration with industrial partners in the area of software product lines. Our studies differed regarding their motivation and goals, their scope, the research methods applied, and the involved subjects. In this experience paper we briefly summarize the studies and their key characteristics. We reflect on our experiences based on the success factors for industry-academia collaborations by Wohlin et al. We discuss the role of empirical studies in long-term industry-academia collaborations and present lessons learned.",0,"Success factors for empirical studies in industry-academia collaboration: A reflectionWe conducted several empirical studies over the last couple of years as part of a collaboration with industrial partners in the area of software product lines. Our studies differed regarding their motivation and goals, their scope, the research methods applied, and the involved subjects. In this experience paper we briefly summarize the studies and their key characteristics. We reflect on our experiences based on the success factors for industry-academia collaborations by Wohlin et al. We discuss the role of empirical studies in long-term industry-academia collaborations and present lessons learned.",1,,,,,
Empirical software engineering research with industry: Top 10 challenges,"Software engineering research can be done in many ways, in particular it can be done in different ways when it comes to working with industry. This paper presents a list of top 10 challenges to work with industry based on our experience from working with industry in a very close collaboration with continuous exchange of knowledge and information. The top 10 list is based on a large number of research projects and empirical studies conducted with industrial research partners since 1983. It is concluded that close collaboration is a long-term undertaking and a large investment. The importance of addressing the top 10 challenges is stressed, since they form the basis for a long-term sustainable and successful collaboration between industry and academia.",0,"Empirical software engineering research with industry: Top 10 challengesSoftware engineering research can be done in many ways, in particular it can be done in different ways when it comes to working with industry. This paper presents a list of top 10 challenges to work with industry based on our experience from working with industry in a very close collaboration with continuous exchange of knowledge and information. The top 10 list is based on a large number of research projects and empirical studies conducted with industrial research partners since 1983. It is concluded that close collaboration is a long-term undertaking and a large investment. The importance of addressing the top 10 challenges is stressed, since they form the basis for a long-term sustainable and successful collaboration between industry and academia.",1,,,,,
A little rebellion now and then is a good thing: Views on the requirements engineering conference,"A little rebellion now and then is a good thing. This short position statement describes my views on some of the challenges associated with many conferences, the Requirements Engineering Conference being among them. The main concepts are; the goals, as well as criteria for paper selection for the conference should be defined explicitly, and shared with the community. Industry involvement in the conference should be increased, but the focus of all tracks should be quality - what constitutes quality however needs to be defined and agreed on. Industrial validation of research results have to be more than an intention. Last but not least, how papers are presented and discussed needs to change, focusing on quality over quantity.",0,"A little rebellion now and then is a good thing: Views on the requirements engineering conferenceA little rebellion now and then is a good thing. This short position statement describes my views on some of the challenges associated with many conferences, the Requirements Engineering Conference being among them. The main concepts are; the goals, as well as criteria for paper selection for the conference should be defined explicitly, and shared with the community. Industry involvement in the conference should be increased, but the focus of all tracks should be quality - what constitutes quality however needs to be defined and agreed on. Industrial validation of research results have to be more than an intention. Last but not least, how papers are presented and discussed needs to change, focusing on quality over quantity.",1,,,,,
A Preliminary Examination of Stimulating and Building University-Industry Collaborative Works at a Public University,"Vitalization of University and industry collaboration (UIC) is at the forefront of higher education policy making at institutional and national levels. It benefits both the industries and higher institutions with the sharing of expertise and knowhow. Industry players are investing in innovation, research and development to stay ahead of global competition. It is with this lead of future potentials and opportunities that this study was conducted on university and industry collaboration between Universiti Tun Hussein Onn Malaysia (UTHM) an anchor institution located in Batu Pahat with the industries. The respondents are the Deans, Deputy Deans and Head of Departments. Sources of external funding, adequacy of laboratory equipment, types of services offer to the industry, nature of UIC interaction and coordination were reported. Discussion and suggestion of approaches to UIC from the findings reported in this paper were also drawn from previous works and the authors' personal knowledge and experiences for stimulating and building collaboration works.",0,"A Preliminary Examination of Stimulating and Building University-Industry Collaborative Works at a Public UniversityVitalization of University and industry collaboration (UIC) is at the forefront of higher education policy making at institutional and national levels. It benefits both the industries and higher institutions with the sharing of expertise and knowhow. Industry players are investing in innovation, research and development to stay ahead of global competition. It is with this lead of future potentials and opportunities that this study was conducted on university and industry collaboration between Universiti Tun Hussein Onn Malaysia (UTHM) an anchor institution located in Batu Pahat with the industries. The respondents are the Deans, Deputy Deans and Head of Departments. Sources of external funding, adequacy of laboratory equipment, types of services offer to the industry, nature of UIC interaction and coordination were reported. Discussion and suggestion of approaches to UIC from the findings reported in this paper were also drawn from previous works and the authors' personal knowledge and experiences for stimulating and building collaboration works.",1,,,,,
How to Increase the Likelihood of Successful Transfer to Industry -- Going Beyond the Empirical,"The field of Empirical Software Engineering has undergone a much-needed expansion the last decade, and papers of all shapes and sizes are more or less mandated to have an ""empirical"" part to be published in premiere venues. The positive trend has researchers realizing the benefits, but also the investments needed, inherent to industry collaboration. That is, real practitioners, involved in the development of software intensive product, system, and service development. This paper shortly summarizes lessons learned from over ten years experience of industrial collaboration, and knowledge and technology exchange between applied researchers and industry.",0,"How to Increase the Likelihood of Successful Transfer to Industry -- Going Beyond the EmpiricalThe field of Empirical Software Engineering has undergone a much-needed expansion the last decade, and papers of all shapes and sizes are more or less mandated to have an ""empirical"" part to be published in premiere venues. The positive trend has researchers realizing the benefits, but also the investments needed, inherent to industry collaboration. That is, real practitioners, involved in the development of software intensive product, system, and service development. This paper shortly summarizes lessons learned from over ten years experience of industrial collaboration, and knowledge and technology exchange between applied researchers and industry.",1,,,,,
Technology transfer - Requirements Engineering research to industrial practice an open (ended) debate,"Technology and knowledge have been recognized as main sources of competitive advantage of corporations, industries and nations, particularly in the software domain. They have led to the creation of local ecosystems devoted to development and transfer activities, which ensure not only personal and institutional motivation/recognition, but also social and economic gains. An open (ended) debate panel is proposed in order to develop greater awareness and seek deeper understanding of such activities from Requirements Engineering research to industrial practice. The panel involves researchers and practitioners with the perspective of eliciting: (i) experiences in knowledge and technology development and transfer; (ii) awareness and effectiveness of models and patterns; and (iii) factors for having successful collaboration between research institutions and industry. The organizers also plan to run a survey during and after the conference, summarizing their conclusions in specific post-conference reports.",0,"Technology transfer - Requirements Engineering research to industrial practice an open (ended) debateTechnology and knowledge have been recognized as main sources of competitive advantage of corporations, industries and nations, particularly in the software domain. They have led to the creation of local ecosystems devoted to development and transfer activities, which ensure not only personal and institutional motivation/recognition, but also social and economic gains. An open (ended) debate panel is proposed in order to develop greater awareness and seek deeper understanding of such activities from Requirements Engineering research to industrial practice. The panel involves researchers and practitioners with the perspective of eliciting: (i) experiences in knowledge and technology development and transfer; (ii) awareness and effectiveness of models and patterns; and (iii) factors for having successful collaboration between research institutions and industry. The organizers also plan to run a survey during and after the conference, summarizing their conclusions in specific post-conference reports.",1,,,,,
Empirical Research in Software Architecture: How Far have We Come?,"Context: Empirical research helps gain well-founded insights about phenomena. Furthermore, empirical research creates evidence for the validity of research results. Objective: We aim at assessing the state-of-practice of empirical research in software architecture. Method: We conducted a comprehensive survey based on the systematic mapping method. We included all full technical research papers published at major software architecture conferences between 1999 and 2015. Results: 17% of papers report empirical work. The number of empirical studies in software architecture has started to increase in 2005. Looking at the number of papers, empirical studies are about equally frequently used to a) evaluate newly proposed approaches and b) to explore and describe phenomena to better understand software architecture practice. Case studies and experiments are the most frequently used empirical methods. Almost half of empirical studies involve human participants. The majority of these studies involve professionals rather than students. Conclusions: Our findings are meant to stimulate researchers in the community to think about their expectations and standards of empirical research. Our results indicate that software architecture has become a more mature domain with regards to applying empirical research. However, we also found issues in research practices that could be improved (e.g., when describing study objectives and acknowledging limitations).",0,"Empirical Research in Software Architecture: How Far have We Come?Context: Empirical research helps gain well-founded insights about phenomena. Furthermore, empirical research creates evidence for the validity of research results. Objective: We aim at assessing the state-of-practice of empirical research in software architecture. Method: We conducted a comprehensive survey based on the systematic mapping method. We included all full technical research papers published at major software architecture conferences between 1999 and 2015. Results: 17% of papers report empirical work. The number of empirical studies in software architecture has started to increase in 2005. Looking at the number of papers, empirical studies are about equally frequently used to a) evaluate newly proposed approaches and b) to explore and describe phenomena to better understand software architecture practice. Case studies and experiments are the most frequently used empirical methods. Almost half of empirical studies involve human participants. The majority of these studies involve professionals rather than students. Conclusions: Our findings are meant to stimulate researchers in the community to think about their expectations and standards of empirical research. Our results indicate that software architecture has become a more mature domain with regards to applying empirical research. However, we also found issues in research practices that could be improved (e.g., when describing study objectives and acknowledging limitations).",1,,,,,
University-industry collaboration: A new way of educating future generations of engineers in India,"India, constitutes the world's third largest education system (after the US and China), but we still continue to struggle with many collective problems such as job placements, student retirement, learning impairments, language barriers and cultural differences. Cooperation between the industry and the scientific community if done with proper design and management can turn out to be beneficial for both industry partners and academic institutions. Such a cooperation can be achieved on micro and macro levels and can provide an inclusion of various educational institutions and industry partners. The collaboration may have different goals catering to the needs of industry partners and academic institutions. The involvement of industry and academia may not only be restricted to course curriculum but also result in joint research efforts and programs, which aims to connect students and industry professionals. This paper is an attempt to explore the relationship between academic and industry cooperation in order to enhance the skill set of a student along with his or hers employability opportunities. We discuss how capital investment and technology transfer can result in better development of the society and result in creation of new products, services and employment opportunities. The paper would be listing down some of the initiatives taken by the Indian government for creating an ecosystem for university-industry collaboration. Apart from this, we list some of the prominent university-industry collaborations that have taken place in the field of computer science engineering. Finally, we discuss some key initiatives which if taken into consideration could enhance the prospects of a fruitful university-industry collaboration and can benefit to the society in large.",0,"University-industry collaboration: A new way of educating future generations of engineers in IndiaIndia, constitutes the world's third largest education system (after the US and China), but we still continue to struggle with many collective problems such as job placements, student retirement, learning impairments, language barriers and cultural differences. Cooperation between the industry and the scientific community if done with proper design and management can turn out to be beneficial for both industry partners and academic institutions. Such a cooperation can be achieved on micro and macro levels and can provide an inclusion of various educational institutions and industry partners. The collaboration may have different goals catering to the needs of industry partners and academic institutions. The involvement of industry and academia may not only be restricted to course curriculum but also result in joint research efforts and programs, which aims to connect students and industry professionals. This paper is an attempt to explore the relationship between academic and industry cooperation in order to enhance the skill set of a student along with his or hers employability opportunities. We discuss how capital investment and technology transfer can result in better development of the society and result in creation of new products, services and employment opportunities. The paper would be listing down some of the initiatives taken by the Indian government for creating an ecosystem for university-industry collaboration. Apart from this, we list some of the prominent university-industry collaborations that have taken place in the field of computer science engineering. Finally, we discuss some key initiatives which if taken into consideration could enhance the prospects of a fruitful university-industry collaboration and can benefit to the society in large.",1,,,,,
Trends and Challenges for Software Engineering in the Mobile Domain,"Mobile computing is becoming a key aspect of our lives. This article builds on conversations held during the 2018 IEEE/ACM International Conference on Mobile Software Engineering and Systems, highlighting mobile computing's impact on software engineering practices, the transition from research to industry, and related areas.",0,"Trends and Challenges for Software Engineering in the Mobile DomainMobile computing is becoming a key aspect of our lives. This article builds on conversations held during the 2018 IEEE/ACM International Conference on Mobile Software Engineering and Systems, highlighting mobile computing's impact on software engineering practices, the transition from research to industry, and related areas.",1,,,,,
Teaching Software Product Lines,"Software Product Line (SPL) engineering has emerged to provide the means to efficiently model, produce, and maintain multiple similar software variants, exploiting their common properties, and managing their variabilities (differences). With over two decades of existence, the community of SPL researchers and practitioners is thriving, as can be attested by the extensive research output and the numerous successful industrial projects. Education has a key role to support the next generation of practitioners to build highly complex, variability-intensive systems. Yet, it is unclear how the concepts of variability and SPLs are taught, what are the possible missing gaps and difficulties faced, what are the benefits, and what is the material available. Also, it remains unclear whether scholars teach what is actually needed by industry. In this article, we report on three initiatives we have conducted with scholars, educators, industry practitioners, and students to further understand the connection between SPLs and education, that is, an online survey on teaching SPLs we performed with 35 scholars, another survey on learning SPLs we conducted with 25 students, as well as two workshops held at the International Software Product Line Conference in 2014 and 2015 with both researchers and industry practitioners participating. We build upon the two surveys and the workshops to derive recommendations for educators to continue improving the state of practice of teaching SPLs, aimed at both individual educators as well as the wider community.",0,"Teaching Software Product LinesSoftware Product Line (SPL) engineering has emerged to provide the means to efficiently model, produce, and maintain multiple similar software variants, exploiting their common properties, and managing their variabilities (differences). With over two decades of existence, the community of SPL researchers and practitioners is thriving, as can be attested by the extensive research output and the numerous successful industrial projects. Education has a key role to support the next generation of practitioners to build highly complex, variability-intensive systems. Yet, it is unclear how the concepts of variability and SPLs are taught, what are the possible missing gaps and difficulties faced, what are the benefits, and what is the material available. Also, it remains unclear whether scholars teach what is actually needed by industry. In this article, we report on three initiatives we have conducted with scholars, educators, industry practitioners, and students to further understand the connection between SPLs and education, that is, an online survey on teaching SPLs we performed with 35 scholars, another survey on learning SPLs we conducted with 25 students, as well as two workshops held at the International Software Product Line Conference in 2014 and 2015 with both researchers and industry practitioners participating. We build upon the two surveys and the workshops to derive recommendations for educators to continue improving the state of practice of teaching SPLs, aimed at both individual educators as well as the wider community.",1,,,,,
Contextualizing Research Evidence through Knowledge Translation in Software Engineering,"Usage of software engineering research in industrial practice is a well-known challenge. Synthesis of knowledge from multiple research studies is needed to provide evidence-based decision-support for industry. The objective of this paper is to present a vision of how a knowledge translation framework may look like in software engineering research, in particular how to translate research evidence into practice by combining contextualized expert opinions with research evidence. We adopted the framework of knowledge translation from health care research, adapted and combined it with a Bayesian synthesis method. The framework provided in this paper includes a description of each step of knowledge translation in software engineering. Knowledge translation using Bayesian synthesis intends to provide a systematic approach towards contextualized, collaborative and consensus-driven application of research results. In conclusion, this paper contributes towards the application of knowledge translation in software engineering through the presented framework. CCS CONCEPTS • Software and its engineering → Software design techniques;",1,"Contextualizing Research Evidence through Knowledge Translation in Software EngineeringUsage of software engineering research in industrial practice is a well-known challenge. Synthesis of knowledge from multiple research studies is needed to provide evidence-based decision-support for industry. The objective of this paper is to present a vision of how a knowledge translation framework may look like in software engineering research, in particular how to translate research evidence into practice by combining contextualized expert opinions with research evidence. We adopted the framework of knowledge translation from health care research, adapted and combined it with a Bayesian synthesis method. The framework provided in this paper includes a description of each step of knowledge translation in software engineering. Knowledge translation using Bayesian synthesis intends to provide a systematic approach towards contextualized, collaborative and consensus-driven application of research results. In conclusion, this paper contributes towards the application of knowledge translation in software engineering through the presented framework. CCS CONCEPTS • Software and its engineering → Software design techniques;",1,,,,,
Bridging the industry-academia collaboration gap a focus towards final year projects, ,0,Bridging the industry-academia collaboration gap a focus towards final year projects ,1,,,,,
"Fontys {ICT}, Partners in Education Program","In this paper, we describe the existing successful practices at the Fontys University of Applied Sciences, ICT in establishing and maintaining collaboration with industry within its ICT curriculum. We describe our approach and the major challenges that we face. In particular, we provide concrete examples from one semester of the Software Engineering curriculum where different forms of collaboration are employed. Our approach, experiences and lessons learned may be valuable to other software engineering programs in involving industry partners in the education process.",0,"Fontys {ICT}, Partners in Education ProgramIn this paper, we describe the existing successful practices at the Fontys University of Applied Sciences, ICT in establishing and maintaining collaboration with industry within its ICT curriculum. We describe our approach and the major challenges that we face. In particular, we provide concrete examples from one semester of the Software Engineering curriculum where different forms of collaboration are employed. Our approach, experiences and lessons learned may be valuable to other software engineering programs in involving industry partners in the education process.",1,,,,,
Collaborative computer graphics product development between academia and government,"Collaborations and partnerships between academia and government agencies are common, especially when it comes to research and development in the fields of science, engineering and technology. However, collaboration between a government agency and an art school is rather atypical. This paper presents the Collaborative Student Project, which aims to explore the following challenge: The ideation, development and realization of education and public outreach products for NASA's upcoming ICESat-2 mission in collaboration with art students.",0,"Collaborative computer graphics product development between academia and governmentCollaborations and partnerships between academia and government agencies are common, especially when it comes to research and development in the fields of science, engineering and technology. However, collaboration between a government agency and an art school is rather atypical. This paper presents the Collaborative Student Project, which aims to explore the following challenge: The ideation, development and realization of education and public outreach products for NASA's upcoming ICESat-2 mission in collaboration with art students.",1,,,,,
Industry-academia collaborations in software engineering,"Research collaboration between industry and academia supports improvement and innovation in industry and helps to ensure industrial relevance in academic research. However, many researchers and practitioners believe that the level of joint industry-academia collaboration (IAC) in sooware engineering (SE) research is still relatively low, compared to the amount of activity in each of the two communities. e goal of the empirical study reported in this paper is to characterize the state of IAC with respect to a set of challenges , paaerns and anti-paaerns identiied by a recent Systematic Literature Review study. To address the above goal, we gathered the opinions of researchers and practitioners w.r.t. their experiences in IAC projects. Our dataset includes 47 opinion data points related to a large set of projects conducted in 10 diierent countries. We aim to contribute to the body of evidence in the area of IAC, for the beneet of researchers and practitioners in conducting future successful IAC projects in SE. As an output, the study presents a set of empirical ndings and evidence-based recommendations to increase the success of IAC projects. CCS CONCEPTS • Sooware and its engineering → Sooware creation and management ; • Social and professional topics → Professional topics; * Supported by FCT (Fundação para a Ciência e Tecnologia) within the Project Scope UID/CEC/00319/2013.",1,"Industry-academia collaborations in software engineeringResearch collaboration between industry and academia supports improvement and innovation in industry and helps to ensure industrial relevance in academic research. However, many researchers and practitioners believe that the level of joint industry-academia collaboration (IAC) in sooware engineering (SE) research is still relatively low, compared to the amount of activity in each of the two communities. e goal of the empirical study reported in this paper is to characterize the state of IAC with respect to a set of challenges , paaerns and anti-paaerns identiied by a recent Systematic Literature Review study. To address the above goal, we gathered the opinions of researchers and practitioners w.r.t. their experiences in IAC projects. Our dataset includes 47 opinion data points related to a large set of projects conducted in 10 diierent countries. We aim to contribute to the body of evidence in the area of IAC, for the beneet of researchers and practitioners in conducting future successful IAC projects in SE. As an output, the study presents a set of empirical ndings and evidence-based recommendations to increase the success of IAC projects. CCS CONCEPTS • Sooware and its engineering → Sooware creation and management ; • Social and professional topics → Professional topics; * Supported by FCT (Fundação para a Ciência e Tecnologia) within the Project Scope UID/CEC/00319/2013.",1,,,,,
Solving Problems or Enabling Problem-Solving? from Purity in Empirical Software Engineering to Effective Co-production (Invited Keynote),"Studying and collaborating with any software-intensive organization demands for excellence in empirical software engineering research. The ever-growing complexity and context-dependency of software products, however, demands for more pragmatic and solution-focused research. This is a great opportunity but it also conflicts with the traditional quest for “purity” in research and a very narrow focus of the work. In this short positioning, we elaborate on challenges which emerge from academia-industry collaborations and discuss touch upon pragmatic ways of approaching them along the co-production model which emerged from SERL Sweden.",0,"Solving Problems or Enabling Problem-Solving? from Purity in Empirical Software Engineering to Effective Co-production (Invited Keynote)Studying and collaborating with any software-intensive organization demands for excellence in empirical software engineering research. The ever-growing complexity and context-dependency of software products, however, demands for more pragmatic and solution-focused research. This is a great opportunity but it also conflicts with the traditional quest for “purity” in research and a very narrow focus of the work. In this short positioning, we elaborate on challenges which emerge from academia-industry collaborations and discuss touch upon pragmatic ways of approaching them along the co-production model which emerged from SERL Sweden.",1,,,,,
From Research Topic to Industrial Practice: An Experience Report, ,0,From Research Topic to Industrial Practice: An Experience Report ,1,,,,,
Software Startups - A Research Agenda, ,0,Software Startups - A Research Agenda ,1,,,,,
Changing Museums Through Cooperation and Collaboration,"Working within a new museological paradigm that sees museums as fluid, unbounded, and dependent upon context, this article seeks to examine the discourses that underpin collaboration as a contemporary and necessary museum education practice. In conducting this examination we will use examples from both Germany and the United States to illustrate the fact that though the two nations exist thousands of miles apart, and the museums within each nation are situated in different socio-political and cultural contexts, the underlying purpose of collaboration is the same in each nation and its museums. Collaboration seeks to change the museum from, in the immortal words of Stephen Weil, being about something to being for somebody.",0,"Changing Museums Through Cooperation and CollaborationWorking within a new museological paradigm that sees museums as fluid, unbounded, and dependent upon context, this article seeks to examine the discourses that underpin collaboration as a contemporary and necessary museum education practice. In conducting this examination we will use examples from both Germany and the United States to illustrate the fact that though the two nations exist thousands of miles apart, and the museums within each nation are situated in different socio-political and cultural contexts, the underlying purpose of collaboration is the same in each nation and its museums. Collaboration seeks to change the museum from, in the immortal words of Stephen Weil, being about something to being for somebody.",1,,,,,
"Industry-University Collaborations in Canada, Japan, the {UK} and {USA} {\textendash} With Emphasis on Publication Freedom and Managing the Intellectual Property Lock-Up Problem", ,0,"Industry-University Collaborations in Canada, Japan, the {UK} and {USA} {\textendash} With Emphasis on Publication Freedom and Managing the Intellectual Property Lock-Up Problem ",1,,,,,
Academic and Industry Collaboration {\textendash} A Literature Review, ,0,Academic and Industry Collaboration {\textendash} A Literature Review ,1,,,,,
collaborative autoethnographic analysis of industry-academia collaboration for software engineering education development,"As engineering educators seek to prepare students for future careers, it can be challenging to keep course materials current with industry practices and knowledge. Students also often experience a disconnect between their studies and perceived relevance to future industry roles. This study examines the potential impact of an industry-academia collaboration on the development and improvement of software engineering education while addressing these issues. A collaborative autoethnographic approach is used to concurrently analyze the experiences of both industry and academic participants in the collaboration. Common themes across the collected personal reflections show that varied benefits were experienced by all stakeholders while contributing to an improved student experience.",0,"collaborative autoethnographic analysis of industry-academia collaboration for software engineering education developmentAs engineering educators seek to prepare students for future careers, it can be challenging to keep course materials current with industry practices and knowledge. Students also often experience a disconnect between their studies and perceived relevance to future industry roles. This study examines the potential impact of an industry-academia collaboration on the development and improvement of software engineering education while addressing these issues. A collaborative autoethnographic approach is used to concurrently analyze the experiences of both industry and academic participants in the collaboration. Common themes across the collected personal reflections show that varied benefits were experienced by all stakeholders while contributing to an improved student experience.",1,,,,,
A study and comparison of industrial vs. academic software product line research published at {SPLC},"The study presented in this paper aims to provide evidence for the hypothesis that software product line research has been changing and that the works in industry and academia have diverged over time. We analysed a subset (140) of all (593) papers published at the Software Product Line Conference (SPLC) until 2017. The subset was randomly selected to cover all years as well as types of papers. We assessed the research type of the papers (academic or industry), the kind of evaluation (application example, empirical, etc.), and the application domain. Also, we assessed which product line life-cycle phases, development practices, and topics the papers address. We present an analysis of the topics covered by academic vs. industry research and discuss the evolution of these topics and their relation over the years. We also discuss implications for researchers and practitioners. We conclude that even though several topics have received more attention than others, academic and industry research on software product lines are actually rather in line with each other.",0,"A study and comparison of industrial vs. academic software product line research published at {SPLC}The study presented in this paper aims to provide evidence for the hypothesis that software product line research has been changing and that the works in industry and academia have diverged over time. We analysed a subset (140) of all (593) papers published at the Software Product Line Conference (SPLC) until 2017. The subset was randomly selected to cover all years as well as types of papers. We assessed the research type of the papers (academic or industry), the kind of evaluation (application example, empirical, etc.), and the application domain. Also, we assessed which product line life-cycle phases, development practices, and topics the papers address. We present an analysis of the topics covered by academic vs. industry research and discuss the evolution of these topics and their relation over the years. We also discuss implications for researchers and practitioners. We conclude that even though several topics have received more attention than others, academic and industry research on software product lines are actually rather in line with each other.",1,,,,,
Collaborating to deliver value in health care: exploring conditions required for successful healthcare and life science sector collaboration, ,0,Collaborating to deliver value in health care: exploring conditions required for successful healthcare and life science sector collaboration ,1,,,,,
Large-scale information retrieval in software engineering - an experience report from industrial application, ,0,Large-scale information retrieval in software engineering - an experience report from industrial application ,1,,,,,
Some researcher considerations when conducting empirical studies in industry,"Research collaborations must be set up for a win-win relationship, avoiding many hurdles along the way. In this short paper the goal is to identify some considerations when conducting empirical studies in industry. These considerations deal with problem solution approaches, communication focus, unpleasant results, mismatching interpretations and scope, business aspects and some evaluation criteria for a successful collaboration.",0,"Some researcher considerations when conducting empirical studies in industryResearch collaborations must be set up for a win-win relationship, avoiding many hurdles along the way. In this short paper the goal is to identify some considerations when conducting empirical studies in industry. These considerations deal with problem solution approaches, communication focus, unpleasant results, mismatching interpretations and scope, business aspects and some evaluation criteria for a successful collaboration.",1,,,,,
Ethical Interviews in Software Engineering,"Background: Despite a long history, numerous laws and regulations, ethics remains an unnatural topic for many software engineering researchers. Poor research ethics may lead to mistrust of research results, lost funding and retraction of publications. A core principle for research ethics is confidentiality, and anonymization is a standard approach to guarantee it. Many guidelines for qualitative software engineering research, and for qualitative research in general, exist, but these do not penetrate how and why to anonymize interview data. Aims: In this paper we aim to identify ethical guidelines for software engineering interview studies involving industrial practitioners. Method: By learning from previous experiences and listening to the authority of existing guidelines in the more mature field of medicine as well as in software engineering, a comprehensive set of checklists for interview studies was distilled. Results: The elements of an interview study were identified and ethical considerations and recommendations for each step were produced, in particular with respect to anonymization. Important ethical principles are: consent, beneficence, confidentiality, scientific value, researcher skill, justice, respect for law, and ethical reviews. Conclusions: The most important contribution of this study is the set of checklists for ethical interview studies. Future work is needed to refine these guidelines with respect to legal aspects and ethical boards.",0,"Ethical Interviews in Software EngineeringBackground: Despite a long history, numerous laws and regulations, ethics remains an unnatural topic for many software engineering researchers. Poor research ethics may lead to mistrust of research results, lost funding and retraction of publications. A core principle for research ethics is confidentiality, and anonymization is a standard approach to guarantee it. Many guidelines for qualitative software engineering research, and for qualitative research in general, exist, but these do not penetrate how and why to anonymize interview data. Aims: In this paper we aim to identify ethical guidelines for software engineering interview studies involving industrial practitioners. Method: By learning from previous experiences and listening to the authority of existing guidelines in the more mature field of medicine as well as in software engineering, a comprehensive set of checklists for interview studies was distilled. Results: The elements of an interview study were identified and ethical considerations and recommendations for each step were produced, in particular with respect to anonymization. Important ethical principles are: consent, beneficence, confidentiality, scientific value, researcher skill, justice, respect for law, and ethical reviews. Conclusions: The most important contribution of this study is the set of checklists for ethical interview studies. Future work is needed to refine these guidelines with respect to legal aspects and ethical boards.",1,,,,,
Enablers and impediments for collaborative research in software testing,"hen it comes to industrial organizations, current collaboration efforts in software engineering research are very often kept in-house, depriving these organizations off the skills necessary to build independent collaborative research. The current trend, towards empirical software engineering research, requires certain standards to be established which would guide these collaborative efforts in creating a strong partnership that promotes independent, evidence-based, software engineering research. This paper examines key enabling factors for an efficient and effective industry-academia collaboration in the software testing domain. A major finding of the research was that while technology is a strong enabler to better collaboration, it must be complemented with industrial openness to disclose research results and the use of a dedicated tooling platform. We use as an example an automated test generation approach that has been developed in the last two years collaboratively with Bombardier Transportation AB in Sweden.",0,"Enablers and impediments for collaborative research in software testinghen it comes to industrial organizations, current collaboration efforts in software engineering research are very often kept in-house, depriving these organizations off the skills necessary to build independent collaborative research. The current trend, towards empirical software engineering research, requires certain standards to be established which would guide these collaborative efforts in creating a strong partnership that promotes independent, evidence-based, software engineering research. This paper examines key enabling factors for an efficient and effective industry-academia collaboration in the software testing domain. A major finding of the research was that while technology is a strong enabler to better collaboration, it must be complemented with industrial openness to disclose research results and the use of a dedicated tooling platform. We use as an example an automated test generation approach that has been developed in the last two years collaboratively with Bombardier Transportation AB in Sweden.",1,,,,,
Foundations for long-term collaborative research,Collaborative research between academia and industry is considered by many the perfect combination of expertise. The strong academic theoretical background is perfectly complemented by the applied knowledge of the industry. Yet we see many collaborative projects that fail to deliver the intended results. We believe that long-term collaboration should be based on foundations that ensure its success. In this paper we aim at defining those foundations by reflecting on the successful collaborative research projects we achieved.,0,Foundations for long-term collaborative researchCollaborative research between academia and industry is considered by many the perfect combination of expertise. The strong academic theoretical background is perfectly complemented by the applied knowledge of the industry. Yet we see many collaborative projects that fail to deliver the intended results. We believe that long-term collaboration should be based on foundations that ensure its success. In this paper we aim at defining those foundations by reflecting on the successful collaborative research projects we achieved.,1,,,,,
Agile Collaborative Research: Action Principles for Industry-Academia Collaboration,"Both the software industry and academia promote collaboration to solve challenges together that neither can solve alone. Collaboration brings opportunities to understand and improve in ways not possible when working apart, but it succeeds only if both parties are contributing. A collaboration model developed from eight years' experience setting up and managing a research center explicitly focused on industry needs is based on five success factors enabling research results (need orientation, industry goal alignment, deployment impact, industry benefit, and innovativeness), five success factors enabling research activities (management engagement, network access, collaborator match, communication ability, and continuity), and 10 action principles for industry-academia collaboration management.",0,"Agile Collaborative Research: Action Principles for Industry-Academia CollaborationBoth the software industry and academia promote collaboration to solve challenges together that neither can solve alone. Collaboration brings opportunities to understand and improve in ways not possible when working apart, but it succeeds only if both parties are contributing. A collaboration model developed from eight years' experience setting up and managing a research center explicitly focused on industry needs is based on five success factors enabling research results (need orientation, industry goal alignment, deployment impact, industry benefit, and innovativeness), five success factors enabling research activities (management engagement, network access, collaborator match, communication ability, and continuity), and 10 action principles for industry-academia collaboration management.",1,,,,,
"Integration of SE Research and Industry: Reflections, Theories and Illustrative Example","Currently, there is limited literature in Software Engineering (SE) that sheds light on the success factors and challenges for knowledge transfer between SE scientists and practitioners. Upon reflections on personal experiences from both academia and industry, this paper attempts to underpin some of the challenges for a successful collaboration, and relate them back to existing theories in the fields of Management, Medicine and Social Sciences. Furthermore, strategies for overcoming some of the challenges are provided and illustrated via a simplified example within the topic of Software Evolution. The intention of this paper is to establish a dialogue for an overall strategy within our field, by providing an illustrative example, and to promote a deeper reflection on the term 'knowledge transfer', which has predominantly focused on an unidirectional knowledge flow from academia to industry.",1,"Integration of SE Research and Industry: Reflections, Theories and Illustrative ExampleCurrently, there is limited literature in Software Engineering (SE) that sheds light on the success factors and challenges for knowledge transfer between SE scientists and practitioners. Upon reflections on personal experiences from both academia and industry, this paper attempts to underpin some of the challenges for a successful collaboration, and relate them back to existing theories in the fields of Management, Medicine and Social Sciences. Furthermore, strategies for overcoming some of the challenges are provided and illustrated via a simplified example within the topic of Software Evolution. The intention of this paper is to establish a dialogue for an overall strategy within our field, by providing an illustrative example, and to promote a deeper reflection on the term 'knowledge transfer', which has predominantly focused on an unidirectional knowledge flow from academia to industry.",1,,,,,
An Exploratory Study on Technology Transfer in Software Engineering,"Background: Technology transfer is one key to the success of research projects, especially in Software Engineering, where the (practical) impact of the outcome may depend not only on the reliability and feasibility of technologies, but also on their applicability to industrial settings. However, there is limited knowledge on the current state of practice and how to assess the success of technology transfer. Objective: We aim at elaborating a set of hypotheses on how technology transfer takes place in Software Engineering research projects. Method: We designed an exploratory survey with the participants of two large research projects in Germany, which involve both industrial and academic partners in the area of model driven development for embedded systems. Results: Base on the extracted respondents answers of this survey, we defined a resulting theory which is based on the following set of main hypothesis: Most of the technologies developed in research projects are not mature enough for a direct application, but need post-project customisation to fit the industrial contexts (H1). Common models that represent technology transfer as a transaction of an object from a transferor to a transferee does not fit industrial reality (H2). Additionally, technology transfer takes place without an explicit process (H3). Regarding transfer mediums, most used mediums are human-intensive (H5) and industry organisations gain new knowledge mainly within their own confines (H4). Finally the motivations that drive the transfer in industry and academia are heterogenous (H6). Conclusions: From the theoretical perspective, this theory and set of hypotheses extracted from the survey results will be further explored and tested in different follow-up activities. This initial set, however, already may serve as a basis for independent assessments from other researchers to collaboratively shed light on a how technology transfer takes place in Software Engineering research projects, which are the barriers, and how to improve the transfer into practice. From the practical perspective, our results may be used as a basis for an evaluation framework for the transfer of the developed technologies in our projects. This would also help companies in getting new developed technologies transfer easier to their specific context.",1,"An Exploratory Study on Technology Transfer in Software EngineeringBackground: Technology transfer is one key to the success of research projects, especially in Software Engineering, where the (practical) impact of the outcome may depend not only on the reliability and feasibility of technologies, but also on their applicability to industrial settings. However, there is limited knowledge on the current state of practice and how to assess the success of technology transfer. Objective: We aim at elaborating a set of hypotheses on how technology transfer takes place in Software Engineering research projects. Method: We designed an exploratory survey with the participants of two large research projects in Germany, which involve both industrial and academic partners in the area of model driven development for embedded systems. Results: Base on the extracted respondents answers of this survey, we defined a resulting theory which is based on the following set of main hypothesis: Most of the technologies developed in research projects are not mature enough for a direct application, but need post-project customisation to fit the industrial contexts (H1). Common models that represent technology transfer as a transaction of an object from a transferor to a transferee does not fit industrial reality (H2). Additionally, technology transfer takes place without an explicit process (H3). Regarding transfer mediums, most used mediums are human-intensive (H5) and industry organisations gain new knowledge mainly within their own confines (H4). Finally the motivations that drive the transfer in industry and academia are heterogenous (H6). Conclusions: From the theoretical perspective, this theory and set of hypotheses extracted from the survey results will be further explored and tested in different follow-up activities. This initial set, however, already may serve as a basis for independent assessments from other researchers to collaboratively shed light on a how technology transfer takes place in Software Engineering research projects, which are the barriers, and how to improve the transfer into practice. From the practical perspective, our results may be used as a basis for an evaluation framework for the transfer of the developed technologies in our projects. This would also help companies in getting new developed technologies transfer easier to their specific context.",1,,,,,
A framework to improve university{\textendash}industry collaboration, ,1,A framework to improve university{\textendash}industry collaboration ,1,,,,,
"Innovation, Knowledge- and Technology Transfer Process Capability Model {\textendash} {innoSPICETM}","The constant technological improvement of products, services, processes and work environment is a critical factor for the development of our economy and society. It strongly depends on the ability to develop knowledge and technology, to transfer it from the point of generation to the site of adaptation and application and to put the technology into use for the benefit of the acquirers and transferors. So far, there is no widely accepted, reliable, predictable and efficient method to evaluate to what extent an organization performs such activities, i.e., innovation, knowledge- and technology transfer (IKaTT). To cope with this problem, we propose to adopt a process-oriented point of view where outcome quality is achieved by the means of process quality. This paper introduces a SPICE conformant innovation, knowledge and technology transfer process capability model that reuses the existing capability dimension of ISO/IEC 15504 to assess knowledge and technology development, transfer and innovation.",0,"Innovation, Knowledge- and Technology Transfer Process Capability Model {\textendash} {innoSPICETM}The constant technological improvement of products, services, processes and work environment is a critical factor for the development of our economy and society. It strongly depends on the ability to develop knowledge and technology, to transfer it from the point of generation to the site of adaptation and application and to put the technology into use for the benefit of the acquirers and transferors. So far, there is no widely accepted, reliable, predictable and efficient method to evaluate to what extent an organization performs such activities, i.e., innovation, knowledge- and technology transfer (IKaTT). To cope with this problem, we propose to adopt a process-oriented point of view where outcome quality is achieved by the means of process quality. This paper introduces a SPICE conformant innovation, knowledge and technology transfer process capability model that reuses the existing capability dimension of ISO/IEC 15504 to assess knowledge and technology development, transfer and innovation.",1,,,,,
Further Development of Information Technology Transfer Concept for Adaptation and Exploitation of European Research Results in the Baltic Sea Region Countries,"Further Development of Information Technology Transfer Concept for Adaptation and Exploitation of European Research Results in the Baltic Sea Region Countries
This paper describes further development of information technology transfer concept for adaptation and exploitation of European research results in the Baltic Sea Region (BSR) countries. Riga Technical University (RTU) and Vilnius University (VU) as the partners of BSR Interreg Programme project BONITA (Baltic Organisation and Network of Innovation Transfer Associations) participate in the research which aims to develop a generic innovation & technology transfer concept (ITTC) to improve the collaboration between academia and industry. Particular attention in the paper is paid to the successfully proven concept of small and specialized exhibitions (the so-called ""showrooms"") run by technology suppliers and technology transfer facilitators. The creation of the distributed multi-organisational showroom-network environment in the framework of BONITA project for the purpose of technology & innovation transfer improvement is described.",0,"Further Development of Information Technology Transfer Concept for Adaptation and Exploitation of European Research Results in the Baltic Sea Region CountriesFurther Development of Information Technology Transfer Concept for Adaptation and Exploitation of European Research Results in the Baltic Sea Region Countries
This paper describes further development of information technology transfer concept for adaptation and exploitation of European research results in the Baltic Sea Region (BSR) countries. Riga Technical University (RTU) and Vilnius University (VU) as the partners of BSR Interreg Programme project BONITA (Baltic Organisation and Network of Innovation Transfer Associations) participate in the research which aims to develop a generic innovation & technology transfer concept (ITTC) to improve the collaboration between academia and industry. Particular attention in the paper is paid to the successfully proven concept of small and specialized exhibitions (the so-called ""showrooms"") run by technology suppliers and technology transfer facilitators. The creation of the distributed multi-organisational showroom-network environment in the framework of BONITA project for the purpose of technology & innovation transfer improvement is described.",1,,,,,
Software Engineering Education From Indian Perspective,"Software is omnipresent in today's world. India is a hub to more than 1000 software companies. The software industry is a major employment providing industry in India. As a wholly intellectual artifact, software development is among the most labor demanding, intricate, and error-prone technologies in human history. Software's escalating vital role in systems of pervasive impact presents novel challenges for the education of software engineers. This paper focuses on the current status of software engineering education in India and suggestions for improvement so as to best suit the software industry's needs",0,"Software Engineering Education From Indian PerspectiveSoftware is omnipresent in today's world. India is a hub to more than 1000 software companies. The software industry is a major employment providing industry in India. As a wholly intellectual artifact, software development is among the most labor demanding, intricate, and error-prone technologies in human history. Software's escalating vital role in systems of pervasive impact presents novel challenges for the education of software engineers. This paper focuses on the current status of software engineering education in India and suggestions for improvement so as to best suit the software industry's needs",1,,,,,
Engineering a successful partnership between academia and the financial industry: A software engineering program for IT professionals,"This paper describes an ongoing partnership between the Seidenberg School of Computer Science and Information Systems at Pace University, a Registered Education Provider (REP) for IEEE and the Information Technology Division at Bank of New York Mellon. The goal of the project is to deliver at the bank's location, a high quality, customized, graduate program in software engineering as well as to reflect on its strong and weak points and improve it. More importantly, through intense interaction with the Bank's IT Management, to ensure that the academic program matches their actual needs. The technology transfer, the customized training and the challenges are discussed.",0,"Engineering a successful partnership between academia and the financial industry: A software engineering program for IT professionalsThis paper describes an ongoing partnership between the Seidenberg School of Computer Science and Information Systems at Pace University, a Registered Education Provider (REP) for IEEE and the Information Technology Division at Bank of New York Mellon. The goal of the project is to deliver at the bank's location, a high quality, customized, graduate program in software engineering as well as to reflect on its strong and weak points and improve it. More importantly, through intense interaction with the Bank's IT Management, to ensure that the academic program matches their actual needs. The technology transfer, the customized training and the challenges are discussed.",1,,,,,
Industry/University software engineering collaborations for the successful reeducation of non-software professionals,"Production of software is growing at a phenomenal rate worldwide. In addition, the increasingly global business climate has accelerated the need for business software. There are too few software engineers to produce and maintain software to meet this demand. One possible solution to correcting this shortfall is reeducating existing non-software employees to become software engineers. For the past two years, the Industry/University (UU) subgroup of the Working Group on Software Engineering Education and Training (WGSEET) has been investigating active collaborations between companies and universities in which employees without formal software education are reeducated to become software engineers. This paper reports on our findings by discussing our approach to the investigation, outlining the factors involved in successful collaboration construction and execution, and describing alumni views of the knowledge and skills transferred by the collaboration.",0,"Industry/University software engineering collaborations for the successful reeducation of non-software professionalsProduction of software is growing at a phenomenal rate worldwide. In addition, the increasingly global business climate has accelerated the need for business software. There are too few software engineers to produce and maintain software to meet this demand. One possible solution to correcting this shortfall is reeducating existing non-software employees to become software engineers. For the past two years, the Industry/University (UU) subgroup of the Working Group on Software Engineering Education and Training (WGSEET) has been investigating active collaborations between companies and universities in which employees without formal software education are reeducated to become software engineers. This paper reports on our findings by discussing our approach to the investigation, outlining the factors involved in successful collaboration construction and execution, and describing alumni views of the knowledge and skills transferred by the collaboration.",1,,,,,
Reeducation to Expand the Software Engineering Workforce: Successful Industry/University Collaborations, ,0,Reeducation to Expand the Software Engineering Workforce: Successful Industry/University Collaborations ,1,,,,,
Characteristics of Successful Collaborations to Produce Educated Software Engineering Professionals,"Currently, a large gap exists between the number of open software engineering positions and the number of qualified software engineers to fill those positions. The Industry/University (I/U) subgroup of the Working Group on Software Engineering Education and Training (WGSEET) is investigating active collaborations between companies and universities in which non-software professionals and practitioners without formal software education are reeducated to become software engineers. This paper describes the current status of work performed by the I/U subgroup in the investigation of reeducation collaborations. It is our goal to identify the common characteristics of successful collaborations in order to provide guidance to universities and companies when constructing a collaborative program, as well as to promote future collaborations. In this paper, we report on the current activity of the I/U subgroup, describe the features of successful collaborations identified so far in our research, and provide some conclusions as to the usefulness of such collaborations.",0,"Characteristics of Successful Collaborations to Produce Educated Software Engineering ProfessionalsCurrently, a large gap exists between the number of open software engineering positions and the number of qualified software engineers to fill those positions. The Industry/University (I/U) subgroup of the Working Group on Software Engineering Education and Training (WGSEET) is investigating active collaborations between companies and universities in which non-software professionals and practitioners without formal software education are reeducated to become software engineers. This paper describes the current status of work performed by the I/U subgroup in the investigation of reeducation collaborations. It is our goal to identify the common characteristics of successful collaborations in order to provide guidance to universities and companies when constructing a collaborative program, as well as to promote future collaborations. In this paper, we report on the current activity of the I/U subgroup, describe the features of successful collaborations identified so far in our research, and provide some conclusions as to the usefulness of such collaborations.",1,,,,,
Teaching Research Methodologies with a Robot in a {CS} Lab Course,"describe a computer science lab course that teaches a scientific research methodology. Our course is based on a recent research project and augments it with a motivating goal: We program a robot based on the Lego EV3 brick with plain English. Our students developed a multi-module solution; all modules were planned, implemented, and benchmarked following a research life cycle. The results of our case study indicate that a lab course can familiarize students with academic research methodologies. Interviews with the participants, conducted half a year after the lab course, confirm our positive impressions: Our participants indeed internalized the research life cycle and all told us that they wanted to pursue research in their upcoming curriculum. Three of four stated that the possibility to monitor progress by running solutions on the robot was highly motivating.",0,"Teaching Research Methodologies with a Robot in a {CS} Lab Coursedescribe a computer science lab course that teaches a scientific research methodology. Our course is based on a recent research project and augments it with a motivating goal: We program a robot based on the Lego EV3 brick with plain English. Our students developed a multi-module solution; all modules were planned, implemented, and benchmarked following a research life cycle. The results of our case study indicate that a lab course can familiarize students with academic research methodologies. Interviews with the participants, conducted half a year after the lab course, confirm our positive impressions: Our participants indeed internalized the research life cycle and all told us that they wanted to pursue research in their upcoming curriculum. Three of four stated that the possibility to monitor progress by running solutions on the robot was highly motivating.",1,,,,,
Developing Industrial Cases for Teaching Software Engineering {\textendash} A Lesson Learned,"Software engineers are provided with an enormous choice of technology for improving the quality of software. Being intangible, software products tend to be more intricate to build than any other artifacts. The selection of technology can thus become a critical factor for the success of software development. Software engineers are expected to be well-versed in various technologies to enable them to decide the best one for a particular development project. Sensible decisions however require not only understanding but also active minds, which can be achieved through meaningful learning. Being a discussion-based learning approach that encourages students to exploit knowledge and understanding of the subject matter, the Case Method seems to be a practical teaching and learning option. This method entails developing specific cases that promote exploration and critical thinking. To ensure the developed cases are useful, they should be evaluated. This paper presents a practical methodology for developing as well as evaluating industrial cases for teaching software engineering through the Case Method. It also shares some important lessons learned from the process. These lessons act as a guideline for future case developers to compose useful cases and motivate software engineering instructors to use cases in teaching.",0,"Developing Industrial Cases for Teaching Software Engineering {\textendash} A Lesson LearnedSoftware engineers are provided with an enormous choice of technology for improving the quality of software. Being intangible, software products tend to be more intricate to build than any other artifacts. The selection of technology can thus become a critical factor for the success of software development. Software engineers are expected to be well-versed in various technologies to enable them to decide the best one for a particular development project. Sensible decisions however require not only understanding but also active minds, which can be achieved through meaningful learning. Being a discussion-based learning approach that encourages students to exploit knowledge and understanding of the subject matter, the Case Method seems to be a practical teaching and learning option. This method entails developing specific cases that promote exploration and critical thinking. To ensure the developed cases are useful, they should be evaluated. This paper presents a practical methodology for developing as well as evaluating industrial cases for teaching software engineering through the Case Method. It also shares some important lessons learned from the process. These lessons act as a guideline for future case developers to compose useful cases and motivate software engineering instructors to use cases in teaching.",1,,,,,
Successful Engagement of Practitioners and Software Engineering Researchers: Evidence From 26 International Industry–Academia Collaborative Projects,"There has been a push to increase the practical relevance and impact of software engineering research. Although many practitioners and researchers agree that this change is desirable, thus far, only a few concrete actions have been taken by the community. In this article, we present our experiences with a large number of collaborative research projects that have had a practical (industrial) impact.",1,"Successful Engagement of Practitioners and Software Engineering Researchers: Evidence From 26 International Industry–Academia Collaborative ProjectsThere has been a push to increase the practical relevance and impact of software engineering research. Although many practitioners and researchers agree that this change is desirable, thus far, only a few concrete actions have been taken by the community. In this article, we present our experiences with a large number of collaborative research projects that have had a practical (industrial) impact.",1,,,,,
Experiences conducting experiments in industry,"The Experimental Software Engineering Industry Laboratory (ESEIL) project funded by the Finland Distinguished Professor Programme (FiDiPro) kicked off in January 2013. The aim of this research is to gain insight into whether experiments in the software industry can play the role of clinical trials in medicine, that is, field test laboratory findings, acting as the last link in the experimental chain. Besides this research goal, we believe that companies can benefit from the conducted experiments by applying the resulting evidence in their decision-making processes.
Controlled experiments in laboratory settings are commonplace in software engineering, but experiments in industry are thin on the ground. Of the few existing cases, most are 1-1 (running one experiment at one company), just a few are n-1 (running n experiments at one company) and still fewer are 1-n (running one and the same experiment at n companies). So far we have conducted the same experiment at seven sites of six companies (four Finnish, one Estonian and one Spanish), and the results have been transferred so that these companies could use the local and global results in decision-making.
This talk will discuss several striking and unexpected behaviours regarding both the developers participating in the experiments and the managers receiving and using the results of the experiments. The talk presents challenges and lessons learnt in recruiting participants for experiments, designing and running the experiment, as well as transferring the results.",0,"Experiences conducting experiments in industryThe Experimental Software Engineering Industry Laboratory (ESEIL) project funded by the Finland Distinguished Professor Programme (FiDiPro) kicked off in January 2013. The aim of this research is to gain insight into whether experiments in the software industry can play the role of clinical trials in medicine, that is, field test laboratory findings, acting as the last link in the experimental chain. Besides this research goal, we believe that companies can benefit from the conducted experiments by applying the resulting evidence in their decision-making processes.
Controlled experiments in laboratory settings are commonplace in software engineering, but experiments in industry are thin on the ground. Of the few existing cases, most are 1-1 (running one experiment at one company), just a few are n-1 (running n experiments at one company) and still fewer are 1-n (running one and the same experiment at n companies). So far we have conducted the same experiment at seven sites of six companies (four Finnish, one Estonian and one Spanish), and the results have been transferred so that these companies could use the local and global results in decision-making.
This talk will discuss several striking and unexpected behaviours regarding both the developers participating in the experiments and the managers receiving and using the results of the experiments. The talk presents challenges and lessons learnt in recruiting participants for experiments, designing and running the experiment, as well as transferring the results.",1,,,,,
Identifying fruitful connections between and among researchers and practitioners,"Many organizations look to research to yield new and improved products and practices. Connecting practitioners who have the need for research results to the researchers producing those results is important to guiding research and utilizing its results. Likewise, connecting researchers working on related topics to one another, and connecting practitioners with related needs to one another, is important to establishing communities of shared interests. We present an approach that helps identify fruitful such connections.",0,"Identifying fruitful connections between and among researchers and practitionersMany organizations look to research to yield new and improved products and practices. Connecting practitioners who have the need for research results to the researchers producing those results is important to guiding research and utilizing its results. Likewise, connecting researchers working on related topics to one another, and connecting practitioners with related needs to one another, is important to establishing communities of shared interests. We present an approach that helps identify fruitful such connections.",1,,,,,
A Model for Technology Transfer in Practice,Successful technology transfer requires close cooperation and collaboration between researchers and practitioners. Researchers need to observe the challenges facing industry firsthand and tailor their work accordingly. Practitioners can help shape technology development on the basis of tangible issues identified on site. This article presents a seven-step technology transfer model that reflects collaborations between university researchers and practitioners at two Swedish companies. The authors discuss key lessons learned for each of these seven steps.,0,A Model for Technology Transfer in PracticeSuccessful technology transfer requires close cooperation and collaboration between researchers and practitioners. Researchers need to observe the challenges facing industry firsthand and tailor their work accordingly. Practitioners can help shape technology development on the basis of tangible issues identified on site. This article presents a seven-step technology transfer model that reflects collaborations between university researchers and practitioners at two Swedish companies. The authors discuss key lessons learned for each of these seven steps.,1,,,,,
A history of the international requirements engineering conference (RE)RE@21,"This paper traces the history of the International Requirements Engineering Conference from its beginnings as the International Symposium on Requirements Engineering and the International Conference on Requirements Engineering. The history is tracked to the present, with suggestions for future considerations, such as more emphasis on systems requirements engineering, and enhanced practitioner participation. Other requirements engineering events and activities are also discussed. A timeline of major milestones is included, along with a brief discussion of requirements engineering research activities that occurred in parallel with the conference.",0,"A history of the international requirements engineering conference (RE)RE@21This paper traces the history of the International Requirements Engineering Conference from its beginnings as the International Symposium on Requirements Engineering and the International Conference on Requirements Engineering. The history is tracked to the present, with suggestions for future considerations, such as more emphasis on systems requirements engineering, and enhanced practitioner participation. Other requirements engineering events and activities are also discussed. A timeline of major milestones is included, along with a brief discussion of requirements engineering research activities that occurred in parallel with the conference.",1,,,,,
How do Practitioners Perceive the Relevance of Requirements Engineering Research? An Ongoing Study,"The relevance of Requirements Engineering (RE) research to practitioners is a prerequisite for problem-driven research in the area and key for a long-term dissemination of research results to everyday practice. To understand better how industry practitioners perceive the practical relevance of RE research, we have initiated the RE-Pract project, an international collaboration conducting an empirical study. This project opts for a replication of previous work done in two different domains and relies on survey research. To this end, we have designed a survey to be sent to several hundred industry practitioners at various companies around the world and ask them to rate their perceived practical relevance of the research described in a sample of 418 RE papers published between 2010 and 2015 at the RE, ICSE, FSE, ESEC/FSE, ESEM and REFSQ conferences. In this paper, we summarize our research protocol and present the current status of our study and the planned future steps.",0,"How do Practitioners Perceive the Relevance of Requirements Engineering Research? An Ongoing StudyThe relevance of Requirements Engineering (RE) research to practitioners is a prerequisite for problem-driven research in the area and key for a long-term dissemination of research results to everyday practice. To understand better how industry practitioners perceive the practical relevance of RE research, we have initiated the RE-Pract project, an international collaboration conducting an empirical study. This project opts for a replication of previous work done in two different domains and relies on survey research. To this end, we have designed a survey to be sent to several hundred industry practitioners at various companies around the world and ask them to rate their perceived practical relevance of the research described in a sample of 418 RE papers published between 2010 and 2015 at the RE, ICSE, FSE, ESEC/FSE, ESEM and REFSQ conferences. In this paper, we summarize our research protocol and present the current status of our study and the planned future steps.",1,,,,,
How do Practitioners Perceive the Relevance of Requirements Engineering Research?,"Context: The relevance of Requirements Engineering (RE) research to practitioners is vital for a long-term dissemination of research results to everyday practice. Some authors have speculated about a mismatch between research and practice in the RE discipline. However, there is not much evidence to support or refute this perception. Objective: This article presents the results of a study aimed at gathering evidence from practitioners about their perception of the relevance of RE research and at understanding the factors that influence that perception. Method: We conducted a questionnaire-based survey of industry practitioners with expertise in RE. The participants rated the perceived relevance of 435 scientific papers presented at five top RE-related conferences. Results: The 153 participants provided a total of 2,164 ratings. The practitioners rated RE research as essential or worthwhile in a majority of cases. However, the percentage of non-positive ratings is still higher than we would like. Among the factors that affect the perception of relevance are the research's links to industry, the research method used, and respondents’ roles. The reasons for positive perceptions were primarily related to the relevance of the problem and the soundness of the solution, while the causes for negative perceptions were more varied. The respondents also provided suggestions for future research, including topics researchers have studied for decades, like elicitation or requirement quality criteria. Conclusions: The study is valuable for both researchers and practitioners. Researchers can use the reasons respondents gave for positive and negative perceptions and the suggested research topics to help make their research more appealing to practitioners and thus more prone to industry adoption. Practitioners can benefit from the overall view of contemporary RE research by learning about research topics that they may not be familiar with, and compare their perception with those of their colleagues to self-assess their positioning towards more academic research.",0,"How do Practitioners Perceive the Relevance of Requirements Engineering Research?Context: The relevance of Requirements Engineering (RE) research to practitioners is vital for a long-term dissemination of research results to everyday practice. Some authors have speculated about a mismatch between research and practice in the RE discipline. However, there is not much evidence to support or refute this perception. Objective: This article presents the results of a study aimed at gathering evidence from practitioners about their perception of the relevance of RE research and at understanding the factors that influence that perception. Method: We conducted a questionnaire-based survey of industry practitioners with expertise in RE. The participants rated the perceived relevance of 435 scientific papers presented at five top RE-related conferences. Results: The 153 participants provided a total of 2,164 ratings. The practitioners rated RE research as essential or worthwhile in a majority of cases. However, the percentage of non-positive ratings is still higher than we would like. Among the factors that affect the perception of relevance are the research's links to industry, the research method used, and respondents’ roles. The reasons for positive perceptions were primarily related to the relevance of the problem and the soundness of the solution, while the causes for negative perceptions were more varied. The respondents also provided suggestions for future research, including topics researchers have studied for decades, like elicitation or requirement quality criteria. Conclusions: The study is valuable for both researchers and practitioners. Researchers can use the reasons respondents gave for positive and negative perceptions and the suggested research topics to help make their research more appealing to practitioners and thus more prone to industry adoption. Practitioners can benefit from the overall view of contemporary RE research by learning about research topics that they may not be familiar with, and compare their perception with those of their colleagues to self-assess their positioning towards more academic research.",1,,,,,
Mapping the State of the Art of Scientific Production on Requirements Engineering Research,"Requirements engineering (RE) is gaining acceptance by industries and practitioners as a significant process in systems development. Similarly, the publications on the research related to the RE topic progresses. However, there is a lack of study on the progressions of this research based on a bibliographic portfolio. This paper presents the emergence of the RE field and mapping the state of the art of scientific production using a bibliometric survey approach. This study identifies the research trends based on the observations of scientific production over the past two decades. Quantitative and qualitative information in requirements engineering research through various bibliographic attributes are presented, such as the leading journals, top-cited articles, top authors, and top countries. Research trends in RE can be observed based on the number of research themes, and the involvement of various disciplines from RE begin to get acknowledged until this study was conducted. The results provide evidence and an overview of future directions in this research field.",0,"Mapping the State of the Art of Scientific Production on Requirements Engineering ResearchRequirements engineering (RE) is gaining acceptance by industries and practitioners as a significant process in systems development. Similarly, the publications on the research related to the RE topic progresses. However, there is a lack of study on the progressions of this research based on a bibliographic portfolio. This paper presents the emergence of the RE field and mapping the state of the art of scientific production using a bibliometric survey approach. This study identifies the research trends based on the observations of scientific production over the past two decades. Quantitative and qualitative information in requirements engineering research through various bibliographic attributes are presented, such as the leading journals, top-cited articles, top authors, and top countries. Research trends in RE can be observed based on the number of research themes, and the involvement of various disciplines from RE begin to get acknowledged until this study was conducted. The results provide evidence and an overview of future directions in this research field.",1,,,,,
Technology transfer decision support in requirements engineering research: a systematic review of {REj},"One of the main goals of an applied research field such as requirements engineering is the transfer of research results to
industrial use. To promote industrial adoption of technologies developed in academia, researchers need to provide tangible
evidence of the advantages of using them. This can be done through industry validation, enabling researchers to test and validate
technologies in a real setting with real users and applications. The evidence obtained, together with detailed information
on how the validation was conducted, offers rich decision support material for industrial practitioners seeking to adopt new
technologies. This paper presents a comprehensive systematic literature review of all papers published in the Requirements
Engineering journal containing any type of technology evaluation. The aim is to gauge the support for technology transfer,
i.e., to what degree industrial practitioners can use the reporting of technology evaluations in the journal as decision support 
for adopting the technologies in industrial practice. Findings show that very few evaluations offer full technology transfer 
support, i.e., have a realistic scale, application or subjects. The major improvement potential concerning support for technology
transfer is found to be the subjects used in the evaluations. Attaining company support, including support for using practitioners
as subjects, is vital for technology transfer and for researchers seeking to validate technologies.",0,"Technology transfer decision support in requirements engineering research: a systematic review of {REj}One of the main goals of an applied research field such as requirements engineering is the transfer of research results to
industrial use. To promote industrial adoption of technologies developed in academia, researchers need to provide tangible
evidence of the advantages of using them. This can be done through industry validation, enabling researchers to test and validate
technologies in a real setting with real users and applications. The evidence obtained, together with detailed information
on how the validation was conducted, offers rich decision support material for industrial practitioners seeking to adopt new
technologies. This paper presents a comprehensive systematic literature review of all papers published in the Requirements
Engineering journal containing any type of technology evaluation. The aim is to gauge the support for technology transfer,
i.e., to what degree industrial practitioners can use the reporting of technology evaluations in the journal as decision support 
for adopting the technologies in industrial practice. Findings show that very few evaluations offer full technology transfer 
support, i.e., have a realistic scale, application or subjects. The major improvement potential concerning support for technology
transfer is found to be the subjects used in the evaluations. Attaining company support, including support for using practitioners
as subjects, is vital for technology transfer and for researchers seeking to validate technologies.",1,,,,,
A method for evaluating rigor and industrial relevance of technology evaluations,"One of the main goals of an applied research field such as software engineering is the transfer and widespread use of research
results in industry. To impact industry, researchers developing technologies in academia need to provide tangible evidence
of the advantages of using them. This can be done trough step-wise validation, enabling researchers to gradually test and
evaluate technologies to finally try them in real settings with real users and applications. The evidence obtained, together
with detailed information on how the validation was conducted, offers rich decision support material for industry practitioners
seeking to adopt new technologies and researchers looking for an empirical basis on which to build new or refined technologies.
This paper presents model for evaluating the rigor and industrial relevance of technology evaluations in software engineering.
The model is applied and validated in a comprehensive systematic literature review of evaluations of requirements engineering
technologies published in software engineering journals. The aim is to show the applicability of the model and to characterize
how evaluations are carried out and reported to evaluate the state-of-research. The review shows that the model can be applied
to characterize evaluations in requirements engineering. The findings from applying the model also show that the majority
of technology evaluations in requirements engineering lack both industrial relevance and rigor. In addition, the research
field does not show any improvements in terms of industrial relevance over time.",0,"A method for evaluating rigor and industrial relevance of technology evaluationsOne of the main goals of an applied research field such as software engineering is the transfer and widespread use of research
results in industry. To impact industry, researchers developing technologies in academia need to provide tangible evidence
of the advantages of using them. This can be done trough step-wise validation, enabling researchers to gradually test and
evaluate technologies to finally try them in real settings with real users and applications. The evidence obtained, together
with detailed information on how the validation was conducted, offers rich decision support material for industry practitioners
seeking to adopt new technologies and researchers looking for an empirical basis on which to build new or refined technologies.
This paper presents model for evaluating the rigor and industrial relevance of technology evaluations in software engineering.
The model is applied and validated in a comprehensive systematic literature review of evaluations of requirements engineering
technologies published in software engineering journals. The aim is to show the applicability of the model and to characterize
how evaluations are carried out and reported to evaluate the state-of-research. The review shows that the model can be applied
to characterize evaluations in requirements engineering. The findings from applying the model also show that the majority
of technology evaluations in requirements engineering lack both industrial relevance and rigor. In addition, the research
field does not show any improvements in terms of industrial relevance over time.",1,,,,,
 ,"This paper is an experience report on an initiative to incorporate requirements engineering practices into the development process of two large corporations. The project was framed by a government program to foster collaboration between academia, industry, and government agencies. Its expected result—proposals for cooperative work—is in itself a major challenge, since it was not decided from the beginning what aspect of requirements engineering would be covered by the proposals.We describe the cooperation process followed by the project partners, three universities, and two companies, the difficulties found therein, and compare our experience with other reports on the issue of adoption of requirements engineering into the mainstream practice.",0," This paper is an experience report on an initiative to incorporate requirements engineering practices into the development process of two large corporations. The project was framed by a government program to foster collaboration between academia, industry, and government agencies. Its expected result—proposals for cooperative work—is in itself a major challenge, since it was not decided from the beginning what aspect of requirements engineering would be covered by the proposals.We describe the cooperation process followed by the project partners, three universities, and two companies, the difficulties found therein, and compare our experience with other reports on the issue of adoption of requirements engineering into the mainstream practice.",1,,,,,
A Taxonomy for Improving Industry-Academia Communication in IoT Vulnerability Management,"Background: In software engineering, industryacademia is a symbiotic relationship. Researchers need to be aware of the industry to produce relevant research, while practitioners are educated in academia and could take advantage of empirical research. The SERP taxonomy architecture is designed to support communication between practitioners and researchers in software engineering. Objective: The purpose of this study is to analyze to what extent the SERP taxonomy architecture is useful for improving communication between researchers and practitioners in IoT vulnerability management. Method: We developed a SERP taxonomy for IoT vulnerability management, SERP-MENTION, in an incremental way. Along the development, we evaluated the developed taxonomy in a project of industry academia collaboration. Results: In addition to the taxonomy itself we elaborate on the taxonomy development process and the potential of SERP-MENTION to support communication between researchers and practitioners within the area. Conclusion: The SERP architecture can be used in a new field, it is perceived as useful by potential users to better describe and communicate research outputs and practical challenges in software vulnerability management.",0,"A Taxonomy for Improving Industry-Academia Communication in IoT Vulnerability ManagementBackground: In software engineering, industryacademia is a symbiotic relationship. Researchers need to be aware of the industry to produce relevant research, while practitioners are educated in academia and could take advantage of empirical research. The SERP taxonomy architecture is designed to support communication between practitioners and researchers in software engineering. Objective: The purpose of this study is to analyze to what extent the SERP taxonomy architecture is useful for improving communication between researchers and practitioners in IoT vulnerability management. Method: We developed a SERP taxonomy for IoT vulnerability management, SERP-MENTION, in an incremental way. Along the development, we evaluated the developed taxonomy in a project of industry academia collaboration. Results: In addition to the taxonomy itself we elaborate on the taxonomy development process and the potential of SERP-MENTION to support communication between researchers and practitioners within the area. Conclusion: The SERP architecture can be used in a new field, it is perceived as useful by potential users to better describe and communicate research outputs and practical challenges in software vulnerability management.",1,,,,,
Context checklist for industrial software engineering research and practice,"The relevance of context is particularly stressed in case studies, where it is said that “case study is an empirical method aimed at investigating contemporary phenomena in their context”. In this research, we classify context information and provide a context checklist for industrial software engineering. The checklist serves the purpose of (a) supporting researchers and practitioners in characterizing the context in which they are working; (b) supporting researchers with a checklist to identify relevant contextual information to elicit and report during primary and secondary studies. We utilized a systematic approach for constructing the classification of context information and provided a detailed definition for each item. We collected feedback from researchers as well as practitioners. The usefulness of the checklist was perceived more positively by researchers than practitioners, though they highlighted benefits (raising awareness of the importance of context and usefulness for management). The understandability was perceived positively by both practitioners and researchers. The checklist may serve as a “meta-model”, forming the basis for specific adaptations for different research areas, and as input for researchers deciding which context information to extract in systematic reviews. The checklist may also help researchers in reporting context in research papers.",1,"Context checklist for industrial software engineering research and practiceThe relevance of context is particularly stressed in case studies, where it is said that “case study is an empirical method aimed at investigating contemporary phenomena in their context”. In this research, we classify context information and provide a context checklist for industrial software engineering. The checklist serves the purpose of (a) supporting researchers and practitioners in characterizing the context in which they are working; (b) supporting researchers with a checklist to identify relevant contextual information to elicit and report during primary and secondary studies. We utilized a systematic approach for constructing the classification of context information and provided a detailed definition for each item. We collected feedback from researchers as well as practitioners. The usefulness of the checklist was perceived more positively by researchers than practitioners, though they highlighted benefits (raising awareness of the importance of context and usefulness for management). The understandability was perceived positively by both practitioners and researchers. The checklist may serve as a “meta-model”, forming the basis for specific adaptations for different research areas, and as input for researchers deciding which context information to extract in systematic reviews. The checklist may also help researchers in reporting context in research papers.",1,,,,,
Applying model-driven engineering in small software enterprises,"Model-Driven Engineering (MDE) is increasingly gaining acceptance in the software engineering community, however its adoption by the industry is far from successful. The number of companies applying MDE is still very limited. Although several case studies and reports have been published on MDE adoption in large companies, experience reports on small enterprises are still rare, despite the fact that they represent a large part of the software companies ecosystem.
In this paper we report on our practical experience in two transfer of technology projects on two small companies. In order to determine the degree of success of these projects we present some factors that have to be taken into account in transfer of technology projects. Then, we assess both projects analyzing these factors and applying some metrics to give hints about the potential productivity gains that MDE could bring. We also comment on some lessons learned. These experiences suggest that MDE has the potential to make small companies more competitive, because it enables them to build powerful automation tools at modest cost. We will also present the approach followed to train these companies in MDE, and we contribute the teaching material so that it can be used or adapted by others projects of this nature.",0,"Applying model-driven engineering in small software enterprisesModel-Driven Engineering (MDE) is increasingly gaining acceptance in the software engineering community, however its adoption by the industry is far from successful. The number of companies applying MDE is still very limited. Although several case studies and reports have been published on MDE adoption in large companies, experience reports on small enterprises are still rare, despite the fact that they represent a large part of the software companies ecosystem.
In this paper we report on our practical experience in two transfer of technology projects on two small companies. In order to determine the degree of success of these projects we present some factors that have to be taken into account in transfer of technology projects. Then, we assess both projects analyzing these factors and applying some metrics to give hints about the potential productivity gains that MDE could bring. We also comment on some lessons learned. These experiences suggest that MDE has the potential to make small companies more competitive, because it enables them to build powerful automation tools at modest cost. We will also present the approach followed to train these companies in MDE, and we contribute the teaching material so that it can be used or adapted by others projects of this nature.",1,,,,,
Software process,"This paper is a travelogue of Software Process research and practice in the past 15 years. It is based on the paper written by one of the authors for the FOSE Track at ICSE 2000. Since then, the landscape of Software Process research has significantly evolved: technological breakthroughs and market disruptions have defined new and complex challenges for Software Engineering researchers and practitioners.
In this paper we provide an overview of the current status of research and practice, highlight new challenges, and provide a non-exhaustive list of research issues that, in our view, need to be tackled by future research work.",0,"Software processThis paper is a travelogue of Software Process research and practice in the past 15 years. It is based on the paper written by one of the authors for the FOSE Track at ICSE 2000. Since then, the landscape of Software Process research has significantly evolved: technological breakthroughs and market disruptions have defined new and complex challenges for Software Engineering researchers and practitioners.
In this paper we provide an overview of the current status of research and practice, highlight new challenges, and provide a non-exhaustive list of research issues that, in our view, need to be tackled by future research work.",1,,,,,
Experiences of Applying {UML}/{MARTE} on Three Industrial Projects,"MARTE (Modeling and Analysis of Real-Time and Embedded Systems) is a UML profile, which has been developed to model concepts specific to Real-Time and Embedded Systems (RTES). In previous years, we have applied UML/MARTE to three distinct industrial problems in various industry sectors: architecture modeling and configuration of large-scale and highly configurable integrated control systems, model-based robustness testing of communication-intensive systems, and model-based environment simulator generation of large-scale RTES for testing. In this paper, we report on our experiences of solving these problems by applying UML/MARTE on four industrial case studies. Based on our common experiences, we derive a framework to help practitioners for future applications of UML/MARTE. The framework provides a set of detailed guidelines on how to apply MARTE in industrial contexts and will help reduce the gap between the modeling standards and industrial needs.",0,"Experiences of Applying {UML}/{MARTE} on Three Industrial ProjectsMARTE (Modeling and Analysis of Real-Time and Embedded Systems) is a UML profile, which has been developed to model concepts specific to Real-Time and Embedded Systems (RTES). In previous years, we have applied UML/MARTE to three distinct industrial problems in various industry sectors: architecture modeling and configuration of large-scale and highly configurable integrated control systems, model-based robustness testing of communication-intensive systems, and model-based environment simulator generation of large-scale RTES for testing. In this paper, we report on our experiences of solving these problems by applying UML/MARTE on four industrial case studies. Based on our common experiences, we derive a framework to help practitioners for future applications of UML/MARTE. The framework provides a set of detailed guidelines on how to apply MARTE in industrial contexts and will help reduce the gap between the modeling standards and industrial needs.",1,,,,,
"Applying {UML}/{MARTE} on industrial projects: challenges, experiences, and guidelines","Modeling and Analysis of Real-Time and Embedded Systems (MARTE) is a Unified Modeling Language (UML) profile, which has been developed to model concepts specific to Real-Time and Embedded Systems (RTES). In the last 5 years, we have applied UML/MARTE to three distinct industrial problems in three industry sectors: architecture modeling and configuration of large-scale and highly configurable integrated control systems, model-based robustness testing of communication-intensive systems, and model-based environment simulator generation of large-scale RTES for testing. In this paper, we report on our experience of solving these problems by applying UML/MARTE on four industrial case studies. We highlight the challenges we faced with respect to the industrial adoption of MARTE. Based on our combined experience, we derive a framework to guide practitioners for future applications of UML/MARTE in an industrial context. The framework provides a set of detailed guidelines that help reduce the gap between the modeling notations and real-world industrial application needs.",0,"Applying {UML}/{MARTE} on industrial projects: challenges, experiences, and guidelinesModeling and Analysis of Real-Time and Embedded Systems (MARTE) is a Unified Modeling Language (UML) profile, which has been developed to model concepts specific to Real-Time and Embedded Systems (RTES). In the last 5 years, we have applied UML/MARTE to three distinct industrial problems in three industry sectors: architecture modeling and configuration of large-scale and highly configurable integrated control systems, model-based robustness testing of communication-intensive systems, and model-based environment simulator generation of large-scale RTES for testing. In this paper, we report on our experience of solving these problems by applying UML/MARTE on four industrial case studies. We highlight the challenges we faced with respect to the industrial adoption of MARTE. Based on our combined experience, we derive a framework to guide practitioners for future applications of UML/MARTE in an industrial context. The framework provides a set of detailed guidelines that help reduce the gap between the modeling notations and real-world industrial application needs.",1,,,,,
In Quest for Proper Mediums for Technology Transfer in Software Engineering,"Background: Successful transfer of the results of research projects into practice is of great interest to all project participants. It can be assumed that different transfer mediums fulfill technology transfer (TT) with different levels of success and that they are impaired by different kinds of barriers. Objective: The goal of this study is to gain a better understanding about the different mediums used for TT in software engineering, and to identify barriers weakening the success of the application of such mediums. Method: We conducted an exploratory study implemented by a survey in the context of a German research project with a broad range of used mediums. Results: The main reported barriers were low expectations of usefulness, no awareness of existence, lack of resources, or inadequateness in terms of outdated material or being in an immature state. Conclusions: We interpreted our results as symptoms of a lack of a dissemination plan in the project. Further work will be needed to explore the implications for the transfer of research results (knowledge and techniques) to practice.",0,"In Quest for Proper Mediums for Technology Transfer in Software EngineeringBackground: Successful transfer of the results of research projects into practice is of great interest to all project participants. It can be assumed that different transfer mediums fulfill technology transfer (TT) with different levels of success and that they are impaired by different kinds of barriers. Objective: The goal of this study is to gain a better understanding about the different mediums used for TT in software engineering, and to identify barriers weakening the success of the application of such mediums. Method: We conducted an exploratory study implemented by a survey in the context of a German research project with a broad range of used mediums. Results: The main reported barriers were low expectations of usefulness, no awareness of existence, lack of resources, or inadequateness in terms of outdated material or being in an immature state. Conclusions: We interpreted our results as symptoms of a lack of a dissemination plan in the project. Further work will be needed to explore the implications for the transfer of research results (knowledge and techniques) to practice.",1,,,,,
Technology Transfer Concepts,"In software engineering, transferring innovative concepts, techniques and methods into the practice of existing organizations is an expensive and complex task. This chapter gives an overview on the transfer of the SPES XT modeling framework to different organization.",0,"Technology Transfer ConceptsIn software engineering, transferring innovative concepts, techniques and methods into the practice of existing organizations is an expensive and complex task. This chapter gives an overview on the transfer of the SPES XT modeling framework to different organization.",1,,,,,
7.3.2 Assessment of Readiness for Internal Technology Transfer - A Case Study,"Premature introduction of new technologies in product development is likely to lead to both budget and schedule overruns. The assessment of when a technology is ready to be transferred from technology development to product development and production is critical for striking the right balance of short time-to-market and low risk. Previous research on internal technology transfer has mainly focused on the development of methods and tools for assessing technology readiness for major development programs in governmental agencies, revealing few cases of such implementations in technology driven industrial companies. This paper aims to provide description of experiences from using such tools at a case company and prescription on how to manage the identified challenges. The study is based on 22 semi-structured interviews, primarily with personnel from the technology and product development departments. The results indicate that the readiness assessments suggested in literature can support decisions also in industrial companies. However, adapting the tools to the internal differences between technologies is important for minimizing administrative workload and ensuring implementation readiness as opposed to just technology readiness. The strategy for their adaptation could benefit from more research on the practices of companies dealing with internal technology transfer and from the development of a framework for how to adapt the assessment process to different contexts.",0,"7.3.2 Assessment of Readiness for Internal Technology Transfer - A Case StudyPremature introduction of new technologies in product development is likely to lead to both budget and schedule overruns. The assessment of when a technology is ready to be transferred from technology development to product development and production is critical for striking the right balance of short time-to-market and low risk. Previous research on internal technology transfer has mainly focused on the development of methods and tools for assessing technology readiness for major development programs in governmental agencies, revealing few cases of such implementations in technology driven industrial companies. This paper aims to provide description of experiences from using such tools at a case company and prescription on how to manage the identified challenges. The study is based on 22 semi-structured interviews, primarily with personnel from the technology and product development departments. The results indicate that the readiness assessments suggested in literature can support decisions also in industrial companies. However, adapting the tools to the internal differences between technologies is important for minimizing administrative workload and ensuring implementation readiness as opposed to just technology readiness. The strategy for their adaptation could benefit from more research on the practices of companies dealing with internal technology transfer and from the development of a framework for how to adapt the assessment process to different contexts.",1,,,,,
A study of applying a research prototype tool in industrial practice,"Our research tool, Umple, has the objective of raising the abstraction level of programming languages by adding modeling abstractions such as UML associations, attributes and state machines. My research focuses on the syntax and semantics of state machines in Umple plus the empirical validation of Umple. The latter consists of a grounded theory study of Umple users, and action research involving the use of Umple in an industrial sitting. The grounded theory study is guiding our research and development of Umple. The action research is enlarging the pool of Umple users and contributing to the validation of Umple's approach.",0,"A study of applying a research prototype tool in industrial practiceOur research tool, Umple, has the objective of raising the abstraction level of programming languages by adding modeling abstractions such as UML associations, attributes and state machines. My research focuses on the syntax and semantics of state machines in Umple plus the empirical validation of Umple. The latter consists of a grounded theory study of Umple users, and action research involving the use of Umple in an industrial sitting. The grounded theory study is guiding our research and development of Umple. The action research is enlarging the pool of Umple users and contributing to the validation of Umple's approach.",1,,,,,
A Three-Phased Technology Transfer Model: Lessons from Software Technology Transfer from Japan to Korea,"Software development is quickly becoming globally distributed. Cross-country-border software development that spans across country borders is a mandatory part of software production today. In order to facilitate global coordination, the transfer of technology is a key. We analyze a successful technology transfer from one time dimension and three factor dimensions. From the lessons learned, we propose a three-phase model of technology transfer and a three factor model of technology transfer achievement.",0,"A Three-Phased Technology Transfer Model: Lessons from Software Technology Transfer from Japan to KoreaSoftware development is quickly becoming globally distributed. Cross-country-border software development that spans across country borders is a mandatory part of software production today. In order to facilitate global coordination, the transfer of technology is a key. We analyze a successful technology transfer from one time dimension and three factor dimensions. From the lessons learned, we propose a three-phase model of technology transfer and a three factor model of technology transfer achievement.",1,,,,,
Applying empirical software engineering to software architecture: challenges and lessons learned,"In the last 15years, software architecture has emerged as an important software engineering field for managing the development
and maintenance of large, software-intensive systems. Software architecture community has developed numerous methods, techniques,
and tools to support the architecture process (analysis, design, and review). Historically, most advances in software architecture
have been driven by talented people and industrial experience, but there is now a growing need to systematically gather empirical
evidence about the advantages or otherwise of tools and methods rather than just rely on promotional anecdotes or rhetoric.
The aim of this paper is to promote and facilitate the application of the empirical paradigm to software architecture. To
this end, we describe the challenges and lessons learned when assessing software architecture research that used controlled
experiments, replications, expert opinion, systematic literature reviews, observational studies, and surveys. Our research
will support the emergence of a body of knowledge consisting of the more widely-accepted and well-formed software architecture
theories.

KeywordsSoftware architecture-Empirical software engineering",0,"Applying empirical software engineering to software architecture: challenges and lessons learnedIn the last 15years, software architecture has emerged as an important software engineering field for managing the development
and maintenance of large, software-intensive systems. Software architecture community has developed numerous methods, techniques,
and tools to support the architecture process (analysis, design, and review). Historically, most advances in software architecture
have been driven by talented people and industrial experience, but there is now a growing need to systematically gather empirical
evidence about the advantages or otherwise of tools and methods rather than just rely on promotional anecdotes or rhetoric.
The aim of this paper is to promote and facilitate the application of the empirical paradigm to software architecture. To
this end, we describe the challenges and lessons learned when assessing software architecture research that used controlled
experiments, replications, expert opinion, systematic literature reviews, observational studies, and surveys. Our research
will support the emergence of a body of knowledge consisting of the more widely-accepted and well-formed software architecture
theories.

KeywordsSoftware architecture-Empirical software engineering",1,,,,,
The practise of technology transfer,"Technology transfer can take place within an organisation or between organisations. For both the source of the technology as well as the adopter of the technology it is of importance that the transfer is successful. This paper reports on research that consisted of a case study of technology transfer between a public institution and a private company in the defence sector of South Africa. The paper addresses the practice of technology transfer, its application in the defence-related industry, the maturity of the role players involved in a typical technology transfer process, and recommendations for improving the practice of technology transfer.",0,"The practise of technology transferTechnology transfer can take place within an organisation or between organisations. For both the source of the technology as well as the adopter of the technology it is of importance that the transfer is successful. This paper reports on research that consisted of a case study of technology transfer between a public institution and a private company in the defence sector of South Africa. The paper addresses the practice of technology transfer, its application in the defence-related industry, the maturity of the role players involved in a typical technology transfer process, and recommendations for improving the practice of technology transfer.",1,,,,,
The evolution of emerging technologies in market-driven software product development,"This paper investigates the lifecycle of emerging technologies from the perspective of market-driven software product development. Typically, the underlying concepts of the emerging technology are first elaborated at universities; after some time of intensive research effort, the first prototype is developed. The next stage brings to the scene companies aiming to develop software products using the technology. Then, the first commercial product is developed and introduced to the market. It gains market share, reaches maturity and finally decline. In this paper, we explore the different challenges, opportunities and actors involved in each stage of technology lifecycle. We believe that a better understanding on the dynamics of innovation in market-driven software product development is a key factor to advance the diffusion of research results into commercial software development.",0,"The evolution of emerging technologies in market-driven software product developmentThis paper investigates the lifecycle of emerging technologies from the perspective of market-driven software product development. Typically, the underlying concepts of the emerging technology are first elaborated at universities; after some time of intensive research effort, the first prototype is developed. The next stage brings to the scene companies aiming to develop software products using the technology. Then, the first commercial product is developed and introduced to the market. It gains market share, reaches maturity and finally decline. In this paper, we explore the different challenges, opportunities and actors involved in each stage of technology lifecycle. We believe that a better understanding on the dynamics of innovation in market-driven software product development is a key factor to advance the diffusion of research results into commercial software development.",1,,,,,
Transfer and Commercialization of Technologies from Universities to Small Companies in South Africa,"World-wide many universities have a significant role in the socio-economic development of their countries and regions. One avenue for universities to achieve this role is through the transfer and commercialization of their technologies to resource-constrained small, medium enterprises (SMEs). A survey-based study was conducted to establish the factors that enable and restrain the transfer and commercialization of technology from South African publicly-funded universities (transferor) to SMEs (transferee), as well as to recommend how the restraining factors could be addressed. The sample consisted of researchers and technology managers drawn from entrepreneurs and six Gauteng universities. Respondents rated each of the ten literature-derived enabling factors and ten literature- derived restraining factors to technology transfer and commercialization from universities to SMEs. Results show the top two enabling factors to be absorptive capacity of the transferee; and transferor's attitude towards TT and commercialization. The top two restraining factors are university bureaucracy and the university performance evaluation system. Measures to deal with the top four restraining factors are suggested and useful insights are provided by the research findings.",0,"Transfer and Commercialization of Technologies from Universities to Small Companies in South AfricaWorld-wide many universities have a significant role in the socio-economic development of their countries and regions. One avenue for universities to achieve this role is through the transfer and commercialization of their technologies to resource-constrained small, medium enterprises (SMEs). A survey-based study was conducted to establish the factors that enable and restrain the transfer and commercialization of technology from South African publicly-funded universities (transferor) to SMEs (transferee), as well as to recommend how the restraining factors could be addressed. The sample consisted of researchers and technology managers drawn from entrepreneurs and six Gauteng universities. Respondents rated each of the ten literature-derived enabling factors and ten literature- derived restraining factors to technology transfer and commercialization from universities to SMEs. Results show the top two enabling factors to be absorptive capacity of the transferee; and transferor's attitude towards TT and commercialization. The top two restraining factors are university bureaucracy and the university performance evaluation system. Measures to deal with the top four restraining factors are suggested and useful insights are provided by the research findings.",1,,,,,
International technology transfer as an effective tool of export-oriented import substitution in Russia,"The aim of this study is to determine the prospects of the international transfer technologies in the Russian market. The sanctions imposed on Russia by the EU countries and the United States have led to a clear understanding of the danger of dependence on imports. In 2014, an import substitution program was launched by the Russian government, and it has already shown the positive results. Some industries showed the increasing the share of domestic products by 15-25% Nevertheless, simple import substitution can also have a negative impact on the enterprise. For example, it can decrease the productivity and the product quality. Not all enterprises can offer competitive products without imported components, technologies, and trained personnel, even for the domestic market. No doubt, the interests of domestic producers must be considered in the first place, but it is necessary to make sure that Russian products are also interesting for the foreign markets. That is why the government set the task of moving from the policy of simple import substitution to the policy of export-oriented import substitution. Russia should improve its performance in the export of non-resource goods. Unfortunately, simple localization can be quite risky for the economy. Russia should be more actively involved in international technology transfer. The article examines the weaknesses and strengths of the Russian innovation system, as well as the opportunities that open for Russian business and Swiss companies, that transforms innovative and patented technologies developed by Swiss universities and international research centers into global successful businesses.",0,"International technology transfer as an effective tool of export-oriented import substitution in RussiaThe aim of this study is to determine the prospects of the international transfer technologies in the Russian market. The sanctions imposed on Russia by the EU countries and the United States have led to a clear understanding of the danger of dependence on imports. In 2014, an import substitution program was launched by the Russian government, and it has already shown the positive results. Some industries showed the increasing the share of domestic products by 15-25% Nevertheless, simple import substitution can also have a negative impact on the enterprise. For example, it can decrease the productivity and the product quality. Not all enterprises can offer competitive products without imported components, technologies, and trained personnel, even for the domestic market. No doubt, the interests of domestic producers must be considered in the first place, but it is necessary to make sure that Russian products are also interesting for the foreign markets. That is why the government set the task of moving from the policy of simple import substitution to the policy of export-oriented import substitution. Russia should improve its performance in the export of non-resource goods. Unfortunately, simple localization can be quite risky for the economy. Russia should be more actively involved in international technology transfer. The article examines the weaknesses and strengths of the Russian innovation system, as well as the opportunities that open for Russian business and Swiss companies, that transforms innovative and patented technologies developed by Swiss universities and international research centers into global successful businesses.",1,,,,,
{DRR} technology sharing and transfer through web-based platforms, ,0,{DRR} technology sharing and transfer through web-based platforms ,1,,,,,
Exploring capabilities of international technology transfer intermediaries between emerging and developed countries, ,0,Exploring capabilities of international technology transfer intermediaries between emerging and developed countries ,1,,,,,
Architecture Compliance Checking - Experiences from Successful Technology Transfer to Industry,"New ideas and concepts emerging from research have to be accepted by industrial stakeholders before they are used in product development. In this paper, we present our lessons learned and experiences gained from transferring a reverse engineering technology - architecture compliance checking - to Testo AG, one of the world's leading suppliers of portable measurement devices for industry and emission business. Testo develops a product line of climate and flue gas measurement devices and uses architecture compliance checking as the means to ensure consistency between the specified reference architecture and the implemented products. After delivery of more than a dozen products to the market, we present how architecture compliance checking has been transferred and how it became one instrument for ensuring the high quality of Testo products.",0,"Architecture Compliance Checking - Experiences from Successful Technology Transfer to IndustryNew ideas and concepts emerging from research have to be accepted by industrial stakeholders before they are used in product development. In this paper, we present our lessons learned and experiences gained from transferring a reverse engineering technology - architecture compliance checking - to Testo AG, one of the world's leading suppliers of portable measurement devices for industry and emission business. Testo develops a product line of climate and flue gas measurement devices and uses architecture compliance checking as the means to ensure consistency between the specified reference architecture and the implemented products. After delivery of more than a dozen products to the market, we present how architecture compliance checking has been transferred and how it became one instrument for ensuring the high quality of Testo products.",1,,,,,
Industry academia collaboration model: The design challenges,"The Information Technology industry is growing at a healthy rate with businesses heavily dependent on IT applications for their operations. India has become a global hub for IT services export and has witnessed exponential growth of employment opportunities. While the IT industry has felt a pressing need for acquiring and retaining competent talent, academia on the other side has also felt a strong need in terms of producing the necessary quality talent. Hence, a need for industry-academia partnership has been strongly felt to enhance the employability of engineering graduate workforce and make them industry ready. This article discusses the critical design challenges significant for any industry-academia collaboration model in the higher education space [4]. Here, we discuss the design options for such a model, its evaluation strategy and performance parameters, and how it addresses the primary challenges faced by both the stakeholders i.e. industry and academia, in a measurable, scalable and sustainable manner.",0,"Industry academia collaboration model: The design challengesThe Information Technology industry is growing at a healthy rate with businesses heavily dependent on IT applications for their operations. India has become a global hub for IT services export and has witnessed exponential growth of employment opportunities. While the IT industry has felt a pressing need for acquiring and retaining competent talent, academia on the other side has also felt a strong need in terms of producing the necessary quality talent. Hence, a need for industry-academia partnership has been strongly felt to enhance the employability of engineering graduate workforce and make them industry ready. This article discusses the critical design challenges significant for any industry-academia collaboration model in the higher education space [4]. Here, we discuss the design options for such a model, its evaluation strategy and performance parameters, and how it addresses the primary challenges faced by both the stakeholders i.e. industry and academia, in a measurable, scalable and sustainable manner.",1,,,,,
Teaching of Telecommunication-Specific University Course in Cooperation with Partners from Industry,"Modern information and telecommunication technology (ICT) is rapidly evolving in time and there is a constant need for specialists, who have good knowledge to meet the industry needs. One way to perform industry specific knowledge transfer form industry to academia is to involve partner's specialist in teaching the courses. The aim of this paper is to introduce an example of course setup in teaching VoIP and IMS technologies for ICT students. We analyze the opportunities and limitations seen in organizing and teaching this course based on our 3-year experience. We also give some suggestions for developing the course when industry interest and support, due to the situation in economy and market, may change in time.",0,"Teaching of Telecommunication-Specific University Course in Cooperation with Partners from IndustryModern information and telecommunication technology (ICT) is rapidly evolving in time and there is a constant need for specialists, who have good knowledge to meet the industry needs. One way to perform industry specific knowledge transfer form industry to academia is to involve partner's specialist in teaching the courses. The aim of this paper is to introduce an example of course setup in teaching VoIP and IMS technologies for ICT students. We analyze the opportunities and limitations seen in organizing and teaching this course based on our 3-year experience. We also give some suggestions for developing the course when industry interest and support, due to the situation in economy and market, may change in time.",1,,,,,
The Success Factors Powering Industry-Academia Collaboration,Collaboration between industry and academia supports improvement and innovation in industry and helps to ensure industrial relevance in academic research. This article presents an exploratory study of the factors for successful collaboration between industry and academia in software research.,0,The Success Factors Powering Industry-Academia CollaborationCollaboration between industry and academia supports improvement and innovation in industry and helps to ensure industrial relevance in academic research. This article presents an exploratory study of the factors for successful collaboration between industry and academia in software research.,1,,,,,
Key management processes to technology transfer success,"The success rate of technology transfer from government laboratories is quite low. This paper combines findings from academic research to provide valuable managerial insights. We conclude that technology transfer factors identified so far actually relate to four management processes: project management, strategy management, innovation management, and relationship management.",0,"Key management processes to technology transfer successThe success rate of technology transfer from government laboratories is quite low. This paper combines findings from academic research to provide valuable managerial insights. We conclude that technology transfer factors identified so far actually relate to four management processes: project management, strategy management, innovation management, and relationship management.",1,,,,,
Requirements Traceability Technologies Selection for Industry,"The ultimate goal for researchers to develop a requirements traceability (RT) technology is transferring it from academy to industry. Academic researchers and industrial practitioners both expect that more and more technologies can be transferred. However, there is always a wide gap between RT research and practice. In this thesis, I'll propose a novel model that focuses on evaluating the RT technologies transfer maturity. A reasonable maturity evaluation model is proposed to measure to what extent an academic RT technology must achieve before it is able to be transferred to industry. Based on the model, an initial progress is made in selecting a suitable RT technology for industrial practitioners.",0,"Requirements Traceability Technologies Selection for IndustryThe ultimate goal for researchers to develop a requirements traceability (RT) technology is transferring it from academy to industry. Academic researchers and industrial practitioners both expect that more and more technologies can be transferred. However, there is always a wide gap between RT research and practice. In this thesis, I'll propose a novel model that focuses on evaluating the RT technologies transfer maturity. A reasonable maturity evaluation model is proposed to measure to what extent an academic RT technology must achieve before it is able to be transferred to industry. Based on the model, an initial progress is made in selecting a suitable RT technology for industrial practitioners.",1,,,,,
Industry-Academia Collaboration in Software Testing: An Overview of TAIC PART 2017,"Collaboration between industry and academia in software testing leads to improvement and innovation in industry, and it is the basis for achieving transferable and empirically evaluated results. Thus, the aim of TAIC PART is to forge collaboration between industry and academia on the challenging and exciting problem of real-world software testing. The workshop is promoted by representatives of both industry and academia, bringing together industrial software engineers and testers with researchers working on theory and practice of software testing. We present an overview of the 12th Workshop on Testing: Academia-Industry Collaboration, Practice and Research Techniques (TAIC PART 2017) and its contributions.",0,"Industry-Academia Collaboration in Software Testing: An Overview of TAIC PART 2017Collaboration between industry and academia in software testing leads to improvement and innovation in industry, and it is the basis for achieving transferable and empirically evaluated results. Thus, the aim of TAIC PART is to forge collaboration between industry and academia on the challenging and exciting problem of real-world software testing. The workshop is promoted by representatives of both industry and academia, bringing together industrial software engineers and testers with researchers working on theory and practice of software testing. We present an overview of the 12th Workshop on Testing: Academia-Industry Collaboration, Practice and Research Techniques (TAIC PART 2017) and its contributions.",1,,,,,
Transferring a model-based development methodology to the automotive industry,"This paper reports on our experience in transferring an academic model-based methodology for the development of automotive software systems into an industrial integrated development environment. The transferred methodology makes use of two industrial modelling languages and provides for the development and architectural exploration of automotive system and software designs with temporal awareness. We demonstrate the usage of the transferred methodology using the brake-by-wire automotive functionality. Eventually, we describe the challenges we have faced and the lessons we have learned in performing this technology transfer.",0,"Transferring a model-based development methodology to the automotive industryThis paper reports on our experience in transferring an academic model-based methodology for the development of automotive software systems into an industrial integrated development environment. The transferred methodology makes use of two industrial modelling languages and provides for the development and architectural exploration of automotive system and software designs with temporal awareness. We demonstrate the usage of the transferred methodology using the brake-by-wire automotive functionality. Eventually, we describe the challenges we have faced and the lessons we have learned in performing this technology transfer.",1,,,,,
Requirements engineering process improvement,"In the last decade, research in requirements engineering has achieved great advances. Several methods, techniques and processes have been proposed in the literature. However, the pace of requirements engineering technology transfer has been slow. This paper presents a technology transfer project to improve the requirements engineering process in four software companies. We discuss this experience from the perspective of researchers and practitioners from one participating company.",0,"Requirements engineering process improvementIn the last decade, research in requirements engineering has achieved great advances. Several methods, techniques and processes have been proposed in the literature. However, the pace of requirements engineering technology transfer has been slow. This paper presents a technology transfer project to improve the requirements engineering process in four software companies. We discuss this experience from the perspective of researchers and practitioners from one participating company.",1,,,,,
Technology Transfer Models and Elements in the University-Industry Collaboration,"Over the years, universities have been considered as research centers that seek to collaborate with industries to create innovative products. This link has generated many concepts, among them being the concept of technology transfer. The objective of this work is to present a systematic review on the technology transfer generated in university-industry collaboration (UIC). Based on a review of 66 papers, the results presented in this article include the technology transfer (TT) models presented in the literature, a description of the common elements in a transfer process, and a description of the interaction between the elements involved, through the presentation of a conceptual model of technology transfer in the context of collaboration between the university and the industry.",0,"Technology Transfer Models and Elements in the University-Industry CollaborationOver the years, universities have been considered as research centers that seek to collaborate with industries to create innovative products. This link has generated many concepts, among them being the concept of technology transfer. The objective of this work is to present a systematic review on the technology transfer generated in university-industry collaboration (UIC). Based on a review of 66 papers, the results presented in this article include the technology transfer (TT) models presented in the literature, a description of the common elements in a transfer process, and a description of the interaction between the elements involved, through the presentation of a conceptual model of technology transfer in the context of collaboration between the university and the industry.",1,,,,,
Research Committee: Strengthening Research by Designing for Coherence and Connections to Practice {NCTM} Research Committee,"The National Council of Teachers of Mathematics (NCTM) is committed to strengthening relations between research and practice and to the development of a coherent knowledge base that is usable in practice. The fifth of NCTM's strategic priorities states, “Bring existing research into the classroom, and identify and encourage research that addresses the needs of classroom practice” (NCTM, 2008). The need to work toward connection and coherence is not unique to the field of mathematics education. Fields such as medicine (e.g., Clancy, 2007), software engineering (e.g., Gorschek, Garre, Larsson, & Wohlin, 2006), and social work (e.g., Hess & Mullen, 1995) routinely attend to these issues. Researchers in many fields strive to find new ways or to engage more effectively through existing means to enhance coherence and connection. In a sense, this is not a goal that can be achieved definitively, but one that requires persistent engagement. In education, the constant flux of variables in the system, such as curriculum, goals for student learning, and school contexts, requires that new connections between research and practice be investigated and that old connections be reexamined. Changes in educational contexts open new territory in need of study and also challenge the coherence of explanations grounded in previous research. In this way, attention of the field to connection and coherence is neither unique to mathematics education nor an effort due solely to inadequacies of research efforts in the past.",0,"Research Committee: Strengthening Research by Designing for Coherence and Connections to Practice {NCTM} Research CommitteeThe National Council of Teachers of Mathematics (NCTM) is committed to strengthening relations between research and practice and to the development of a coherent knowledge base that is usable in practice. The fifth of NCTM's strategic priorities states, “Bring existing research into the classroom, and identify and encourage research that addresses the needs of classroom practice” (NCTM, 2008). The need to work toward connection and coherence is not unique to the field of mathematics education. Fields such as medicine (e.g., Clancy, 2007), software engineering (e.g., Gorschek, Garre, Larsson, & Wohlin, 2006), and social work (e.g., Hess & Mullen, 1995) routinely attend to these issues. Researchers in many fields strive to find new ways or to engage more effectively through existing means to enhance coherence and connection. In a sense, this is not a goal that can be achieved definitively, but one that requires persistent engagement. In education, the constant flux of variables in the system, such as curriculum, goals for student learning, and school contexts, requires that new connections between research and practice be investigated and that old connections be reexamined. Changes in educational contexts open new territory in need of study and also challenge the coherence of explanations grounded in previous research. In this way, attention of the field to connection and coherence is neither unique to mathematics education nor an effort due solely to inadequacies of research efforts in the past.",1,,,,,
Two Decades of Empirical Research on Developers{\textquotesingle} Information Needs, ,0,Two Decades of Empirical Research on Developers{\textquotesingle} Information Needs ,1,,,,,
Research-Based Innovation: A Tale of Three Projects in Model-Driven Engineering,"In recent years, we have been exploring ways to foster a closer collaboration between software engineering research and industry both to align our research with practical needs, and to increase awareness about the importance of research for innovation. This paper outlines our expe-rience with three research projects conducted in collaboration with the industry. We examine the way we collaborated with our industry part-ners and describe the decisions that contributed to the effectiveness of the collaborations. We report on the lessons learned from our experience and illustrate the lessons using examples from the three projects. The lessons focus on the applications of Model-Driven Engineering (MDE), as all the three projects we draw on here were MDE projects. Our goal from structuring and sharing our experience is to contribute to a better understanding of how researchers and practitioners can collaborate more effectively and to gain more value from their collaborations.",0,"Research-Based Innovation: A Tale of Three Projects in Model-Driven EngineeringIn recent years, we have been exploring ways to foster a closer collaboration between software engineering research and industry both to align our research with practical needs, and to increase awareness about the importance of research for innovation. This paper outlines our expe-rience with three research projects conducted in collaboration with the industry. We examine the way we collaborated with our industry part-ners and describe the decisions that contributed to the effectiveness of the collaborations. We report on the lessons learned from our experience and illustrate the lessons using examples from the three projects. The lessons focus on the applications of Model-Driven Engineering (MDE), as all the three projects we draw on here were MDE projects. Our goal from structuring and sharing our experience is to contribute to a better understanding of how researchers and practitioners can collaborate more effectively and to gain more value from their collaborations.",1,,,,,
Model-based generation of test scripts across product variants: An experience report from the railway industry, ,0,Model-based generation of test scripts across product variants: An experience report from the railway industry ,1,,,,,
Towards a model to transfer knowledge from software engineering research to practice,"Context: Many researchers argue that Software Engineering (SE) research lacks connection with practice. Objective: We propose a model aimed at supporting researchers to transfer knowledge to SE practice. Method: This model is built upon the foundation of Rapid Reviews and Evidence Briefings. These two key elements have been proven e↵ective in other domains, such as medicine, and initial results suggest that they can play a prominent role in SE as well. Results: We discuss how to apply the model as well as possible challenges that might hinder its adoption. Conclusion: We believe that both SE practitioners and researchers could benefit from the proposed model. We expect replications and instantiations of the model conducted in the future.",1,"Towards a model to transfer knowledge from software engineering research to practiceContext: Many researchers argue that Software Engineering (SE) research lacks connection with practice. Objective: We propose a model aimed at supporting researchers to transfer knowledge to SE practice. Method: This model is built upon the foundation of Rapid Reviews and Evidence Briefings. These two key elements have been proven e↵ective in other domains, such as medicine, and initial results suggest that they can play a prominent role in SE as well. Results: We discuss how to apply the model as well as possible challenges that might hinder its adoption. Conclusion: We believe that both SE practitioners and researchers could benefit from the proposed model. We expect replications and instantiations of the model conducted in the future.",1,,,,,
"Technology Transfer, Sustainability, and Development, Worldwide and in Romania", ,0,"Technology Transfer, Sustainability, and Development, Worldwide and in Romania ",1,,,,,
Bridging the gap: {SE} technology transfer into practice,"Background: Particularly during and after research projects, technology transfer into practice plays an important role for academia to get technologies into use and for industry to improve their development. Objective: Our goal was to gain more and current knowledge about how technology transfer from software engineering (SE) research into industrial practice is accomplished best and how to measure the effectiveness of this transfer. Method: We conducted a study in the context of two German research projects, covering many different organizations from industry and academia. Results: This paper presents the design of the study and the survey performed. After introducing the concept of technology transfer we used and adapted, we present preliminary results. Conclusions: We observed that traditional means such as meetings or workshops are still the most widely used mediums for technology transfer in SE. We also discovered that, even though the duration of transfer depends on the object being transferred, the average duration is three years, which is far less than previously published (~18 years).",0,"Bridging the gap: {SE} technology transfer into practiceBackground: Particularly during and after research projects, technology transfer into practice plays an important role for academia to get technologies into use and for industry to improve their development. Objective: Our goal was to gain more and current knowledge about how technology transfer from software engineering (SE) research into industrial practice is accomplished best and how to measure the effectiveness of this transfer. Method: We conducted a study in the context of two German research projects, covering many different organizations from industry and academia. Results: This paper presents the design of the study and the survey performed. After introducing the concept of technology transfer we used and adapted, we present preliminary results. Conclusions: We observed that traditional means such as meetings or workshops are still the most widely used mediums for technology transfer in SE. We also discovered that, even though the duration of transfer depends on the object being transferred, the average duration is three years, which is far less than previously published (~18 years).",1,,,,,
Together We Are Stronger: Evidence-Based Reflections on Industry-Academia Collaboration in Software Testing,"For a highly relevant and applied research area like software testing industry-academia collaboration is of uttermost importance. In this paper we reflect on how industry-academia collaboration can be improved based on evidence from four empirical studies. We therefore first present four studies providing evidence on the (1) perceived level of challenges in testing activities, (2) focus areas in industrial and academic software testing conferences, (3) synergies between industrial and academic software testing conferences, as well as (4) the need for consideration of grey literature. Then, we reflect on issues, which we think can improve the link and synergies between industry and academia in software testing, i.e., research topics, guidelines and evidence, value and risk, context and scalability, action research and education as well as grey literature and open science.",1,"Together We Are Stronger: Evidence-Based Reflections on Industry-Academia Collaboration in Software TestingFor a highly relevant and applied research area like software testing industry-academia collaboration is of uttermost importance. In this paper we reflect on how industry-academia collaboration can be improved based on evidence from four empirical studies. We therefore first present four studies providing evidence on the (1) perceived level of challenges in testing activities, (2) focus areas in industrial and academic software testing conferences, (3) synergies between industrial and academic software testing conferences, as well as (4) the need for consideration of grey literature. Then, we reflect on issues, which we think can improve the link and synergies between industry and academia in software testing, i.e., research topics, guidelines and evidence, value and risk, context and scalability, action research and education as well as grey literature and open science.",1,,,,,
Detecting requirements defects with {NLP} patterns: an industrial experience in the railway domain, ,0,Detecting requirements defects with {NLP} patterns: an industrial experience in the railway domain ,1,,,,,
University-industry technology transfer models: an empirical analysis,"The challenge of public innovation policies are related with the transfer of technology from the university to the industry. The aim of this paper is to contribute to the understanding of the underlying factors in the process of transferring technology from university to industry. Findings point to strategic importance of critical factors as the definition of common objectives, cooperation, motivation, and the elimination of technical and legal barriers. These challenges must have implications in the incorporation of cooperative aspects of research projects in the design of public innovation policies.",0,"University-industry technology transfer models: an empirical analysisThe challenge of public innovation policies are related with the transfer of technology from the university to the industry. The aim of this paper is to contribute to the understanding of the underlying factors in the process of transferring technology from university to industry. Findings point to strategic importance of critical factors as the definition of common objectives, cooperation, motivation, and the elimination of technical and legal barriers. These challenges must have implications in the incorporation of cooperative aspects of research projects in the design of public innovation policies.",1,,,,,
The Role of User Guidance in the Industrial Adoption of MDE Approach,"Model-Driven Engineering (MDE) has emerged as an actively researched and established approach for next generation control application development. Technology transfer to the industry is a topical research problem. Since most professional factory process control engineers do not have computer science backgrounds, there is an urgent need for studies of the role of user guidance in the professional learning, and thus, of industrial adoption of MDE approaches. In this study professionals were invited to a hands-on assessment of the AUKOTON MDE approach for factory process control engineering. Qualitative empirical material was collected and analyzed to identify the role of user guidance in the context of other factors impacting industrial adoption. Challenges in adoption that could be solved by user guidance were identified with the theory of organizational knowledge creation (SECI) model.",0,"The Role of User Guidance in the Industrial Adoption of MDE ApproachModel-Driven Engineering (MDE) has emerged as an actively researched and established approach for next generation control application development. Technology transfer to the industry is a topical research problem. Since most professional factory process control engineers do not have computer science backgrounds, there is an urgent need for studies of the role of user guidance in the professional learning, and thus, of industrial adoption of MDE approaches. In this study professionals were invited to a hands-on assessment of the AUKOTON MDE approach for factory process control engineering. Qualitative empirical material was collected and analyzed to identify the role of user guidance in the context of other factors impacting industrial adoption. Challenges in adoption that could be solved by user guidance were identified with the theory of organizational knowledge creation (SECI) model.",1,,,,,
When Traceability Goes Awry: an Industrial Experience Report, ,0,When Traceability Goes Awry: an Industrial Experience Report ,1,,,,,
Force-Torque Control Methodology for Industrial Robots Applied on Finishing Operations,"The paper deals with the force-torque control methodology for industrial robots that can be more or less applied on a variety
of industrial applications such as grinding, drilling, automatic assembly or other applications where the key aspect is to
control the physical contact between a tool and a workpiece mounted on the robot gripper or vice versa. In other words, contact
forces and respective moments need to be controlled in real-time. The experimental set-up is based mainly on a KUKA robot
(KR3, KR 16), FTC sensor (SCHUNK FTC-050), external PLC system (Embedded PC Beckhoff) for main control structures and other
devices. Main practical results are concerned with determining the contact between a workpiece, grasped in the robot gripper,
and the surface while maintaining a constant force during robot motion.",0,"Force-Torque Control Methodology for Industrial Robots Applied on Finishing OperationsThe paper deals with the force-torque control methodology for industrial robots that can be more or less applied on a variety
of industrial applications such as grinding, drilling, automatic assembly or other applications where the key aspect is to
control the physical contact between a tool and a workpiece mounted on the robot gripper or vice versa. In other words, contact
forces and respective moments need to be controlled in real-time. The experimental set-up is based mainly on a KUKA robot
(KR3, KR 16), FTC sensor (SCHUNK FTC-050), external PLC system (Embedded PC Beckhoff) for main control structures and other
devices. Main practical results are concerned with determining the contact between a workpiece, grasped in the robot gripper,
and the surface while maintaining a constant force during robot motion.",1,,,,,
Development of Framework for an Integrated Model for Technology Transfer, ,0,Development of Framework for an Integrated Model for Technology Transfer ,1,,,,,
Transferring interactive search-based software testing to industry, ,0,Transferring interactive search-based software testing to industry ,1,,,,,
"Models, Processes, and Roles of Universities in Technology Transfer Management: A Systematic Review", ,0,"Models, Processes, and Roles of Universities in Technology Transfer Management: A Systematic Review ",1,,,,,
Industry-Academia Research Collaborations During and After {COVID}-19,"There exists a long-standing challenge of building successful research collaborations between industry and academia in software engineering. There are multiple reasons contributing to this issue, including different timelines, impact metrics, expectations, and perceptions of researchers and practitioners, altogether leading to the issue known as the industryacademia collaboration gap. After the onset of the COVID-19 pandemic, most researchers and practitioners were sent to work from home, relying on virtual collaboration with their peers, which might have given rise to an even wider industry-academia collaboration gap. At the 8th International Workshop on Software Engineering Research and Industrial Practice, held virtually at the International Conference on Software Engineering 2021, we investigate the impact that working from home has had on research collaborations between industry and academia. We also take a look at how remote work may change research collaborations in the future. In this report, we present takeaways from keynote talks on this matter, share insights from the panel of six experts on the topic of industry-academia collaborations, and finally summarize findings from related paper presentations.",0,"Industry-Academia Research Collaborations During and After {COVID}-19There exists a long-standing challenge of building successful research collaborations between industry and academia in software engineering. There are multiple reasons contributing to this issue, including different timelines, impact metrics, expectations, and perceptions of researchers and practitioners, altogether leading to the issue known as the industryacademia collaboration gap. After the onset of the COVID-19 pandemic, most researchers and practitioners were sent to work from home, relying on virtual collaboration with their peers, which might have given rise to an even wider industry-academia collaboration gap. At the 8th International Workshop on Software Engineering Research and Industrial Practice, held virtually at the International Conference on Software Engineering 2021, we investigate the impact that working from home has had on research collaborations between industry and academia. We also take a look at how remote work may change research collaborations in the future. In this report, we present takeaways from keynote talks on this matter, share insights from the panel of six experts on the topic of industry-academia collaborations, and finally summarize findings from related paper presentations.",1,,,,,
Determining a core view of research quality in empirical software engineering,"Context
Research quality is intended to appraise the design and reporting of studies. It comprises a set of standards such as methodological rigor, practical relevance, and conformance to ethical standards. Depending on the perspective, different views of importance are given to the standards for research quality

Objective
To investigate the suitability of a conceptual model of research quality to Software Engineering (SE), from the perspective of researchers engaged in Empirical Software Engineering (ESE) research, in order to understand the core value of research quality

Method
We conducted a mixed-methods approach with two distinct group perspectives: (i) a research group; and (ii) the empirical SE research community. Our data collection approach comprised a questionnaire survey and a complementary focus group. We carried out a hierarchical voting prioritization to collect relative values for importance of standards for research quality

Results
In the context of this research, ‘internally valid’, ‘relevant research idea’, and ‘applicable results’ are perceived as the core standards for research quality in empirical SE. The alignment at the research group level was higher compared to that at the community level

Conclusion
The conceptual model was seen to express fairly the standards for research quality in the SE context. It presented limitations regarding its structure and components’ description, which resulted in an updated model.",0,"Determining a core view of research quality in empirical software engineeringContext
Research quality is intended to appraise the design and reporting of studies. It comprises a set of standards such as methodological rigor, practical relevance, and conformance to ethical standards. Depending on the perspective, different views of importance are given to the standards for research quality

Objective
To investigate the suitability of a conceptual model of research quality to Software Engineering (SE), from the perspective of researchers engaged in Empirical Software Engineering (ESE) research, in order to understand the core value of research quality

Method
We conducted a mixed-methods approach with two distinct group perspectives: (i) a research group; and (ii) the empirical SE research community. Our data collection approach comprised a questionnaire survey and a complementary focus group. We carried out a hierarchical voting prioritization to collect relative values for importance of standards for research quality

Results
In the context of this research, ‘internally valid’, ‘relevant research idea’, and ‘applicable results’ are perceived as the core standards for research quality in empirical SE. The alignment at the research group level was higher compared to that at the community level

Conclusion
The conceptual model was seen to express fairly the standards for research quality in the SE context. It presented limitations regarding its structure and components’ description, which resulted in an updated model.",1,,,,,
The Analysis of Conceptual Theoretical Approaches to the Problem of Technology Transfer in Foreign Universities,"The article overviews the existing models of technology transfer, including those within foreign universities, and highlights the most relevant ones that can be used by Russian universities in the post-COVID-19 conditions. The study should allow the university-based transfer centers to choose the model which is mostly suitable for their situation, and to include elements that will help them to maximize the efficiency of their activities. The existing centers will be able to make changes in their activity in order to update and/or to transform it in accordance with the changed conditions. For the management personnel of the university, the article also provides practical recommendations on managing technology transfer centers. The authors reveal the key functioning elements of various technology transfer models, which can be used by management personnel to design technology transfer centers based on Russian universities. The possible result of the stakeholders’ getting to know this study might be their creating and implementing regulations to govern the technology transfer centers’ activities; forming a personnel reserve; advanced existing personnel training and multi-competence teams’ creating; forming a flexible budgetary policy, as well as a policy of values, for the technology transfer center to function within.",0,"The Analysis of Conceptual Theoretical Approaches to the Problem of Technology Transfer in Foreign UniversitiesThe article overviews the existing models of technology transfer, including those within foreign universities, and highlights the most relevant ones that can be used by Russian universities in the post-COVID-19 conditions. The study should allow the university-based transfer centers to choose the model which is mostly suitable for their situation, and to include elements that will help them to maximize the efficiency of their activities. The existing centers will be able to make changes in their activity in order to update and/or to transform it in accordance with the changed conditions. For the management personnel of the university, the article also provides practical recommendations on managing technology transfer centers. The authors reveal the key functioning elements of various technology transfer models, which can be used by management personnel to design technology transfer centers based on Russian universities. The possible result of the stakeholders’ getting to know this study might be their creating and implementing regulations to govern the technology transfer centers’ activities; forming a personnel reserve; advanced existing personnel training and multi-competence teams’ creating; forming a flexible budgetary policy, as well as a policy of values, for the technology transfer center to function within.",1,,,,,
Valorization of Assistive Technologies for Cognition: Lessons and Practices,"A growing body of literature suggests that Assistive Technologies for Cognition (ATCs) are efficient at improving independence and life participation of persons with cognitive impairments. Despite years of research, ATCs implementation in the field of cognitive rehabilitation remains a real challenge. These intervention tools are still not common in clinics and only a few assistive technologies developed in research reach the commercialization phase. This chapter discusses difficulties with regard to the valorization of ATCs and their widespread adoption and provides a reflective tool to optimize the implementation of cognitive assistants.",0,"Valorization of Assistive Technologies for Cognition: Lessons and PracticesA growing body of literature suggests that Assistive Technologies for Cognition (ATCs) are efficient at improving independence and life participation of persons with cognitive impairments. Despite years of research, ATCs implementation in the field of cognitive rehabilitation remains a real challenge. These intervention tools are still not common in clinics and only a few assistive technologies developed in research reach the commercialization phase. This chapter discusses difficulties with regard to the valorization of ATCs and their widespread adoption and provides a reflective tool to optimize the implementation of cognitive assistants.",1,,,,,
Does academic research have practical relevance? A question of translating hydrology research into practice,"Hydrology research has played a vital role in improving hydrological process understanding and by extension, devising solutions to address water management challenges that are critical for people and the environment. Research projects in hydrology are often considered successful when scientific or engineering advancements through new insights or new models or improved understanding are published in peer reviewed or other literature. Quantitative research outputs, such as number of journal publications, number of students trained, number of conference presentations, or additional funding leveraged are considered key indicators of success in research. In this commentary, we argue that research has limited utility when practical applications that add value to practitioners are not explored concurrently within the research process. We discuss some outstanding challenges in translating academic research into practice, and make some recommendations to bridge the increasing gap between research and practice through a strong knowledge mobilization effort. A path from mucky middle to bridging the gap between research and practice.",0,"Does academic research have practical relevance? A question of translating hydrology research into practiceHydrology research has played a vital role in improving hydrological process understanding and by extension, devising solutions to address water management challenges that are critical for people and the environment. Research projects in hydrology are often considered successful when scientific or engineering advancements through new insights or new models or improved understanding are published in peer reviewed or other literature. Quantitative research outputs, such as number of journal publications, number of students trained, number of conference presentations, or additional funding leveraged are considered key indicators of success in research. In this commentary, we argue that research has limited utility when practical applications that add value to practitioners are not explored concurrently within the research process. We discuss some outstanding challenges in translating academic research into practice, and make some recommendations to bridge the increasing gap between research and practice through a strong knowledge mobilization effort. A path from mucky middle to bridging the gap between research and practice.",1,,,,,
Muse over university organisational ecology in action and service-oriented architectures,"This paper muses over two e-engineering projects, which use service-oriented architectures to navigate the complexities of e-engineering age. One of these projects is a Monash University Software Engineering (MUSE) portal, which has been developed to provide a central mechanism for group interaction, collaboration and knowledge aggregation to assist students in completing their final year capstone projects. Learning in part of a wider ecology, and benefits from interdependent resources and expertise in an organizational grouping forming a Web of interconnected parts. Collaboration and cooperation sustains this ecology (Maiden, 2003). The paper explores the interconnected aspects via service-oriented architectures and organization units (be it for a course or organizations in a consortium). The paper details the service-oriented architecture of our MUSE portal which is aimed at sustaining the capstone group's ecological requirements of collaboration and cooperation in their group project. The second project is about an E-commerce (B2B) Technology Infusion Project for Australian Rail Manufacturers (ARM). It uses emerging innovative business models with Web services and associated technology to deliver B2B as a new technology infusion program initiative from the research organization (MUSE) to the industry consortium of ARM. It is aimed at providing business integration through Web services (B2B) for a cluster of small to medium enterprises (SMEs). We reflect on (muse over) how the organisational ecology is achieved for the MUSE portal and for the ARM Consortium's B2B project. Services are discrete, self-contained applications that sit within the MUSE portal framework. Web services suit the decentralised nature of this B2B project.",0,"Muse over university organisational ecology in action and service-oriented architecturesThis paper muses over two e-engineering projects, which use service-oriented architectures to navigate the complexities of e-engineering age. One of these projects is a Monash University Software Engineering (MUSE) portal, which has been developed to provide a central mechanism for group interaction, collaboration and knowledge aggregation to assist students in completing their final year capstone projects. Learning in part of a wider ecology, and benefits from interdependent resources and expertise in an organizational grouping forming a Web of interconnected parts. Collaboration and cooperation sustains this ecology (Maiden, 2003). The paper explores the interconnected aspects via service-oriented architectures and organization units (be it for a course or organizations in a consortium). The paper details the service-oriented architecture of our MUSE portal which is aimed at sustaining the capstone group's ecological requirements of collaboration and cooperation in their group project. The second project is about an E-commerce (B2B) Technology Infusion Project for Australian Rail Manufacturers (ARM). It uses emerging innovative business models with Web services and associated technology to deliver B2B as a new technology infusion program initiative from the research organization (MUSE) to the industry consortium of ARM. It is aimed at providing business integration through Web services (B2B) for a cluster of small to medium enterprises (SMEs). We reflect on (muse over) how the organisational ecology is achieved for the MUSE portal and for the ARM Consortium's B2B project. Services are discrete, self-contained applications that sit within the MUSE portal framework. Web services suit the decentralised nature of this B2B project.",1,,,,,
Research Collaborations between Academia and Industry,"The rapid and complex research and innovation processes require high-tech companies to optimize their technology transfer processes. It is clearly not sufficient to solely rely on internal R&D; strategic cooperations with external research centers of excellence are needed in order to compete in the global innovation market. Candidates for such strategic cooperations are universities, research institutions, and technology focused consulting companies. Key challenge is the effective integration of external competences into the company-internal innovation processes. In this paper we present a survey of the state-of-the-art in technology transfer, high-light promising success cases for the future, and derive success criteria for successful technology transfer in a global world. The cooperation between Siemens and Fraunhofer IESE is presented as a concrete example.",0,"Research Collaborations between Academia and IndustryThe rapid and complex research and innovation processes require high-tech companies to optimize their technology transfer processes. It is clearly not sufficient to solely rely on internal R&D; strategic cooperations with external research centers of excellence are needed in order to compete in the global innovation market. Candidates for such strategic cooperations are universities, research institutions, and technology focused consulting companies. Key challenge is the effective integration of external competences into the company-internal innovation processes. In this paper we present a survey of the state-of-the-art in technology transfer, high-light promising success cases for the future, and derive success criteria for successful technology transfer in a global world. The cooperation between Siemens and Fraunhofer IESE is presented as a concrete example.",1,,,,,
Transfering Software Form Univesities to Industries: A Case Study ICTL,"To develop digital control systems (software) is a very attractive idea for solving industrial control problems because the required budget for designing it could be lower than designing hardware for control systems; thus, several universities in Mexico are interested in developing digital control Toolkits that can be deployed in commercial platforms. Moreover, some industries need to improve their conventional control systems, so intelligent control systems are an excellent opportunity for being implemented as industrial solutions. However, when this software is transferred from universities to the industry sector, some considerations must be considered to avoid complications during the technology transfer process. This paper shows how software for intelligent control systems based on LabVIEW (ICTL) was transfer to the industry as well as the main steps that were followed to attract a market sector in the industrial automation segment. Also, this paper illustrates some experiences that were learned during the transferring process at Tecnologico de Monterrey in Mexico.",0,"Transfering Software Form Univesities to Industries: A Case Study ICTLTo develop digital control systems (software) is a very attractive idea for solving industrial control problems because the required budget for designing it could be lower than designing hardware for control systems; thus, several universities in Mexico are interested in developing digital control Toolkits that can be deployed in commercial platforms. Moreover, some industries need to improve their conventional control systems, so intelligent control systems are an excellent opportunity for being implemented as industrial solutions. However, when this software is transferred from universities to the industry sector, some considerations must be considered to avoid complications during the technology transfer process. This paper shows how software for intelligent control systems based on LabVIEW (ICTL) was transfer to the industry as well as the main steps that were followed to attract a market sector in the industrial automation segment. Also, this paper illustrates some experiences that were learned during the transferring process at Tecnologico de Monterrey in Mexico.",1,,,,,
A modeling language{\textquotesingle}s evolution driven by tight interaction between academia and industry,"Domain specific languages play an important role in model-driven engineering of software-intensive industrial systems. A rich body of knowledge exists on the development of languages, modeling environments, and transformation systems. The understanding of architectural choices for combining these parts into a feasible solution, however, is not particularly deep. We report on an endeavor in the realm of a technology transfer process from academia to industry, where we encountered unexpected influences of the architecture on the modeling language. By examining the evolution of our language and its programming interface, we show that these influences mainly stemmed from practical considerations; for identifying these early on, tight interaction between our research lab and the industrial partner was key. In addition, we share insights into the practice of cooperating with industry by presenting essential lessons we learned.",0,"A modeling language{\textquotesingle}s evolution driven by tight interaction between academia and industryDomain specific languages play an important role in model-driven engineering of software-intensive industrial systems. A rich body of knowledge exists on the development of languages, modeling environments, and transformation systems. The understanding of architectural choices for combining these parts into a feasible solution, however, is not particularly deep. We report on an endeavor in the realm of a technology transfer process from academia to industry, where we encountered unexpected influences of the architecture on the modeling language. By examining the evolution of our language and its programming interface, we show that these influences mainly stemmed from practical considerations; for identifying these early on, tight interaction between our research lab and the industrial partner was key. In addition, we share insights into the practice of cooperating with industry by presenting essential lessons we learned.",1,,,,,
External Experiments {\textendash} A Workable Paradigm for Collaboration Between Industry and Academia,"Results of empirical investigations are key input for industrial software process improvement activities. The relevance of an investigation for a given environment, however, depends on the similarities or dissimilarities of the investigation environment compared to the industrial environment which is interested in using a new technology. The optimal (or most relevant) results may be gained when performing the experiment in the industrial environment itself. Unfortunately, this takes place only rarely as experiments in industrial environments are either expensive (when new and old technology are used in parallel) or risky (when only the new technology is used).To overcome this dilemma, we introduced the concept of external experiments, i.e. experiments which are conducted in an environment different from the industrial target environment and which tries to simulate the characteristics of the industrial environment as best as possible. This paper describes this concept in detail, presents a process for identification, conduction and exploitation of such experiments and shows some results from past investigations which used this concept.",0,"External Experiments {\textendash} A Workable Paradigm for Collaboration Between Industry and AcademiaResults of empirical investigations are key input for industrial software process improvement activities. The relevance of an investigation for a given environment, however, depends on the similarities or dissimilarities of the investigation environment compared to the industrial environment which is interested in using a new technology. The optimal (or most relevant) results may be gained when performing the experiment in the industrial environment itself. Unfortunately, this takes place only rarely as experiments in industrial environments are either expensive (when new and old technology are used in parallel) or risky (when only the new technology is used).To overcome this dilemma, we introduced the concept of external experiments, i.e. experiments which are conducted in an environment different from the industrial target environment and which tries to simulate the characteristics of the industrial environment as best as possible. This paper describes this concept in detail, presents a process for identification, conduction and exploitation of such experiments and shows some results from past investigations which used this concept.",1,,,,,
The Management of University{\textendash}Industry Collaborations Involving Empirical Studies of Software Enginee,"In this chapter we will discuss some of the pragmatic considerations that we believe university researchers and companies
should consider when establishing collaborative software engineering research projects; in particular, those involving empirical
studies of software engineers. The chapter is illustrated using as a case study a research collaboration in which the authors
are involved. We enumerate the costs, benefits, risks and risk-reducing factors that can have an impact on all the parties
involved in the collaboration (the company, the faculty members and the graduate student researchers). Understanding this
information is needed to help justify the research in the first place, and to manage it effectively. We then discuss many
of the activities that will be needed to plan and manage the project, including such issues as attracting students, handling
intellectual property, obtaining ethical approval and interacting with participants. The main objective of the chapter is
to provoke some thoughts in the minds of those planning empirical research projects in software engineering.",0,"The Management of University{\textendash}Industry Collaborations Involving Empirical Studies of Software EngineeIn this chapter we will discuss some of the pragmatic considerations that we believe university researchers and companies
should consider when establishing collaborative software engineering research projects; in particular, those involving empirical
studies of software engineers. The chapter is illustrated using as a case study a research collaboration in which the authors
are involved. We enumerate the costs, benefits, risks and risk-reducing factors that can have an impact on all the parties
involved in the collaboration (the company, the faculty members and the graduate student researchers). Understanding this
information is needed to help justify the research in the first place, and to manage it effectively. We then discuss many
of the activities that will be needed to plan and manage the project, including such issues as attracting students, handling
intellectual property, obtaining ethical approval and interacting with participants. The main objective of the chapter is
to provoke some thoughts in the minds of those planning empirical research projects in software engineering.",1,,,,,
{CERSE} - Catalog for empirical research in software engineering: A Systematic mapping study,"**Context:** Empirical research in software engineering contributes towards developing scientific knowledge in this field, which in turn is relevant to inform decision-making in industry. A number of empirical studies have been carried out to date in software engineering, and the need for guidelines for conducting and evaluating such research has been stressed.

**Objective:** The main goal of this mapping study is to identify and summarize the body of knowledge on research guidelines, assessment instruments and knowledge organization systems on how to conduct and evaluate empirical research in software engineering.

**Method:** A systematic mapping study employing manual search and snowballing techniques was carried out to identify the suitable papers. To build up the catalog, we extracted and categorized information provided by the identified papers.

**Results:** The mapping study comprises a list of 341 methodological papers, classified according to research methods, research phases covered, and type of instrument provided. Later, we derived a brief explanatory review of the instruments provided for each of the research methods.

**Conclusion:** We provide: an aggregated body of knowledge on the state of the art relating to guidelines, assessment instruments and knowledge organization systems for carrying out empirical software engineering research; an exemplary usage scenario that can be used to guide those carrying out such studies is also provided. Finally, we discuss the catalog’s implications for research practice and the needs for further research.",0,"{CERSE} - Catalog for empirical research in software engineering: A Systematic mapping study**Context:** Empirical research in software engineering contributes towards developing scientific knowledge in this field, which in turn is relevant to inform decision-making in industry. A number of empirical studies have been carried out to date in software engineering, and the need for guidelines for conducting and evaluating such research has been stressed.

**Objective:** The main goal of this mapping study is to identify and summarize the body of knowledge on research guidelines, assessment instruments and knowledge organization systems on how to conduct and evaluate empirical research in software engineering.

**Method:** A systematic mapping study employing manual search and snowballing techniques was carried out to identify the suitable papers. To build up the catalog, we extracted and categorized information provided by the identified papers.

**Results:** The mapping study comprises a list of 341 methodological papers, classified according to research methods, research phases covered, and type of instrument provided. Later, we derived a brief explanatory review of the instruments provided for each of the research methods.

**Conclusion:** We provide: an aggregated body of knowledge on the state of the art relating to guidelines, assessment instruments and knowledge organization systems for carrying out empirical software engineering research; an exemplary usage scenario that can be used to guide those carrying out such studies is also provided. Finally, we discuss the catalog’s implications for research practice and the needs for further research.",1,,,,,
Sustainable Technology Transfer,"In this position paper we address the issue of transferring a technology from research into an industrial organization by presenting a refined process for technology transfer. Based on over two decades of industrial experience, we identified the need for a dedicated technology engineering phase for that process. Although little attention has been paid to this technology engineering phase in the academic world, we believe it to be essential for sustainable technology transfer.",0,"Sustainable Technology TransferIn this position paper we address the issue of transferring a technology from research into an industrial organization by presenting a refined process for technology transfer. Based on over two decades of industrial experience, we identified the need for a dedicated technology engineering phase for that process. Although little attention has been paid to this technology engineering phase in the academic world, we believe it to be essential for sustainable technology transfer.",1,,,,,
Software engineering technology innovation {\textendash} Turning research results into industrial success, ,0,Software engineering technology innovation {\textendash} Turning research results into industrial success ,1,,,,,
"Empirical Software Engineering Research - The Good, The Bad, The Ugly","The Software Engineering Research community has slowly recognized that empirical studies are an important way of validating ideas and increasingly our community has stopped accepting the sufficiency of arguing that a smart person has come up with the idea and therefore it must be good. This has led to a flood of Software Engineering papers that contain at least some form of empirical study. However, not all empirical studies are created equal, and many may not even provide any useful information or value. We survey the gradual shift from essentially no empirical studies, to a small number of ones of questionable value, and look at what we need to do to insure that our empirical studies really contribute to the state of knowledge in the field. Thus we have the good, the bad, and the ugly. What are we as a community doing correctly? What are we doing less well than we should be because we either don't have the necessary artifacts or because the time and resources required to do ""the good"" is perceived to be too great? And where are we missing the boat entirely in terms of not addressing critical questions and often not even recognizing that these questions are central even if we don't know the answers. We look to see whether we can find some commonality in the projects that have really made the transition from research to widespread practice to see whether we can identify some common themes.",0,"Empirical Software Engineering Research - The Good, The Bad, The UglyThe Software Engineering Research community has slowly recognized that empirical studies are an important way of validating ideas and increasingly our community has stopped accepting the sufficiency of arguing that a smart person has come up with the idea and therefore it must be good. This has led to a flood of Software Engineering papers that contain at least some form of empirical study. However, not all empirical studies are created equal, and many may not even provide any useful information or value. We survey the gradual shift from essentially no empirical studies, to a small number of ones of questionable value, and look at what we need to do to insure that our empirical studies really contribute to the state of knowledge in the field. Thus we have the good, the bad, and the ugly. What are we as a community doing correctly? What are we doing less well than we should be because we either don't have the necessary artifacts or because the time and resources required to do ""the good"" is perceived to be too great? And where are we missing the boat entirely in terms of not addressing critical questions and often not even recognizing that these questions are central even if we don't know the answers. We look to see whether we can find some commonality in the projects that have really made the transition from research to widespread practice to see whether we can identify some common themes.",1,,,,,
Lessons Learned and Recommendations from Two Large Norwegian {SPI} Programmes,"Software development is an experimental discipline, i.e. somewhat unpredictable. This suggests that software processes improvement should be based on the continuous iteration of characterization, goal setting, selection of improved technology, monitoring and analysis of its effects. This paper describes experiences from the empirical studies in two large SPI programmes in Norway. Five main lessons were learned: 1) It is a challenge for the industrial partners to invest enough reso urces in SPI activities. 2) The research partners must learn to know the companies, and 3) they must work as a multi- competent and coherent unit towards them. 4) Any SPI initiative must show visible, short-term payoff. 5) Establishing a solid baseline from which to improve is unrealistic. Based on these lessons, a set of operational recommendations for other researchers in the area are proposed.",0,"Lessons Learned and Recommendations from Two Large Norwegian {SPI} ProgrammesSoftware development is an experimental discipline, i.e. somewhat unpredictable. This suggests that software processes improvement should be based on the continuous iteration of characterization, goal setting, selection of improved technology, monitoring and analysis of its effects. This paper describes experiences from the empirical studies in two large SPI programmes in Norway. Five main lessons were learned: 1) It is a challenge for the industrial partners to invest enough reso urces in SPI activities. 2) The research partners must learn to know the companies, and 3) they must work as a multi- competent and coherent unit towards them. 4) Any SPI initiative must show visible, short-term payoff. 5) Establishing a solid baseline from which to improve is unrealistic. Based on these lessons, a set of operational recommendations for other researchers in the area are proposed.",1,,,,,
Software Development Improvement with {SFIM},"Most industries are challenging to increase productivity of software development. Often many process improvement activities
are started with enthusiasm, unfortunately most of these are less successful than forecasted or improvements do not sustain
for long. This paper presents the Seven Forces Improvement Method, SFIM, which claims to overcome unexpected disappointment
in improvement results. SFIM is built upon different aspects that influence the success of software process improvements,
such as culture, skills and organization. The method has been applied to improvement activities in a large software department
for a number of years. The success of SFIM is compared with the compliance with the SFIM method. The paper shows that application
of SFIM increases the success rate of software improvement activities in industry.",0,"Software Development Improvement with {SFIM}Most industries are challenging to increase productivity of software development. Often many process improvement activities
are started with enthusiasm, unfortunately most of these are less successful than forecasted or improvements do not sustain
for long. This paper presents the Seven Forces Improvement Method, SFIM, which claims to overcome unexpected disappointment
in improvement results. SFIM is built upon different aspects that influence the success of software process improvements,
such as culture, skills and organization. The method has been applied to improvement activities in a large software department
for a number of years. The success of SFIM is compared with the compliance with the SFIM method. The paper shows that application
of SFIM increases the success rate of software improvement activities in industry.",1,,,,,
An evolutionary testbed for software technology evaluation,"Empirical evidence and technology evaluation are needed to close the gap between the state of the art and the state of the practice in software engineering. However, there are difficulties associated with evaluating technologies based on empirical evidence: insufficient specification of context variables, cost of experimentation, and risks associated with trying out new technologies. In this paper, we propose the idea of an evolutionary testbed for addressing these problems. We demonstrate the utility of the testbed in empirical studies involving two different research technologies applied to the testbed, as well as the results of these studies. The work is part of NASAs High Dependability Computing Project (HDCP), in which we are evaluating a wide range of new technologies for improving the dependability of NASA mission-critical systems.",0,"An evolutionary testbed for software technology evaluationEmpirical evidence and technology evaluation are needed to close the gap between the state of the art and the state of the practice in software engineering. However, there are difficulties associated with evaluating technologies based on empirical evidence: insufficient specification of context variables, cost of experimentation, and risks associated with trying out new technologies. In this paper, we propose the idea of an evolutionary testbed for addressing these problems. We demonstrate the utility of the testbed in empirical studies involving two different research technologies applied to the testbed, as well as the results of these studies. The work is part of NASAs High Dependability Computing Project (HDCP), in which we are evaluating a wide range of new technologies for improving the dependability of NASA mission-critical systems.",1,,,,,
Maps of Lessons Learnt in Requirements Engineering: A Research Preview,"[Context and Motivation] ""Those who cannot remember the past are condemned to repeat it"" --- George Santayana. From the survey we conducted of requirements engineering (RE) practitioners, over 70% seldom use RE lessons in the RE process, though 85% of these would use such lessons if readily available. Our observation, however, is that, RE lessons are scattered, mainly implicitly, in the literature and practice, which, obviously, does not help the situation. [Problem/Question] Approximately 90% of the survey participants stated that not utilising RE lessons has significant negative impact on product quality, productivity, project delays and cost overruns. [Principal Ideas] We propose ""maps"" (or profiles) of RE lessons which, once populated, would highlight weak (dark) and strong (bright) areas of RE (and hence RE theories). Such maps would thus be: (a) a driver for research to ""light up"" the darker areas of RE and (b) a guide for practice to benefit from the brighter areas. [Contribution] The key contribution of this work is the concept of ""maps"" of RE lessons.",0,"Maps of Lessons Learnt in Requirements Engineering: A Research Preview[Context and Motivation] ""Those who cannot remember the past are condemned to repeat it"" --- George Santayana. From the survey we conducted of requirements engineering (RE) practitioners, over 70% seldom use RE lessons in the RE process, though 85% of these would use such lessons if readily available. Our observation, however, is that, RE lessons are scattered, mainly implicitly, in the literature and practice, which, obviously, does not help the situation. [Problem/Question] Approximately 90% of the survey participants stated that not utilising RE lessons has significant negative impact on product quality, productivity, project delays and cost overruns. [Principal Ideas] We propose ""maps"" (or profiles) of RE lessons which, once populated, would highlight weak (dark) and strong (bright) areas of RE (and hence RE theories). Such maps would thus be: (a) a driver for research to ""light up"" the darker areas of RE and (b) a guide for practice to benefit from the brighter areas. [Contribution] The key contribution of this work is the concept of ""maps"" of RE lessons.",1,,,,,
Experimental Validation of New Software Technology,When to apply a new technology in an organization is a critical decision for every software development organization. Earlier work defines a set of methods that the research community uses when a new technology is developed. This chapter presents a discussion of the set of methods that industrial organizations use before adopting a new technology. First there is a brief definition of the earlier research methods and then a definition of the set of industrial methods. A comparison of the two sets leads into the perspectives of these methods of experts in the research and industrial community via surveys made to those communities.,0,Experimental Validation of New Software TechnologyWhen to apply a new technology in an organization is a critical decision for every software development organization. Earlier work defines a set of methods that the research community uses when a new technology is developed. This chapter presents a discussion of the set of methods that industrial organizations use before adopting a new technology. First there is a brief definition of the earlier research methods and then a definition of the set of industrial methods. A comparison of the two sets leads into the perspectives of these methods of experts in the research and industrial community via surveys made to those communities.,1,,,,,
Online Collaboration and Communication in Contemporary Organizations,"The digital age has introduced a deeper sense of connectivity in business environments. By relying more heavily on current technologies, organizations now experience more effective communication and collaboration opportunities. Online Collaboration and Communication in Contemporary Organizations is a critical scholarly resource that identifies the new practices and techniques for leading, knowledge sharing, and learning through the use of online collaboration. Featuring coverage on a broad range of topics such as online leadership, intercultural competence, and e-ethics, this book is geared toward professionals, managers, and researchers seeking current research on new practices for online collaboration and communication.",0,"Online Collaboration and Communication in Contemporary OrganizationsThe digital age has introduced a deeper sense of connectivity in business environments. By relying more heavily on current technologies, organizations now experience more effective communication and collaboration opportunities. Online Collaboration and Communication in Contemporary Organizations is a critical scholarly resource that identifies the new practices and techniques for leading, knowledge sharing, and learning through the use of online collaboration. Featuring coverage on a broad range of topics such as online leadership, intercultural competence, and e-ethics, this book is geared toward professionals, managers, and researchers seeking current research on new practices for online collaboration and communication.",1,,,,,
Consortium Research,"Design-oriented research in the Information Systems (IS) domain aims at delivering results which are both of scientific rigor and of relevance for practitioners. Today, however, academic researchers are facing the challenge of gaining access to and capturing knowledge from the practitioner community. Against this background, the paper proposes a method for Consortium Research, which is supposed to facilitate multilateral collaboration of researchers and practitioners during the research process. The method’s design is based on a self-evaluating design process which was carried out over a period of 20 years. The paper’s contribution is twofold. First, it addresses the science of design, since it proposes guidance to researchers for practitioner collaboration during the process of artifact design. Second, the method is an artifact itself, hence, the result of a design-oriented research process.",0,"Consortium ResearchDesign-oriented research in the Information Systems (IS) domain aims at delivering results which are both of scientific rigor and of relevance for practitioners. Today, however, academic researchers are facing the challenge of gaining access to and capturing knowledge from the practitioner community. Against this background, the paper proposes a method for Consortium Research, which is supposed to facilitate multilateral collaboration of researchers and practitioners during the research process. The method’s design is based on a self-evaluating design process which was carried out over a period of 20 years. The paper’s contribution is twofold. First, it addresses the science of design, since it proposes guidance to researchers for practitioner collaboration during the process of artifact design. Second, the method is an artifact itself, hence, the result of a design-oriented research process.",1,,,,,
Konsortialforschung,"Design-oriented research in the Information Systems (IS) domain aims at delivering results which are both of scientific rigor and of relevance for practitioners. Today, however, academic researchers are facing the challenge of gaining access to and capturing knowledge from the practitioner community. Against this background, the paper proposes a method for Consortium Research, which is supposed to facilitate multilateral collaboration of researchers and practitioners during the research process. The method’s design is based on a self-evaluating design process which was carried out over a period of 20 years. The paper’s contribution is twofold. First, it addresses the science of design, since it proposes guidance to researchers for practitioner collaboration during the process of artifact design. Second, the method is an artifact itself, hence, the result of a design-oriented research process.",0,"KonsortialforschungDesign-oriented research in the Information Systems (IS) domain aims at delivering results which are both of scientific rigor and of relevance for practitioners. Today, however, academic researchers are facing the challenge of gaining access to and capturing knowledge from the practitioner community. Against this background, the paper proposes a method for Consortium Research, which is supposed to facilitate multilateral collaboration of researchers and practitioners during the research process. The method’s design is based on a self-evaluating design process which was carried out over a period of 20 years. The paper’s contribution is twofold. First, it addresses the science of design, since it proposes guidance to researchers for practitioner collaboration during the process of artifact design. Second, the method is an artifact itself, hence, the result of a design-oriented research process.",1,,,,,
{ICT}-enabled Refugee Integration: A Research Agenda, ,0,{ICT}-enabled Refugee Integration: A Research Agenda ,1,,,,,
Collaborative design research: Lessons from continuous auditing,"In this paper we discuss Collaborative Design Research – a hybrid methodology for undertaking design science research in collaboration with industry partners – that has been applied to the area of Continuous Auditing and which also has wider applicability to AIS research. Collaborative Design Research has a role at the time in the evolution of a field when early adopting practitioners have made the decision to implement an innovation, but there is as yet no established product or set of best practices that makes it obvious what they should do. We discuss eight key issues facing researchers attempting to do collaborative design research: 1) choice of implementation partner (IP), 2) choice of projects, 3) managing expectations, 4) building on the expertise of the IP, 5) introducing innovation to the IP, 6) project evaluation and reassessment, 7) cost and resource management, and 8) publishing results.",0,"Collaborative design research: Lessons from continuous auditingIn this paper we discuss Collaborative Design Research – a hybrid methodology for undertaking design science research in collaboration with industry partners – that has been applied to the area of Continuous Auditing and which also has wider applicability to AIS research. Collaborative Design Research has a role at the time in the evolution of a field when early adopting practitioners have made the decision to implement an innovation, but there is as yet no established product or set of best practices that makes it obvious what they should do. We discuss eight key issues facing researchers attempting to do collaborative design research: 1) choice of implementation partner (IP), 2) choice of projects, 3) managing expectations, 4) building on the expertise of the IP, 5) introducing innovation to the IP, 6) project evaluation and reassessment, 7) cost and resource management, and 8) publishing results.",1,,,,,
Controlling action research projects,"Action research (AR), which emphasises collaboration between researchers and practitioners, is a qualitative research method that has much potential for the information systems (IS) field. AR studies of IS phenomena are now beginning to be published in the IS research literature. However, the rigour of many AR studies in IS can be improved. When AR has been published, the findings have frequently been emphasised at the expense of the process. In this article, we look at the process in AR projects, and look at some of the key choices and alternatives in controlling AR. We discuss three aspects of control: the procedures for initiating an AR project, those for determining authority within the project, and the degree of formalisation. We analyse seven recent AR projects in IS and from this analysis distil recommendations for determining these control structures.",0,"Controlling action research projectsAction research (AR), which emphasises collaboration between researchers and practitioners, is a qualitative research method that has much potential for the information systems (IS) field. AR studies of IS phenomena are now beginning to be published in the IS research literature. However, the rigour of many AR studies in IS can be improved. When AR has been published, the findings have frequently been emphasised at the expense of the process. In this article, we look at the process in AR projects, and look at some of the key choices and alternatives in controlling AR. We discuss three aspects of control: the procedures for initiating an AR project, those for determining authority within the project, and the degree of formalisation. We analyse seven recent AR projects in IS and from this analysis distil recommendations for determining these control structures.",1,,,,,
Reflective Technology Assimilation: Facilitating Electronic Health Record Assimilation in Small Physician Practices,"Effectively incorporating complex technology into organizational practices requires moving beyond initial plateaus of postadoption usage. However, achieving this is especially challenging for small businesses because competing priorities in addition to resource and attention constraints may lead to technology assimilation satisficing. With this context in mind, we conducted a four-year action research project in which we supported electronic health record (EHR) assimilation in 10 small physician practices by facilitating reflections to help these small organizations move beyond an initial plateau of postadoption EHR usage. Drawing from these results, we theorize reflective technology assimilation (RTA) as an emergent process of facilitating deeper learning and reflection within and across small resource- and attention-constrained organizations to enable ongoing technology assimilation. In addition, we articulate the foundational principles for reflective action research (RAR) as an approach in which researchers facilitate reflective problem solving while advancing theoretical knowledge.",0,"Reflective Technology Assimilation: Facilitating Electronic Health Record Assimilation in Small Physician PracticesEffectively incorporating complex technology into organizational practices requires moving beyond initial plateaus of postadoption usage. However, achieving this is especially challenging for small businesses because competing priorities in addition to resource and attention constraints may lead to technology assimilation satisficing. With this context in mind, we conducted a four-year action research project in which we supported electronic health record (EHR) assimilation in 10 small physician practices by facilitating reflections to help these small organizations move beyond an initial plateau of postadoption EHR usage. Drawing from these results, we theorize reflective technology assimilation (RTA) as an emergent process of facilitating deeper learning and reflection within and across small resource- and attention-constrained organizations to enable ongoing technology assimilation. In addition, we articulate the foundational principles for reflective action research (RAR) as an approach in which researchers facilitate reflective problem solving while advancing theoretical knowledge.",1,,,,,
Clinical research from information systems practice,"An increasing presence of practitioners with doctoral degrees in Information Systems and related disciplines holds promise to advance Information Systems research. The prospect is to gain more knowledge from the practical experience of developing, using, and managing information systems in context. To scientifically capitalise on this opportunity, this EJIS special issue introduces the research genre of “Information Systems Clinical Research”. The genre presents knowledge generated from practitioner-researcher interventions to achieve desired outcomes in information systems development, use, and management practice contexts. In this editorial, we introduce and conceptualise the genre; we present a research framework that defines its four key elements; and we discuss how to address its key challenges in research projects. As a result, we derive ten criteria for rigorous Information Systems Clinical Research and provide examples on how the articles published in the special issue have addressed these criteria. We conclude with a call to further advance clinical research as an important part of the Information Systems discipline.",0,"Clinical research from information systems practiceAn increasing presence of practitioners with doctoral degrees in Information Systems and related disciplines holds promise to advance Information Systems research. The prospect is to gain more knowledge from the practical experience of developing, using, and managing information systems in context. To scientifically capitalise on this opportunity, this EJIS special issue introduces the research genre of “Information Systems Clinical Research”. The genre presents knowledge generated from practitioner-researcher interventions to achieve desired outcomes in information systems development, use, and management practice contexts. In this editorial, we introduce and conceptualise the genre; we present a research framework that defines its four key elements; and we discuss how to address its key challenges in research projects. As a result, we derive ten criteria for rigorous Information Systems Clinical Research and provide examples on how the articles published in the special issue have addressed these criteria. We conclude with a call to further advance clinical research as an important part of the Information Systems discipline.",1,,,,,
Nine Challenges for e-Government Action Researchers,"Action research is widespread in many of the background disciplines that underpin the e-Government field and is beginning to take root as a legitimate e-Government research method. Canonical Action Research (CAR) is the most widely used form of action research; however it relies on premises that can be problematic in the e-Government context. This article details some of those underlying assumptions, and shows the difficulties that result when applied to a relatively typical e-Government case study: the implementation of an advanced email system in Danish public administration. The empirical experience calls many of the standard premises into question, and these are categorised. The authors summarize the resulting experience as nine challenges for action researchers working in the e-Government field, and investigate some possible responses.",0,"Nine Challenges for e-Government Action ResearchersAction research is widespread in many of the background disciplines that underpin the e-Government field and is beginning to take root as a legitimate e-Government research method. Canonical Action Research (CAR) is the most widely used form of action research; however it relies on premises that can be problematic in the e-Government context. This article details some of those underlying assumptions, and shows the difficulties that result when applied to a relatively typical e-Government case study: the implementation of an advanced email system in Danish public administration. The empirical experience calls many of the standard premises into question, and these are categorised. The authors summarize the resulting experience as nine challenges for action researchers working in the e-Government field, and investigate some possible responses.",1,,,,,
Researching cooperation and communication in continuous software engineering,"Continuous Software Engineering (CSE)---continuous development and deployment of software---and DevOps---the close cooperation or integration of operations and software development---is about to change how software is developed. Together with the tighter integration of development and operations also with usage this will change coordination and collaboration both between IT professionals and between developers and users. In this short paper, we discuss the CHASE dimension of three core research themes that begin to crystallize in literature. This position paper is intended as a `call to arms' for the CHASE community to study CSE.",0,"Researching cooperation and communication in continuous software engineeringContinuous Software Engineering (CSE)---continuous development and deployment of software---and DevOps---the close cooperation or integration of operations and software development---is about to change how software is developed. Together with the tighter integration of development and operations also with usage this will change coordination and collaboration both between IT professionals and between developers and users. In this short paper, we discuss the CHASE dimension of three core research themes that begin to crystallize in literature. This position paper is intended as a `call to arms' for the CHASE community to study CSE.",1,,,,,
The Role of Conventional Research Methods in Information Systems Action Research,"Action research has for many years been promoted and practiced as one way to conduct empirical research within the Information Systems discipline. While the approach can lead to highly relevant contributions, researchers are warned against the many risks involved in action research.Based on successful cases of Information Systems action research we explore the role played by conventional research methods in developing and presenting research contributions. The cases suggest that action research lends itself strongly toward multi-method approaches and facilitates the creation of multicontribution projects. We identify two approaches to mixing action research and conventional research methodsthe planned and the emergent approachesand we argue that action research can be adopted in ways that are no more risky than other conventional approaches to Information Systems research. Full Text at Springer, may require registration or fee",0,"The Role of Conventional Research Methods in Information Systems Action ResearchAction research has for many years been promoted and practiced as one way to conduct empirical research within the Information Systems discipline. While the approach can lead to highly relevant contributions, researchers are warned against the many risks involved in action research.Based on successful cases of Information Systems action research we explore the role played by conventional research methods in developing and presenting research contributions. The cases suggest that action research lends itself strongly toward multi-method approaches and facilitates the creation of multicontribution projects. We identify two approaches to mixing action research and conventional research methodsthe planned and the emergent approachesand we argue that action research can be adopted in ways that are no more risky than other conventional approaches to Information Systems research. Full Text at Springer, may require registration or fee",1,,,,,
Pragmatism $\less$i$\greater$vs$\less$/i$\greater$ interpretivism in qualitative information systems research,"Qualitative research is often associated with interpretivism, but alternatives do exist. Besides critical research and sometimes positivism, qualitative research in information systems can be performed following a paradigm of pragmatism. This paradigm is associated with action, intervention and constructive knowledge. This paper has picked out interpretivism and pragmatism as two possible and important research paradigms for qualitative research in information systems. It clarifies each paradigm in an ideal-typical fashion and then conducts a comparison revealing commonalities and differences. It is stated that a qualitative researcher must either adopt an interpretive stance aiming towards an understanding that is appreciated for being interesting; or a pragmatist stance aiming for constructive knowledge that is appreciated for being useful in action. The possibilities of combining pragmatism and interpretivism in qualitative research in information systems are analysed. A research case (conducted through action research (AR) and design research (DR)) that combines interpretivism and pragmatism is used as an illustration. It is stated in the paper that pragmatism has influenced IS research to a fairly large extent, albeit in a rather implicit way. The paradigmatic foundations are seldom known and explicated. This paper contributes to a further clarification of pragmatism as an explicit research paradigm for qualitative research in information systems. Pragmatism is considered an appropriate paradigm for AR and DR.",0,"Pragmatism $\less$i$\greater$vs$\less$/i$\greater$ interpretivism in qualitative information systems researchQualitative research is often associated with interpretivism, but alternatives do exist. Besides critical research and sometimes positivism, qualitative research in information systems can be performed following a paradigm of pragmatism. This paradigm is associated with action, intervention and constructive knowledge. This paper has picked out interpretivism and pragmatism as two possible and important research paradigms for qualitative research in information systems. It clarifies each paradigm in an ideal-typical fashion and then conducts a comparison revealing commonalities and differences. It is stated that a qualitative researcher must either adopt an interpretive stance aiming towards an understanding that is appreciated for being interesting; or a pragmatist stance aiming for constructive knowledge that is appreciated for being useful in action. The possibilities of combining pragmatism and interpretivism in qualitative research in information systems are analysed. A research case (conducted through action research (AR) and design research (DR)) that combines interpretivism and pragmatism is used as an illustration. It is stated in the paper that pragmatism has influenced IS research to a fairly large extent, albeit in a rather implicit way. The paradigmatic foundations are seldom known and explicated. This paper contributes to a further clarification of pragmatism as an explicit research paradigm for qualitative research in information systems. Pragmatism is considered an appropriate paradigm for AR and DR.",1,,,,,
Mind the Gap: A Collaborative Competence E-learning Model between University and Industry,"This article departure from the effects that inter-organizational collaboration brings for the participating partners, specifically from design-related activities of e-learning courses and co-production. The research focus is on critical factors for inter-organizational collaborative e-learning and co-production between university and industry. We describe the process of a six-year longitudinal collaborative action research project including six cases and three phases, initialization, implementation and dissemination. The analysis is conducted from a multi-stakeholder perspective; managers, teachers, and practitioners. Overall aim is to reach for a sustainable collaborative competence e-learning model (CCeM) that will increase industrial employees’ competences. Main contribution is that co-production of knowledge entails three levels of activities among actors; to have insight into the purposes and practices of others, the capacity to transform the problems of a practice and together build common knowledge and finally the capacity of mutually co-produce knowledge acted upon in practice towards transformations in the workplace.",0,"Mind the Gap: A Collaborative Competence E-learning Model between University and IndustryThis article departure from the effects that inter-organizational collaboration brings for the participating partners, specifically from design-related activities of e-learning courses and co-production. The research focus is on critical factors for inter-organizational collaborative e-learning and co-production between university and industry. We describe the process of a six-year longitudinal collaborative action research project including six cases and three phases, initialization, implementation and dissemination. The analysis is conducted from a multi-stakeholder perspective; managers, teachers, and practitioners. Overall aim is to reach for a sustainable collaborative competence e-learning model (CCeM) that will increase industrial employees’ competences. Main contribution is that co-production of knowledge entails three levels of activities among actors; to have insight into the purposes and practices of others, the capacity to transform the problems of a practice and together build common knowledge and finally the capacity of mutually co-produce knowledge acted upon in practice towards transformations in the workplace.",1,,,,,
Action Research in New Product Development,"This chapter explores the nature of action research in new product development. Characterized by pressures associated with product concept effectiveness and process performance, new product development is a challenging but rewarding setting for action research. By re-assessing a previously reported action research study in the automotive industry, we identify and analyze characteristics of managing such research in new product development. On the basis of this assessment, the chapter complements previous research on managing action research projects with specific insights applicable to settings in which new technologies are being built and tried out.",0,"Action Research in New Product DevelopmentThis chapter explores the nature of action research in new product development. Characterized by pressures associated with product concept effectiveness and process performance, new product development is a challenging but rewarding setting for action research. By re-assessing a previously reported action research study in the automotive industry, we identify and analyze characteristics of managing such research in new product development. On the basis of this assessment, the chapter complements previous research on managing action research projects with specific insights applicable to settings in which new technologies are being built and tried out.",1,,,,,
Green {IS},"In this chapter, we investigate the role of ICT in dealing with environmental challenges facing contemporary industrial organizations. Green IS research can essentially be divided into two groups, focusing on technology per se or on providing tools that decreases environmental impact. Building on a planned research project we propose innovation of ICT-based services, and especially collaborative services, as useful strategies for providing firms with sense and respond capabilities in relation to environmental challenges. We also argue research that research relevance and multi-disciplinary competencies are key themes that IS researcher needs to acknowledge in order to contribute to practitioners efforts.",0,"Green {IS}In this chapter, we investigate the role of ICT in dealing with environmental challenges facing contemporary industrial organizations. Green IS research can essentially be divided into two groups, focusing on technology per se or on providing tools that decreases environmental impact. Building on a planned research project we propose innovation of ICT-based services, and especially collaborative services, as useful strategies for providing firms with sense and respond capabilities in relation to environmental challenges. We also argue research that research relevance and multi-disciplinary competencies are key themes that IS researcher needs to acknowledge in order to contribute to practitioners efforts.",1,,,,,
Six Issues in Which {IS} and {CSCW} Research Communities Differ,"Computer-Supported Collaborative Work (CSCW) has become increasingly positioned as a subfield of human-computer interaction (HCI). Earlier, CSCW has had a closer connection to the Information Systems (IS) field, but this relationship has seemed to become more distant. In this paper we reflect on the distinct characteristics of the research communities of CSCW and IS. We identify similarities, but also stark differences between the two. The six identified issues of difference are the roles of theory, context, methodology, organizational layer, socio-technicality, and power-alignment. Our contribution is in making these differences visible. We hope this paper will promote diplomacy and understanding between these research communities, so that scholars may consider cross-disciplinary IS-CSCW publication strategies.",0,"Six Issues in Which {IS} and {CSCW} Research Communities DifferComputer-Supported Collaborative Work (CSCW) has become increasingly positioned as a subfield of human-computer interaction (HCI). Earlier, CSCW has had a closer connection to the Information Systems (IS) field, but this relationship has seemed to become more distant. In this paper we reflect on the distinct characteristics of the research communities of CSCW and IS. We identify similarities, but also stark differences between the two. The six identified issues of difference are the roles of theory, context, methodology, organizational layer, socio-technicality, and power-alignment. Our contribution is in making these differences visible. We hope this paper will promote diplomacy and understanding between these research communities, so that scholars may consider cross-disciplinary IS-CSCW publication strategies.",1,,,,,
Knowledge transfer planning and execution in offshore outsourcing: An applied approach,"In this paper, we report from a longitudinal project about knowledge transfer conducted in a major financial company headquartered in Denmark and an offshore development center located in Bangalore, India. We identify the main knowledge transfer challenges experienced by the case company. The challenges inform the conceptual design of a systematic five-step approach to the company’s knowledge transfer. Our main contribution is to illustrate how extant research can be applied to understand and solve the knowledge transfer challenges of a particular company in a way that fits with the outsourcing setup and the company culture. We also draw attention to the fact that client side managers play a crucial role in determining how and with what priority knowledge transfer can take place. Our research indicates that a first, important step towards ensuring successful knowledge transfer in outsourcing is to focus on the training and support of client side managers.",0,"Knowledge transfer planning and execution in offshore outsourcing: An applied approachIn this paper, we report from a longitudinal project about knowledge transfer conducted in a major financial company headquartered in Denmark and an offshore development center located in Bangalore, India. We identify the main knowledge transfer challenges experienced by the case company. The challenges inform the conceptual design of a systematic five-step approach to the company’s knowledge transfer. Our main contribution is to illustrate how extant research can be applied to understand and solve the knowledge transfer challenges of a particular company in a way that fits with the outsourcing setup and the company culture. We also draw attention to the fact that client side managers play a crucial role in determining how and with what priority knowledge transfer can take place. Our research indicates that a first, important step towards ensuring successful knowledge transfer in outsourcing is to focus on the training and support of client side managers.",1,,,,,
Service Provision in a Software Technology Unit,"Large software organizations establish software technology units for managing the methods and tools aimed at supporting their software engineers. This division between software development and new technologies for software development establishes specialized competencies, supports standardization across software projects and departments and provides dedicated resources for innovation. However, such software technology units are faced with complex diffusion projects that are difficult and challenging to manage and that in many cases lead to unsatisfactory results. This paper reports from attempts to improve diffusion practices within a technology unit in a large software organization. Two complementary roles for software technology units, i.e. technology supplier and service provider, are presented and used for interpreting the experiences. The research suggests that technology units in large software organizations can improve their diffusion practices by complementing the traditional role as a technology supplier with that of a service provider. The paper offers lessons on how software organizations can take steps in that direction.Journal of Information Technology 2003 18, 195209. doi:10.1080/0268396032000122150",0,"Service Provision in a Software Technology UnitLarge software organizations establish software technology units for managing the methods and tools aimed at supporting their software engineers. This division between software development and new technologies for software development establishes specialized competencies, supports standardization across software projects and departments and provides dedicated resources for innovation. However, such software technology units are faced with complex diffusion projects that are difficult and challenging to manage and that in many cases lead to unsatisfactory results. This paper reports from attempts to improve diffusion practices within a technology unit in a large software organization. Two complementary roles for software technology units, i.e. technology supplier and service provider, are presented and used for interpreting the experiences. The research suggests that technology units in large software organizations can improve their diffusion practices by complementing the traditional role as a technology supplier with that of a service provider. The paper offers lessons on how software organizations can take steps in that direction.Journal of Information Technology 2003 18, 195209. doi:10.1080/0268396032000122150",1,,,,,
Style Composition in Action Research Publication,"Examining action research publications in leading Information Systems journals as a particular genre of research communication, we develop the notion of style composition to understand how authors structure their arguments for a research contribution. We define style composition as the activity through which authors select, emphasize, and present elements of their research to establish premises, develop inferences, and present contributions in publications. Drawing on this general notion, we identify a set of styles that is characteristic of how IS action researchers compose their argument. Premise styles relate to the dual goals of action research through practical or theoretical positioning of the argument; inference styles combine insights from the problem-solving and the research cycles through inductive or deductive reasoning; and contribution styles focus on different types of contributions--experience report, field study, theoretical development, problemsolving method, and research method. Based on the considered sample, we analyze the styles adopted in selected publications and show that authors have favored certain styles while leaving others underexplored; further, we reveal important strengths and weaknesses in the composition of styles within the IS discipline. Based on these insights, we discuss how action research practices and writing can be improved, as well as how to further develop style compositions to support the publication of engaged scholarship research.",0,"Style Composition in Action Research PublicationExamining action research publications in leading Information Systems journals as a particular genre of research communication, we develop the notion of style composition to understand how authors structure their arguments for a research contribution. We define style composition as the activity through which authors select, emphasize, and present elements of their research to establish premises, develop inferences, and present contributions in publications. Drawing on this general notion, we identify a set of styles that is characteristic of how IS action researchers compose their argument. Premise styles relate to the dual goals of action research through practical or theoretical positioning of the argument; inference styles combine insights from the problem-solving and the research cycles through inductive or deductive reasoning; and contribution styles focus on different types of contributions--experience report, field study, theoretical development, problemsolving method, and research method. Based on the considered sample, we analyze the styles adopted in selected publications and show that authors have favored certain styles while leaving others underexplored; further, we reveal important strengths and weaknesses in the composition of styles within the IS discipline. Based on these insights, we discuss how action research practices and writing can be improved, as well as how to further develop style compositions to support the publication of engaged scholarship research.",1,,,,,
Is Action Research and Its Criteria,"There is little agreement on which criteria should be used in the design and evaluation of IS action research. Much action
research is not at all explicit about the applied criteria. This chapter seeks to remedy this by eliciting from twenty odd
years of action research six criteria. The epistemology of action research has traces back to pragmatism and with this as
background the six criteria are presented and illustrated through a piece of recent action research. The contributions of
the chapter are the six criteria, how to model these in their context of research activities and research contributions, and
how to understand these criteria in a pragmatist view.",0,"Is Action Research and Its CriteriaThere is little agreement on which criteria should be used in the design and evaluation of IS action research. Much action
research is not at all explicit about the applied criteria. This chapter seeks to remedy this by eliciting from twenty odd
years of action research six criteria. The epistemology of action research has traces back to pragmatism and with this as
background the six criteria are presented and illustrated through a piece of recent action research. The contributions of
the chapter are the six criteria, how to model these in their context of research activities and research contributions, and
how to understand these criteria in a pragmatist view.",1,,,,,
A research framework for building {SPI} proposals in small organizations: the {COMPETISOFT} experience,"Establishing a research strategy that is suitable for undertaking research on software engineering is vital if we are to guarantee that research products are developed and validated following a systematic and coherent method. We took this into account as we carried out the COMPETISOFT research project, which investigated software process improvement (SPI) in the context of Latin American small companies. That experience has enabled us to develop a research strategy based on the integrated use of action research and case study methods. This paper introduces the proposed research strategy and provides extensive discussion of its application for: (1) developing the Methodological framework of COMPETISOFT for SPI, (2) putting this framework into practice in eight small software companies, and (3) refine the Methodological framework due to the practice feedback. The use of this research strategy allowed us to observe that it was suitable for developing, refining, improving, applying, and validating COMPETISOFT’s Methodology framework. Furthermore, having seen it applied, we believe that this strategy offers a successful integration of action research and case study, which can be useful for conducting research in other software engineering areas which address needs of small software companies.",1,"A research framework for building {SPI} proposals in small organizations: the {COMPETISOFT} experienceEstablishing a research strategy that is suitable for undertaking research on software engineering is vital if we are to guarantee that research products are developed and validated following a systematic and coherent method. We took this into account as we carried out the COMPETISOFT research project, which investigated software process improvement (SPI) in the context of Latin American small companies. That experience has enabled us to develop a research strategy based on the integrated use of action research and case study methods. This paper introduces the proposed research strategy and provides extensive discussion of its application for: (1) developing the Methodological framework of COMPETISOFT for SPI, (2) putting this framework into practice in eight small software companies, and (3) refine the Methodological framework due to the practice feedback. The use of this research strategy allowed us to observe that it was suitable for developing, refining, improving, applying, and validating COMPETISOFT’s Methodology framework. Furthermore, having seen it applied, we believe that this strategy offers a successful integration of action research and case study, which can be useful for conducting research in other software engineering areas which address needs of small software companies.",1,,,,,
Cultivating Recalcitrance in Information Systems Research,"ABSTRACT There is an ongoing debate about how to improve the quality of empirical research efforts in information systems One of the persistent issues within the debate concerns the rela - tive importance of social and technical aspects of an informa - tion system and how to study these different elements Contem - porary research within science and technology studies suggests that social science inquiries can learn from empirical enquiries within the natural sciences through the notion of recalcitrance in experimental subjects The aim of this article is to conduct an initial exploration of the usefulness of these ideas in the con - text of empirical information systems research The following three research methods are subjected to a first theoretical analysis: (1) longitudinal, interpretive case study; (2) quan - titative case study; and (3) laboratory experiments For each of the three methods, an example is studied together with reflec - tions from the researchers conducting the particular study It is concluded that although this does not represent a solution to all methodological problems, adopting the perspective of cultivating recalcitrance and designing research methods to",0,"Cultivating Recalcitrance in Information Systems ResearchABSTRACT There is an ongoing debate about how to improve the quality of empirical research efforts in information systems One of the persistent issues within the debate concerns the rela - tive importance of social and technical aspects of an informa - tion system and how to study these different elements Contem - porary research within science and technology studies suggests that social science inquiries can learn from empirical enquiries within the natural sciences through the notion of recalcitrance in experimental subjects The aim of this article is to conduct an initial exploration of the usefulness of these ideas in the con - text of empirical information systems research The following three research methods are subjected to a first theoretical analysis: (1) longitudinal, interpretive case study; (2) quan - titative case study; and (3) laboratory experiments For each of the three methods, an example is studied together with reflec - tions from the researchers conducting the particular study It is concluded that although this does not represent a solution to all methodological problems, adopting the perspective of cultivating recalcitrance and designing research methods to",1,,,,,
Meeting Industry-Academia Research Collaboration Challenges with Agile Methodologies, ,1,Meeting Industry-Academia Research Collaboration Challenges with Agile Methodologies ,1,,,,,
Scientific collaboration, ,0,Scientific collaboration ,1,,,,,
Information Technology Project Risk Management: Bridging the Gap between Research and Practice, ,0,Information Technology Project Risk Management: Bridging the Gap between Research and Practice ,1,,,,,
Nine drivers of knowledge transfer between universities and industry R{\&}amp$\mathsemicolon$D partners in  South Africa,"This article presents part of the findings of the Research Marketing and Technology Commercialization Survey conducted in South Africa during 2005 and 2006. Part IV (Q4) of this survey was designed to examine nine drivers of knowledge transfer between South African universities in their research and development (R&D) collaborations with industry firms. Respondents from a judgemental sample ranked the knowledge transfer for R&D collaboration between university departments and industry as: (a) the need to extract appropriate knowledge at the right time to make critical decisions; (b) the perception that knowledge is a valuable resource; (c) the emphasis on getting a return on investment in research; (d) the need to protect knowledge for competitive advantage; (e) the need to close the knowledge gap; (f) international trade; (g) the need to protect intellectual property such as patents and trademarks; (h) geographic proximity between the knowledge source and recipient; and (i) war, terrorism and natural disasters.",0,"Nine drivers of knowledge transfer between universities and industry R{\&}amp$\mathsemicolon$D partners in  South AfricaThis article presents part of the findings of the Research Marketing and Technology Commercialization Survey conducted in South Africa during 2005 and 2006. Part IV (Q4) of this survey was designed to examine nine drivers of knowledge transfer between South African universities in their research and development (R&D) collaborations with industry firms. Respondents from a judgemental sample ranked the knowledge transfer for R&D collaboration between university departments and industry as: (a) the need to extract appropriate knowledge at the right time to make critical decisions; (b) the perception that knowledge is a valuable resource; (c) the emphasis on getting a return on investment in research; (d) the need to protect knowledge for competitive advantage; (e) the need to close the knowledge gap; (f) international trade; (g) the need to protect intellectual property such as patents and trademarks; (h) geographic proximity between the knowledge source and recipient; and (i) war, terrorism and natural disasters.",1,,,,,
On establishing the essential components of a technology-dependent framework,"A goal of evidence-based software engineering is to provide a means by which industry practitioners can make rational decisions about technology adoption. When a technology is mature enough for potential widespread use, practitioners find empirical evidence most compelling when the study has taken place in a live, industrial situation in an environment comparable to their own. However, empirical software engineering is in need of guidelines and standards to direct industrial case studies so that the results of this research are valuable and can be combined into an evidentiary base. In this paper, we present a high-level view of a measurement framework that has been used with multiple agile software development industrial case studies. We propose that this technology-dependent framework can be used as a strawman for a guideline of data collection, analysis, and reporting of industrial case studies. Our goal in offering the framework as a strawman is to solicit input from the community on a guideline for the essential components of a technology-dependent framework for industrial case study research.",0,"On establishing the essential components of a technology-dependent frameworkA goal of evidence-based software engineering is to provide a means by which industry practitioners can make rational decisions about technology adoption. When a technology is mature enough for potential widespread use, practitioners find empirical evidence most compelling when the study has taken place in a live, industrial situation in an environment comparable to their own. However, empirical software engineering is in need of guidelines and standards to direct industrial case studies so that the results of this research are valuable and can be combined into an evidentiary base. In this paper, we present a high-level view of a measurement framework that has been used with multiple agile software development industrial case studies. We propose that this technology-dependent framework can be used as a strawman for a guideline of data collection, analysis, and reporting of industrial case studies. Our goal in offering the framework as a strawman is to solicit input from the community on a guideline for the essential components of a technology-dependent framework for industrial case study research.",1,,,,,
