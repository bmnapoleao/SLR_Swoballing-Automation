@inproceedings{7965431,
	title        = {Meeting Industry-Academia Research Collaboration Challenges with Agile Methodologies},
	author       = {Sandberg, Anna Börjesson and Crnkovic, Ivica},
	year         = 2017,
	month        = {May},
	booktitle    = {2017 IEEE/ACM 39th International Conference on Software Engineering: Software Engineering in Practice Track (ICSE-SEIP)},
	volume       = {},
	number       = {},
	pages        = {73--82},
	doi          = {10.1109/ICSE-SEIP.2017.20},
	issn         = {},
	abstract     = {Continuous and long-term collaboration between industry and academia is crucial to develop front-line research in context-dependent areas like software development where both practitioners and researchers are searched for data collection, analysis and results. Despite many mutual benefits, this collaboration is often challenging, not only due to different goals, but also because of different pace in providing the results. The software development industry has during the last decade aligned around and organized their development adopting agile methodologies. For the researchers, the agile methodologies are a topic for a research, rather than a means of performing the research itself. We can state a question, whether the agile methodologies can be a good common ground for enabling successful research collaboration between industry and academia? This paper reports on a longitudinal industry - academia research collaboration case, which has stepwise adapted SCRUM over a six-year period. The implementation of SCRUM and the collaboration successes and challenges are presented, and findings are discussed.},
	keywords     = {}
}
@article{SHERMAN2018148,
	title        = {Leveraging organizational climate theory for understanding industry-academia collaboration},
	author       = {Sofia Sherman and Irit Hadar and Gil Luria},
	year         = 2018,
	journal      = {Information and Software Technology},
	volume       = 98,
	pages        = {148--160},
	doi          = {https://doi.org/10.1016/j.infsof.2017.12.006},
	issn         = {0950-5849},
	url          = {https://www.sciencedirect.com/science/article/pii/S0950584917304020},
	keywords     = {Industry-academia collaboration, Empirical research, Software engineering, Stakeholder involvement, Organizational climate, Management commitment},
	abstract     = {Context Industry-academia collaboration (IAC) in the field of software engineering is widely discussed in the literature, highlighting its importance and benefits. However, along with the benefits, academic researchers face challenges while performing empirical studies in industry, risking their success. Awareness of these challenges and the importance of addressing them has recently grown, and became the center of discussion in several publication venues. Objective In this paper, we aim to address one of the key challenges affecting the success of IAC: stakeholder involvement. To this end, we propose a vision for leveraging organizational climate theory toward an effective management of IAC in software engineering research. Organizational climate is defined as the organization's priorities as perceived by its employees and was found to be an effective means of predicting employee behavior. Method To provide a basis and motivation for our vision, we conducted a literature review, focused on the workshop series of CESI, Conducting Empirical Studies in Industry, in order to elicit the relevant reported challenges of IAC, and to analyze them through the lens of the organizational climate theory. Results Emergent categories of the elicited challenges of IAC are related to the two basic components that determine the emergence of organizational climate: management commitment and communication. This result demonstrates that analyzing stakeholder involvement-related challenges of IAC through the lens of organizational climate theory provides an indication of the climate components that should be enhanced in order to address these challenges. Conclusion The above analysis lays the foundation for our vision that organizational climate may serve as an effective means of addressing the discussed challenges. We propose that developing measures of organizational research collaboration climate and deploying respective interventions for improvement would be instrumental for enhancing stakeholder involvement in IAC. We further propose a research outline toward fulfilling these potential contributions.}
}
@inproceedings{10.1145/3084226.3084279,
	title        = {Industry-Academia Collaborations in Software Engineering: An Empirical Analysis of Challenges, Patterns and Anti-Patterns in Research Projects},
	author       = {Garousi, Vahid and Felderer, Michael and Fernandes, Jo\~{a}o M. and Pfahl, Dietmar and M\"{a}ntyl\"{a}, Mika V.},
	year         = 2017,
	booktitle    = {Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering},
	location     = {Karlskrona, Sweden},
	publisher    = {Association for Computing Machinery},
	address      = {New York, NY, USA},
	series       = {EASE'17},
	pages        = {224?229},
	doi          = {10.1145/3084226.3084279},
	isbn         = 9781450348041,
	url          = {https://doi.org/10.1145/3084226.3084279},
	abstract     = {Research collaboration between industry and academia supports improvement and innovation in industry and helps to ensure industrial relevance in academic research. However, many researchers and practitioners believe that the level of joint industry-academia collaboration (IAC) in software engineering (SE) research is still relatively low, compared to the amount of activity in each of the two communities. The goal of the empirical study reported in this paper is to exploratory characterize the state of IAC with respect to a set of challenges, patterns and anti-patterns identified by a recent Systematic Literature Review study. To address the above goal, we gathered the opinions of researchers and practitioners w.r.t. their experiences in IAC projects. Our dataset includes 47 opinion data points related to a large set of projects conducted in 10 different countries. We aim to contribute to the body of evidence in the area of IAC, for the benefit of researchers and practitioners in conducting future successful IAC projects in SE. As an output, the study presents a set of empirical findings and evidence-based recommendations to increase the success of IAC projects.},
	numpages     = 6,
	keywords     = {anti-patterns, challenges, software engineering, empirical study, industry-academia collaborations, research, patterns, success factors}
}
@article{garousi2019characterizing,
	title        = {Characterizing industry-academia collaborations in software engineering: evidence from 101 projects},
	author       = {Garousi, Vahid and Pfahl, Dietmar and Fernandes, Jo{\~a}o M and Felderer, Michael and M{\"a}ntyl{\"a}, Mika V and Shepherd, David and Arcuri, Andrea and Co{\c{s}}kun{\c{c}}ay, Ahmet and Tekinerdogan, Bedir},
	year         = 2019,
	journal      = {Empirical Software Engineering},
	publisher    = {Springer},
	volume       = 24,
	number       = 4,
	pages        = {2540--2602},
	abstract     = {Research collaboration between industry and academia supports improvement and innovation in industry and helps ensure the industrial relevance of academic research. However, many researchers and practitioners in the community believe that the level of joint industry-academia collaboration (IAC) projects in Software Engineering (SE) research is relatively low, creating a barrier between research and practice. The goal of the empirical study reported in this paper is to explore and characterize the state of IAC with respect to industrial needs, developed solutions, impacts of the projects and also a set of challenges, patterns and anti-patterns identified by a recent Systematic Literature Review (SLR) study. To address the above goal, we conducted an opinion survey among researchers and practitioners with respect to their experience in IAC. Our dataset includes 101 data points from IAC projects conducted in 21 different countries. Our findings include: (1) the most popular topics of the IAC projects, in the dataset, are: software testing, quality, process, and project managements; (2) over 90% of IAC projects result in at least one publication; (3) almost 50% of IACs are initiated by industry, busting the myth that industry tends to avoid IACs; and (4) 61% of the IAC projects report having a positive impact on their industrial context, while 31% report no noticeable impacts or were ?not sure?. To improve this situation, we present evidence-based recommendations to increase the success of IAC projects, such as the importance of testing pilot solutions before using them in industry. This study aims to contribute to the body of evidence in the area of IAC, and benefit researchers and practitioners. Using the data and evidence presented in this paper, they can conduct more successful IAC projects in SE by being aware of the challenges and how to overcome them, by applying best practices (patterns), and by preventing anti-patterns.}
}
@article{8704922,
	title        = {Successful Engagement of Practitioners and Software Engineering Researchers: Evidence From 26 International Industry?Academia Collaborative Projects},
	author       = {Garousi, Vahid and Shepherd, David C. and Herkiloglu, Kadir},
	year         = 2020,
	month        = {Nov},
	journal      = {IEEE Software},
	volume       = 37,
	number       = 6,
	pages        = {65--75},
	doi          = {10.1109/MS.2019.2914663},
	issn         = {1937-4194},
	abstract     = {There has been a push to increase the practical relevance and impact of software engineering research. Although many practitioners and researchers agree that this change is desirable, thus far, only a few concrete actions have been taken by the community. In this article, we present our experiences with a large number of collaborative research projects that have had a practical (industrial) impact.},
	keywords     = {},
	keywords     = {Industry-academia collaborations, experience report, lessons learned, applied research}
}
@inproceedings{felderer2020together,
	title        = {Together we are stronger: Evidence-based reflections on industry-academia collaboration in software testing},
	author       = {Felderer, Michael and Garousi, Vahid},
	year         = 2020,
	booktitle    = {International Conference on Software Quality},
	pages        = {3--12},
	organization = {Springer},
	abstract     = {For a highly relevant and applied research area like software testing industry-academia collaboration is of uttermost importance. In this paper we reflect on how industry-academia collaboration can be improved based on evidence from four empirical studies. We therefore first present four studies providing evidence on the (1) perceived level of challenges in testing activities, (2) focus areas in industrial and academic software testing conferences, (3) synergies between industrial and academic software testing conferences, as well as (4) the need for consideration of grey literature. Then, we reflect on issues, which we think can improve the link and synergies between industry and academia in software testing, i.e., research topics, guidelines and evidence, value and risk, context and scalability, action research and education as well as grey literature and open science.},
	keywords     = {Software testing, Software quality, Industry academia collaboration}
}
@article{MARIJAN2021106473,
	title        = {Industry-Academia research collaboration in software engineering: The Certus model},
	author       = {Dusica Marijan and Arnaud Gotlieb},
	year         = 2021,
	journal      = {Information and Software Technology},
	volume       = 132,
	pages        = 106473,
	doi          = {https://doi.org/10.1016/j.infsof.2020.106473},
	issn         = {0950-5849},
	url          = {https://www.sciencedirect.com/science/article/pii/S0950584920302184},
	keywords     = {Software engineering, Industry-academia collaboration, Research collaboration, Research knowledge co-creation, Collaboration model, Technology transfer, Knowledge transfer, Research exploitation, Research-based innovation},
	abstract     = {Context Research collaborations between software engineering industry and academia can provide significant benefits to both sides, including improved innovation capacity for industry, and real-world environment for motivating and validating research ideas. However, building scalable and effective research collaborations in software engineering is known to be challenging. While such challenges can be varied and many, in this paper we focus on the challenges of achieving participative knowledge creation supported by active dialog between industry and academia and continuous commitment to joint problem solving. Objective This paper aims to understand what are the elements of a successful industry-academia collaboration that enable the culture of participative knowledge creation. Method We conducted participant observation collecting qualitative data spanning 8 years of collaborative research between a software engineering research group on software V&V and the Norwegian IT sector. The collected data was analyzed and synthesized into a practical collaboration model, named the Certus Model. Results The model is structured in seven phases, describing activities from setting up research projects to the exploitation of research results. As such, the Certus model advances other collaborations models from literature by delineating different phases covering the complete life cycle of participative research knowledge creation. Conclusion The Certus model describes the elements of a research collaboration process between researchers and practitioners in software engineering, grounded on the principles of research knowledge co-creation and continuous commitment to joint problem solving. The model can be applied and tested in other contexts where it may be adapted to the local context through experimentation.}
}
@article{WOHLIN2021106678,
	title        = {Guiding the selection of research methodology in industryâacademia collaboration in software engineering},
	author       = {Claes Wohlin and Per Runeson},
	year         = 2021,
	journal      = {Information and Software Technology},
	volume       = 140,
	pages        = 106678,
	doi          = {https://doi.org/10.1016/j.infsof.2021.106678},
	issn         = {0950-5849},
	url          = {https://www.sciencedirect.com/science/article/pii/S0950584921001361},
	keywords     = {Research methodology, Selecting research methodology, Design Science, Action Research, Technology Transfer Model, Industryâacademia collaboration},
	abstract     = {Background: The literature concerning research methodologies and methods has increased in software engineering in the last decade. However, there is limited guidance on selecting an appropriate research methodology for a given research study or project. Objective: Based on a selection of research methodologies suitable for software engineering research in collaboration between industry and academia, we present, discuss and compare the methodologies aiming to provide guidance on which research methodology to choose in a given situation to ensure successful industryâacademia collaboration in research. Method: Three research methodologies were chosen for two main reasons. Design Science and Action Research were selected for their usage in software engineering. We also chose a model emanating from software engineering, i.e., the Technology Transfer Model. An overview of each methodology is provided. It is followed by a discussion and an illustration concerning their use in industryâacademia collaborative research. The three methodologies are then compared using a set of criteria as a basis for our guidance. Results: The discussion and comparison of the three research methodologies revealed general similarities and distinct differences. All three research methodologies are easily mapped to the general research process describeâsolveâpractice, while the main driver behind the formulation of the research methodologies is different. Thus, we guide in selecting a research methodology given the primary research objective for a given research study or project in collaboration between industry and academia. Conclusions: We observe that the three research methodologies have different main objectives and differ in some characteristics, although still having a lot in common. We conclude that it is vital to make an informed decision concerning which research methodology to use. The presentation and comparison aim to guide selecting an appropriate research methodology when conducting research in collaboration between industry and academia.}
}
@inproceedings{10.1145/3439961.3440005,
	title        = {Fostering Industry-Academia Collaboration in Software Engineering Using Action Research: A Case Study},
	author       = {Barbosa, Aline F. and G. Neto, Geraldo Torres and Lencastre, Maria and Fagundes, Roberta A. A. and Santos, Wylliams B.},
	year         = 2020,
	booktitle    = {19th Brazilian Symposium on Software Quality},
	location     = {S\~{a}o Lu\'{\i}s, Brazil},
	publisher    = {Association for Computing Machinery},
	address      = {New York, NY, USA},
	series       = {SBQS'20},
	doi          = {10.1145/3439961.3440005},
	isbn         = 9781450389235,
	url          = {https://doi.org/10.1145/3439961.3440005},
	abstract     = {Background: Studies involving industry-academia collaboration (IAC) have been growing in recent years. On the one hand, scientific research is encouraged to solve real problems and, on the other, the sector in search of promoting innovation in its field. However, IAC support is still a challenging activity for Software Engineering (SE). In recent studies, the Action Research (AR) method has shown promising results in IAC projects. However, more research still needs to be done to verify the effects of applying this method. Goal: In this article, we investigate the perceptions of postgraduate students from an academic master?s and doctoral program in Computer Engineering at a Brazilian University, about the benefits and challenges faced with the application of the AR method as a strategy to promote IAC. Method: The case study was carried out with three teams of students conducting an AR in three software development companies (two private and one public). Results: As for the degree of satisfaction with the course, results revealed that 86% of the students were satisfied with the course. As for the Perception of learning with the use of AR, 100% of the students agreed that the AR method contributed positively to your learning. Conclusion: Finally, we conclude that conducting IAC projects using the AR method was a satisfactory, even though this task has been extremely challenging for all students. We observed that the reasons for this were, first, the fact that students have little experience with research methods directed to Empirical Software Engineering; second, due to the resistance faced in the industry to apply the AR method.},
	articleno    = 44,
	numpages     = 9,
	keywords     = {Industry-Academia-Collaboration, Action Research.}
}
@inproceedings{10.1145/3383219.3386125,
	title        = {Exploring and Improving Industry-Academia Communication in Software Engineering},
	author       = {Rico, Sergio},
	year         = 2020,
	booktitle    = {Proceedings of the Evaluation and Assessment in Software Engineering},
	location     = {Trondheim, Norway},
	publisher    = {Association for Computing Machinery},
	address      = {New York, NY, USA},
	series       = {EASE '20},
	pages        = {379?382},
	doi          = {10.1145/3383219.3386125},
	isbn         = 9781450377317,
	url          = {https://doi.org/10.1145/3383219.3386125},
	abstract     = {Background: Despite the mutual benefit of the industry-academia partnership, the level of joint work is still low. For this reason, the interest in connecting research and practice has increased recently in the academic community. Objective: This research aims to design and apply approaches to improve the knowledge exchange between academic researchers and software engineering practitioners. Methodology: This work can be seen from a design science perspective. Following the design-science paradigm, the knowledge regarding a phenomenon is obtained through the design and evaluation of solutions that apply in a specific context. Consequently, this research work proposes and evaluates approaches to bridge the communication gap. Results: Two approaches have been explored and partially evaluated. The SERP-taxonomy architecture that can be used to describe and link research results and industry challenges, and rapid reviews to foster communication between industry and academia. Conclusion: This thesis will provide empirical evidence of the application of collaborative approaches to improve industry-academia communication and get closer research and practice.},
	numpages     = 4,
	keywords     = {design-science, rapid reviews, Industry academia communication, industry-academia collaboration}
}
@article{rico2021case,
	title        = {A case study of industry--academia communication in a joint software engineering research project},
	author       = {Rico, Sergio and Bjarnason, Elizabeth and Engstr{\"o}m, Emelie and H{\"o}st, Martin and Runeson, Per},
	year         = 2021,
	journal      = {Journal of software: Evolution and Process},
	publisher    = {Wiley Online Library},
	volume       = 33,
	number       = 10,
	pages        = {e2372},
	abstract     = {Empirical software engineering research relies on good communication with industrial partners. Conducting joint research both requires and contributes to bridging the communication gap between industry and academia (IA) in software engineering. This study aims to explore communication between the two parties in such a setting. To better understand what facilitates good IA communication and what project outcomes such communication promotes, we performed a case study, in the context of a long-term IA joint project, followed by a validating survey among practitioners and researchers with experience of working in similar settings. We identified five facilitators of IA communication and nine project outcomes related to this communication. The facilitators concern the relevance of the research, practitioners' attitude and involvement in research, frequency of communication and longevity of the collaboration. The project outcomes promoted by this communication include, for researchers, changes in teaching and new scientific venues, and for practitioners, increased awareness, changes to practice, and new tools and source code. Besides, both parties gain new knowledge and develop social-networks through IA communication. Our study presents empirically based insights that can provide advise on how to improve communication in IA research projects and thus the co-creation of software engineering knowledge that is anchored in both practice and research.}
}
@incollection{chedid2021knowledge,
	title        = {Knowledge Management in University-Software Industry Collaboration},
	author       = {Chedid, Marcello and Teixeira, Leonor},
	year         = 2021,
	booktitle    = {Handbook of Research on Modern Educational Technologies, Applications, and Management},
	publisher    = {IGI Global},
	pages        = {114--130},
	abstract     = {The university-software industry collaboration relationship has been represented a key resource, to the extent that together they can more easily promote technological development that underpins innovation solutions. Through a literature review, this chapter aims to explore the concepts and the facilitator or inhibitor factors associated with the collaboration relationships between university and software industry, taking knowledge management into account. This chapter is organized as follows. In the first section, the authors briefly introduce university, software industry, and knowledge management. The following section, based on the literature reviewed, provides a critical discussion of the university-software industry collaboration relationship, knowledge management in knowledge intensive organizations or community, and knowledge management in collaboration relationship between these two types of industries. Finally, in the rest of the sections, the authors point to future research directions and conclude.}
}
@inproceedings{9226304,
	title        = {Lessons Learned on Research Co-Creation: Making Industry-Academia Collaboration Work},
	author       = {Marijan, Dusica and Gotlieb, Arnaud},
	year         = 2020,
	month        = {Aug},
	booktitle    = {2020 46th Euromicro Conference on Software Engineering and Advanced Applications (SEAA)},
	volume       = {},
	number       = {},
	pages        = {272--275},
	doi          = {10.1109/SEAA51224.2020.00053},
	issn         = {},
	abstract     = {How to increase the impact of software engineering research in the software industry and the society at large is a critical yet perplexing question to answer. Constrained by curtailed communication between researchers and practitioners, research conducted in a vacuum, or the "publish or perish" mindset, research collaborations between industry and academia often fail to deliver on the promise of creating a meaningful impact for practitioners. In an attempt to address these circumstances, this paper gives insights on applying research value co-creation to industry-academia collaboration in software engineering. We observe that the core of co-creation includes commitment, continuous engagement and alignment, aiming to produce value for both sides. Further we contend that co-creation has the potential to bridge the acknowledged research-practice collaboration gap through participative knowledge generation. Our experience stems from an eight-year long large collaborative project between a research organization and Norwegian software industry and public sector services. We suggest that for achieving research impact one needs to rethink the way industry and academia engage in and run collaborative projects. Traditional technology-transfer workflows where research is created in a lab and then pushed to industry practice do not stand the best chance of success. Instead, co-creating research with all stakeholders is likely to bring about the best research impact.},
	keywords     = {Co-creation, software engineering, technology transfer, knowledge transfer, industry-academia collaboration, research collaboration, collaboration gap, collaboration model}
}
@article{garousi2017industry,
	title        = {Industry--academia collaborations in software testing: experience and success stories from canada and turkey},
	author       = {Garousi, Vahid and Eskandar, Matt M and Herkilo{\u{g}}lu, Kadir},
	year         = 2017,
	journal      = {Software Quality Journal},
	publisher    = {Springer},
	volume       = 25,
	number       = 4,
	pages        = {1091--1143},
	keywords     = {Industry?academia collaborations, Software engineering, Software testing, Empirical study, Experience report, Evidence, Challenges, Success factors (patterns), Anti-patterns},
	abstract     = {Collaboration between industry and academia supports improvement and innovation in industry and helps to ensure industrial relevance in academic research. However, many researchers and practitioners believe that the level of joint industry?academia collaborations (IAC) in software engineering (SE) is still relatively very low, compared to the amount of activity in each of the two communities. The goal of the empirical study reported in this paper is to characterize a set of collaborative industry?academia R&D projects in the area of software testing conducted by the authors (based in Canada and Turkey) with respect to a set of challenges, patterns and anti-patterns identified by a recent Systematic Literature Review study, with the aim of contributing to the body of evidence in the area of IAC, for the benefit of SE researchers and practitioners in conducting successful IAC projects in software testing and in software engineering in general. To address the above goal, a pool of ten IAC projects (six completed, two failed and two ongoing) all in the area of software testing, which the authors have led or have had active roles in, were selected as objects of study and were analyzed (both quantitatively and qualitatively) with respect to the set of selected challenges, patterns and anti-patterns. As outputs, the study presents a set of empirical findings and evidence-based recommendations, e.g.: it has been observed that even if an IAC project may seem perfect from many aspects, one single major challenge (e.g., disagreement in confidentiality agreements) can lead to its failure. Thus, we recommend that both parties (academics and practitioners) consider all the challenges early on and proactively work together to eliminate the risk of challenges in IAC projects. We furthermore report correlation and interrelationship of challenges, patterns and anti-patterns with project success measures. This study hopes to encourage and benefit other SE researchers and practitioners in conducting successful IAC projects in software testing and in software engineering in general in the future.}
}
@inproceedings{biesialska2018protocol,
	title        = {Protocol and Tools for Conducting Agile Software Engineering Research in an Industrial-Academic Setting: A Preliminary Study},
	author       = {Biesialska, Katarzyna and Franch, Xavier and Muntés-Mulero, Victor},
	year         = 2018,
	month        = {May},
	booktitle    = {2018 IEEE/ACM 6th International Workshop on Conducting Empirical Studies in Industry (CESI)},
	volume       = {},
	number       = {},
	pages        = {29--32},
	doi          = {},
	issn         = {2575-4793},
	abstract     = {Conducting empirical research in software engineering industry is a process, and as such, it should be generalizable. The aim of this paper is to discuss how academic researchers may address some of the challenges they encounter during conducting empirical research in the software industry by means of a systematic and structured approach. The protocol developed in this paper should serve as a practical guide for researchers and help them with conducting empirical research in this complex environment.},
	keywords     = {Research Methodology, Industry Collaboration, Software Research, Empirical Studies, Empirical Software Engineering, Design Science, Action Research, Agile, Lean}
}
@incollection{petersen2016researcher,
	title        = {A Researcher?s Experiences in Supporting Industrial Software Process Improvement},
	author       = {Petersen, Kai},
	year         = 2016,
	booktitle    = {Managing Software Process Evolution},
	publisher    = {Springer},
	pages        = {235--255},
	keywords     = {Software Engineering, Process Improvement, Software Product Line, Requirement Engineer, Industrial Case Study},
	abstract     = {Industry?academia collaboration in software engineering is essential for the relevance of research, as research may make important contributions to the improvement of software engineering. Thus, software engineering researchers are an asset in software process improvement. In this chapter, I present different experiences of being an embedded researcher in industry contributing to software process improvement. The process improvement works were focused on helping organizations to move from plan-driven processes to agile and lean processes. We will elaborate on the challenges, essential practices, and related benefits that were observed when working closely with industry in the role of embedded researchers. Supporting examples from different published cases form the basis for this experience report.}
}
@article{choma2016softcoder,
	title        = {SoftCoDeR approach: promoting Software Engineering Academia-Industry partnership using CMD, DSR and ESE},
	author       = {Choma, Joelma and Zaina, Luciana A. M. and da Silva, Tiago S.},
	year         = 2016,
	month        = {Dec},
	day          = 15,
	journal      = {Journal of Software Engineering Research and Development},
	volume       = 4,
	number       = 1,
	pages        = 8,
	doi          = {10.1186/s40411-016-0034-5},
	issn         = {2195-1721},
	url          = {https://doi.org/10.1186/s40411-016-0034-5},
	abstract     = {Background: The Academia-Industry partnership has been increasingly encouraged in the software development field. The main focus of the initiatives is driven by the collaborative work where the scientific research work meets the real needs of the Industry. Methods: Aiming to contribute to this effort we have proposed an approach called SoftCoDeR (Software Cooperative Design Research) that combines CMD (Cooperative Method Development), a method of Action Research, to concepts of DSR (Design Science Research). Results:  We have applied the SoftCoDeR approach in a software development company to support a research and development project aiming to integrate User Experience practices into the agile software development process. Conclusions: In this paper, we present new findings about this approach that has been extended with the use of Experimental Software Engineering (ESE) practices to conduct experimental validations of artifacts before putting them in industrial practice.}
}
@article{engstrom2017serp,
	title        = {SERP-test: a taxonomy for supporting industry--academia communication},
	author       = {Engstr{\"o}m, Emelie and Petersen, Kai and Ali, Nauman bin and Bjarnason, Elizabeth},
	year         = 2017,
	journal      = {Software Quality Journal},
	publisher    = {Springer},
	volume       = 25,
	number       = 4,
	pages        = {1269--1305},
	keywords     = {Software testing, Classification, SERP-test, Taxonomy, Methodology, Industry relevance, Intervention, Context, Effect target, Scope},
	abstract     = {This paper presents the construction and evaluation of SERP-test, a taxonomy aimed to improve communication between researchers and practitioners in the area of software testing. SERP-test can be utilized for direct communication in industry academia collaborations. It may also facilitate indirect communication between practitioners adopting software engineering research and researchers who are striving for industry relevance. SERP-test was constructed through a systematic and goal-oriented approach which included literature reviews and interviews with practitioners and researchers. SERP-test was evaluated through an online survey and by utilizing it in an industry?academia collaboration project. SERP-test comprises four facets along which both research contributions and practical challenges may be classified: Intervention, Scope, Effect target and Context constraints. This paper explains the available categories for each of these facets (i.e., their definitions and rationales) and presents examples of categorized entities. Several tasks may benefit from SERP-test, such as formulating research goals from a problem perspective, describing practical challenges in a researchable fashion, analyzing primary studies in a literature review, or identifying relevant points of comparison and generalization of research.}
}
@inproceedings{lavallée2015planning,
	title        = {Planning for the Unknown: Lessons Learned from Ten Months of Non-participant Exploratory Observations in the Industry},
	author       = {Lavallée, Mathieu and Robillard, Pierre N.},
	year         = 2015,
	month        = {May},
	booktitle    = {2015 IEEE/ACM 3rd International Workshop on Conducting Empirical Studies in Industry},
	volume       = {},
	number       = {},
	pages        = {12--18},
	doi          = {10.1109/CESI.2015.10},
	issn         = {},
	abstract     = {Convincing industrial partners to support an exploratory study can be difficult, as benefits are often fuzzy at the beginning. The objective of this paper is to present recommendations for industrial exploratory studies based on our experience. The recommendations are based on ten months of observations during a non-participant, exploratory study with a single industrial partner. This study confirms a number of methodological challenges already identified in the software engineering literature. Based on recommendations from the literature and our own experience, we propose a process for future observational exploratory studies.},
	keywords     = {}
}
@article{chedid2020university,
	title        = {University-software industry collaboration: an empirical study based on knowledge management},
	author       = {Marcello Chedid and Teresa Carvalho and Leonor Teixeira},
	year         = 2020,
	journal      = {Knowledge Management Research \& Practice},
	publisher    = {Taylor & Francis},
	volume       = {0},
	number       = {0},
	pages        = {1--13},
	doi          = {10.1080/14778238.2020.1789002},
	url          = {https://doi.org/10.1080/14778238.2020.1789002},
	abstract     = {ABSTRACTThe current environment that characterises the software industry is extremely dynamic and somewhat complex demanding high-performance solutions, rapid development, and cost-efficiency. Given this scenario, industry is forced to search for new partners, with the university-industry collaboration representing a fundamental resource in promoting innovation and technological development. This study aims to obtain and analyse the perceptions and experiences of representatives of this industry and the university, in order to identify a set of factors that could enhance and/or be the source of a sustainable collaboration, based on knowledge management. In nutshell, the results show that motivations are associated with the immediate opportunities or needs of each of those directly involved in the collaboration take priority, without building a sustainable collaboration. This collaboration is generally conducted through informal communication channels, which makes it difficult to capture and disseminate knowledge to other members of each of the related organisations.},
	keywords     = {Tacit knowledgesoftware industryknowledge managementcollaborationuniversity-industry}
}
@inproceedings{walenstein2019generative,
	title        = {Generative Modeling Games for Exploratory Industry-Academic Research},
	author       = {Walenstein, Andrew and Malton, Andrew},
	year         = 2019,
	month        = {May},
	booktitle    = {2019 IEEE/ACM Joint 7th International Workshop on Conducting Empirical Studies in Industry (CESI) and 6th International Workshop on Software Engineering Research and Industrial Practice (SER IP)},
	volume       = {},
	number       = {},
	pages        = {18--21},
	doi          = {10.1109/CESSER-IP.2019.00011},
	issn         = {2575-4793},
	abstract     = {We present an approach to industry-academic research collaboration in which generative modeling is the central mechanism for not only enabling tactical coordination in exploratory research, but also for ensuring strategic alignment of both partners through a cooperative/competitive game approach of model evolution. Thoughts and experiences are offered for its applicability in contexts common relevant to software engineering research.},
	keywords     = {generative models, collaborative research, research process, adversarial modeling}
}
@article{awasthy2020framework,
	title        = {A framework to improve university--industry collaboration},
	author       = {Awasthy, Richa and Flint, Shayne and Sankarnarayana, Ramesh and Jones, Richard L},
	year         = 2020,
	journal      = {Journal of Industry-University Collaboration},
	publisher    = {Emerald Publishing Limited},
	keywords     = {University?industry collaboration, UIC, Collaboration, Framework, Practices},
	abstract     = {Purpose ? The purpose of this paper is to propose a framework to improve the effectiveness of university? industry collaboration (UIC). This work enhances the existing body of literature and knowledge regarding collaboration and offers concrete steps to be taken for effective collaboration between universities and industries. Research Methodology ? A literature review to study the best practices, impediments to collaboration and the various models proposed in the past for successful UIC was conducted. A workshop and focus-group meetings of practitioners and academic researchers was designed and organised to explore the current state of the university?industry engagement within the Australian Capital Territory (ACT) region and gather inputs regarding possible approaches to improve collaboration. The findings from the literature review and the results from this qualitative research regarding the approaches to improve the effectiveness of the collaboration were analysed. Results and implications ? The study discovers that various measures have been proposed in the form of best practices or models to improve the effectiveness of UIC. However, these measures often address a specific concern such as technology transfer, intellectual property (IP), etc. There is a scope for a comprehensive holistic framework to address many aspects of UIC in order to improve effectiveness and achieve success. A framework for improving the effectiveness of collaboration considering a comprehensive list of factors operating in a broad context within the collaboration system was proposed. Originality/value ? The framework builds on previous literature dealing with measures for successful UIC. However, it is the first of its kind, in the researcher's knowledge, in terms of comprehensiveness of the factors contributing to establishing and sustaining successful collaboration. The value of the individual experience of the participants in this qualitative research, which is on average more than 10 years in the software engineering field, validates the importance and quality of the data collected. The addition of these results to the framework increases its validity.The framework can be utilised by universities and industry practitioners to foster successful and effective collaboration. The results have significant relevance, particularly within the Australian context as the government has intensified the adoption of measures to encourage and improve collaboration between universities and the industry.}
}
@article{SALLEH2018161,
	title        = {Recruitment, engagement and feedback in empirical software engineering studies in industrial contexts},
	author       = {Norsaremah Salleh and Rashina Hoda and Moon Ting Su and Tanjila Kanij and John Grundy},
	year         = 2018,
	journal      = {Information and Software Technology},
	volume       = 98,
	pages        = {161--172},
	doi          = {https://doi.org/10.1016/j.infsof.2017.12.001},
	issn         = {0950-5849},
	url          = {https://www.sciencedirect.com/science/article/pii/S0950584917303786},
	keywords     = {Empirical software engineering, Industry, Research, Grounded theory, Survey, Case study, Quasi-experiment, Challenges, Solutions, Recommendations},
	abstract     = {Context Research carried out in industrial contexts are recognized as important to the advancement of software engineering knowledge and practice. However, several challenges present themselves in the three key phases of research carried out in industrial contexts, recruitment, engagement and feedback. Objective The aim of this paper is to report the challenges related to each of the three phases of research carried out in industrial contexts, and the associated solutions we have found useful from our combined body of industrial empirical software engineering research studies spanning four case studies, five grounded theory studies, seven survey studies and two quasi-experimental studies involving a total of over 400 industrial participants in the past decade. Method We designed an instrument to gather details of our studies carried out in industrial contexts and performed thematic analysis to synthesise and draw out the most prominent challenges faced. Results We present a set of recommendations around study design, conduct and reporting to try and mitigate some of these challenges as they apply specifically to industrial empirical research. Conclusion These recommendations can guide researchers, novice and experienced, working in close collaboration with industry stakeholders to make the most of their industrial software engineering research.}
}
@article{MIKKONEN201834,
	title        = {Continuous and collaborative technology transfer: Software engineering research with real-time industry impact},
	author       = {Tommi Mikkonen and Casper Lassenius and Tomi MÃ¤nnistÃ¶ and Markku Oivo and Janne JÃ¤rvinen},
	year         = 2018,
	journal      = {Information and Software Technology},
	volume       = 95,
	pages        = {34--45},
	doi          = {https://doi.org/10.1016/j.infsof.2017.10.013},
	issn         = {0950-5849},
	url          = {https://www.sciencedirect.com/science/article/pii/S0950584917304007},
	keywords     = {Technology transfer, Collaborative research, Software engineering research, Publicâprivate partnership},
	abstract     = {Context: Traditional technology transfer models rely on the assumption that innovations are created in academia, after which they are transferred to industry using a sequential flow of activities. This model is outdated in contemporary software engineering research that is done in close collaboration between academia and industry and in large consortia rather than on a one-on-one basis. In the new setup, research can be viewed as continuous co-experimentation, where industry and academia closely collaborate and iteratively and jointly discover problems and develop, test, and improve solutions. Objective: The objective of the paper is to answer the following research questions: How can high-quality, ambitious software engineering research in a collaborative setup be conducted quickly and on a large scale? How can real-time business feedback to continuously improve candidate solutions be gained? Method: The proposed model has been created, refined, and evaluated in two large, national Finnish software research programs. For this paper, we conducted thematic interviews with representatives of four companies who participated in these programs. Results: The fundamental change is in the mindset of the participants from technology push by academia to technology pull by companies, resulting in co-creation. Furthermore, continuous cooperation between participants enables solutions to evolve in rapid cycles and forms a scalable model of interaction between research institutes and companies. Conclusions: The multifaceted nature of software engineering research calls for numerous approaches. In particular, when working with human-related topics such as company culture and development methods, many discoveries result from seamless collaboration between companies and research institutes.}
}
@inproceedings{9474829,
	title        = {Exploring the Dimensions of University-Company Collaborations: Research, Talent, and Beyond},
	author       = {Fraser, Steven and Mancl, Dennis},
	year         = 2021,
	booktitle    = {2021 IEEE/ACM 8th International Workshop on Software Engineering Research and Industrial Practice (SER IP)},
	volume       = {},
	number       = {},
	pages        = {57--64},
	doi          = {10.1109/SER-IP52554.2021.00017},
	keywords     = {university-company relations , strategies , tactics , collaboration scenarios , research , virtualization , frameworks , innovation , metrics},
	abstract     = {This paper explores the benefits of university-company collaborations beyond research and talent - primarily from a US and Canadian perspective. Company connections to specific universities may initially be based on research relationships or talent acquisition needs. Additional collaborative dimensions may include marketing, sales, public policy, local economic development, and philanthropy. University-company partnerships are complex and fragile. To build effective and enduring partnerships, we describe collaboration scenarios to: incubate collaborations, connect experts, assess and communicate collaborative value, and grow relationships. The paper presents a set of recommended activities to achieve a greater sustained impact for innovation and learning: orchestrate collaborative events, measure and track results, facilitate learning, catalyze research through philanthropy, leverage regional development and government incentives, incubate a collaborative ecosystem, and make collaboration results more visible and actionable.}
}
@inbook{inbook,
	title        = {Third Generation Industrial Co-production in Software Engineering},
	author       = {Gorschek, Tony and Wnuk, Krzysztof},
	year         = 2020,
	month        = {03},
	pages        = {https://arxiv.org/submit/3099149/view},
	doi          = {10.1007/978-3-030-32489-6_18},
	isbn         = {978-3-030-32488-9},
	keywords     = {},
	abstract     = {Industry-academia collaboration is one of the cornerstones of empirical software engineering. The role of researchers should be developing new practices and principles that enable industry in meeting the engineering challenges today and in the future. This chapter describes the third generation of industrial co-production in software engineering that includes seven steps. The co-production model and experiences associated with its use represent deep and long-term co-production with over thirty companies, many of which are still active partners in SERL}
}
@inproceedings{7321189,
	title        = {An Exploratory Study on Technology Transfer in Software Engineering},
	author       = {Diebold, Philipp and Vetro, Antonio and Mendez Fernandez, Daniel},
	year         = 2015,
	booktitle    = {2015 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)},
	volume       = {},
	number       = {},
	pages        = {1--10},
	doi          = {10.1109/ESEM.2015.7321189},
	keywords     = {Technology transfer, Companies, Industries, Context, Software engineering, Adaptation models},
	abstract     = {Background: Technology transfer is one key to the success of research projects, especially in Software Engineering, where the (practical) impact of the outcome may depend not only on the reliability and feasibility of technologies, but also on their applicability to industrial settings. However, there is limited knowledge on the current state of practice and how to assess the success of technology transfer. Objective: We aim at elaborating a set of hypotheses on how technology transfer takes place in Software Engineering research projects. Method: We designed an exploratory survey with the participants of two large research projects in Germany, which involve both industrial and academic partners in the area of model driven development for embedded systems. Results: Base on the extracted respondents answers of this survey, we defined a resulting theory which is based on the following set of main hypothesis: Most of the technologies developed in research projects are not mature enough for a direct application, but need post-project customisation to fit the industrial contexts (H1). Common models that represent technology transfer as a transaction of an object from a transferor to a transferee does not fit industrial reality (H2). Additionally, technology transfer takes place without an explicit process (H3). Regarding transfer mediums, most used mediums are human-intensive (H5) and industry organisations gain new knowledge mainly within their own confines (H4). Finally the motivations that drive the transfer in industry and academia are heterogenous (H6). Conclusions: From the theoretical perspective, this theory and set of hypotheses extracted from the survey results will be further explored and tested in different follow-up activities. This initial set, however, already may serve as a basis for independent assessments from other researchers to collaboratively shed light on a how technology transfer takes place in Software Engineering research projects, which are the barriers, and how to improve the transfer into practice. From the practical perspective, our results may be used as a basis for an evaluation framework for the transfer of the developed technologies in our projects. This would also help companies in getting new developed technologies transfer easier to their specific context.}
}
@article{CARTAXO201880,
	title        = {Towards a model to transfer knowledge from software engineering research to practice},
	author       = {Bruno Cartaxo and Gustavo Pinto and Sergio Soares},
	year         = 2018,
	journal      = {Information and Software Technology},
	volume       = 97,
	pages        = {80--82},
	doi          = {https://doi.org/10.1016/j.infsof.2018.01.001},
	issn         = {0950-5849},
	url          = {https://www.sciencedirect.com/science/article/pii/S0950584918300028},
	keywords     = {Knowledge transfer, Rapid reviews, Evidence briefings, Evidence based software engineering},
	abstract     = {Context: Many researchers argue that Software Engineering (SE) research lacks connection with practice. Objective: We propose a model aimed at supporting researchers to transfer knowledge to SE practice. Method: This model is built upon the foundation of Rapid Reviews and Evidence Briefings. These two key elements have been proven effective in other domains, such as medicine, and initial results suggest that they can play a prominent role in SE as well. Results: We discuss how to apply the model as well as possible challenges that might hinder its adoption. Conclusion: We believe that both SE practitioners and researchers could benefit from the proposed model. We expect replications and instantiations of the model in the future.}
}
@inproceedings{7203018,
	title        = {Fast Feedback Cycles in Empirical Software Engineering Research},
	author       = {Vetrò, Antonio and Ognawala, Saahil and Fernández, Daniel Méndez and Wagner, Stefan},
	year         = 2015,
	booktitle    = {2015 IEEE/ACM 37th IEEE International Conference on Software Engineering},
	volume       = 2,
	number       = {},
	pages        = {583--586},
	doi          = {10.1109/ICSE.2015.198},
	keywords     = {Empirical methods, Research methods, Data mining, Knowledge transfer},
	abstract     = {Background/Context: Gathering empirical knowledge is a time consuming task and the results from empirical studies often are soon outdated by new technological solutions. As a result, the impact of empirical results on software engineering practice is often not guaranteed.Objective/Aim: In this paper, we summarise the ongoing discussion on "Empirical Software Engineering 2.0" as a way to improve the impact of empirical results on industrial practices. We propose a way to combine data mining and analysis with domain knowledge to enable fast feedback cycles in empirical software engineering research.Method: We identify the key concepts on gathering fast feedback in empirical software engineering by following an experience-based line of reasoning by argument. Based on the identified key concepts, we design and execute a small proof of concept with a company to demonstrate potential benefits of the approach.Results: In our example, we observed that a simple double feedback mechanism notably increased the precision of the data analysis and improved the quality of the knowledge gathered.Conclusion: Our results serve as a basis to foster discussion and collaboration within the research community for a development of the idea.}
}
@inproceedings{10.1145/3319008.3319358,
	title        = {Contextualizing Research Evidence through Knowledge Translation in Software Engineering},
	author       = {Badampudi, Deepika and Wohlin, Claes and Gorschek, Tony},
	year         = 2019,
	booktitle    = {Proceedings of the Evaluation and Assessment on Software Engineering},
	location     = {Copenhagen, Denmark},
	publisher    = {Association for Computing Machinery},
	address      = {New York, NY, USA},
	series       = {EASE '19},
	pages        = {306?311},
	doi          = {10.1145/3319008.3319358},
	isbn         = 9781450371452,
	url          = {https://doi.org/10.1145/3319008.3319358},
	abstract     = {Usage of software engineering research in industrial practice is a well-known challenge. Synthesis of knowledge from multiple research studies is needed to provide evidence-based decision-support for industry. The objective of this paper is to present a vision of how a knowledge translation framework may look like in software engineering research, in particular how to translate research evidence into practice by combining contextualized expert opinions with research evidence. We adopted the framework of knowledge translation from health care research, adapted and combined it with a Bayesian synthesis method. The framework provided in this paper includes a description of each step of knowledge translation in software engineering. Knowledge translation using Bayesian synthesis intends to provide a systematic approach towards contextualized, collaborative and consensus-driven application of research results. In conclusion, this paper contributes towards the application of knowledge translation in software engineering through the presented framework.},
	numpages     = 6,
	keywords     = {Decision-making, Bayesian synthesis, Knowledge translation}
}
@incollection{runeson2020design,
	title        = {The design science paradigm as a frame for empirical software engineering},
	author       = {Runeson, Per and Engstr{\"o}m, Emelie and Storey, Margaret-Anne},
	year         = 2020,
	booktitle    = {Contemporary empirical methods in software engineering},
	publisher    = {Springer},
	pages        = {127--147},
	keywords     = {},
	abstract     = {Software engineering research aims to help improve real-world practice. With the adoption of empirical software engineering research methods, the understanding of real-world needs and validation of solution proposals have evolved. However, the philosophical perspective on what constitutes theoretical knowledge and research contributions in software engineering is less discussed in the community. In this chapter, we use the design science paradigm as a frame for articulating and communicating prescriptive software engineering research contributions. Design science embraces problem conceptualization, solution (or artifact) design, and validation of solution proposals, with recommendations for practice phrased as technological rules. Design science is used in related research areas, particularly information systems and management theory. We elaborate the constructs of design science for software engineering, relate them to different conceptualizations of design science, and provide examples of possible research methods. We outline how the assessment of research contributions, industry?academia communication, and theoretical knowledge building may be supported by the design science paradigm. Finally, we provide examples of software engineering research presented through a design science lens.}
}
@inproceedings{7210488,
	title        = {Integration of SE Research and Industry: Reflections, Theories and Illustrative Example},
	author       = {Yamashita, Aiko},
	year         = 2015,
	booktitle    = {2015 IEEE/ACM 2nd International Workshop on Software Engineering Research and Industrial Practice},
	volume       = {},
	number       = {},
	pages        = {11--17},
	doi          = {10.1109/SERIP.2015.11},
	keywords     = {Knowledge transfer, Innovation, Collaboration, Software Engineering, Research, Industry practice},
	abstract     = {Currently, there is limited literature in Software Engineering (SE) that sheds light on the success factors and challenges for knowledge transfer between SE scientists and practitioners. Upon reflections on personal experiences from both academia and industry, this paper attempts to underpin some of the challenges for a successful collaboration, and relate them back to existing theories in the fields of Management, Medicine and Social Sciences. Furthermore, strategies for overcoming some of the challenges are provided and illustrated via a simplified example within the topic of Software Evolution. The intention of this paper is to establish a dialogue for an overall strategy within our field, by providing an illustrative example, and to promote a deeper reflection on the term 'knowledge transfer', which has predominantly focused on an unidirectional knowledge flow from academia to industry.}
}
@article{pino2016research,
	title        = {A research framework for building SPI proposals in small organizations: the COMPETISOFT experience},
	author       = {Pino, Francisco J and Garc{\'\i}a, Fel{\'\i}x and Piattini, Mario and Oktaba, Hanna},
	year         = 2016,
	journal      = {Software Quality Journal},
	publisher    = {Springer},
	volume       = 24,
	number       = 3,
	pages        = {489--518},
	keywords     = {},
	abstract     = {Establishing a research strategy that is suitable for undertaking research on software engineering is vital if we are to guarantee that research products are developed and validated following a systematic and coherent method. We took this into account as we carried out the COMPETISOFT research project, which investigated software process improvement (SPI) in the context of Latin American small companies. That experience has enabled us to develop a research strategy based on the integrated use of action research and case study methods. This paper introduces the proposed research strategy and provides extensive discussion of its application for: (1) developing the Methodological framework of COMPETISOFT for SPI, (2) putting this framework into practice in eight small software companies, and (3) refine the Methodological framework due to the practice feedback. The use of this research strategy allowed us to observe that it was suitable for developing, refining, improving, applying, and validating COMPETISOFT?s Methodology framework. Furthermore, having seen it applied, we believe that this strategy offers a successful integration of action research and case study, which can be useful for conducting research in other software engineering areas which address needs of small software companies.}
}
@article{PETERSEN2021103541,
	title        = {Context checklist for industrial software engineering research and practice},
	author       = {Kai Petersen and Jan Carlson and Efi Papatheocharous and Krzysztof Wnuk},
	year         = 2021,
	journal      = {Computer Standards & Interfaces},
	volume       = 78,
	pages        = 103541,
	doi          = {https://doi.org/10.1016/j.csi.2021.103541},
	issn         = {0920-5489},
	url          = {https://www.sciencedirect.com/science/article/pii/S0920548921000362},
	keywords     = {Context, Software engineering, Evidence-based software engineering, Empirical, Checklist},
	abstract     = {The relevance of context is particularly stressed in case studies, where it is said that âcase study is an empirical method aimed at investigating contemporary phenomena in their contextâ. In this research, we classify context information and provide a context checklist for industrial software engineering. The checklist serves the purpose of (a) supporting researchers and practitioners in characterizing the context in which they are working; (b) supporting researchers with a checklist to identify relevant contextual information to elicit and report during primary and secondary studies. We utilized a systematic approach for constructing the classification of context information and provided a detailed definition for each item. We collected feedback from researchers as well as practitioners. The usefulness of the checklist was perceived more positively by researchers than practitioners, though they highlighted benefits (raising awareness of the importance of context and usefulness for management). The understandability was perceived positively by both practitioners and researchers. The checklist may serve as a meta-model, forming the basis for specific adaptations for different research areas, and as input for researchers deciding which context information to extract in systematic reviews. The checklist may also help researchers in reporting context in research papers.}
}
@article{sozer2017model,
	title        = {Model-based testing of digital TVs: an industry-as-laboratory approach},
	author       = {S{\"o}zer, Hasan and Gebizli, Ceren {\c{S}}ahin},
	year         = 2017,
	journal      = {Software Quality Journal},
	publisher    = {Springer},
	volume       = 25,
	number       = 4,
	pages        = {1185--1202},
	keywords     = {},
	abstract     = {Model-based testing is a promising approach for increasing the efficiency of the testing process and for improving software quality. It has been employed in the industry for more than a decade. Nevertheless, there are still challenges regarding its application in different domains. Some of these challenges are general, while some others are domain-specific. In this paper, we explain our experiences in enhancing model-based testing for its adoption in the consumer electronics domain, in particular for Digital TV systems. We applied the so-called industry-as-laboratory approach to define/refine research problems and evaluate our research results. We summarize these results and provide an evaluation of relevant research problems for our context. We observed that the industry-as-laboratory approach is highly effective for industry-academia collaboration and technology transfer in the scope of model-based software testing.}
}