@inproceedings{7167422,
 abstract = {Context: The difficulty (not just effort) of obtaining access for software engineering empirical studies in industry varies greatly. Supposedly, some of this variance in difficulty is particular, stemming from properties of individual contexts (the industrial partners and their work), while the rest is repeatable, related to properties of the research question and research design. Question: What are these recurring difficulty factors that arise from research question and research design? What mechanisms produce their influence? Method: We use ideation and knowledge extraction from research experience to identify potential difficulty factors, use expert discussion to understand their mechanisms, and use concept analysis to arrange them into a taxonomy. We evaluate the result by comparatively applying it to two research efforts pursued by the same research group. Results: We find six scope factors, five problematic intervention effects factors, and seven helpful intervention (side-)effects factors. Conclusion: Considering these factors systematically during the formulation of a research question and the design of a research method can help with balancing data collection difficulty with results validity and relevance.},
 author = {Prechelt, Lutz and Zieris, Franz and Schmeisky, Holger},
 booktitle = {2015 IEEE/ACM 3rd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1109/CESI.2015.11},
 issn = {},
 keywords = {},
 month = {May},
 number = {},
 pages = {19-25},
 title = {Difficulty Factors of Obtaining Access for Empirical Studies in Industry},
 volume = {},
 year = {2015}
}

@inproceedings{7515473,
 abstract = {The global software industry and the Software Engineering (SE) academia are two large communities. However, unfortunately, the level of joint industry-academia collaborations (IAC) in SE is still relatively very low, compared to the amount of activity in each of the two communities. Selecting the right topic for a new IAC has been reported to be challenging and often a deal-maker or-breaker for the start of IACs. Motivated by the above need, the goal of this paper is to propose experience-based guidelines from our 10+ software testing IACs in the past several years in Canada and Turkey to effectively and efficiently select right topics for IACs in software testing (also easily generalizable to other areas of SE), for the benefit of SE researchers and practitioners in starting new IACs. The experience and evidence supporting the guidelines in this paper are drawn from the authors' past projects and also seven on-going software-testing projects in the context of a large Turkish software and systems company. The topic-selection process has involved interaction with company representatives in the form of both multiple group discussions and separate face-to-face meetings while utilizing grounded-theory to find (converge to) topics which would be 'interesting' and useful from both industrial and academic perspectives. To increase the success of our topic selection process, we also utilized two other sources of information from the literature: (1) a set of four fitness criteria for topic selection in industry experiments, and (2) challenges and best practices for IAC, specific to project inception, as synthesized in a recent systematic literature review. We believe the results of this paper would be helpful for other researchers and practitioners not only in software testing but also in software engineering in general in increasing their chances of success in project inception and topic selection phase.},
 author = {Garousi, Vahid and Herkiloglu, Kadir},
 booktitle = {2016 IEEE International Conference on Software Testing, Verification and Validation (ICST)},
 doi = {10.1109/ICST.2016.7},
 issn = {},
 keywords = {},
 month = {April},
 number = {},
 pages = {213-222},
 title = {Selecting the Right Topics for Industry-Academia Collaborations in Software Testing: An Experience Report},
 volume = {},
 year = {2016}
}

@article{7592412,
 abstract = {Background: Test-driven development (TDD) is a technique that repeats short coding cycles interleaved with testing. The developer first writes a unit test for the desired functionality, followed by the necessary production code, and refactors the code. Many empirical studies neglect unique process characteristics related to TDD iterative nature. Aim: We formulate four process characteristic: sequencing, granularity, uniformity, and refactoring effort. We investigate how these characteristics impact quality and productivity in TDD and related variations. Method: We analyzed 82 data points collected from 39 professionals, each capturing the process used while performing a specific development task. We built regression models to assess the impact of process characteristics on quality and productivity. Quality was measured by functional correctness. Result: Quality and productivity improvements were primarily positively associated with the granularity and uniformity. Sequencing, the order in which test and production code are written, had no important influence. Refactoring effort was negatively associated with both outcomes. We explain the unexpected negative correlation with quality by possible prevalence of mixed refactoring. Conclusion: The claimed benefits of TDD may not be due to its distinctive test-first dynamic, but rather due to the fact that TDD-like processes encourage fine-grained, steady steps that improve focus and flow.},
 author = {Fucci, Davide and Erdogmus, Hakan and Turhan, Burak and Oivo, Markku and Juristo, Natalia},
 doi = {10.1109/TSE.2016.2616877},
 issn = {1939-3520},
 journal = {IEEE Transactions on Software Engineering},
 keywords = {},
 month = {July},
 number = {7},
 pages = {597-614},
 title = {A Dissection of the Test-Driven Development Process: Does It Really Matter to Test-First or to Test-Last?},
 volume = {43},
 year = {2017}
}

@article{8704922,
 abstract = {There has been a push to increase the practical relevance and impact of software engineering research. Although many practitioners and researchers agree that this change is desirable, thus far, only a few concrete actions have been taken by the community. In this article, we present our experiences with a large number of collaborative research projects that have had a practical (industrial) impact.},
 author = {Garousi, Vahid and Shepherd, David C. and Herkiloglu, Kadir},
 doi = {10.1109/MS.2019.2914663},
 issn = {1937-4194},
 journal = {IEEE Software},
 keywords = {},
 month = {Nov},
 number = {6},
 pages = {65-75},
 title = {Successful Engagement of Practitioners and Software Engineering Researchers: Evidence From 26 International Industry–Academia Collaborative Projects},
 volume = {37},
 year = {2020}
}

@article{Fucci_2015,
 abstract = {},
 author = {Davide Fucci and Burak Turhan and Natalia Juristo and Oscar Dieste and Ayse Tosun-Misirli and Markku Oivo},
 doi = {10.1016/j.infsof.2015.08.004},
 journal = {Information and Software Technology},
 month = {dec},
 pages = {82--97},
 publisher = {Elsevier {BV}},
 title = {Towards an operationalization of test-driven development skills: An industrial empirical study},
 url = {https://doi.org/10.1016%2Fj.infsof.2015.08.004},
 volume = {68},
 year = {2015}
}

@article{Garousi_2016,
 abstract = {},
 author = {Vahid Garousi and Matt M. Eskandar and Kadir Herkilo{\u{g}}lu},
 doi = {10.1007/s11219-016-9319-5},
 journal = {Software Quality Journal},
 month = {jun},
 number = {4},
 pages = {1091--1143},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Industry{\textendash}academia collaborations in software testing: experience and success stories from Canada and Turkey},
 url = {https://doi.org/10.1007%2Fs11219-016-9319-5},
 volume = {25},
 year = {2016}
}

@article{Garousi_2016,
 abstract = {Context: The global software industry and the software engineering (SE) academia are two large communities. However, unfortunately, the level of joint industry-academia collaborations in SE is still relatively very low, compared to the amount of activity in each of the two communities. It seems that the two ’camps’ show only limited interest/motivation to collaborate with one other. Many researchers and practitioners have written about the challenges, success patterns (what to do, i.e., how to collaborate) and anti-patterns (what not do do) for industry-academia collaborations.},
 author = {Vahid Garousi and Kai Petersen and Baris Ozkan},
 doi = {10.1016/j.infsof.2016.07.006},
 journal = {Information and Software Technology},
 month = {nov},
 pages = {106--127},
 publisher = {Elsevier {BV}},
 title = {Challenges and best practices in industry-academia collaborations in software engineering: A systematic literature review},
 url = {https://doi.org/10.1016%2Fj.infsof.2016.07.006},
 volume = {79},
 year = {2016}
}

@article{Garousi_2020,
 abstract = {},
 author = {Vahid Garousi and Markus Borg and Markku Oivo},
 doi = {10.1007/s10664-020-09803-0},
 journal = {Empirical Software Engineering},
 month = {mar},
 number = {3},
 pages = {1687--1754},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Practical relevance of software engineering research: synthesizing the community's voice},
 url = {https://doi.org/10.1007%2Fs10664-020-09803-0},
 volume = {25},
 year = {2020}
}

@inproceedings{Huijgens_2020,
 abstract = {},
 author = {Hennie Huijgens and Ayushi Rastogi and Ernst Mulders and Georgios Gousios and Arie van Deursen},
 booktitle = {Proceedings of the 28th {ACM} Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
 doi = {10.1145/3368089.3409717},
 month = {nov},
 publisher = {{ACM}},
 title = {Questions for data scientists in software engineering: a replication},
 url = {https://doi.org/10.1145%2F3368089.3409717},
 year = {2020}
}

@inproceedings{Ivanov_2017,
 abstract = {It is a cliche to say that there is a gap between research and practice. As the interest and importance in the practical impact of research has been growing, the gap between research and practice is expected to be narrowing. However, our study reveals that there still seems to be a wide gap. We survey so ware engineers about what they care about when developing so ware. We then compare our survey results with the research topics of the papers published in ICSE/FSE recently. We found the following discrepancy: while so ware engineers care more about so ware development productivity than the quality of so ware, papers on research areas closely related to so ware productivity--such as so ware development process management and so ware development techniques--are significantly less published than papers on so ware verification and validation that account for more than half of publications. We also found that so ware engineers are in great need for techniques for accurate effort estimation, and they are not necessarily knowledgable about techniques they can use to meet their needs.},
 author = {Vladimir Ivanov and Alan Rogers and Giancarlo Succi and Jooyong Yi and Vasilii Zorin},
 booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
 doi = {10.1145/3106237.3117778},
 month = {aug},
 publisher = {{ACM}},
 title = {What do software engineers care about? gaps between research and practice},
 url = {https://doi.org/10.1145%2F3106237.3117778},
 year = {2017}
}

@inproceedings{Juristo_2016,
 abstract = {The Experimental Software Engineering Industry Laboratory (ESEIL) project funded by the Finland Distinguished Professor Programme (FiDiPro) kicked off in January 2013. The aim of this research is to gain insight into whether experiments in the software industry can play the role of clinical trials in medicine, that is, field test laboratory findings, acting as the last link in the experimental chain. Besides this research goal, we believe that companies can benefit from the conducted experiments by applying the resulting evidence in their decision-making processes.
Controlled experiments in laboratory settings are commonplace in software engineering, but experiments in industry are thin on the ground. Of the few existing cases, most are 1-1 (running one experiment at one company), just a few are n-1 (running n experiments at one company) and still fewer are 1-n (running one and the same experiment at n companies). So far we have conducted the same experiment at seven sites of six companies (four Finnish, one Estonian and one Spanish), and the results have been transferred so that these companies could use the local and global results in decision-making.
This talk will discuss several striking and unexpected behaviours regarding both the developers participating in the experiments and the managers receiving and using the results of the experiments. The talk presents challenges and lessons learnt in recruiting participants for experiments, designing and running the experiment, as well as transferring the results.},
 author = {Natalia Juristo},
 booktitle = {Proceedings of the 4th International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1145/2896839.2896846},
 month = {may},
 publisher = {{ACM}},
 title = {Experiences conducting experiments in industry},
 url = {https://doi.org/10.1145%2F2896839.2896846},
 year = {2016}
}

@incollection{Lima_2021,
 abstract = {The purpose of this article is to provide a better understanding of how to effectively develop design projects that simultaneously leverage industry and academic partners, participants from various disciplinary backgrounds, and various levels of expertise to solve complex problems. The article reports a single case of an ongoing project focused on designing smart and connected devices for mobility, which integrates the dimensions of interest. Our findings highlight the importance of careful planning of the collaborative process, contemplating offline and real-time communication opportunities, identifying cross-boundary roles, and considering the development of shared expertise and knowledge within the team. By confronting these findings with key literature, we offer five recommendations to inform similar future projects.KeywordsDesignBoundary crossingComplex problemsInnovationProject coordination},
 author = {Filipe Lima and Alison Burrows and L{\'{\i}}dia Lemos and Priscila Lucena and Ricardo Pessoa and Rui Jos{\'{e}} and Paula Trigueiros},
 booktitle = {Springer Series in Design and Innovation},
 doi = {10.1007/978-3-030-89735-2_23},
 month = {oct},
 pages = {274--286},
 publisher = {Springer International Publishing},
 title = {An Industry-Academia, Multidisciplinary and Expertise-Heterogeneous Design Approach: A Case Study on Designing for Mobility},
 url = {https://doi.org/10.1007%2F978-3-030-89735-2_23},
 year = {2021}
}

@incollection{Petersen_2016,
 abstract = {Industry–academia collaboration in software engineering is essential for the relevance of research, as research may make important contributions to the improvement of software engineering. Thus, software engineering researchers are an asset in software process improvement. In this chapter, I present different experiences of being an embedded researcher in industry contributing to software process improvement. The process improvement works were focused on helping organizations to move from plan-driven processes to agile and lean processes. We will elaborate on the challenges, essential practices, and related benefits that were observed when working closely with industry in the role of embedded researchers. Supporting examples from different published cases form the basis for this experience report.},
 author = {Kai Petersen},
 booktitle = {Managing Software Process Evolution},
 doi = {10.1007/978-3-319-31545-4_12},
 pages = {235--255},
 publisher = {Springer International Publishing},
 title = {A Researcher's Experiences in Supporting Industrial Software Process Improvement},
 url = {https://doi.org/10.1007%2F978-3-319-31545-4_12},
 year = {2016}
}

@article{Rico_2021,
 abstract = {},
 author = {Sergio Rico and Elizabeth Bjarnason and Emelie Engström and Martin Höst and Per Runeson},
 doi = {10.1002/smr.2372},
 journal = {Journal of Software: Evolution and Process},
 month = {jul},
 number = {10},
 publisher = {Wiley},
 title = {A case study of industry{\textendash}academia communication in a joint software engineering research project},
 url = {https://doi.org/10.1002%2Fsmr.2372},
 volume = {33},
 year = {2021}
}

@article{Sherman_2018,
 abstract = {},
 author = {Sofia Sherman and Irit Hadar and Gil Luria},
 doi = {10.1016/j.infsof.2017.12.006},
 journal = {Information and Software Technology},
 month = {jun},
 pages = {148--160},
 publisher = {Elsevier {BV}},
 title = {Leveraging organizational climate theory for understanding industry-academia collaboration},
 url = {https://doi.org/10.1016%2Fj.infsof.2017.12.006},
 volume = {98},
 year = {2018}
}

@article{Taghandiki_2016,
 abstract = {},
 author = {Kazem Taghandiki and   and Ahmad Zaeri and Amirreza Shirani},
 doi = {10.5815/ijmecs.2016.11.03},
 journal = {International Journal of Modern Education and Computer Science},
 month = {nov},
 number = {11},
 pages = {20--27},
 publisher = {{MECS} Publisher},
 title = {A Supervised Approach for Automatic Web Documents Topic Extraction Using Well-Known Web Design Features},
 url = {https://doi.org/10.5815%2Fijmecs.2016.11.03},
 volume = {8},
 year = {2016}
}

@article{Tosun_2016,
 abstract = {Existing empirical studies on test-driven development (TDD) report different conclusions about its effects on quality and productivity. Very few of those studies are experiments conducted with software professionals in industry. We aim to analyse the effects of TDD on the external quality of the work done and the productivity of developers in an industrial setting. We conducted an experiment with 24 professionals from three different sites of a software organization. We chose a repeated-measures design, and asked subjects to implement TDD and incremental test last development (ITLD) in two simple tasks and a realistic application close to real-life complexity. To analyse our findings, we applied a repeated-measures general linear model procedure and a linear mixed effects procedure. We did not observe a statistical difference between the quality of the work done by subjects in both treatments. We observed that the subjects are more productive when they implement TDD on a simple task compared to ITLD, but the productivity drops significantly when applying TDD to a complex brownfield task. So, the task complexity significantly obscured the effect of TDD. Further evidence is necessary to conclude whether TDD is better or worse than ITLD in terms of external quality and productivity in an industrial setting. We found that experimental factors such as selection of tasks could dominate the findings in TDD studies.},
 author = {Ayse Tosun and Oscar Dieste and Davide Fucci and Sira Vegas and Burak Turhan and Hakan Erdogmus and Adrian Santos and Markku Oivo and Kimmo Toro and Janne Jarvinen and Natalia Juristo},
 doi = {10.1007/s10664-016-9490-0},
 journal = {Empirical Software Engineering},
 month = {dec},
 number = {6},
 pages = {2763--2805},
 publisher = {Springer Science and Business Media {LLC}},
 title = {An industry experiment on the effects of test-driven development on external quality and productivity},
 url = {https://doi.org/10.1007%2Fs10664-016-9490-0},
 volume = {22},
 year = {2016}
}

@inproceedings{Tosun_2018,
 abstract = {},
 author = {Ayse Tosun and Muzamil Ahmed and Burak Turhan and Natalia Juristo},
 booktitle = {Proceedings of the 2018 International Conference on Software and System Process},
 doi = {10.1145/3202710.3203153},
 month = {may},
 publisher = {{ACM}},
 title = {On the effectiveness of unit tests in test-driven development},
 url = {https://doi.org/10.1145%2F3202710.3203153},
 year = {2018}
}

@article{Engstr_m_2016,
 abstract = {This paper presents the construction and evaluation of SERP-test, a taxonomy aimed to improve communication between researchers and practitioners in the area of software testing. SERP-test can be utilized for direct communication in industry academia collaborations. It may also facilitate indirect communication between practitioners adopting software engineering research and researchers who are striving for industry relevance. SERP-test was constructed through a systematic and goal-oriented approach which included literature reviews and interviews with practitioners and researchers. SERP-test was evaluated through an online survey and by utilizing it in an industry–academia collaboration project. SERP-test comprises four facets along which both research contributions and practical challenges may be classified: Intervention, Scope, Effect target and Context constraints. This paper explains the available categories for each of these facets (i.e., their definitions and rationales) and presents examples of categorized entities. Several tasks may benefit from SERP-test, such as formulating research goals from a problem perspective, describing practical challenges in a researchable fashion, analyzing primary studies in a literature review, or identifying relevant points of comparison and generalization of research.},
 author = {Emelie Engström and Kai Petersen and Nauman bin Ali and Elizabeth Bjarnason},
 doi = {10.1007/s11219-016-9322-x},
 journal = {Software Quality Journal},
 month = {jun},
 number = {4},
 pages = {1269--1305},
 publisher = {Springer Science and Business Media {LLC}},
 title = {{SERP}-test: a taxonomy for supporting industry{\textendash}academia communication},
 url = {https://doi.org/10.1007%2Fs11219-016-9322-x},
 volume = {25},
 year = {2016}
}

@article{Garousi_2016,
 abstract = {},
 author = {Vahid Garousi and Matt M. Eskandar and Kadir Herkilo{\u{g}}lu},
 doi = {10.1007/s11219-016-9319-5},
 journal = {Software Quality Journal},
 month = {jun},
 number = {4},
 pages = {1091--1143},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Industry{\textendash}academia collaborations in software testing: experience and success stories from Canada and Turkey},
 url = {https://doi.org/10.1007%2Fs11219-016-9319-5},
 volume = {25},
 year = {2016}
}

@article{Garousi_2016,
 abstract = {Context: The global software industry and the software engineering (SE) academia are two large communities. However, unfortunately, the level of joint industry-academia collaborations in SE is still relatively very low, compared to the amount of activity in each of the two communities. It seems that the two ’camps’ show only limited interest/motivation to collaborate with one other. Many researchers and practitioners have written about the challenges, success patterns (what to do, i.e., how to collaborate) and anti-patterns (what not do do) for industry-academia collaborations.},
 author = {Vahid Garousi and Kai Petersen and Baris Ozkan},
 doi = {10.1016/j.infsof.2016.07.006},
 journal = {Information and Software Technology},
 month = {nov},
 pages = {106--127},
 publisher = {Elsevier {BV}},
 title = {Challenges and best practices in industry-academia collaborations in software engineering: A systematic literature review},
 url = {https://doi.org/10.1016%2Fj.infsof.2016.07.006},
 volume = {79},
 year = {2016}
}

@article{Garousi_2019,
 abstract = {},
 author = {Vahid Garousi and Dietmar Pfahl and Jo{\~{a}}o M. Fernandes and Michael Felderer and Mika V. Mäntylä and David Shepherd and Andrea Arcuri and Ahmet Co{\c{s}}kun{\c{c}}ay and Bedir Tekinerdogan},
 doi = {10.1007/s10664-019-09711-y},
 journal = {Empirical Software Engineering},
 month = {apr},
 number = {4},
 pages = {2540--2602},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Characterizing industry-academia collaborations in software engineering: evidence from 101 projects},
 url = {https://doi.org/10.1007%2Fs10664-019-09711-y},
 volume = {24},
 year = {2019}
}

@inproceedings{Guevara_Vega_2021,
 abstract = {},
 author = {Cathy Guevara-Vega and Beatriz Bernardez and Amador Duran and Antonio Quina-Mera and Margarita Cruz and Antonio Ruiz-Cortes},
 booktitle = {2021 Second International Conference on Information Systems and Software Technologies ({ICI}2ST)},
 doi = {10.1109/ici2st51859.2021.00025},
 month = {mar},
 publisher = {{IEEE}},
 title = {Empirical Strategies in Software Engineering Research: A Literature Survey},
 url = {https://doi.org/10.1109%2Fici2st51859.2021.00025},
 year = {2021}
}

@incollection{Guillot_2017,
 abstract = {},
 author = {Isabelle Guillot and Geetha Paulmani and Vivekanandan Kumar and Shawn N. Fraser},
 booktitle = {Lecture Notes in Computer Science},
 doi = {10.1007/978-3-319-63874-4_15},
 pages = {196--212},
 publisher = {Springer International Publishing},
 title = {Case Studies of Industry-Academia Research Collaborations for Software Development with Agile},
 url = {https://doi.org/10.1007%2F978-3-319-63874-4_15},
 year = {2017}
}

@inproceedings{Lampasona_2014,
 abstract = {},
 author = {Constanza Lampasona and Philipp Diebold and Jonas Eckhardt and Rolf Schneider},
 booktitle = {Proceedings of the 8th {ACM}/{IEEE} International Symposium on Empirical Software Engineering and Measurement},
 doi = {10.1145/2652524.2652582},
 month = {sep},
 publisher = {{ACM}},
 title = {Evaluation in practice},
 url = {https://doi.org/10.1145%2F2652524.2652582},
 year = {2014}
}

@inproceedings{Lavallee_2015,
 abstract = {Convincing industrial partners to support an exploratory study can be difficult, as benefits are often fuzzy at the beginning. The objective of this paper is to present recommendations for industrial exploratory studies based on our experience. The recommendations are based on ten months of observations during a non-participant, exploratory study with a single industrial partner. This study confirms a number of methodological challenges already identified in the software engineering literature. Based on recommendations from the literature and our own experience, we propose a process for future observational exploratory studies.},
 author = {Mathieu Lavallee and Pierre N. Robillard},
 booktitle = {2015 {IEEE}/{ACM} 3rd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1109/cesi.2015.10},
 month = {may},
 publisher = {{IEEE}},
 title = {Planning for the Unknown: Lessons Learned from Ten Months of Non-participant Exploratory Observations in the Industry},
 url = {https://doi.org/10.1109%2Fcesi.2015.10},
 year = {2015}
}

@article{Marijan_2022,
 abstract = {Increasing the impact of software engineering research in the software industry and the society at large has long been a concern of high priority for the software engineering community. The problem of two cultures, research conducted in a vacuum (disconnected from the real world), or misaligned time horizons are just some of the many complex challenges standing in the way of successful industry–academia collaborations. This article reports on the experience of research collaboration and knowledge co-creation between industry and academia in software engineering as a way to bridge the research–practice collaboration gap. Our experience spans 14 years of collaboration between researchers in software engineering and the European and Norwegian software and IT industry. Using the participant observation and interview methods, we have collected and afterwards analyzed an extensive record of qualitative data. Drawing upon the findings made and the experience gained, we provide a set of 14 patterns and 14 anti-patterns for industry–academia collaborations, aimed to support other researchers and practitioners in establishing and running research collaboration projects in software engineering.},
 author = {Dusica Marijan and Sagar Sen},
 doi = {10.1145/3494519},
 journal = {{ACM} Transactions on Software Engineering and Methodology},
 month = {mar},
 number = {3},
 pages = {1--52},
 publisher = {Association for Computing Machinery ({ACM})},
 title = {Industry{\textendash}Academia Research Collaboration and Knowledge Co-creation: Patterns and Anti-patterns},
 url = {https://doi.org/10.1145%2F3494519},
 volume = {31},
 year = {2022}
}

@incollection{Petersen_2016,
 abstract = {Industry–academia collaboration in software engineering is essential for the relevance of research, as research may make important contributions to the improvement of software engineering. Thus, software engineering researchers are an asset in software process improvement. In this chapter, I present different experiences of being an embedded researcher in industry contributing to software process improvement. The process improvement works were focused on helping organizations to move from plan-driven processes to agile and lean processes. We will elaborate on the challenges, essential practices, and related benefits that were observed when working closely with industry in the role of embedded researchers. Supporting examples from different published cases form the basis for this experience report.},
 author = {Kai Petersen},
 booktitle = {Managing Software Process Evolution},
 doi = {10.1007/978-3-319-31545-4_12},
 pages = {235--255},
 publisher = {Springer International Publishing},
 title = {A Researcher's Experiences in Supporting Industrial Software Process Improvement},
 url = {https://doi.org/10.1007%2F978-3-319-31545-4_12},
 year = {2016}
}

@inproceedings{Prechelt_2015,
 abstract = {Context: The difficulty (not just effort) of obtaining access for software engineering empirical studies in industry varies greatly. Supposedly, some of this variance in difficulty is particular, stemming from properties of individual contexts (the industrial partners and their work), while the rest is repeatable, related to properties of the research question and research design. Question: What are these recurring difficulty factors that arise from research question and research design? What mechanisms produce their influence? Method: We use ideation and knowledge extraction from research experience to identify potential difficulty factors, use expert discussion to understand their mechanisms, and use concept analysis to arrange them into a taxonomy. We evaluate the result by comparatively applying it to two research efforts pursued by the same research group. Results: We find six scope factors, five problematic intervention effects factors, and seven helpful intervention (side-)effects factors. Conclusion: Considering these factors systematically during the formulation of a research question and the design of a research method can help with balancing data collection difficulty with results validity and relevance.},
 author = {Lutz Prechelt and Franz Zieris and Holger Schmeisky},
 booktitle = {2015 {IEEE}/{ACM} 3rd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1109/cesi.2015.11},
 month = {may},
 publisher = {{IEEE}},
 title = {Difficulty Factors of Obtaining Access for Empirical Studies in Industry},
 url = {https://doi.org/10.1109%2Fcesi.2015.11},
 year = {2015}
}

@article{Roberts_2021,
 abstract = {},
 author = {Aaron P.J. Roberts and Neville A. Stanton and Daniel Fay and Kiome A. Pope},
 doi = {10.1016/j.apergo.2021.103534},
 journal = {Applied Ergonomics},
 month = {nov},
 pages = {103534},
 publisher = {Elsevier {BV}},
 title = {It{\textquotesingle}s a circular argument: Examining how a novel configuration impacts information flow in submarine control rooms},
 url = {https://doi.org/10.1016%2Fj.apergo.2021.103534},
 volume = {97},
 year = {2021}
}

@inproceedings{Rodr_guez_2014,
 abstract = {Collaboration between industry practitioners and researchers has been reported as a challenge to conduct empirical studies in software engineering. Gaining practitioners interest in research activities is challenging in the software development industry characterized by tough competition and short time-to-market. Often, practitioners do not see the direct value in collaborating with researchers. Meanwhile, researchers are frequently frustrated because they have no access to the real-world data that would enable them to develop scientific knowledge. Design science has become a popular research framework in Information Systems. This paper describes our lessons learned on how design science can help to attract and motivate industry practitioners to take part in empirical research. We present our practical experiences with using design science in the context of empirical software engineering, and how the design science framework helped us to bridge the collaborative gap with our industry partners. In illustrating our experiences, we present two case studies conducted in collaboration with Ericsson and Elektrobit in which the design science framework was followed. Based on our experience, design science is a suitable research framework for empirical software engineering since much of the research in the field is constructive. The similarities between the design science practices and the day-to-day work of practitioners in industry make it easy for them to understand the research approach. Thus, it supports their willingness to participate in research activities.},
 author = {Pilar Rodr{\'{\i}}guez and Pasi Kuvaja and Markku Oivo},
 booktitle = {Proceedings of the 2nd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1145/2593690.2593694},
 month = {jun},
 publisher = {{ACM}},
 title = {Lessons learned on applying design science for bridging the collaboration gap between industry and academia in empirical software engineering},
 url = {https://doi.org/10.1145%2F2593690.2593694},
 year = {2014}
}

@article{Salleh_2018,
 abstract = {Context
Research carried out in industrial contexts are recognized as important to the advancement of software engineering knowledge and practice. However, several challenges present themselves in the three key phases of research carried out in industrial contexts, recruitment, engagement and feedback.

Objective
The aim of this paper is to report the challenges related to each of the three phases of research carried out in industrial contexts, and the associated solutions we have found useful from our combined body of industrial empirical software engineering research studies spanning four case studies, five grounded theory studies, seven survey studies and two quasi-experimental studies involving a total of over 400 industrial participants in the past decade.

Method
We designed an instrument to gather details of our studies carried out in industrial contexts and performed thematic analysis to synthesise and draw out the most prominent challenges faced.

Results
We present a set of recommendations around study design, conduct and reporting to try and mitigate some of these challenges as they apply specifically to industrial empirical research.

Conclusion
These recommendations can guide researchers, novice and experienced, working in close collaboration with industry stakeholders to make the most of their industrial software engineering research.},
 author = {Norsaremah Salleh and Rashina Hoda and Moon Ting Su and Tanjila Kanij and John Grundy},
 doi = {10.1016/j.infsof.2017.12.001},
 journal = {Information and Software Technology},
 month = {jun},
 pages = {161--172},
 publisher = {Elsevier {BV}},
 title = {Recruitment, engagement and feedback in empirical software engineering studies in industrial contexts},
 url = {https://doi.org/10.1016%2Fj.infsof.2017.12.001},
 volume = {98},
 year = {2018}
}

@article{Stavru_2014,
 abstract = {},
 author = {Stavros Stavru},
 doi = {10.1016/j.jss.2014.03.041},
 journal = {Journal of Systems and Software},
 month = {aug},
 pages = {87--97},
 publisher = {Elsevier {BV}},
 title = {A critical examination of recent industrial surveys on agile method usage},
 url = {https://doi.org/10.1016%2Fj.jss.2014.03.041},
 volume = {94},
 year = {2014}
}

@article{Stol_2018,
 abstract = {A variety of research methods and techniques are available to SE researchers, and while several overviews exist, there is neither consistency in the research methods covered nor in the terminology used. Furthermore, research is sometimes critically reviewed for characteristics inherent to the methods. We adopt a taxonomy from the social sciences, termed here the ABC framework for SE research, which offers a holistic view of eight archetypal research strategies. ABC refers to the research goal which strives for generalizability over Actors (A), precise measurement of their Behavior (B), in a realistic Context (C). The ABC framework uses two dimensions widely considered to be key in research design: the level of obtrusiveness of the research, and generalizability of research findings. We discuss metaphors for each strategy and their inherent limitations and potential strengths. We illustrate these research strategies in two key SE domains: global software engineering and requirements engineering, and apply the framework on a sample of 75 articles. Finally, we discuss six ways in which the framework can advance SE research.},
 author = {Klaas-Jan Stol and Brian Fitzgerald},
 doi = {10.1145/3241743},
 journal = {{ACM} Transactions on Software Engineering and Methodology},
 month = {jul},
 number = {3},
 pages = {1--51},
 publisher = {Association for Computing Machinery ({ACM})},
 title = {The {ABC} of Software Engineering Research},
 url = {https://doi.org/10.1145%2F3241743},
 volume = {27},
 year = {2018}
}

@article{Wiese_2023,
 abstract = {Context:
Technical Debt (TD) is a term for software solutions that are beneficial in the short-term but impede future change.

Goal:
Previous research on TD indicates various management-related causes. We analyze the perspective of IT managers on TD since they usually have a major influence on deadlines, the project’s budget, and setting up a TD management (TDM) process.

Method:
To determine the IT managers’ perspective, we obtained and analyzed data from 16 semi-structured interviews and a three-person focus group discussion.

Results:
We found that all IT managers understood the TD concept. They consider TDM to be an essential topic, though nearly none of them had set up a TDM process so far. We identified three major concerns the IT managers had regarding TDM: communicating about TD, establishing a TDM process, and dealing with vintage systems, i.e., old legacy systems We developed a model specifying causes and consequences visible to business stakeholders, causal chains, and vicious cycles.

Conclusions:
Our research identifies new research gaps and demonstrates to practitioners that investing in a TDM process may be beneficial. It provides the V4CTD model of Visibility, Cycles & Chains of Causes & Consequences of TD, extending the TD conceptual model and facilitating communication on TD with business stakeholders.

Editor’s note: Open Science material was validated by the Journal of Systems and Software Open Science Board.},
 author = {Marion Wiese and Klara Borowa},
 doi = {10.1016/j.jss.2023.111700},
 journal = {Journal of Systems and Software},
 month = {apr},
 pages = {111700},
 publisher = {Elsevier {BV}},
 title = {{IT} managers' perspective on Technical Debt Management},
 url = {https://doi.org/10.1016%2Fj.jss.2023.111700},
 year = {2023}
}

@inproceedings{Lavallee_2015,
 abstract = {Convincing industrial partners to support an exploratory study can be difficult, as benefits are often fuzzy at the beginning. The objective of this paper is to present recommendations for industrial exploratory studies based on our experience. The recommendations are based on ten months of observations during a non-participant, exploratory study with a single industrial partner. This study confirms a number of methodological challenges already identified in the software engineering literature. Based on recommendations from the literature and our own experience, we propose a process for future observational exploratory studies.},
 author = {Mathieu Lavallee and Pierre N. Robillard},
 booktitle = {2015 {IEEE}/{ACM} 3rd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1109/cesi.2015.10},
 month = {may},
 publisher = {{IEEE}},
 title = {Planning for the Unknown: Lessons Learned from Ten Months of Non-participant Exploratory Observations in the Industry},
 url = {https://doi.org/10.1109%2Fcesi.2015.10},
 year = {2015}
}

@inproceedings{Rodr_guez_2014,
 abstract = {Collaboration between industry practitioners and researchers has been reported as a challenge to conduct empirical studies in software engineering. Gaining practitioners interest in research activities is challenging in the software development industry characterized by tough competition and short time-to-market. Often, practitioners do not see the direct value in collaborating with researchers. Meanwhile, researchers are frequently frustrated because they have no access to the real-world data that would enable them to develop scientific knowledge. Design science has become a popular research framework in Information Systems. This paper describes our lessons learned on how design science can help to attract and motivate industry practitioners to take part in empirical research. We present our practical experiences with using design science in the context of empirical software engineering, and how the design science framework helped us to bridge the collaborative gap with our industry partners. In illustrating our experiences, we present two case studies conducted in collaboration with Ericsson and Elektrobit in which the design science framework was followed. Based on our experience, design science is a suitable research framework for empirical software engineering since much of the research in the field is constructive. The similarities between the design science practices and the day-to-day work of practitioners in industry make it easy for them to understand the research approach. Thus, it supports their willingness to participate in research activities.},
 author = {Pilar Rodr{\'{\i}}guez and Pasi Kuvaja and Markku Oivo},
 booktitle = {Proceedings of the 2nd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1145/2593690.2593694},
 month = {jun},
 publisher = {{ACM}},
 title = {Lessons learned on applying design science for bridging the collaboration gap between industry and academia in empirical software engineering},
 url = {https://doi.org/10.1145%2F2593690.2593694},
 year = {2014}
}

@article{Sherman_2018,
 abstract = {},
 author = {Sofia Sherman and Irit Hadar and Gil Luria},
 doi = {10.1016/j.infsof.2017.12.006},
 journal = {Information and Software Technology},
 month = {jun},
 pages = {148--160},
 publisher = {Elsevier {BV}},
 title = {Leveraging organizational climate theory for understanding industry-academia collaboration},
 url = {https://doi.org/10.1016%2Fj.infsof.2017.12.006},
 volume = {98},
 year = {2018}
}

@article{Engstr_m_2016,
 abstract = {This paper presents the construction and evaluation of SERP-test, a taxonomy aimed to improve communication between researchers and practitioners in the area of software testing. SERP-test can be utilized for direct communication in industry academia collaborations. It may also facilitate indirect communication between practitioners adopting software engineering research and researchers who are striving for industry relevance. SERP-test was constructed through a systematic and goal-oriented approach which included literature reviews and interviews with practitioners and researchers. SERP-test was evaluated through an online survey and by utilizing it in an industry–academia collaboration project. SERP-test comprises four facets along which both research contributions and practical challenges may be classified: Intervention, Scope, Effect target and Context constraints. This paper explains the available categories for each of these facets (i.e., their definitions and rationales) and presents examples of categorized entities. Several tasks may benefit from SERP-test, such as formulating research goals from a problem perspective, describing practical challenges in a researchable fashion, analyzing primary studies in a literature review, or identifying relevant points of comparison and generalization of research.},
 author = {Emelie Engström and Kai Petersen and Nauman bin Ali and Elizabeth Bjarnason},
 doi = {10.1007/s11219-016-9322-x},
 journal = {Software Quality Journal},
 month = {jun},
 number = {4},
 pages = {1269--1305},
 publisher = {Springer Science and Business Media {LLC}},
 title = {{SERP}-test: a taxonomy for supporting industry{\textendash}academia communication},
 url = {https://doi.org/10.1007%2Fs11219-016-9322-x},
 volume = {25},
 year = {2016}
}

@article{Garousi_2016,
 abstract = {},
 author = {Vahid Garousi and Matt M. Eskandar and Kadir Herkilo{\u{g}}lu},
 doi = {10.1007/s11219-016-9319-5},
 journal = {Software Quality Journal},
 month = {jun},
 number = {4},
 pages = {1091--1143},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Industry{\textendash}academia collaborations in software testing: experience and success stories from Canada and Turkey},
 url = {https://doi.org/10.1007%2Fs11219-016-9319-5},
 volume = {25},
 year = {2016}
}

@article{Garousi_2016,
 abstract = {Context: The global software industry and the software engineering (SE) academia are two large communities. However, unfortunately, the level of joint industry-academia collaborations in SE is still relatively very low, compared to the amount of activity in each of the two communities. It seems that the two ’camps’ show only limited interest/motivation to collaborate with one other. Many researchers and practitioners have written about the challenges, success patterns (what to do, i.e., how to collaborate) and anti-patterns (what not do do) for industry-academia collaborations.},
 author = {Vahid Garousi and Kai Petersen and Baris Ozkan},
 doi = {10.1016/j.infsof.2016.07.006},
 journal = {Information and Software Technology},
 month = {nov},
 pages = {106--127},
 publisher = {Elsevier {BV}},
 title = {Challenges and best practices in industry-academia collaborations in software engineering: A systematic literature review},
 url = {https://doi.org/10.1016%2Fj.infsof.2016.07.006},
 volume = {79},
 year = {2016}
}

@article{Garousi_2019,
 abstract = {},
 author = {Vahid Garousi and Dietmar Pfahl and Jo{\~{a}}o M. Fernandes and Michael Felderer and Mika V. Mäntylä and David Shepherd and Andrea Arcuri and Ahmet Co{\c{s}}kun{\c{c}}ay and Bedir Tekinerdogan},
 doi = {10.1007/s10664-019-09711-y},
 journal = {Empirical Software Engineering},
 month = {apr},
 number = {4},
 pages = {2540--2602},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Characterizing industry-academia collaborations in software engineering: evidence from 101 projects},
 url = {https://doi.org/10.1007%2Fs10664-019-09711-y},
 volume = {24},
 year = {2019}
}

@inproceedings{Guevara_Vega_2021,
 abstract = {},
 author = {Cathy Guevara-Vega and Beatriz Bernardez and Amador Duran and Antonio Quina-Mera and Margarita Cruz and Antonio Ruiz-Cortes},
 booktitle = {2021 Second International Conference on Information Systems and Software Technologies ({ICI}2ST)},
 doi = {10.1109/ici2st51859.2021.00025},
 month = {mar},
 publisher = {{IEEE}},
 title = {Empirical Strategies in Software Engineering Research: A Literature Survey},
 url = {https://doi.org/10.1109%2Fici2st51859.2021.00025},
 year = {2021}
}

@incollection{Guillot_2017,
 abstract = {},
 author = {Isabelle Guillot and Geetha Paulmani and Vivekanandan Kumar and Shawn N. Fraser},
 booktitle = {Lecture Notes in Computer Science},
 doi = {10.1007/978-3-319-63874-4_15},
 pages = {196--212},
 publisher = {Springer International Publishing},
 title = {Case Studies of Industry-Academia Research Collaborations for Software Development with Agile},
 url = {https://doi.org/10.1007%2F978-3-319-63874-4_15},
 year = {2017}
}

@inproceedings{Lampasona_2014,
 abstract = {},
 author = {Constanza Lampasona and Philipp Diebold and Jonas Eckhardt and Rolf Schneider},
 booktitle = {Proceedings of the 8th {ACM}/{IEEE} International Symposium on Empirical Software Engineering and Measurement},
 doi = {10.1145/2652524.2652582},
 month = {sep},
 publisher = {{ACM}},
 title = {Evaluation in practice},
 url = {https://doi.org/10.1145%2F2652524.2652582},
 year = {2014}
}

@inproceedings{Lavallee_2015,
 abstract = {Convincing industrial partners to support an exploratory study can be difficult, as benefits are often fuzzy at the beginning. The objective of this paper is to present recommendations for industrial exploratory studies based on our experience. The recommendations are based on ten months of observations during a non-participant, exploratory study with a single industrial partner. This study confirms a number of methodological challenges already identified in the software engineering literature. Based on recommendations from the literature and our own experience, we propose a process for future observational exploratory studies.},
 author = {Mathieu Lavallee and Pierre N. Robillard},
 booktitle = {2015 {IEEE}/{ACM} 3rd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1109/cesi.2015.10},
 month = {may},
 publisher = {{IEEE}},
 title = {Planning for the Unknown: Lessons Learned from Ten Months of Non-participant Exploratory Observations in the Industry},
 url = {https://doi.org/10.1109%2Fcesi.2015.10},
 year = {2015}
}

@article{Marijan_2022,
 abstract = {Increasing the impact of software engineering research in the software industry and the society at large has long been a concern of high priority for the software engineering community. The problem of two cultures, research conducted in a vacuum (disconnected from the real world), or misaligned time horizons are just some of the many complex challenges standing in the way of successful industry–academia collaborations. This article reports on the experience of research collaboration and knowledge co-creation between industry and academia in software engineering as a way to bridge the research–practice collaboration gap. Our experience spans 14 years of collaboration between researchers in software engineering and the European and Norwegian software and IT industry. Using the participant observation and interview methods, we have collected and afterwards analyzed an extensive record of qualitative data. Drawing upon the findings made and the experience gained, we provide a set of 14 patterns and 14 anti-patterns for industry–academia collaborations, aimed to support other researchers and practitioners in establishing and running research collaboration projects in software engineering.},
 author = {Dusica Marijan and Sagar Sen},
 doi = {10.1145/3494519},
 journal = {{ACM} Transactions on Software Engineering and Methodology},
 month = {mar},
 number = {3},
 pages = {1--52},
 publisher = {Association for Computing Machinery ({ACM})},
 title = {Industry{\textendash}Academia Research Collaboration and Knowledge Co-creation: Patterns and Anti-patterns},
 url = {https://doi.org/10.1145%2F3494519},
 volume = {31},
 year = {2022}
}

@incollection{Petersen_2016,
 abstract = {Industry–academia collaboration in software engineering is essential for the relevance of research, as research may make important contributions to the improvement of software engineering. Thus, software engineering researchers are an asset in software process improvement. In this chapter, I present different experiences of being an embedded researcher in industry contributing to software process improvement. The process improvement works were focused on helping organizations to move from plan-driven processes to agile and lean processes. We will elaborate on the challenges, essential practices, and related benefits that were observed when working closely with industry in the role of embedded researchers. Supporting examples from different published cases form the basis for this experience report.},
 author = {Kai Petersen},
 booktitle = {Managing Software Process Evolution},
 doi = {10.1007/978-3-319-31545-4_12},
 pages = {235--255},
 publisher = {Springer International Publishing},
 title = {A Researcher's Experiences in Supporting Industrial Software Process Improvement},
 url = {https://doi.org/10.1007%2F978-3-319-31545-4_12},
 year = {2016}
}

@inproceedings{Prechelt_2015,
 abstract = {Context: The difficulty (not just effort) of obtaining access for software engineering empirical studies in industry varies greatly. Supposedly, some of this variance in difficulty is particular, stemming from properties of individual contexts (the industrial partners and their work), while the rest is repeatable, related to properties of the research question and research design. Question: What are these recurring difficulty factors that arise from research question and research design? What mechanisms produce their influence? Method: We use ideation and knowledge extraction from research experience to identify potential difficulty factors, use expert discussion to understand their mechanisms, and use concept analysis to arrange them into a taxonomy. We evaluate the result by comparatively applying it to two research efforts pursued by the same research group. Results: We find six scope factors, five problematic intervention effects factors, and seven helpful intervention (side-)effects factors. Conclusion: Considering these factors systematically during the formulation of a research question and the design of a research method can help with balancing data collection difficulty with results validity and relevance.},
 author = {Lutz Prechelt and Franz Zieris and Holger Schmeisky},
 booktitle = {2015 {IEEE}/{ACM} 3rd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1109/cesi.2015.11},
 month = {may},
 publisher = {{IEEE}},
 title = {Difficulty Factors of Obtaining Access for Empirical Studies in Industry},
 url = {https://doi.org/10.1109%2Fcesi.2015.11},
 year = {2015}
}

@article{Roberts_2021,
 abstract = {},
 author = {Aaron P.J. Roberts and Neville A. Stanton and Daniel Fay and Kiome A. Pope},
 doi = {10.1016/j.apergo.2021.103534},
 journal = {Applied Ergonomics},
 month = {nov},
 pages = {103534},
 publisher = {Elsevier {BV}},
 title = {It{\textquotesingle}s a circular argument: Examining how a novel configuration impacts information flow in submarine control rooms},
 url = {https://doi.org/10.1016%2Fj.apergo.2021.103534},
 volume = {97},
 year = {2021}
}

@inproceedings{Rodr_guez_2014,
 abstract = {Collaboration between industry practitioners and researchers has been reported as a challenge to conduct empirical studies in software engineering. Gaining practitioners interest in research activities is challenging in the software development industry characterized by tough competition and short time-to-market. Often, practitioners do not see the direct value in collaborating with researchers. Meanwhile, researchers are frequently frustrated because they have no access to the real-world data that would enable them to develop scientific knowledge. Design science has become a popular research framework in Information Systems. This paper describes our lessons learned on how design science can help to attract and motivate industry practitioners to take part in empirical research. We present our practical experiences with using design science in the context of empirical software engineering, and how the design science framework helped us to bridge the collaborative gap with our industry partners. In illustrating our experiences, we present two case studies conducted in collaboration with Ericsson and Elektrobit in which the design science framework was followed. Based on our experience, design science is a suitable research framework for empirical software engineering since much of the research in the field is constructive. The similarities between the design science practices and the day-to-day work of practitioners in industry make it easy for them to understand the research approach. Thus, it supports their willingness to participate in research activities.},
 author = {Pilar Rodr{\'{\i}}guez and Pasi Kuvaja and Markku Oivo},
 booktitle = {Proceedings of the 2nd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1145/2593690.2593694},
 month = {jun},
 publisher = {{ACM}},
 title = {Lessons learned on applying design science for bridging the collaboration gap between industry and academia in empirical software engineering},
 url = {https://doi.org/10.1145%2F2593690.2593694},
 year = {2014}
}

@article{Salleh_2018,
 abstract = {Context
Research carried out in industrial contexts are recognized as important to the advancement of software engineering knowledge and practice. However, several challenges present themselves in the three key phases of research carried out in industrial contexts, recruitment, engagement and feedback.

Objective
The aim of this paper is to report the challenges related to each of the three phases of research carried out in industrial contexts, and the associated solutions we have found useful from our combined body of industrial empirical software engineering research studies spanning four case studies, five grounded theory studies, seven survey studies and two quasi-experimental studies involving a total of over 400 industrial participants in the past decade.

Method
We designed an instrument to gather details of our studies carried out in industrial contexts and performed thematic analysis to synthesise and draw out the most prominent challenges faced.

Results
We present a set of recommendations around study design, conduct and reporting to try and mitigate some of these challenges as they apply specifically to industrial empirical research.

Conclusion
These recommendations can guide researchers, novice and experienced, working in close collaboration with industry stakeholders to make the most of their industrial software engineering research.},
 author = {Norsaremah Salleh and Rashina Hoda and Moon Ting Su and Tanjila Kanij and John Grundy},
 doi = {10.1016/j.infsof.2017.12.001},
 journal = {Information and Software Technology},
 month = {jun},
 pages = {161--172},
 publisher = {Elsevier {BV}},
 title = {Recruitment, engagement and feedback in empirical software engineering studies in industrial contexts},
 url = {https://doi.org/10.1016%2Fj.infsof.2017.12.001},
 volume = {98},
 year = {2018}
}

@article{Stavru_2014,
 abstract = {},
 author = {Stavros Stavru},
 doi = {10.1016/j.jss.2014.03.041},
 journal = {Journal of Systems and Software},
 month = {aug},
 pages = {87--97},
 publisher = {Elsevier {BV}},
 title = {A critical examination of recent industrial surveys on agile method usage},
 url = {https://doi.org/10.1016%2Fj.jss.2014.03.041},
 volume = {94},
 year = {2014}
}

@article{Stol_2018,
 abstract = {A variety of research methods and techniques are available to SE researchers, and while several overviews exist, there is neither consistency in the research methods covered nor in the terminology used. Furthermore, research is sometimes critically reviewed for characteristics inherent to the methods. We adopt a taxonomy from the social sciences, termed here the ABC framework for SE research, which offers a holistic view of eight archetypal research strategies. ABC refers to the research goal which strives for generalizability over Actors (A), precise measurement of their Behavior (B), in a realistic Context (C). The ABC framework uses two dimensions widely considered to be key in research design: the level of obtrusiveness of the research, and generalizability of research findings. We discuss metaphors for each strategy and their inherent limitations and potential strengths. We illustrate these research strategies in two key SE domains: global software engineering and requirements engineering, and apply the framework on a sample of 75 articles. Finally, we discuss six ways in which the framework can advance SE research.},
 author = {Klaas-Jan Stol and Brian Fitzgerald},
 doi = {10.1145/3241743},
 journal = {{ACM} Transactions on Software Engineering and Methodology},
 month = {jul},
 number = {3},
 pages = {1--51},
 publisher = {Association for Computing Machinery ({ACM})},
 title = {The {ABC} of Software Engineering Research},
 url = {https://doi.org/10.1145%2F3241743},
 volume = {27},
 year = {2018}
}

@article{Wiese_2023,
 abstract = {Context:
Technical Debt (TD) is a term for software solutions that are beneficial in the short-term but impede future change.

Goal:
Previous research on TD indicates various management-related causes. We analyze the perspective of IT managers on TD since they usually have a major influence on deadlines, the project’s budget, and setting up a TD management (TDM) process.

Method:
To determine the IT managers’ perspective, we obtained and analyzed data from 16 semi-structured interviews and a three-person focus group discussion.

Results:
We found that all IT managers understood the TD concept. They consider TDM to be an essential topic, though nearly none of them had set up a TDM process so far. We identified three major concerns the IT managers had regarding TDM: communicating about TD, establishing a TDM process, and dealing with vintage systems, i.e., old legacy systems We developed a model specifying causes and consequences visible to business stakeholders, causal chains, and vicious cycles.

Conclusions:
Our research identifies new research gaps and demonstrates to practitioners that investing in a TDM process may be beneficial. It provides the V4CTD model of Visibility, Cycles & Chains of Causes & Consequences of TD, extending the TD conceptual model and facilitating communication on TD with business stakeholders.

Editor’s note: Open Science material was validated by the Journal of Systems and Software Open Science Board.},
 author = {Marion Wiese and Klara Borowa},
 doi = {10.1016/j.jss.2023.111700},
 journal = {Journal of Systems and Software},
 month = {apr},
 pages = {111700},
 publisher = {Elsevier {BV}},
 title = {{IT} managers' perspective on Technical Debt Management},
 url = {https://doi.org/10.1016%2Fj.jss.2023.111700},
 year = {2023}
}

@inproceedings{Lavallee_2015,
 abstract = {Convincing industrial partners to support an exploratory study can be difficult, as benefits are often fuzzy at the beginning. The objective of this paper is to present recommendations for industrial exploratory studies based on our experience. The recommendations are based on ten months of observations during a non-participant, exploratory study with a single industrial partner. This study confirms a number of methodological challenges already identified in the software engineering literature. Based on recommendations from the literature and our own experience, we propose a process for future observational exploratory studies.},
 author = {Mathieu Lavallee and Pierre N. Robillard},
 booktitle = {2015 {IEEE}/{ACM} 3rd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1109/cesi.2015.10},
 month = {may},
 publisher = {{IEEE}},
 title = {Planning for the Unknown: Lessons Learned from Ten Months of Non-participant Exploratory Observations in the Industry},
 url = {https://doi.org/10.1109%2Fcesi.2015.10},
 year = {2015}
}

@inproceedings{Rodr_guez_2014,
 abstract = {Collaboration between industry practitioners and researchers has been reported as a challenge to conduct empirical studies in software engineering. Gaining practitioners interest in research activities is challenging in the software development industry characterized by tough competition and short time-to-market. Often, practitioners do not see the direct value in collaborating with researchers. Meanwhile, researchers are frequently frustrated because they have no access to the real-world data that would enable them to develop scientific knowledge. Design science has become a popular research framework in Information Systems. This paper describes our lessons learned on how design science can help to attract and motivate industry practitioners to take part in empirical research. We present our practical experiences with using design science in the context of empirical software engineering, and how the design science framework helped us to bridge the collaborative gap with our industry partners. In illustrating our experiences, we present two case studies conducted in collaboration with Ericsson and Elektrobit in which the design science framework was followed. Based on our experience, design science is a suitable research framework for empirical software engineering since much of the research in the field is constructive. The similarities between the design science practices and the day-to-day work of practitioners in industry make it easy for them to understand the research approach. Thus, it supports their willingness to participate in research activities.},
 author = {Pilar Rodr{\'{\i}}guez and Pasi Kuvaja and Markku Oivo},
 booktitle = {Proceedings of the 2nd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1145/2593690.2593694},
 month = {jun},
 publisher = {{ACM}},
 title = {Lessons learned on applying design science for bridging the collaboration gap between industry and academia in empirical software engineering},
 url = {https://doi.org/10.1145%2F2593690.2593694},
 year = {2014}
}

@article{Sherman_2018,
 abstract = {},
 author = {Sofia Sherman and Irit Hadar and Gil Luria},
 doi = {10.1016/j.infsof.2017.12.006},
 journal = {Information and Software Technology},
 month = {jun},
 pages = {148--160},
 publisher = {Elsevier {BV}},
 title = {Leveraging organizational climate theory for understanding industry-academia collaboration},
 url = {https://doi.org/10.1016%2Fj.infsof.2017.12.006},
 volume = {98},
 year = {2018}
}

@book{2020,
 abstract = {Several decades ago, inspired by other knowledge areas, simulation 4 was introduced as a research method to Software Engineering. Motivated by 5 potential benefits achieved in other areas, the software engineering community has 6 used simulation-based studies for planning, controlling, and improving software 7 development. However, unclear expectations from simulation-based studies, a lack 8 of methodological support, as well as dispersed knowledge to support model 9 building and calibration have hindered widespread adoption of simulation-based 10 investigations. In this chapter, we delineate the role of simulation in software 11 engineering research and compile processes and guidelines into a comprehensive 12 life cycle. This chapter aims to guide software engineering researchers to conduct 13 effective simulation-based studies in real-world settings.},
 doi = {10.1007/978-3-030-32489-6},
 editor = {Michael Felderer and Guilherme Horta Travassos},
 publisher = {Springer International Publishing},
 title = {Contemporary Empirical Methods in Software Engineering},
 url = {https://doi.org/10.1007%2F978-3-030-32489-6},
 year = {2020}
}

@article{Afzal_2016,
 abstract = {Software Test Process Improvement (STPI) approaches are frameworks that guide software development organizations to improve their software testing process. We have identified existing STPI approaches and their characteristics (such as completeness of development, availability of information and assessment instruments, and domain limitations of the approaches) using a systematic literature review (SLR). Furthermore, two selected approaches (TPI Next and TMMi) are evaluated with respect to their content and assessment results in industry. As a result of this study, we have identified 18 STPI approaches and their characteristics. A detailed comparison of the content of TPI Next and TMMi is done. We found that many of the STPI approaches do not provide sufficient information or the approaches do not include assessment instruments. This makes it difficult to apply many approaches in industry. Greater similarities were found between TPI Next and TMMi and fewer differences. We conclude that numerous STPI approaches are available but not all are generally applicable for industry. One major difference between available approaches is their model representation. Even though the applied approaches generally show strong similarities, differences in the assessment results arise due to their different model representations.},
 author = {Wasif Afzal and Snehal Alone and Kerstin Glocksien and Richard Torkar},
 doi = {10.1016/j.jss.2015.08.048},
 journal = {Journal of Systems and Software},
 month = {jan},
 pages = {1--33},
 publisher = {Elsevier {BV}},
 title = {Software test process improvement approaches: A systematic literature review and an industrial case study},
 url = {https://doi.org/10.1016%2Fj.jss.2015.08.048},
 volume = {111},
 year = {2016}
}

@article{Agren_2020,
 abstract = {Virtual verification promises measurable gains in productivity of automotive systems development, especially if supported by shared modeling of ECUs (Electronic Control Unit) and their components across the automotive supply chain, and throughout the software development process, long before ECUs and components become available as silicon. Yet, bootstrapping a technological platform and critical relationships in an ecosystem for shared modeling and virtual verification has proven difficult within the automotive industry. By describing benefits, critical impediments, and crucial enablers, we provide help for overcoming such difficulties and for starting a constructive dialogue across ecosystem actors.},
 author = {S. Magnus Agren and Eric Knauss and Paolo Giusto and Grant Soremekun and Rogardt Heldal and Daniela Damian},
 doi = {10.1109/ms.2019.2905228},
 journal = {{IEEE} Software},
 month = {sep},
 number = {5},
 pages = {67--76},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {The Automotive Virtual Verification Ecosystem: Impediments and Enablers},
 url = {https://doi.org/10.1109%2Fms.2019.2905228},
 volume = {37},
 year = {2020}
}

@phdthesis{Ahmad,
 abstract = {},
 author = {Afaq Ahmad},
 doi = {10.22215/etd/1996-03300},
 publisher = {Carleton University},
 title = {Case-based software reuse through comment analysis.},
 url = {https://doi.org/10.22215%2Fetd%2F1996-03300}
}

@article{Albors_Garrig_s_2008,
 abstract = {Los retos de las políticas públicas de innovación están relacionados con la mejora de la transferencia del conocimiento y la tecnología desde la universidad y los centros de investigación a la industria, de ahí la nueva orientación de las políticas tecnológicas nacionales y de la Unión Europea. El objetivo de este trabajo es contribuir a la comprensión de los factores subyacentes al proceso de transferencia de tecnología de la universidad a la industria. En el mismo se intenta proporcionar respuestas a un número de preguntas relacionadas con los factores de éxito y las barreras que obstaculizan la transferencia de tecnología y su impacto final en la industria.},
 author = {Jos{\'{e}} Albors Garrig{\'{o}}s and Antonio Hidalgo Nuchera},
 doi = {10.37610/dyo.v0i35.64},
 journal = {Direcci{\'{o}}n y Organizaci{\'{o}}n},
 month = {jun},
 number = {35},
 pages = {116--124},
 publisher = {Asociacion para el Desarrollo de la Ingenieria de Organizacion},
 title = {{TRANSFERENCIA} {TECNOL}{\'{O}}{GICA} {EN} {PROGRAMAS} P{\'{U}}{BLICOS} {DE} {COOPERACI}{\'{O}}N {UNIVERSIDAD}-{EMPRESA}. {PROPUESTA} {DE} {UN} {MODELO} {BASADO} {EN} {EVIDENCIA} {EMP}{\'{I}}{RICA}},
 url = {https://doi.org/10.37610%2Fdyo.v0i35.64},
 year = {2008}
}

@article{Ali_2014,
 abstract = {Context
Software process simulation modelling (SPSM) captures the dynamic behavior and uncertainty in the software process. Existing literature has conflicting claims about its practical usefulness: SPSM is useful and has an industrial impact; SPSM is useful and has no industrial impact yet; SPSM is not useful and has little potential for industry.

Objective
To assess the conflicting standpoints on the usefulness of SPSM.

Method
A systematic literature review was performed to identify, assess and aggregate empirical evidence on the usefulness of SPSM.

Results
In the primary studies, to date, the persistent trend is that of proof-of-concept applications of software process simulation for various purposes (e.g. estimation, training, process improvement, etc.). They score poorly on the stated quality criteria. Also only a few studies report some initial evaluation of the simulation models for the intended purposes.

Conclusion
There is a lack of conclusive evidence to substantiate the claimed usefulness of SPSM for any of the intended purposes. A few studies that report the cost of applying simulation do not support the claim that it is an inexpensive method. Furthermore, there is a paramount need for improvement in conducting and reporting simulation studies with an emphasis on evaluation against the intended purpose.},
 author = {Nauman Bin Ali and Kai Petersen and Claes Wohlin},
 doi = {10.1016/j.jss.2014.06.059},
 journal = {Journal of Systems and Software},
 month = {nov},
 pages = {65--85},
 publisher = {Elsevier {BV}},
 title = {A systematic literature review on the industrial use of software process simulation},
 url = {https://doi.org/10.1016%2Fj.jss.2014.06.059},
 volume = {97},
 year = {2014}
}

@inproceedings{Ali_2016,
 abstract = {Context: Software Engineering (SE) research with a scientific foundation aims to influence SE practice to enable and sustain efficient delivery of high quality software. Goal: To improve the impact of SE research, one objective is to facilitate practitioners in choosing empirically vetted interventions. Method: Literature from evidence-based medicine, economic evaluations in SE and software economics is reviewed. Results: In empirical SE research, the emphasis has been on substantiating the claims about the benefits of proposed interventions. However, to support informed decision making by practitioners regarding technology adoption , we must present a business case for these interventions , which should comprise not just effectiveness, but also the evidence of cost-effectiveness. Conclusions: This paper highlights the need to investigate and report the resources required to adopt an intervention. It also provides some guidelines and examples to improve support for practitioners in decisions regarding technology adoption.},
 author = {Nauman bin Ali},
 booktitle = {Proceedings of the 10th {ACM}/{IEEE} International Symposium on Empirical Software Engineering and Measurement},
 doi = {10.1145/2961111.2962631},
 month = {sep},
 publisher = {{ACM}},
 title = {Is effectiveness sufficient to choose an intervention?},
 url = {https://doi.org/10.1145%2F2961111.2962631},
 year = {2016}
}

@inproceedings{Alshahwan_2015,
 abstract = {},
 author = {Nadia Alshahwan and Michael Felderer and Rudolf Ramler},
 booktitle = {2015 {IEEE} Eighth International Conference on Software Testing, Verification and Validation Workshops ({ICSTW})},
 doi = {10.1109/icstw.2015.7107463},
 month = {apr},
 publisher = {{IEEE}},
 title = {Industry-academia collaboration in software testing: An overview of {TAIC} {PART} 2015},
 url = {https://doi.org/10.1109%2Ficstw.2015.7107463},
 year = {2015}
}

@inproceedings{Alves_2008,
 abstract = {In the last decade, research in requirements engineering has achieved great advances. Several methods, techniques and processes have been proposed in the literature. However, the pace of requirements engineering technology transfer has been slow. This paper presents a technology transfer project to improve the requirements engineering process in four software companies. We discuss this experience from the perspective of researchers and practitioners from one participating company.},
 author = {Carina Alves and George Valen{\c{c}}a and Tayanna Sotero and Jeane Mendes},
 booktitle = {Proceedings of the 2008 {ACM} symposium on Applied computing},
 doi = {10.1145/1363686.1363836},
 month = {mar},
 publisher = {{ACM}},
 title = {Requirements engineering process improvement},
 url = {https://doi.org/10.1145%2F1363686.1363836},
 year = {2008}
}

@inproceedings{Amannejad_2014,
 abstract = {Test automation is a widely-used approach to reduce the cost of manual software testing. However, if it is not planned or conducted properly, automated testing would not necessarily be more cost effective than manual testing. Deciding what parts of a given System Under Test (SUT) should be tested in an automated fashion and what parts should remain manual is a frequently-asked and challenging question for practitioner testers. In this study, we propose a search-based approach for deciding what parts of a given SUT should be tested automatically to gain the highest Return On Investment (ROI). This work is the first systematic approach for this problem, and significance of our approach is that it considers automation in the entire testing process (i.e., from test-case design, to test scripting, to test execution, and test-result evaluation). The proposed approach has been applied in an industrial setting in the context of a software product used in the oil and gas industry in Canada. Among the results of the case study is that, when planned and conducted properly using our decision-support approach, test automation provides the highest ROI. In this study, we show that if automation decision is taken effectively, test-case design, test execution, and test evaluation can result in about 307%, 675%, and 41% ROI in 10 rounds of using automated test suites.},
 author = {Yasaman Amannejad and Vahid Garousi and Rob Irving and Zahra Sahaf},
 booktitle = {2014 {IEEE} Seventh International Conference on Software Testing, Verification and Validation Workshops},
 doi = {10.1109/icstw.2014.34},
 month = {mar},
 publisher = {{IEEE}},
 title = {A Search-Based Approach for Cost-Effective Software Test Automation Decision Support and an Industrial Case Study},
 url = {https://doi.org/10.1109%2Ficstw.2014.34},
 year = {2014}
}

@article{Ar_valo_Moscoso_2017,
 abstract = {El presente artículo presenta una metodología integral para la gestión de riesgos informáticos basándose en los estándares mundialmente aceptados como son ISO 31000 e ISO/IEC 27005, los mismos que indican los requerimientos para una gestión adecuada de riesgos; sin embargo no indican, al menos de manera clara, como se puede realizar dicha gestión. Por ello se incluyen recomendaciones y buenas prácticas de otros estándares y guías internacionales para el manejo de riesgos. Con la aplicación de la metodología planteada en una empresa industrial de alimentos, se comprueba su validez; además, el equipo de trabajo que aplicó la metodología tuvo a su disposición herramientas sugeridas que ayudaron a valorar técnicamente los riesgos según su probabilidad de ocurrencia, sus consecuencias y dimensiones de seguridad afectadas.},
 author = {Franklin Mauricio Ar{\'{e}}valo Moscoso and Irene Priscila Cedillo Orellana and Santiago Arturo Moscoso Bernal},
 doi = {10.26871/killkana_tecnica.v1i2.81},
 journal = {Killkana T{\'{e}}cnica},
 month = {nov},
 number = {2},
 pages = {31},
 publisher = {Revistas Killkana},
 title = {Metodolog{\'{\i}}a {\'{A}}gil para la Gesti{\'{o}}n de Riesgos Inform{\'{a}}ticos},
 url = {https://doi.org/10.26871%2Fkillkana_tecnica.v1i2.81},
 volume = {1},
 year = {2017}
}

@article{Arag_o_2021,
 abstract = {When deadlines and resources of software projects become scarce, testing is usually in the first row to have its activities aborted or reduced; however, if defects cannot be found, product quality can be affected. In the software development process, aborted or reduced activities that can bring short-term benefits, but can be harmful to the project in the long run, are considered Technical Debt (TD) and, when the TDs impact testing activities, they are called Test Debt. Although there are several studies dealing with Test Debt, current solutions often deal with specific types of tests (e.g., exploratory and automated tests) and do not address the whole software testing process. Aiming to fill these gaps, this work then proposes a Test Debt Catalog, called TestDCat, with subtypes of Test Debts and Technical Debt management activities. This catalog is built based on the results of an empirical study, a literature review and semi-structured interviews conducted with practitioners who perform testing activities on five projects from industry. For the TestDCat evaluation, a case study is conducted in real projects in order to identify if the catalog is user-friendly and if its use helps the Test Debt management during the execution of test activities in these software development projects.},
 author = {Bruno S. Arag{\~{a}}o and Rossana M. C. Andrade and Ismayle S. Santos and Rute N. S. Castro and Val{\'{e}}ria Lelli and Ticianne G. R. Darin},
 doi = {10.1007/s11219-020-09533-y},
 journal = {Software Quality Journal},
 month = {jan},
 number = {1},
 pages = {181--225},
 publisher = {Springer Science and Business Media {LLC}},
 title = {{TestDCat} 3.0: catalog of test debt subtypes and management activities},
 url = {https://doi.org/10.1007%2Fs11219-020-09533-y},
 volume = {30},
 year = {2021}
}

@article{Arag_o_2021,
 abstract = {When deadlines and resources of software projects become scarce, testing is usually in the first row to have its activities aborted or reduced; however, if defects cannot be found, product quality can be affected. In the software development process, aborted or reduced activities that can bring short-term benefits, but can be harmful to the project in the long run, are considered Technical Debt (TD) and, when the TDs impact testing activities, they are called Test Debt. Although there are several studies dealing with Test Debt, current solutions often deal with specific types of tests (e.g., exploratory and automated tests) and do not address the whole software testing process. Aiming to fill these gaps, this work then proposes a Test Debt Catalog, called TestDCat, with subtypes of Test Debts and Technical Debt management activities. This catalog is built based on the results of an empirical study, a literature review and semi-structured interviews conducted with practitioners who perform testing activities on five projects from industry. For the TestDCat evaluation, a case study is conducted in real projects in order to identify if the catalog is user-friendly and if its use helps the Test Debt management during the execution of test activities in these software development projects.},
 author = {Bruno S. Arag{\~{a}}o and Rossana M. C. Andrade and Ismayle S. Santos and Rute N. S. Castro and Val{\'{e}}ria Lelli and Ticianne G. R. Darin},
 doi = {10.1007/s11219-020-09533-y},
 journal = {Software Quality Journal},
 month = {jan},
 number = {1},
 pages = {181--225},
 publisher = {Springer Science and Business Media {LLC}},
 title = {{TestDCat} 3.0: catalog of test debt subtypes and management activities},
 url = {https://doi.org/10.1007%2Fs11219-020-09533-y},
 volume = {30},
 year = {2021}
}

@incollection{Arruda_2019,
 abstract = {Goal-Oriented Requirements Engineering approaches, in which the KAOS framework plays a key role, have been widely used for eliciting software requirements because they provide an easier way of communicating among stakeholders. However, the goal-oriented requirements modeling is not an easy way for novice requirements engineers. These professionals need more support in creating KAOS models. Recent studies have focused on the applicability of Artificial Intelligence techniques (e.g., Natural Language Processing – NLP) to support Requirements Engineering activities. In this sense, this paper aims to describe a way to support requirements elicitation for novice requirements engineers through the use of NLP within a chatbot. The chatbot (KAOSbot) acts as a KAOS modeling assistant. To evaluate our hypotheses about perceived efficacy from the novice requirements engineers perspective, we performed a quasi-experiment concerning KAOSbot’s perceived ease of use, perceived usefulness and intention to use. The results show that KAOSbot tool is a promising approach for specifying KAOS models because it was perceived as easy to use, useful, and the participants intend to use it in the future.},
 author = {Danilo Arruda and Matheus Marinho and Eric Souza and Fernando Wanderley},
 booktitle = {Computational Science and Its Applications {\textendash} {ICCSA} 2019},
 doi = {10.1007/978-3-030-24305-0_38},
 pages = {506--519},
 publisher = {Springer International Publishing},
 title = {A Chatbot for Goal-Oriented Requirements Modeling},
 url = {https://doi.org/10.1007%2F978-3-030-24305-0_38},
 year = {2019}
}

@inproceedings{Badampudi_2019,
 abstract = {Usage of software engineering research in industrial practice is a well-known challenge. Synthesis of knowledge from multiple research studies is needed to provide evidence-based decision-support for industry. The objective of this paper is to present a vision of how a knowledge translation framework may look like in software engineering research, in particular how to translate research evidence into practice by combining contextualized expert opinions with research evidence. We adopted the framework of knowledge translation from health care research, adapted and combined it with a Bayesian synthesis method. The framework provided in this paper includes a description of each step of knowledge translation in software engineering. Knowledge translation using Bayesian synthesis intends to provide a systematic approach towards contextualized, collaborative and consensus-driven application of research results. In conclusion, this paper contributes towards the application of knowledge translation in software engineering through the presented framework. CCS CONCEPTS • Software and its engineering → Software design techniques;},
 author = {Deepika Badampudi and Claes Wohlin and Tony Gorschek},
 booktitle = {Proceedings of the Evaluation and Assessment on Software Engineering},
 doi = {10.1145/3319008.3319358},
 month = {apr},
 publisher = {{ACM}},
 title = {Contextualizing Research Evidence through Knowledge Translation in Software Engineering},
 url = {https://doi.org/10.1145%2F3319008.3319358},
 year = {2019}
}

@article{Balasubramaniam_2023,
 abstract = {},
 author = {Nagadivya Balasubramaniam and Marjo Kauppinen and Antti Rannisto and Kari Hiekkanen and Sari Kujala},
 doi = {10.1016/j.infsof.2023.107197},
 journal = {Information and Software Technology},
 month = {jul},
 pages = {107197},
 publisher = {Elsevier {BV}},
 title = {Transparency and explainability of {AI} systems: From ethical guidelines to requirements},
 url = {https://doi.org/10.1016%2Fj.infsof.2023.107197},
 volume = {159},
 year = {2023}
}

@inproceedings{Baldassarre_2013,
 abstract = {},
 author = {Maria Teresa Baldassarre and Danilo Caivano and Giuseppe Visaggio},
 booktitle = {Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering},
 doi = {10.1145/2460999.2461020},
 month = {apr},
 publisher = {{ACM}},
 title = {Empirical studies for innovation dissemination},
 url = {https://doi.org/10.1145%2F2460999.2461020},
 year = {2013}
}

@inproceedings{Barreiros_2017,
 abstract = {In Software Engineering, technology transfer has been faced as a peer to peer problem, concerning only the adoption and innovation agents. This approach works well when one is just seeking the adoption of a technology by a specific client, but it can not solve a common problem that is the adoption of new technologies by a large mass of potential new users. In wider context, it no longer makes sense to focus on peer to peer transfer. A new way of looking at the problem is necessary. The diffusion of innovations is more natural when it is treated as a spread of information in a community, similar to that observed in epidemics. This work proposes a paradigm shift to show that the adoption of programming languages can be formally treated as an epidemic. This shift of focus allows the dynamics of adoption of programming languages to be mathematically modeled as such, defining models that explain the communities' behavior when adopting programming languages, and allows some forecast to be made.},
 author = {Emanoel Barreiros and Jones Albuquerque and Jo{\~{a}}o F. L. de Oliveira and Helaine Lins and Sergio Soares},
 booktitle = {Proceedings of the {XXXI} Brazilian Symposium on Software Engineering},
 doi = {10.1145/3131151.3131188},
 month = {sep},
 publisher = {{ACM}},
 title = {Programming Language Adoption as an Epidemiological Phenomenon},
 url = {https://doi.org/10.1145%2F3131151.3131188},
 year = {2017}
}

@incollection{Bauer_2015,
 abstract = {Adoption of structured reuse approaches in practice often poses multiple challenges. Research-industry collaborations are considered as suitable vehicle to mitigate adoption difficulties as well as to validate the applicability of scientific results. However, research cooperations with industry do not always live up to the expectations of either of the partners. Unfortunately for researchers and practitioners alike, insights behind the scenes of failed adoption and cooperation are often difficult to obtain. This hinders discussions on lessons learned by organizations during the adoption process and delays improvements. This paper aims to mitigate this issue by presenting lessons learned from interviews we conducted with practitioners in the context of a study on software reuse in industry. The study covered a wide range of aspects, including the process of reuse adoption. One of the participating companies had undertaken two attempts to adopt a form of structured reuse. However, both attempts did not succeed as expected. In our study, we identified tacit assumptions that were related to the encountered difficulties and present the lessons learned from the adoption approach. Furthermore , we report strategies that helped us to overcome the skepticism caused by a previous unsuccessful guided collaboration.},
 author = {Veronika Bauer},
 booktitle = {Product-Focused Software Process Improvement},
 doi = {10.1007/978-3-319-26844-6_3},
 pages = {24--39},
 publisher = {Springer International Publishing},
 title = {Challenges of Structured Reuse Adoption {\textemdash} Lessons Learned},
 url = {https://doi.org/10.1007%2F978-3-319-26844-6_3},
 year = {2015}
}

@inproceedings{Begel_2014,
 abstract = {In this paper, we present the results from two surveys related to data science applied to software engineering. The first survey solicited questions that software engineers would like data scientists to investigate about software, about software processes and practices, and about software engineers. Our analyses resulted in a list of 145 questions grouped into 12 categories. The second survey asked a different pool of software engineers to rate these 145 questions and identify the most important ones to work on first. Respondents favored questions that focus on how customers typically use their applications. We also saw opposition to questions that assess the performance of individual employees or compare them with one another. Our categorization and catalog of 145 questions can help researchers, practitioners, and educators to more easily focus their efforts on topics that are important to the software industry.},
 author = {Andrew Begel and Thomas Zimmermann},
 booktitle = {Proceedings of the 36th International Conference on Software Engineering},
 doi = {10.1145/2568225.2568233},
 month = {may},
 publisher = {{ACM}},
 title = {Analyze this! 145 questions for data scientists in software engineering},
 url = {https://doi.org/10.1145%2F2568225.2568233},
 year = {2014}
}

@article{Berntsson_Svensson_2011,
 abstract = {Quality requirements play a critical role in driving architectural design and are an important issue in software development.
Therefore, quality requirements need to be considered, specified, and quantified early during system analysis and not later
in the development phase in an ad-hoc fashion. This paper presents the quality performance model that estimates quality targets
in relation to market expectations as a basis for the architecting of quality requirements. The purpose of the model is to
provide concepts for qualitative reasoning of quality levels in the decision-making of setting actual targets of quality requirements
for coming releases of the product. The quality performance model is evaluated at one case company, using a market-driven
development approach, in the electronic payment-processing domain. The results show that the model is useful for supporting
early decision-making in, e.g., release planning of quality requirements.},
 author = {Richard Berntsson Svensson and Yuri Sprockel and Björn Regnell and Sjaak Brinkkemper},
 doi = {10.1007/s00766-011-0125-0},
 journal = {Requirements Engineering},
 month = {jun},
 number = {4},
 pages = {283--298},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Setting quality targets for coming releases with {QUPER}: an industrial case study},
 url = {https://doi.org/10.1007%2Fs00766-011-0125-0},
 volume = {17},
 year = {2011}
}

@inproceedings{Berntsson_Svensson_2011,
 abstract = {Release planning plays an important role for the success of a software product vendor that develops software- intensive incremental products. It is important that the software product is released to the market at the right time, and offers higher quality than the competitors. However, an especially challenging problem for a software product vendor is to set the right quality target in relation to future market demands and competitor products. In this paper, we present a prototype for QUPER, a special-purpose tool for supporting release planning of quality requirements. The applicability of the QUPER prototype tool is demonstrated through academic and industrial evaluations. The study showed that the tool provides a clear overview of the current market situation by the generated roadmaps, and to reach an alignment between practitioners, e.g., product managers and developers, of what level of quality is actually needed. Keywords-QUPER; quality requirements; release planning; empirical.},
 author = {Richard Berntsson Svensson and Pontus Lindberg Parker and Bjorn Regnell},
 booktitle = {2011 Fifth International Workshop on Software Product Management ({IWSPM})},
 doi = {10.1109/iwspm.2011.6046204},
 month = {aug},
 publisher = {{IEEE}},
 title = {A prototype tool for {QUPER} to support release planning of quality requirements},
 url = {https://doi.org/10.1109%2Fiwspm.2011.6046204},
 year = {2011}
}

@article{Boerst_2010,
 abstract = {The National Council of Teachers of Mathematics (NCTM) is committed to strengthening relations between research and practice and to the development of a coherent knowledge base that is usable in practice. The fifth of NCTM's strategic priorities states, “Bring existing research into the classroom, and identify and encourage research that addresses the needs of classroom practice” (NCTM, 2008). The need to work toward connection and coherence is not unique to the field of mathematics education. Fields such as medicine (e.g., Clancy, 2007), software engineering (e.g., Gorschek, Garre, Larsson, & Wohlin, 2006), and social work (e.g., Hess & Mullen, 1995) routinely attend to these issues. Researchers in many fields strive to find new ways or to engage more effectively through existing means to enhance coherence and connection. In a sense, this is not a goal that can be achieved definitively, but one that requires persistent engagement. In education, the constant flux of variables in the system, such as curriculum, goals for student learning, and school contexts, requires that new connections between research and practice be investigated and that old connections be reexamined. Changes in educational contexts open new territory in need of study and also challenge the coherence of explanations grounded in previous research. In this way, attention of the field to connection and coherence is neither unique to mathematics education nor an effort due solely to inadequacies of research efforts in the past.},
 author = {Timothy Boerst and Jere Confrey and Daniel Heck and Eric Knuth and Diana V. Lambdin and Dorothy White and Patricia C. Baltzley and Judith Reed Quander},
 doi = {10.5951/jresematheduc.41.3.0216},
 journal = {Journal for Research in Mathematics Education},
 month = {may},
 number = {3},
 pages = {216--235},
 publisher = {National Council of Teachers of Mathematics},
 title = {Research Committee: Strengthening Research by Designing for Coherence and Connections to Practice {NCTM} Research Committee},
 url = {https://doi.org/10.5951%2Fjresematheduc.41.3.0216},
 volume = {41},
 year = {2010}
}

@article{Borg_2017,
 abstract = {Change Impact Analysis (CIA) during software evolution of safety-critical systems is a labor-intensive task. Several authors have proposed tool support for CIA, but very few tools were evaluated in industry. We present a case study on ImpRec, a recommendation System for Software Engineering (RSSE), tailored for CIA at a process automation company. ImpRec builds on assisted tracing, using information retrieval solutions and mining software repositories to recommend development artifacts, potentially impacted when resolving incoming issue reports. In contrast to the majority of tools for automated CIA, ImpRec explicitly targets development artifacts that are not source code. We evaluate ImpRec in a two-phase study. First, we measure the correctness of ImpRec’s recommendations by a simulation based on 12 years’ worth of issue reports in the company. Second, we assess the utility of working with ImpRec by deploying the RSSE in two development teams on different continents. The results suggest that ImpRec presents about 40% of the true impact among the top-10 recommendations. Furthermore, user log analysis indicates that ImpRec can support CIA in industry, and developers acknowledge the value of ImpRec in interviews. In conclusion, our findings show the potential of reusing traceability associated with developers’ past activities in an RSSE.},
 author = {Markus Borg and Krzysztof Wnuk and Bjorn Regnell and Per Runeson},
 doi = {10.1109/tse.2016.2620458},
 journal = {{IEEE} Transactions on Software Engineering},
 month = {jul},
 number = {7},
 pages = {675--700},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Supporting Change Impact Analysis Using a Recommendation System: An Industrial Case Study in a Safety-Critical Context},
 url = {https://doi.org/10.1109%2Ftse.2016.2620458},
 volume = {43},
 year = {2017}
}

@inproceedings{Borg_2017,
 abstract = {},
 author = {Markus Borg and Thomas Olsson and John Svensson},
 booktitle = {2017 {IEEE} 25th International Requirements Engineering Conference ({RE})},
 doi = {10.1109/re.2017.55},
 month = {sep},
 publisher = {{IEEE}},
 title = {Piggybacking on an Autonomous Hauler: Business Models Enabling a System-of-Systems Approach to Mapping an Underground Mine},
 url = {https://doi.org/10.1109%2Fre.2017.55},
 year = {2017}
}

@inproceedings{Bouraffa_2020,
 abstract = {},
 author = {Abir Bouraffa and Walid Maalej},
 booktitle = {Proceedings of the {IEEE}/{ACM} 42nd International Conference on Software Engineering Workshops},
 doi = {10.1145/3387940.3391485},
 month = {jun},
 publisher = {{ACM}},
 title = {Two Decades of Empirical Research on Developers{\textquotesingle} Information Needs},
 url = {https://doi.org/10.1145%2F3387940.3391485},
 year = {2020}
}

@incollection{Briand_2012,
 abstract = {In recent years, we have been exploring ways to foster a closer collaboration between software engineering research and industry both to align our research with practical needs, and to increase awareness about the importance of research for innovation. This paper outlines our expe-rience with three research projects conducted in collaboration with the industry. We examine the way we collaborated with our industry part-ners and describe the decisions that contributed to the effectiveness of the collaborations. We report on the lessons learned from our experience and illustrate the lessons using examples from the three projects. The lessons focus on the applications of Model-Driven Engineering (MDE), as all the three projects we draw on here were MDE projects. Our goal from structuring and sharing our experience is to contribute to a better understanding of how researchers and practitioners can collaborate more effectively and to gain more value from their collaborations.},
 author = {Lionel Briand and Davide Falessi and Shiva Nejati and Mehrdad Sabetzadeh and Tao Yue},
 booktitle = {Model Driven Engineering Languages and Systems},
 doi = {10.1007/978-3-642-33666-9_50},
 pages = {793--809},
 publisher = {Springer Berlin Heidelberg},
 title = {Research-Based Innovation: A Tale of Three Projects in Model-Driven Engineering},
 url = {https://doi.org/10.1007%2F978-3-642-33666-9_50},
 year = {2012}
}

@article{Brings_2018,
 abstract = {Introduction
Technology transfer aims at supporting the transfer of results from software engineering research from academia to industrial application.

Objective
This paper reports on the current state of technology transfer in software engineering.

Method
We conducted a systematic literature review, in which we investigated 3070 papers. We identified in total 70 relevant papers, which were subject of a detailed analysis.

Results
Many different approaches are proposed to foster technology transfer in software engineering. The majority of these approaches suggest direct collaboration between industry and academia or teaching new technologies in industrial training or university education. In addition, a considerable number of experience reports on technology transfer exist. Hence, a multitude of best practices, success stories, and lessons learned is reported. Among others, empirical evidence, maturity, and adaptability of the technology seem important preconditions for successful transfer, while social and organizational factors seem important barriers to successful technology transfer.

Conclusion
Our findings can aid software engineering researchers in determining how best to support the transfer of their research results into practice. Furthermore, analysis of the literature also revealed that no reports exist on the combination of various technology transfer approaches, which could increase advantages of existing approaches while reducing their disadvantages.},
 author = {Jennifer Brings and Marian Daun and Sarah Brinckmann and Kevin Keller and Thorsten Weyer},
 doi = {10.1002/smr.1981},
 journal = {Journal of Software: Evolution and Process},
 month = {aug},
 number = {11},
 pages = {e1981},
 publisher = {Wiley},
 title = {Approaches, success factors, and barriers for technology transfer in software engineering-Results of a systematic literature review},
 url = {https://doi.org/10.1002%2Fsmr.1981},
 volume = {30},
 year = {2018}
}

@article{Britto_2020,
 abstract = {The combination of scale and distribution in software projects makes the onboarding of new developers problematic. To the best of our knowledge, there is no research on the relationship between onboarding strategies and the performance evolution of newcomers in large-scale, globally distributed projects. Furthermore, there are no approaches to support the development of strategies to systematically onboard developers. In this paper, we address these gaps by means of an industrial case study. We identified that the following aspects seem to be related to the observed onboarding results: the distance to mentors, the formal training approach used, the allocation of large and distributed tasks in the early stages of the onboarding process, and team instability. We conclude that onboarding must be planned well ahead and should consider avoiding the aspects mentioned above. Based on the results of this investigation, we propose a process to strategize and evaluate onboarding. To develop the process, we used business process modeling. We conducted a static validation of the proposed process utilizing interviews with experts. The static validation of the process indicates that it can help companies to deal with the challenges associated with the onboarding of newcomers through more systematic, effective, and repeatable onboarding strategies.},
 author = {Ricardo Britto and Darja Smite and Lars-Ola Damm and Jürgen Börstler},
 doi = {10.1016/j.jss.2020.110699},
 journal = {Journal of Systems and Software},
 month = {nov},
 pages = {110699},
 publisher = {Elsevier {BV}},
 title = {Evaluating and strategizing the onboarding of software developers in large-scale globally distributed projects},
 url = {https://doi.org/10.1016%2Fj.jss.2020.110699},
 volume = {169},
 year = {2020}
}

@inproceedings{Bucaioni_2020,
 abstract = {},
 author = {Alessio Bucaioni and Matthias Becker and John Lundback and Harald Mackamul},
 booktitle = {2020 46th Euromicro Conference on Software Engineering and Advanced Applications ({SEAA})},
 doi = {10.1109/seaa51224.2020.00089},
 month = {aug},
 publisher = {{IEEE}},
 title = {From {AMALTHEA} to {RCM} and Back: a Practical Architectural Mapping Scheme},
 url = {https://doi.org/10.1109%2Fseaa51224.2020.00089},
 year = {2020}
}

@inproceedings{Bucaioni_2021,
 abstract = {},
 author = {Alessio Bucaioni and Fabio Di Silvestro and Inderjeet Singh and Mehrdad Saadatmand and Henry Muccini and Thorvaldur Jochumsson},
 booktitle = {2021 {IEEE}/{ACM} International Conference on Automation of Software Test ({AST})},
 doi = {10.1109/ast52587.2021.00011},
 month = {may},
 publisher = {{IEEE}},
 title = {Model-based Automation of Test Script Generation Across Product Variants: a Railway Perspective},
 url = {https://doi.org/10.1109%2Fast52587.2021.00011},
 year = {2021}
}

@inproceedings{Bucaioni_2021,
 abstract = {},
 author = {Alessio Bucaioni and Vlatko Dimic and Mattias Galnander and Henrik Lonn and John Lundback},
 booktitle = {2021 22nd {IEEE} International Conference on Industrial Technology ({ICIT})},
 doi = {10.1109/icit46573.2021.9453680},
 month = {mar},
 publisher = {{IEEE}},
 title = {Transferring a model-based development methodology to the automotive industry},
 url = {https://doi.org/10.1109%2Ficit46573.2021.9453680},
 year = {2021}
}

@article{Bucaioni_2022,
 abstract = {},
 author = {Alessio Bucaioni and Fabio Di Silvestro and Inderjeet Singh and Mehrdad Saadatmand and Henry Muccini},
 doi = {10.1002/smr.2498},
 journal = {Journal of Software: Evolution and Process},
 month = {aug},
 number = {11},
 publisher = {Wiley},
 title = {Model-based generation of test scripts across product variants: An experience report from the railway industry},
 url = {https://doi.org/10.1002%2Fsmr.2498},
 volume = {34},
 year = {2022}
}

@article{Bucaioni_2022,
 abstract = {},
 author = {Alessio Bucaioni and Matthias Becker},
 doi = {10.1016/j.jss.2021.111106},
 journal = {Journal of Systems and Software},
 month = {feb},
 pages = {111106},
 publisher = {Elsevier {BV}},
 title = {Enabling automated integration of architectural languages: An experience report from the automotive domain},
 url = {https://doi.org/10.1016%2Fj.jss.2021.111106},
 volume = {184},
 year = {2022}
}

@incollection{Buchgeher_2018,
 abstract = {},
 author = {Georg Buchgeher and Rainer Weinreich and Heinz Huber},
 booktitle = {Software Architecture},
 doi = {10.1007/978-3-030-00761-4_14},
 pages = {203--218},
 publisher = {Springer International Publishing},
 title = {A Platform for the Automated Provisioning of Architecture Information for Large-Scale Service-Oriented Software Systems},
 url = {https://doi.org/10.1007%2F978-3-030-00761-4_14},
 year = {2018}
}

@article{Corsi_2021,
 abstract = {<https://rdcu.be/cilt2> Until the year 2030, the objectives and targets proposed in the Agenda for Sustainable Development Goals need to be achieved, aiming to minimize various global problems. Bearing in mind this urgency, it is necessary that studies to help achieve these objectives be carried out. Therefore, the purpose of this work was to carry out a Systematic Literature Review of the technology transfer models existing in the literature, since the process can assist in promoting sustainable development, as well as possible barriers and opportunities for sustainable technology transfer processes. The results show that, despite the diversity of models available in the literature, there is an absence of a model that considers the sphere of sustainable development, and the possible barriers and opportunities in the formulation of its stages. Based on this, a conceptual Barriers and Opportunities-based model focused on sustainable development was proposed, aiming to fill the scientific gap found, thus contributing to the Sustainable Development Goals. The model has four macro steps: Plan; Enable; Implement and Evaluate, which range from identifying the technological need to documentation, registration, and feedback on implementation. As a result, the model can anticipate and address possible barriers, making use of opportunities as facilitators. Also, this research contributes to the governmental sphere, since with the use of the model it is expected that it can assist in the fulfillment of the Sustainable Development Goals.},
 author = {Alana Corsi and Fabiane Florencio de Souza and Regina Negri Pagani and Jo{\~{a}}o Luiz Kovaleski},
 doi = {10.1007/s11192-021-03969-0},
 journal = {Scientometrics},
 month = {apr},
 number = {6},
 pages = {5081--5112},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Technology transfer oriented to sustainable development: proposal of a theoretical model based on barriers and opportunities},
 url = {https://doi.org/10.1007%2Fs11192-021-03969-0},
 volume = {126},
 year = {2021}
}

@article{Craiut_2022,
 abstract = {},
 author = {Lisa Craiut and Constantin Bungau and Tudor Bungau and Cristian Grava and Pavel Otrisal and Andrei-Flavius Radu},
 doi = {10.3390/su142315728},
 journal = {Sustainability},
 month = {nov},
 number = {23},
 pages = {15728},
 publisher = {{MDPI} {AG}},
 title = {Technology Transfer, Sustainability, and Development, Worldwide and in Romania},
 url = {https://doi.org/10.3390%2Fsu142315728},
 volume = {14},
 year = {2022}
}

@inproceedings{Dantas_2021,
 abstract = {Risk management is essential in software project management. It includes activities such as identifying, measuring and monitoring risks. The literature presents different approaches to support software risk management. In particular, the researchers popularly used Bayesian Networks because they can be learned from data or elicited from domain experts. Even though the literature presents many Bayesian networks (BN) for software risk management, none focus on technological risk factors. Given this, this paper presents a BN for managing risks of software projects and the results of a static validation performed through a focus group with eight practitioners. As a result, the practitioners agreed that our proposed to manage technological risks of software projects using BN is valuable and easy to use. Given the successful results, we concluded that the proposed solution is promising.},
 author = {Emanuel Dantas and Ademar Sousa Neto and Mirko Perkusich and Hyggo Almeida and Angelo Perkusich},
 booktitle = {Anais do I Workshop Brasileiro de Engenharia de Software Inteligente ({ISE} 2021)},
 doi = {10.5753/ise.2021.17277},
 month = {sep},
 publisher = {Sociedade Brasileira de Computa{\c{c}}{\~{a}}o},
 title = {Using Bayesian Networks to Support Managing Technological Risk on Software Projects},
 url = {https://doi.org/10.5753%2Fise.2021.17277},
 year = {2021}
}

@article{Daun_2023,
 abstract = {},
 author = {Marian Daun and Jennifer Brings and Patricia Aluko Obe and Bastian Tenbergen},
 doi = {10.1002/spe.3200},
 journal = {Software: Practice and Experience},
 month = {mar},
 publisher = {Wiley},
 title = {An industry survey on approaches, success factors, and barriers for technology transfer in software engineering},
 url = {https://doi.org/10.1002%2Fspe.3200},
 year = {2023}
}

@incollection{de_Fran_a_2020,
 abstract = {Several decades ago, inspired by other knowledge areas, simulation was introduced as a research method to Software Engineering. Motivated by potential benefits achieved in other areas, the software engineering community has used simulation-based studies for planning, controlling, and improving software development. However, unclear expectations from simulation-based studies, a lack of methodological support, as well as dispersed knowledge to support model building and calibration have hindered widespread adoption of simulation-based investigations. In this chapter, we delineate the role of simulation in software engineering research and compile processes and guidelines into a comprehensive life cycle. This chapter aims to guide software engineering researchers to conduct effective simulation-based studies in real-world settings.},
 author = {Breno Bernard Nicolau de Fran{\c{c}}a and Nauman Bin Ali},
 booktitle = {Contemporary Empirical Methods in Software Engineering},
 doi = {10.1007/978-3-030-32489-6_10},
 pages = {263--287},
 publisher = {Springer International Publishing},
 title = {The Role of Simulation-Based Studies in Software Engineering Research},
 url = {https://doi.org/10.1007%2F978-3-030-32489-6_10},
 year = {2020}
}

@inproceedings{de_la_Vara_2012,
 abstract = {Factors related to the requirements engineering process and customers have been repeatedly reported among those that most strongly influence the success of a software project. However, requirements engineering research has so far barely studied practice from a customer-based perspective. Furthermore, rigorous evidence about customers' perspectives regarding requirements engineering approaches is scarce, and links between customer-based requirements engineering research and the industrial practices are necessary. This paper argues that new research is necessary to tackle the above weaknesses. Our position is that: requirements specification approaches must be validated from a customer-based perspective; the influence of customers' characteristics on the requirements engineering process must be studied in more depth; and potential customer-based improvements in practice must be assessed. We also present situations in which the results from these activities would help practitioners, propose a research agenda to execute these activities, and discuss challenges that might hinder their execution.},
 author = {Jose Luis de la Vara and Luis Hoyos and Enrique Collado and Mehrdad Sabetzadeh},
 booktitle = {2012 Second {IEEE} International Workshop on Empirical Requirements Engineering ({EmpiRE})},
 doi = {10.1109/empire.2012.6347680},
 month = {sep},
 publisher = {{IEEE}},
 title = {Towards customer-based requirements engineering practices},
 url = {https://doi.org/10.1109%2Fempire.2012.6347680},
 year = {2012}
}

@inproceedings{de_la_Vara_2013,
 abstract = {Although past research has resulted in different means to deal with software model quality, creation of adequate software models remains challenging. Any modelling effort must be carefully analysed and planned before it starts, and definition or adoption of modelling guidelines is usually necessary. In addition, the amount of publications addressing model quality in practice is low, and the knowledge about others' experience regarding model quality is limited. This paper reports on our experience in dealing with software model quality in the context of a project between industry and academia. Such a project corresponds to a large-scale research project in which modelling has been used both as part of the necessary work for executing the project and for creating project results. We present how we have dealt with model quality in requirements modelling and in conceptual model specification, as well as a set of lessons learned. The insights provided can help both researchers and practitioners when having to deal with software model quality.},
 author = {Jose Luis de la Vara and Huascar Espinoza},
 booktitle = {2013 13th International Conference on Quality Software},
 doi = {10.1109/qsic.2013.40},
 month = {jul},
 publisher = {{IEEE}},
 title = {Dealing with Software Model Quality in Practice: Experience in a Research Project},
 url = {https://doi.org/10.1109%2Fqsic.2013.40},
 year = {2013}
}

@incollection{De_Leon_2017,
 abstract = {Two Brazilian stories highlight why proper IP management is important for firms to develop a competitive advantage supported on a better use of the IP institutions. The first one involves the licensing of biodegradable chemical technology developed at the Chemistry Institute of Universidad de Campinas (Brazil) successfully licensed to Contech in 2007 by its tech transfer office, Agencia de Innovación Inova Unicamp. The patented technology contributed decisively to ensuring Contech’s leadership in the market by giving her time savings, as the production of paper could go on without the need to stop the machine for maintenance. The mechanical system applied biodegradable chemicals for pulp and paper machinery that did not hold up the production process. In return, the licensing agreement increased Inova’s budget, in a win-win situation.},
 author = {Ignacio De Leon and Jose Fernandez Donoso},
 booktitle = {Innovation, Startups and Intellectual Property Management},
 doi = {10.1007/978-3-319-54906-4_7},
 pages = {111--132},
 publisher = {Springer International Publishing},
 title = {Government Strategies Towards {IP} Management},
 url = {https://doi.org/10.1007%2F978-3-319-54906-4_7},
 year = {2017}
}

@inproceedings{Diebold_2014,
 abstract = {Background: Particularly during and after research projects, technology transfer into practice plays an important role for academia to get technologies into use and for industry to improve their development. Objective: Our goal was to gain more and current knowledge about how technology transfer from software engineering (SE) research into industrial practice is accomplished best and how to measure the effectiveness of this transfer. Method: We conducted a study in the context of two German research projects, covering many different organizations from industry and academia. Results: This paper presents the design of the study and the survey performed. After introducing the concept of technology transfer we used and adapted, we present preliminary results. Conclusions: We observed that traditional means such as meetings or workshops are still the most widely used mediums for technology transfer in SE. We also discovered that, even though the duration of transfer depends on the object being transferred, the average duration is three years, which is far less than previously published (~18 years).},
 author = {Philipp Diebold and Antonio Vetr{\`{o}}},
 booktitle = {Proceedings of the 8th {ACM}/{IEEE} International Symposium on Empirical Software Engineering and Measurement},
 doi = {10.1145/2652524.2652552},
 month = {sep},
 publisher = {{ACM}},
 title = {Bridging the gap: {SE} technology transfer into practice},
 url = {https://doi.org/10.1145%2F2652524.2652552},
 year = {2014}
}

@inproceedings{Diebold_2015,
 abstract = {},
 author = {Philipp Diebold and Antonio Vetro and Daniel Mendez Fernandez},
 booktitle = {2015 {ACM}/{IEEE} International Symposium on Empirical Software Engineering and Measurement ({ESEM})},
 doi = {10.1109/esem.2015.7321189},
 month = {oct},
 publisher = {{IEEE}},
 title = {An Exploratory Study on Technology Transfer in Software Engineering},
 url = {https://doi.org/10.1109%2Fesem.2015.7321189},
 year = {2015}
}

@inproceedings{dos_Santos_2019,
 abstract = {The optimization of processes in the software development life cycle has become mandatory, since companies need to reduce the costs of their projects and shorten the time to market without affecting the quality of the product. With regards to software products, activities related to the testing process play a major role in their quality, since they assure that the product complies with the elicited requirements. However, companies usually do not perform testing activities on software projects due to financial and time constraints. These costs may be even higher in testing processes that rely on manual execution of activities, which is error-prone and can take too much time. To mitigate this situation, test automation allows the reduction of the effort required. This paper presents an experience report in a Test Factory about the use of a tool that partially automates the specification of test procedures based on use cases. The tool aims to read the textual use cases from the requirement management system, extract the test case procedures and required inputs to manual editing, and then send the test cases to the test management system. This solution is then applied to software from the telecommunications industry. This paper also presents how the tool was used and the lessons learned during the whole process.},
 author = {Erick Barros dos Santos and Lucas Sim{\~{a}}o da Costa and Bruno Sab{\'{o}}ia Arag{\~{a}}o and Ismayle de Sousa Santos and Rossana Maria de Castro Andrade},
 booktitle = {Proceedings of the {XVIII} Brazilian Symposium on Software Quality},
 doi = {10.1145/3364641.3364673},
 month = {oct},
 publisher = {{ACM}},
 title = {Extraction of test cases procedures from textual use cases to reduce test effort},
 url = {https://doi.org/10.1145%2F3364641.3364673},
 year = {2019}
}

@inproceedings{Duarte_2015,
 abstract = {Technology and knowledge have been recognized as main sources of competitive advantage of corporations, industries and nations, particularly in the software domain. They have led to the creation of local ecosystems devoted to development and transfer activities, which ensure not only personal and institutional motivation/recognition, but also social and economic gains. An open (ended) debate panel is proposed in order to develop greater awareness and seek deeper understanding of such activities from Requirements Engineering research to industrial practice. The panel involves researchers and practitioners with the perspective of eliciting: (i) experiences in knowledge and technology development and transfer; (ii) awareness and effectiveness of models and patterns; and (iii) factors for having successful collaboration between research institutions and industry. The organizers also plan to run a survey during and after the conference, summarizing their conclusions in specific post-conference reports.},
 author = {Carlos Henrique C. Duarte and Tony Gorschek},
 booktitle = {2015 {IEEE} 23rd International Requirements Engineering Conference ({RE})},
 doi = {10.1109/re.2015.7320462},
 month = {aug},
 publisher = {{IEEE}},
 title = {Technology transfer - Requirements Engineering research to industrial practice an open (ended) debate},
 url = {https://doi.org/10.1109%2Fre.2015.7320462},
 year = {2015}
}

@article{Edison_2013,
 abstract = {In today's highly competitive business environments with shortened product and technology life cycle, it is critical for software industry to continuously innovate. This goal can be achieved by developing a better understanding and control of the activities and determinants of innovation. Innovation measurement initiatives assess innovation capability, output and performance to help develop such an understanding. This study explores various aspects relevant to innovation measurement ranging from definitions, measurement frameworks and metrics that have been proposed in literature and used in practice. A systematic literature review followed by an online questionnaire and interviews with practitioners and academics were employed to identify a comprehensive definition of innovation that can be used in software industry. The metrics for the evaluation of determinants, inputs, outputs and performance were also aggregated and categorised. Based on these findings, a conceptual model of the key measurable elements of innovation was constructed from the findings of the systematic review. The model was further refined after feedback from academia and industry through interviews.},
 author = {Henry Edison and Nauman bin Ali and Richard Torkar},
 doi = {10.1016/j.jss.2013.01.013},
 journal = {Journal of Systems and Software},
 month = {may},
 number = {5},
 pages = {1390--1407},
 publisher = {Elsevier {BV}},
 title = {Towards innovation measurement in the software industry},
 url = {https://doi.org/10.1016%2Fj.jss.2013.01.013},
 volume = {86},
 year = {2013}
}

@article{Edison_2020,
 abstract = {Context: Inner source software development (ISSD) has been viewed as an alternative approach in which organisations adopt open source software development (OSSD) practices and exploit its benefits internally. 

Objective: In this paper, we aim to provide an extensive review of current research on ISSD and to establish a research agenda on this domain. 

Method: The review is primarily performed using a systematic literature review protocol. 

Results: We identified, critically evaluated and integrated the findings of 37 primary studies, describing 25 empirical research papers, 10 frameworks/methods, models and tools to support the implementation of inner source, as well as a set of benefits and challenges associated with ISSD. 

Conclusion: This study presents four main contributions. First, the study provides an in-depth review of ISSD to date, i.e. the evolution of research across inner source, contributions of existing research developments , and theories, models and frameworks used to study inner source. Second, our review applies the OSSD approach framework as the lens to analyse ISSD. Third, the review updates the key challenges associated with ISSD from a management perspective. The final contribution is the establishment of a research agenda to advance knowledge on ISSD.},
 author = {Henry Edison and Noel Carroll and Lorraine Morgan and Kieran Conboy},
 doi = {10.1016/j.jss.2020.110520},
 journal = {Journal of Systems and Software},
 month = {may},
 pages = {110520},
 publisher = {Elsevier {BV}},
 title = {Inner source software development: Current thinking and an agenda for future research},
 url = {https://doi.org/10.1016%2Fj.jss.2020.110520},
 volume = {163},
 year = {2020}
}

@inproceedings{Endres_2022,
 abstract = {},
 author = {Madeline Endres and Pemma Reiter and Stephanie Forrest and Westley Weimer},
 booktitle = {Proceedings of the Third International Workshop on Automated Program Repair},
 doi = {10.1145/3524459.3527352},
 month = {may},
 publisher = {{ACM}},
 title = {What can program repair learn from code review?},
 url = {https://doi.org/10.1145%2F3524459.3527352},
 year = {2022}
}

@inproceedings{Erazo_Garz_n_2022,
 abstract = {Hoy en día, uno de los desafíos tecnológicos es el desarrollo de software para sistemas de IoT, ya que operan en escenarios altamente cambiantes, siendo complejo con las metodologías de Ingeniería de Software tradicionales identificar todos los requisitos del sistema en la etapa de desarrollo. Una alternativa es incrementar su autonomía, dotándoles de capacidades de autoconsciencia con el apoyo de los modelos en tiempo de ejecución, a fin de trasladar varias de las funcionalidades que se programan durante el desarrollo al tiempo de ejecución. Este trabajo doctoral propone desarrollar una metodología basada en modelos en tiempo de ejecución para la construcción y operación de sistemas autoconscientes de IoT.},
 author = {Lenin Erazo-Garz{\'{o}}n},
 booktitle = {Anais do {XXV} Congresso Ibero-Americano em Engenharia de Software ({CIbSE} 2022)},
 doi = {10.5753/cibse.2022.20989},
 month = {jun},
 publisher = {Sociedade Brasileira de Computa{\c{c}}{\~{a}}o},
 title = {Metodolog{\'{\i}}a Basada en Modelos en Tiempo de Ejecuci{\'{o}}n para la Construcci{\'{o}}n y Operaci{\'{o}}n de Sistemas Autoconscientes de Internet de las Cosas},
 url = {https://doi.org/10.5753%2Fcibse.2022.20989},
 year = {2022}
}

@article{Falessi_2017,
 abstract = {},
 author = {Davide Falessi and Natalia Juristo and Claes Wohlin and Burak Turhan and Jürgen Münch and Andreas Jedlitschka and Markku Oivo},
 doi = {10.1007/s10664-017-9523-3},
 journal = {Empirical Software Engineering},
 month = {jun},
 number = {1},
 pages = {452--489},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Empirical software engineering experts on the use of students and professionals in experiments},
 url = {https://doi.org/10.1007%2Fs10664-017-9523-3},
 volume = {23},
 year = {2017}
}

@article{Falessi_2017,
 abstract = {},
 author = {Davide Falessi and Natalia Juristo and Claes Wohlin and Burak Turhan and Jürgen Münch and Andreas Jedlitschka and Markku Oivo},
 doi = {10.1007/s10664-017-9523-3},
 journal = {Empirical Software Engineering},
 month = {jun},
 number = {1},
 pages = {452--489},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Empirical software engineering experts on the use of students and professionals in experiments},
 url = {https://doi.org/10.1007%2Fs10664-017-9523-3},
 volume = {23},
 year = {2017}
}

@article{Farooq_2019,
 abstract = {Doing the right kind of testing has always been one of main challenging and a decisive task for industry. To choose right software testing method(s), industry needs to have an exact objective knowledge of their effectiveness, efficiency, and applicability conditions. The most common way to evaluate testing methods, for such knowledge, is with empirical studies. Reliable and comprehensive evidence can be obtained by aggregating the results of different empirical studies (family of experiments) taking into account their findings and limitations. We conducted a study to investigate the current state of the art of empirical knowledge base of three testing methods. We found that although the empirical studies conducted so far to evaluate testing methods contain many important and interesting results; however, we still lack factual and generalizable knowledge about performance and applicability conditions of testing methods(s), making it unfeasible to be readily adopted by the industry. Moreover, we tried to identify the major factors responsible for limiting academia from producing significantly reliable results having an industrial impact. We believe that besides effective and long-term academia-industry collaboration, there is a need for more systematic, quantifiable and comprehensive empirical studies (which provides scope for aggregation using rigorous techniques), mainly replications so as to create an effective and applicable knowledge base about testing methods which potentially can fill the gap between academia and industry.},
 author = {Sheikh Umar Farooq},
 doi = {10.1007/s13198-019-00899-2},
 journal = {International Journal of System Assurance Engineering and Management},
 month = {oct},
 number = {6},
 pages = {1487--1504},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Gap between academia and industry: a case of empirical evaluation of three software testing methods},
 url = {https://doi.org/10.1007%2Fs13198-019-00899-2},
 volume = {10},
 year = {2019}
}

@incollection{Felderer_2019,
 abstract = {For a highly relevant and applied research area like software testing industry-academia collaboration is of uttermost importance. In this paper we reflect on how industry-academia collaboration can be improved based on evidence from four empirical studies. We therefore first present four studies providing evidence on the (1) perceived level of challenges in testing activities, (2) focus areas in industrial and academic software testing conferences, (3) synergies between industrial and academic software testing conferences, as well as (4) the need for consideration of grey literature. Then, we reflect on issues, which we think can improve the link and synergies between industry and academia in software testing, i.e., research topics, guidelines and evidence, value and risk, context and scalability, action research and education as well as grey literature and open science.},
 author = {Michael Felderer and Vahid Garousi},
 booktitle = {Software Quality: Quality Intelligence in Software and Systems Engineering},
 doi = {10.1007/978-3-030-35510-4_1},
 month = {dec},
 pages = {3--12},
 publisher = {Springer International Publishing},
 title = {Together We Are Stronger: Evidence-Based Reflections on Industry-Academia Collaboration in Software Testing},
 url = {https://doi.org/10.1007%2F978-3-030-35510-4_1},
 year = {2019}
}

@article{Ferrari_2018,
 abstract = {},
 author = {Alessio Ferrari and Gloria Gori and Benedetta Rosadini and Iacopo Trotta and Stefano Bacherini and Alessandro Fantechi and Stefania Gnesi},
 doi = {10.1007/s10664-018-9596-7},
 journal = {Empirical Software Engineering},
 month = {feb},
 number = {6},
 pages = {3684--3733},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Detecting requirements defects with {NLP} patterns: an industrial experience in the railway domain},
 url = {https://doi.org/10.1007%2Fs10664-018-9596-7},
 volume = {23},
 year = {2018}
}

@article{Ferreira_2023,
 abstract = {Context: Large-scale software-intensive Systems-of-Systems (SoS) have become present in several critical domains and have sometimes depended on diverse trending technologies, such as cloud computing and machine learning. At the same time, the SoS dynamic architecture makes it difficult to assure SoS reliability leading to diverse studies with specific solutions, while the need for a shared view of what precisely SoS reliability refers to still exists.
Objective: The main contribution of this article is to go towards an understanding of SoS reliability. We present a conceptual model whose concepts as well as their definitions and relationships were defined by systematically examining the literature of the field.
Methods: We surveyed 36 practitioners and researchers regarding ambiguity, explanatory power, parsimony, generality, and utility of our model. Next, we adjusted our model according to their contribution.
Results: We reach a conceptual model containing 29 concepts and their relationships that help to comprehend SoS reliability. In addition, we provided a glossary with a definition of each concept of our conceptual model. We also proposed a SoS reliability definition grounded on the literature.
Conclusions: By organizing the knowledge of SoS reliability, this conceptual model makes it possible to expand the body of knowledge in the area and opens several opportunities for further investigations; in particular, this model serves as a basis for novel solutions aiming to assure SoS reliability.},
 author = {Francisco Henrique Cerdeira Ferreira and Elisa Yumi Nakagawa and Rodrigo Pereira dos Santos},
 doi = {10.1016/j.infsof.2023.107186},
 journal = {Information and Software Technology},
 month = {jun},
 pages = {107186},
 publisher = {Elsevier {BV}},
 title = {Towards an understanding of reliability of software-intensive systems-of-systems},
 url = {https://doi.org/10.1016%2Fj.infsof.2023.107186},
 volume = {158},
 year = {2023}
}

@article{Flemstr_m_2018,
 abstract = {},
 author = {Daniel Flemström and Pasqualina Potena and Daniel Sundmark and Wasif Afzal and Markus Bohlin},
 doi = {10.1007/s11219-017-9401-7},
 journal = {Software Quality Journal},
 month = {mar},
 number = {4},
 pages = {1421--1449},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Similarity-based prioritization of test case automation},
 url = {https://doi.org/10.1007%2Fs11219-017-9401-7},
 volume = {26},
 year = {2018}
}

@inproceedings{Fogelstr_m_2008,
 abstract = {The need of understanding and supporting requirements engineering decisions in market-driven product development is motivated by the complexity and economical impact of these decisions. While being a key for success, correct and timely decisions are dependent on the availability and the quality of decision material (requirements, business cases, cost-value estimations etc). This paper presents a needs-oriented framework (NORM) for identifying and assuring the creation of appropriate decision material for RE decisions. NORM is based on analysis of the applied RE process and characteristics of separate RE decisions, focusing mainly on pre-project activities. The framework is developed in close cooperation with industry with the intention to ensure that resources are spent on producing just-the-necessary information at the right time and to be able to monitor and control this production effort.},
 author = {Nina Dzamashvili Fogelström and Tony Gorschek and Mikael Svahnberg},
 booktitle = {2008 Second International Workshop on Software Product Management},
 doi = {10.1109/iwspm.2008.5},
 month = {sep},
 publisher = {{IEEE}},
 title = {Needs Oriented Framework for Producing Requirements Decision Material - {NORM}},
 url = {https://doi.org/10.1109%2Fiwspm.2008.5},
 year = {2008}
}

@incollection{Franch_2019,
 abstract = {Software quality poses continuously new challenges in software development, including aspects related to both software development and system usage, which significantly impact the success of software systems. The Q-Rapids H2020 project defines an evidence-based, data-driven quality-aware rapid software development methodology. Quality requirements (QRs) are incrementally elicited, refined and improved based on data gathered from software repositories, project management tools, system usage and quality of service. This data is analysed and aggregated into quality-related key strategic indicators (e.g., development effort required to include a given QR in the next development cycle) which are presented to decision makers using a highly informative dashboard. The Q-Rapids platform is being evaluated in-premises by the four companies participating in the consortium, reporting useful lessons learned and directions for new development.},
 author = {Xavier Franch and Lidia Lopez and Silverio Mart{\'{\i}}nez-Fern{\'{a}}ndez and Marc Oriol and Pilar Rodr{\'{\i}}guez and Adam Trendowicz},
 booktitle = {Software Technology: Methods and Tools},
 doi = {10.1007/978-3-030-29852-4_32},
 pages = {378--392},
 publisher = {Springer International Publishing},
 title = {Quality-Aware Rapid Software Development Project: The Q-Rapids Project},
 url = {https://doi.org/10.1007%2F978-3-030-29852-4_32},
 year = {2019}
}

@article{Fricker_2015,
 abstract = {Shared understanding of requirements between stakeholders and the development team is a critical success factor for requirements engineering. Workshops are an effective means for achieving such shared understanding. Stakeholders and team representatives can meet and discuss what a planned software system should be and how it should support achieving stakeholder goals. However, some important intended recipients of the requirements are often not present in such workshops: the developers. Thus, they cannot benefit from the in-depth understanding of the requirements and of the rationales for these requirements that develops during the workshops. The simple handover of a requirements specification hardly compensates the rich requirements understanding that is needed for the development of an acceptable system. To compensate the lack of presence in a requirements workshop, we propose to record that requirements workshop on video. If workshop participants agree to be recorded, a video is relatively simple to create and can capture much more aspects about requirements and rationales than a specification document. This paper presents the workshop video technique and a phenomenological evaluation of its use for requirements communication from the perspective of software developers. The results show how the technique was appreciated by observers of the video, present positive and negative feedbacks from the observers, and lead to recommendations for implementing the technique in practice.},
 author = {Samuel A. Fricker and Kurt Schneider and Farnaz Fotrousi and Christoph Thuemmler},
 doi = {10.1007/s00766-015-0231-5},
 journal = {Requirements Engineering},
 month = {jun},
 number = {4},
 pages = {521--552},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Workshop videos for requirements communication},
 url = {https://doi.org/10.1007%2Fs00766-015-0231-5},
 volume = {21},
 year = {2015}
}

@inproceedings{Fricker_2016,
 abstract = {},
 author = {Samuel A. Fricker and Ernest Wallmuller and Ina Paschen},
 booktitle = {2016 {IEEE} 24th International Requirements Engineering Conference ({RE})},
 doi = {10.1109/re.2016.57},
 month = {sep},
 publisher = {{IEEE}},
 title = {Requirements Engineering as Innovation Journalism: A Research Preview},
 url = {https://doi.org/10.1109%2Fre.2016.57},
 year = {2016}
}

@article{G_nsel_2018,
 abstract = {Many SMEs homed in newly industrialised countries are successful international players despite limited technological infrastructure and R&D resources. This study bridges a gap in the extant literature by examining the relationships between characteristics of partnership relationships, knowledge sharing and the effectiveness of technology transfer in partnerships between SMEs in developing countries and firms from developed countries. By studying data from Turkish SMEs and using partial least squares structural equation modelling, we find that explicit knowledge sharing forms the basis of technology transfer. Moreover, our findings demonstrate that explicit knowledge sharing is strongly contingent upon formalised technical support while trust and technical support seemed to be important antecedents of tacit knowledge sharing.},
 author = {Ay{\c{s}}e Günsel and Mariana Dodourova and Ay{\c{c}}a Tükel Ergün and Cevat Gerni},
 doi = {10.1080/09537325.2018.1495836},
 journal = {Technology Analysis {\&}amp$\mathsemicolon$ Strategic Management},
 month = {jul},
 number = {3},
 pages = {279--291},
 publisher = {Informa {UK} Limited},
 title = {Research on effectiveness of technology transfer in technology alliances: evidence from Turkish {SMEs}},
 url = {https://doi.org/10.1080%2F09537325.2018.1495836},
 volume = {31},
 year = {2018}
}

@article{Garousi_2016,
 abstract = {},
 author = {Vahid Garousi and Matt M. Eskandar and Kadir Herkilo{\u{g}}lu},
 doi = {10.1007/s11219-016-9319-5},
 journal = {Software Quality Journal},
 month = {jun},
 number = {4},
 pages = {1091--1143},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Industry{\textendash}academia collaborations in software testing: experience and success stories from Canada and Turkey},
 url = {https://doi.org/10.1007%2Fs11219-016-9319-5},
 volume = {25},
 year = {2016}
}

@article{Garousi_2016,
 abstract = {Context: The global software industry and the software engineering (SE) academia are two large communities. However, unfortunately, the level of joint industry-academia collaborations in SE is still relatively very low, compared to the amount of activity in each of the two communities. It seems that the two ’camps’ show only limited interest/motivation to collaborate with one other. Many researchers and practitioners have written about the challenges, success patterns (what to do, i.e., how to collaborate) and anti-patterns (what not do do) for industry-academia collaborations.},
 author = {Vahid Garousi and Kai Petersen and Baris Ozkan},
 doi = {10.1016/j.infsof.2016.07.006},
 journal = {Information and Software Technology},
 month = {nov},
 pages = {106--127},
 publisher = {Elsevier {BV}},
 title = {Challenges and best practices in industry-academia collaborations in software engineering: A systematic literature review},
 url = {https://doi.org/10.1016%2Fj.infsof.2016.07.006},
 volume = {79},
 year = {2016}
}

@inproceedings{Garousi_2017,
 abstract = {To systematically collect evidence and to structure a given area in software engineering (SE), Systematic Literature Reviews (SLR) and Systematic Mapping (SM) studies have become common. Data extraction is one of the main phases (activities) when conducting an SM or an SLR, whose objective is to extract required data from the primary studies and to accurately record the information researchers need to answer the questions of the SM/SLR study. Based on experience in a large number of SM/SLR studies, we and many other researchers have found the data extraction in SLRs to be time consuming and error-prone, thus raising the real need for heuristics and guidelines for effective and efficient data extraction in these studies, especially to be learnt by junior and young researchers. As a 'guideline' paper, this paper contributes a synthesized list of challenges usually faced during SLRs' data extraction phase and the corresponding solutions (guidelines). For our synthesis, we consider two data sources: (1) the pool of 16 SLR studies in which the authors have been involved in, as well as (2) a review of challenges and guidelines in the existing literature. Our experience in utilizing the presented guidelines in the near past have helped our junior colleagues to conduct data extractions more effectively and efficiently.},
 author = {Vahid Garousi and Michael Felderer},
 booktitle = {Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering},
 doi = {10.1145/3084226.3084238},
 month = {jun},
 publisher = {{ACM}},
 title = {Experience-based guidelines for effective and efficient data extraction in systematic reviews in software engineering},
 url = {https://doi.org/10.1145%2F3084226.3084238},
 year = {2017}
}

@article{Garousi_2018,
 abstract = {},
 author = {Vahid Garousi and Ramazan Özkan and Aysu Betin-Can},
 doi = {10.1016/j.infsof.2018.06.007},
 journal = {Information and Software Technology},
 month = {nov},
 pages = {40--54},
 publisher = {Elsevier {BV}},
 title = {Multi-objective regression test selection in practice: An empirical study in the defense software industry},
 url = {https://doi.org/10.1016%2Fj.infsof.2018.06.007},
 volume = {103},
 year = {2018}
}

@article{Garousi_2019,
 abstract = {},
 author = {Vahid Garousi and Dietmar Pfahl and Jo{\~{a}}o M. Fernandes and Michael Felderer and Mika V. Mäntylä and David Shepherd and Andrea Arcuri and Ahmet Co{\c{s}}kun{\c{c}}ay and Bedir Tekinerdogan},
 doi = {10.1007/s10664-019-09711-y},
 journal = {Empirical Software Engineering},
 month = {apr},
 number = {4},
 pages = {2540--2602},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Characterizing industry-academia collaborations in software engineering: evidence from 101 projects},
 url = {https://doi.org/10.1007%2Fs10664-019-09711-y},
 volume = {24},
 year = {2019}
}

@incollection{Garousi_2020,
 abstract = {While Behavior-driven development (BDD) tools such as Cucumber are powerful tools for automated testing, they have certain limitations. For example, they often enforce strict syntax for test cases, like the “Given-When-Then” format, which may not always be easy to write for a given test case. A new test automation framework named Gauge (gauge.org) addresses that limitation since it does not prescribe the BDD testing process with a strict syntax. In Gauge, writing a test case is as easy as writing down the flow of test cases in several itemized sentences in a natural language, like English. In the context of Testinium (testinium.com), a large software testing company which provides software testing services, tools and solutions to a large number of clients, we have actively used the Gauge framework since 2018 to develop large automated front-end test suites for several large web applications. In this paper/talk, the speakers will share several examples and best practices of developing automated tests in natural-language requirements using the Gauge framework. By learning from the ideas presented in the talk, readers (attendees) will be able to consider applying the Gauge framework in their own test automation projects.},
 author = {Vahid Garousi and Alper Bu{\u{g}}ra Kele{\c{s}} and Yunus Balaman and Zeynep Özdemir Güler},
 booktitle = {Computational Science and Its Applications {\textendash} {ICCSA} 2020},
 doi = {10.1007/978-3-030-58802-1_33},
 pages = {458--470},
 publisher = {Springer International Publishing},
 title = {Test Automation with the Gauge Framework: Experience and Best Practices},
 url = {https://doi.org/10.1007%2F978-3-030-58802-1_33},
 year = {2020}
}

@article{Garousi_2021,
 abstract = {In the context of a software testing company, we have deployed the model-based testing (MBT) approach to take the company’s test automation practices to higher levels of maturity and capability. We have chosen, from a set of open-source/commercial MBT tools, an open-source tool named GraphWalker, and have pragmatically used MBT for end-to-end test automation of several large web and mobile applications under test. The MBT approach has provided, so far in our project, various tangible and intangible benefits in terms of improved test coverage (number of paths tested), improved test-design practices, and also improved real-fault detection effectiveness. The goal of this experience report (applied research report), done based on “action research”, is to share our experience of applying and evaluating MBT as a software technology (technique and tool) in a real industrial setting. We aim at contributing to the body of empirical evidence in industrial application of MBT by sharing our industry-academia project on applying MBT in practice, the insights that we have gained, and the challenges and questions that we have faced and tackled so far. We discuss an overview of the industrial setting, provide motivation, explain the events leading to the outcomes, discuss the challenges faced, summarize the outcomes, and conclude with lessons learned, take-away messages, and practical advices based on the described experience. By learning from the best practices in this paper, other test engineers could conduct more mature MBT in their test projects.},
 author = {Vahid Garousi and Alper Bu{\u{g}}ra Kele{\c{s}} and Yunus Balaman and Zeynep Özdemir Güler and Andrea Arcuri},
 doi = {10.1016/j.jss.2021.111032},
 journal = {Journal of Systems and Software},
 month = {oct},
 pages = {111032},
 publisher = {Elsevier {BV}},
 title = {Model-based testing in practice: An experience report from the web applications domain},
 url = {https://doi.org/10.1016%2Fj.jss.2021.111032},
 volume = {180},
 year = {2021}
}

@article{Garrigos_2011,
 abstract = {SME innovation strategy and motivation has become one of the most challenging subjects of innovation policy. New innovation models proposed recently have captured the attention of policy makers. However, these models seem for the most part to be applicable to medium-sized or large enterprises. The objective of this paper is to analyse the open innovation model in the case of outsourced cooperative R&D in SMEs. Although the driving forces for outsourcing innovation in SMEs are in some respects similar to those for large firms, others are linked to lack of resources, but both have in common the pursuit of efficiency in R&D and technology transfer. This paper is based on an empirical study of open innovation in SMEs and proposes a model for analysing the critical elements which influence performance and strategic alignment between R&D performers and their partners (in most cases, SMEs).},
 author = {Jose Albors Garrigos and Noemi Zabaleta Etxebarria and Jose Luis Hervas Oliver and Jaione Ganzarain Epelde},
 doi = {10.1504/ijtm.2011.041684},
 journal = {International Journal of Technology Management},
 number = {1/2},
 pages = {138},
 publisher = {Inderscience Publishers},
 title = {Outsourced innovation in {SMES}: a field study of R{\&}amp$\mathsemicolon$amp$\mathsemicolon$D units in Spain},
 url = {https://doi.org/10.1504%2Fijtm.2011.041684},
 volume = {55},
 year = {2011}
}

@article{Giardino_2016,
 abstract = {Software startups are newly created companies with no operating history and oriented towards producing cutting-edge products. However, despite the increasing importance of startups in the economy, few scientific studies attempt to address software engineering issues, especially for early-stage startups. If anything, startups need engineering practices of the same level or better than those of larger companies, as their time and resources are more scarce, and one failed project can put them out of business. In
this study we aim to improve understanding of the software development strategies employed by startups. We performed this state-of-practice investigation using a grounded theory approach. We packaged the results in the Greenfield Startup Model (GSM), which explains the priority of startups to release the product as quickly as possible. This strategy allows startups to verify product and market fit, and to adjust the product trajectory according to early collected user feedback. The need to shorten time-to-market, by speeding up the development through low-precision engineering activities, is counterbalanced by the need to restructure the product before targeting further growth. The resulting implications of the GSM outline challenges and gaps, pointing out opportunities for future research to develop and validate engineering practices in the startup context.},
 author = {Carmine Giardino and Nicolo Paternoster and Michael Unterkalmsteiner and Tony Gorschek and Pekka Abrahamsson},
 doi = {10.1109/tse.2015.2509970},
 journal = {{IEEE} Transactions on Software Engineering},
 month = {jun},
 number = {6},
 pages = {585--604},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Software Development in Startup Companies: The Greenfield Startup Model},
 url = {https://doi.org/10.1109%2Ftse.2015.2509970},
 volume = {42},
 year = {2016}
}

@inproceedings{Gorschek_2010,
 abstract = {We present the first results from a survey carried out over
the second quarter of 2009 examining how theories in objectoriented design are 
understood and used by software developers.
We collected 3785 responses from software developers
world-wide, which we believe is the largest survey of its kind.
We targeted the use of encapsulation, class size as measured by number of 
methods, and depth of a class in the inheritance hierarchy. We found that, 
while overall practitioners followed advice on encapsulation, there was some 
variation of adherence to it. For class size and depth there was substantially 
less agreement with expert advice. In addition, inconsistencies were found 
within the use and perception of object-oriented concepts within the 
investigated group of developers. The results of this survey has deep reaching 
consequences for both practitioners and researchers as they highlight and 
confirm central issues.},
 author = {Tony Gorschek and Ewan Tempero and Lefteris Angelis},
 booktitle = {Proceedings of the 32nd {ACM}/{IEEE} International Conference on Software Engineering - Volume 1},
 doi = {10.1145/1806799.1806820},
 month = {may},
 publisher = {{ACM}},
 title = {A large-scale empirical study of practitioners{\textquotesingle} use of object-oriented concepts},
 url = {https://doi.org/10.1145%2F1806799.1806820},
 year = {2010}
}

@article{Gorschek_2010,
 abstract = {The product development environment facing most companies today requires a 
long-term perspective featuring the conception and development of long-term 
innovations. This can be hard when close quarter bottom-line results dominate. 
Without innovation, competitive advantages decrease over time. This is 
especially true for companies producing software-intensive systems. Software is 
becoming a large part of the competitive advantage of traditionally 
hardware-focused systems such as cars, robots, or power systems, where feature 
sets traditionally offered and controlled by hardware are transferred to 
software. As software's impact and influence grows, so do the possibilities for 
innovation and increasing the competitive advantage through software. Star 
Search is a lightweight innovation model based on best practices from 
innovation management literature as well as two industry cases. It employs 
face-to-face screening and idea refinement using heterogeneous audition teams. 
Star Search was developed in collaboration with, and subsequently piloted at, 
two companies. It has helped increase the long-term perspective of product 
development by increasing the level of new ideas that make it to product 
planning and development},
 author = {T. Gorschek and S. Fricker and K. Palm and S. Kunsman},
 doi = {10.1109/ms.2009.164},
 journal = {{IEEE} Software},
 month = {jan},
 number = {1},
 pages = {37--45},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {A Lightweight Innovation Process for Software-Intensive Product Development},
 url = {https://doi.org/10.1109%2Fms.2009.164},
 volume = {27},
 year = {2010}
}

@article{Gorschek_2011,
 abstract = {The area of software product development of software intensive products has received much attention, especially in the area of requirements engineering and product management. Many companies are faced with new challenges when operating in an environment where potential requirements number in thousands or even tens of thousands, and where a product does not have a customer, but any number of customers or markets. The development organization carries not only all the costs of development, but also takes all the risks. In this environment traditional bespoke requirements engineering, together with traditional process assessment and improvement models fall short as they do not address the unique challenges of a market-driven environment. This paper introduces the Market-driven Requirements Engineering Process Model, aimed at enabling process improvement and process assurance for organizations faced with these new challenges. The model is also validated in the industry through three case studies where the model is used for process assessment and improvement suggestion. Initial results show that the model is appropriate for process improvement for organizations operating in a market-driven environment. In addition, the model was designed to be light weight in terms of low cost and thus adapted not only for large organizations but suitable for small and medium enterprises as well. Copyright © 2011 John Wiley & Sons, Ltd.},
 author = {Tony Gorschek and Andrigo Gomes and Andreas Pettersson and Richard Torkar},
 doi = {10.1002/smr.535},
 journal = {Journal of Software: Evolution and Process},
 month = {mar},
 number = {1},
 pages = {83--113},
 publisher = {Wiley},
 title = {Introduction of a process maturity model for market-driven product management and requirements engineering},
 url = {https://doi.org/10.1002%2Fsmr.535},
 volume = {24},
 year = {2011}
}

@inproceedings{Gorschek_2013,
 abstract = {A little rebellion now and then is a good thing. This short position statement describes my views on some of the challenges associated with many conferences, the Requirements Engineering Conference being among them. The main concepts are; the goals, as well as criteria for paper selection for the conference should be defined explicitly, and shared with the community. Industry involvement in the conference should be increased, but the focus of all tracks should be quality - what constitutes quality however needs to be defined and agreed on. Industrial validation of research results have to be more than an intention. Last but not least, how papers are presented and discussed needs to change, focusing on quality over quantity.},
 author = {Tony Gorschek},
 booktitle = {2013 21st {IEEE} International Requirements Engineering Conference ({RE})},
 doi = {10.1109/re.2013.6636751},
 month = {jul},
 publisher = {{IEEE}},
 title = {A little rebellion now and then is a good thing: Views on the requirements engineering conference},
 url = {https://doi.org/10.1109%2Fre.2013.6636751},
 year = {2013}
}

@article{Gorschek_2014,
 abstract = {Research into software design models in general, and into the UML in particular, focuses on answering the question how design models are used, completely ignoring the question if they are used. There is an assumption in the literature that the UML is the de facto standard, and that use of design models has had a profound and substantial effect on how software is designed by virtue of models giving the ability to do model-checking, code generation, or automated test generation. However for this assumption to be true, there has to be significant use of design models in practice by developers.
This paper presents the results of a survey summarizing the answers of 3785 developers answering the simple question on the extent to which design models are used before coding. We relate their use of models with (i) total years of programming experience, (ii) open or closed development, (iii) educational level, (iv) programming language used, and (v) development type.
The answer to our question was that design models are not used very extensively in industry, and where they are used, the use is informal and without tool support, and the notation is often not UML. The use of models decreased with an increase in experience and increased with higher level of qualification. Overall we found that models are used primarily as a communication and collaboration mechanism where there is a need to solve problems and/or get a joint understanding of the overall design in a group. We also conclude that models are seldom updated after initially created and are usually drawn on a whiteboard or on paper.},
 author = {Tony Gorschek and Ewan Tempero and Lefteris Angelis},
 doi = {10.1016/j.jss.2014.03.082},
 journal = {Journal of Systems and Software},
 month = {sep},
 pages = {176--193},
 publisher = {Elsevier {BV}},
 title = {On the use of software design models in software development practice: An empirical investigation},
 url = {https://doi.org/10.1016%2Fj.jss.2014.03.082},
 volume = {95},
 year = {2014}
}

@inproceedings{Gorschek_2015,
 abstract = {The field of Empirical Software Engineering has undergone a much-needed expansion the last decade, and papers of all shapes and sizes are more or less mandated to have an "empirical" part to be published in premiere venues. The positive trend has researchers realizing the benefits, but also the investments needed, inherent to industry collaboration. That is, real practitioners, involved in the development of software intensive product, system, and service development. This paper shortly summarizes lessons learned from over ten years experience of industrial collaboration, and knowledge and technology exchange between applied researchers and industry.},
 author = {Tony Gorschek},
 booktitle = {2015 {IEEE}/{ACM} 3rd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1109/cesi.2015.9},
 month = {may},
 publisher = {{IEEE}},
 title = {How to Increase the Likelihood of Successful Transfer to Industry -- Going Beyond the Empirical},
 url = {https://doi.org/10.1109%2Fcesi.2015.9},
 year = {2015}
}

@incollection{Gorschek_2020,
 abstract = {Industry-academia collaboration is one of the cornerstones of empirical software engineering. The role of researchers should be developing new practices and principles that enable industry in meeting the engineering challenges today and in the future. This chapter describes the third generation of industrial co-production in software engineering that includes seven steps. The co-production model and experiences associated with its use represent deep and long-term co-production with over thirty companies, many of which are still active partners in SERL},
 author = {Tony Gorschek and Krzysztof Wnuk},
 booktitle = {Contemporary Empirical Methods in Software Engineering},
 doi = {10.1007/978-3-030-32489-6_18},
 pages = {503--525},
 publisher = {Springer International Publishing},
 title = {Third Generation Industrial Co-production in Software Engineering},
 url = {https://doi.org/10.1007%2F978-3-030-32489-6_18},
 year = {2020}
}

@incollection{Gorschek_2021,
 abstract = {Studying and collaborating with any software-intensive organization demands for excellence in empirical software engineering research. The ever-growing complexity and context-dependency of software products, however, demands for more pragmatic and solution-focused research. This is a great opportunity but it also conflicts with the traditional quest for “purity” in research and a very narrow focus of the work. In this short positioning, we elaborate on challenges which emerge from academia-industry collaborations and discuss touch upon pragmatic ways of approaching them along the co-production model which emerged from SERL Sweden.},
 author = {Tony Gorschek and Daniel Mendez},
 booktitle = {Software Quality: Future Perspectives on Software Engineering Quality},
 doi = {10.1007/978-3-030-65854-0_9},
 pages = {109--116},
 publisher = {Springer International Publishing},
 title = {Solving Problems or Enabling Problem-Solving? from Purity in Empirical Software Engineering to Effective Co-production (Invited Keynote)},
 url = {https://doi.org/10.1007%2F978-3-030-65854-0_9},
 year = {2021}
}

@article{Hannay_2020,
 abstract = {Modeling and Simulation as a Service (MSaaS) embodies the idea that simulations should be composed quickly for the task at hand from loosely coupled shared components, simulation services, in a cloud-based environment. These simulations are then offered, as composed simulation services, to human and technical consumers. Instrumental to this, is functionality that lets a simulation operator discover and compose simulation services and execute the composition. We describe this functionality in terms of what we call MSaaS infrastructure capabilities. Following the idea of stepwise refinement, the discovery and composition of simulation services can be done at design time using implementation-independent information about simulation services and at implementation time using implementation-specific information about simulation services. The execution environment can also be set up at design time and at implementation time. We therefore describe the MSaaS infrastructure capabilities in terms of how they are used on both implementation-independent and implementation-specific service information. By doing these elaborations, we intend to gain greater insight into how to perform simulation service discovery, composition, and execution. We conclude that although much of the required functionality for a MSaaS infrastructure is available through existing platforms and frameworks, it is necessary to offer this functionality as services, alongside (composed) simulation services, to fulfill the MSaaS vision.},
 author = {Jo Erskine Hannay and Tom van den Berg and Scott Gallant and Kevin Gupton},
 doi = {10.1177/1548512919896855},
 journal = {The Journal of Defense Modeling and Simulation: Applications, Methodology, Technology},
 month = {jan},
 number = {1},
 pages = {5--28},
 publisher = {{SAGE} Publications},
 title = {Modeling and Simulation as a Service infrastructure capabilities for discovery, composition and execution of simulation services},
 url = {https://doi.org/10.1177%2F1548512919896855},
 volume = {18},
 year = {2020}
}

@article{Hidalgo_2011,
 abstract = {The challenge of public innovation policies are related with the transfer of technology from the university to the industry. The aim of this paper is to contribute to the understanding of the underlying factors in the process of transferring technology from university to industry. Findings point to strategic importance of critical factors as the definition of common objectives, cooperation, motivation, and the elimination of technical and legal barriers. These challenges must have implications in the incorporation of cooperative aspects of research projects in the design of public innovation policies.},
 author = {Antonio Hidalgo and Jose Albors},
 doi = {10.1504/ijil.2011.038544},
 journal = {International Journal of Innovation and Learning},
 number = {2},
 pages = {204},
 publisher = {Inderscience Publishers},
 title = {University-industry technology transfer models: an empirical analysis},
 url = {https://doi.org/10.1504%2Fijil.2011.038544},
 volume = {9},
 year = {2011}
}

@article{https://doi.org/10.14279/tuj.eceasst.34.589,
 abstract = {Model-Driven Engineering (MDE) has emerged as an actively researched and established approach for next generation control application development. Technology transfer to the industry is a topical research problem. Since most professional factory process control engineers do not have computer science backgrounds, there is an urgent need for studies of the role of user guidance in the professional learning, and thus, of industrial adoption of MDE approaches. In this study professionals were invited to a hands-on assessment of the AUKOTON MDE approach for factory process control engineering. Qualitative empirical material was collected and analyzed to identify the role of user guidance in the context of other factors impacting industrial adoption. Challenges in adoption that could be solved by user guidance were identified with the theory of organizational knowledge creation (SECI) model.},
 author = {Rauhamäki, Jari and Laitinen, Outi and Sierla, Seppo and Kuikka, Seppo},
 doi = {10.14279/TUJ.ECEASST.34.589},
 journal = {Electronic Communications of the EASST},
 language = {en},
 pages = {Volume 34: Software Modeling in Education at MODELS 2010},
 publisher = {European Association of Software Science and Technology},
 title = {The Role of User Guidance in the Industrial Adoption of MDE Approach},
 url = {http://journal.ub.tu-berlin.de/eceasst/article/view/589},
 year = {2011}
}

@article{https://doi.org/10.14279/tuj.eceasst.77.1111,
 abstract = {},
 author = {Mjeda, Anila and Botterweck, Goetz},
 doi = {10.14279/TUJ.ECEASST.77.1111},
 journal = {Electronic Communications of the EASST},
 language = {en},
 pages = {ETAPS 2019 Workshop (InterAVT 2019)},
 publisher = {European Association of Software Science and Technology},
 title = {Scalable Software Testing and Verification for Industrial-Scale Systems: The Challenges},
 url = {https://journal.ub.tu-berlin.de/eceasst/article/view/1111},
 volume = {Volume 77: Interactive Workshop on the Industrial Application of Verification and Testing},
 year = {2019}
}

@misc{https://doi.org/10.48550/arxiv.2206.04462,
 abstract = {},
 author = {Fucci, Davide and Alégroth, Emil and Axelsson, Thomas},
 copyright = {arXiv.org perpetual, non-exclusive license},
 doi = {10.48550/ARXIV.2206.04462},
 keywords = {Software Engineering (cs.SE), FOS: Computer and information sciences, FOS: Computer and information sciences},
 publisher = {arXiv},
 title = {When Traceability Goes Awry: an Industrial Experience Report},
 url = {https://arxiv.org/abs/2206.04462},
 year = {2022}
}

@article{https://doi.org/10.5277/e-inf160105,
 author = {Unterkalmsteiner, Michael and Abrahamsson, Pekka and XiaoFeng, Wang and Nguyen-Duc, Anh and Shah, Syed and Shahid Bajwa, Sohaib and Baltes, Guido H. and Conboy, Kieran and Cullina, Eoin and Dennehy, Denis and Edison, Henry and Fernandez-Sanchez, Carlos and Garbajosa, Juan and Gorschek, Tony and Klotins, Eriks and Hokkanen, Laura and Kon, Fabio and Lunesu, Ilaria and Marchesi, Michele and Morgan, Lorraine and Oivo, Markku and Selig, Christoph and Seppänen, Pertti and Sweetman, Roger and Tyrväinen, Pasi and Ungerer, Christina and Yagüe, Agustin},
 doi = {10.5277/E-INF160105},
 journal = {e-Informatica Vol. X},
 keywords = {Software startups},
 language = {en},
 pages = {2016; ISSN 1897-7979},
 publisher = {Institute of Applied Informatics, Wrocław University of Technology, Wrocław},
 title = {Software Startups - A Research Agenda},
 url = {http://www.e-informatyka.pl/attach/e-Informatica_-_Volume_10/eInformatica2016Art5.pdf},
 year = {2016}
}

@article{https://doi.org/10.5277/e-inf180110,
 abstract = {Background: In large-scale corporations in the software engineering context information overload problems occur as stakeholders continuously produce useful information on process life-cycle issues, matters related to specific products under development, etc. Information overload makes finding relevant information (e.g., how did the company apply the requirements process for product X?) challenging, which is in the primary focus of this paper. Contribution: In this study the authors aimed at evaluating the ease of implementing a semantic knowledge management system at Ericsson, including the essential components of such systems (such as text processing, ontologies, semantic annotation and semantic search). Thereafter, feedback on the usefulness of the system was collected from practitioners. Method: A single case study was conducted at a development site of Ericsson AB in Sweden. Results: It was found that semantic knowledge management systems are challenging to implement, this refers in particular to the implementation and integration of ontologies. Specific ontologies for structuring and filtering are essential, such as domain ontologies and ontologies distinct to the organization. Conclusion: To be readily adopted and transferable to practice, desired ontologies need to be implemented and integrated into semantic knowledge management frameworks with ease, given that the desired ontologies are dependent on organizations and domains.},
 author = {Demirsoy, Ali and Petersen, Kai},
 doi = {10.5277/E-INF180110},
 journal = {e-Informatica Vol. XII},
 keywords = {knowledge management, information overload, case study, semantic web},
 language = {en},
 pages = {2018; ISSN 1897-7979},
 publisher = {Institute of Applied Informatics, Wrocław University of Technology, Wrocław},
 title = {Semantic Knowledge Management System to Support Software Engineers: Implementation and Static Evaluation through Interviews at Ericsson},
 url = {http://www.e-informatyka.pl/attach/e-Informatica_-_Volume_12/EInformatica2018Art10.pdf},
 year = {2018}
}

@inproceedings{Ionita_2014,
 abstract = {},
 author = {Dan Ionita},
 booktitle = {2014 {IEEE} 22nd International Requirements Engineering Conference ({RE})},
 doi = {10.1109/re.2014.6912303},
 month = {aug},
 publisher = {{IEEE}},
 title = {Context-sensitive Information security Risk identification and evaluation techniques},
 url = {https://doi.org/10.1109%2Fre.2014.6912303},
 year = {2014}
}

@inproceedings{Irshad_2016,
 abstract = {},
 author = {Mohsin Irshad and Richard Torkar and Kai Petersen and Wasif Afzal},
 booktitle = {Proceedings of the 20th International Conference on Evaluation and Assessment in Software Engineering},
 doi = {10.1145/2915970.2915989},
 month = {jun},
 publisher = {{ACM}},
 title = {Capturing cost avoidance through reuse},
 url = {https://doi.org/10.1145%2F2915970.2915989},
 year = {2016}
}

@article{Irshad_2021,
 abstract = {Context
Large-scale software projects require interaction between many stakeholders. Behavior-driven development (BDD) facilitates collaboration between stakeholders, and an adapted BDD process can help improve cooperation in a large-scale project.

Objective
The objective of this study is to propose and empirically evaluate a BDD based process adapted for large-scale projects.

Method
A technology transfer model was used to propose a BDD based process for large-scale projects. We conducted six workshop sessions to understand the challenges and benefits of BDD. Later, an industrial evaluation was performed for the process with the help of practitioners.

Results
From our investigations, understanding of a business aspect of requirements, their improved quality, a guide to system-level use-cases, reuse of artifacts, and help for test organization are found as benefits of BDD. Practitioners identified the following challenges: specification and ownership of behaviors, adoption of new tools, the software projects’ scale, and versioning of behaviors. We proposed a process to address these challenges and evaluated the process with the help of practitioners.

Conclusion
The evaluation proved that BDD could be adapted and used to facilitate interaction in large-scale software projects in the software industry. The feedback from the practitioners helped in improving the proposed process.},
 author = {Mohsin Irshad and Ricardo Britto and Kai Petersen},
 doi = {10.1016/j.jss.2021.110944},
 journal = {Journal of Systems and Software},
 month = {jul},
 pages = {110944},
 publisher = {Elsevier {BV}},
 title = {Adapting Behavior Driven Development ({BDD}) for large-scale software systems},
 url = {https://doi.org/10.1016%2Fj.jss.2021.110944},
 volume = {177},
 year = {2021}
}

@article{Ivarsson_2009,
 abstract = {One of the main goals of an applied research field such as requirements engineering is the transfer of research results to
industrial use. To promote industrial adoption of technologies developed in academia, researchers need to provide tangible
evidence of the advantages of using them. This can be done through industry validation, enabling researchers to test and validate
technologies in a real setting with real users and applications. The evidence obtained, together with detailed information
on how the validation was conducted, offers rich decision support material for industrial practitioners seeking to adopt new
technologies. This paper presents a comprehensive systematic literature review of all papers published in the Requirements
Engineering journal containing any type of technology evaluation. The aim is to gauge the support for technology transfer,
i.e., to what degree industrial practitioners can use the reporting of technology evaluations in the journal as decision support 
for adopting the technologies in industrial practice. Findings show that very few evaluations offer full technology transfer 
support, i.e., have a realistic scale, application or subjects. The major improvement potential concerning support for technology
transfer is found to be the subjects used in the evaluations. Attaining company support, including support for using practitioners
as subjects, is vital for technology transfer and for researchers seeking to validate technologies.},
 author = {Martin Ivarsson and Tony Gorschek},
 doi = {10.1007/s00766-009-0080-1},
 journal = {Requirements Engineering},
 month = {mar},
 number = {3},
 pages = {155--175},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Technology transfer decision support in requirements engineering research: a systematic review of {REj}},
 url = {https://doi.org/10.1007%2Fs00766-009-0080-1},
 volume = {14},
 year = {2009}
}

@article{Ivarsson_2010,
 abstract = {One of the main goals of an applied research field such as software engineering is the transfer and widespread use of research
results in industry. To impact industry, researchers developing technologies in academia need to provide tangible evidence
of the advantages of using them. This can be done trough step-wise validation, enabling researchers to gradually test and
evaluate technologies to finally try them in real settings with real users and applications. The evidence obtained, together
with detailed information on how the validation was conducted, offers rich decision support material for industry practitioners
seeking to adopt new technologies and researchers looking for an empirical basis on which to build new or refined technologies.
This paper presents model for evaluating the rigor and industrial relevance of technology evaluations in software engineering.
The model is applied and validated in a comprehensive systematic literature review of evaluations of requirements engineering
technologies published in software engineering journals. The aim is to show the applicability of the model and to characterize
how evaluations are carried out and reported to evaluate the state-of-research. The review shows that the model can be applied
to characterize evaluations in requirements engineering. The findings from applying the model also show that the majority
of technology evaluations in requirements engineering lack both industrial relevance and rigor. In addition, the research
field does not show any improvements in terms of industrial relevance over time.},
 author = {Martin Ivarsson and Tony Gorschek},
 doi = {10.1007/s10664-010-9146-4},
 journal = {Empirical Software Engineering},
 month = {oct},
 number = {3},
 pages = {365--395},
 publisher = {Springer Science and Business Media {LLC}},
 title = {A method for evaluating rigor and industrial relevance of technology evaluations},
 url = {https://doi.org/10.1007%2Fs10664-010-9146-4},
 volume = {16},
 year = {2010}
}

@article{IVARSSON_2012,
 abstract = {Knowledge management (KM) in software engineering and software process improvement (SPI) are challenging. Most existing KM and SPI frameworks are too expensive to deploy or do not take an organization's specific needs or knowledge into consideration. There is thus a need for scalable improvement approaches that leverage knowledge already residing in the organizations.
This paper presents the Practice Selection Framework (PSF), an Experience Factory approach, enabling lightweight experience capture and use by utilizing postmortem reviews. Experiences gathered concern performance and applicability of practices used in the organization, gained from concluded projects. Project managers use these as decision support for selecting practices to use in future projects, enabling explicit knowledge transfer across projects and the development organization as a whole. Process managers use the experiences to determine if there is potential for improvement of practices used in the organization. This framework was developed and subsequently validated in industry to get feedback on usability and usefulness from practitioners. The validation consisted of tailoring and testing the framework using real data from the organization and comparing it to current practices used in the organization to ensure that the approach meets industry needs. The results from the validation are encouraging and the participants' assessment of PSF and particularly the tailoring developed was positive.},
 author = {MARTIN IVARSSON and TONY GORSCHEK},
 doi = {10.1142/s0218194012500027},
 journal = {International Journal of Software Engineering and Knowledge Engineering},
 month = {feb},
 number = {01},
 pages = {17--58},
 publisher = {World Scientific Pub Co Pte Ltd},
 title = {{PRACTICE} {SELECTION} {FRAMEWORK}},
 url = {https://doi.org/10.1142%2Fs0218194012500027},
 volume = {22},
 year = {2012}
}

@inproceedings{Jin_2016,
 abstract = {The success rate of technology transfer from government laboratories is quite low. This paper combines findings from academic research to provide valuable managerial insights. We conclude that technology transfer factors identified so far actually relate to four management processes: project management, strategy management, innovation management, and relationship management.},
 author = {D. Jin and X. Mo and A. M. Subramanian and K. H. Chai and C. C. Hang},
 booktitle = {2016 {IEEE} International Conference on Management of Innovation and Technology ({ICMIT})},
 doi = {10.1109/icmit.2016.7605009},
 month = {sep},
 publisher = {{IEEE}},
 title = {Key management processes to technology transfer success},
 url = {https://doi.org/10.1109%2Ficmit.2016.7605009},
 year = {2016}
}

@inproceedings{Jolly_2012,
 abstract = {We report in this case-study paper our experience and success story with a practical approach and tool for unit regression testing of a SCADA (Supervisory Control and Data Acquisition) software. The tool uses a black-box specification of the units under test to automatically generate NUnit test code. We then improved the test suite by white-box and mutation testing. The approach and tool were developed in an action-research project to test a commercial large-scale SCADA system called Rocket.},
 author = {Shahnewaz Amin Jolly and Vahid Garousi and Matt M. Eskandar},
 booktitle = {2012 {IEEE} Fifth International Conference on Software Testing, Verification and Validation},
 doi = {10.1109/icst.2012.120},
 month = {apr},
 publisher = {{IEEE}},
 title = {Automated Unit Testing of a {SCADA} Control Software: An Industrial Case Study Based on Action Research},
 url = {https://doi.org/10.1109%2Ficst.2012.120},
 year = {2012}
}

@inproceedings{Kalinowski_2017,
 abstract = {[Context] Defect Causal Analysis (DCA) represents an efficient practice to improve software processes. While knowledge on cause-effect relations is helpful to support DCA, collecting cause-effect data may require significant effort and time. [Goal] We propose and evaluate a new DCA approach that uses cross-company data to support the practical application of DCA. [Method] We collected cross-company data on causes of requirements engineering problems from 74 Brazilian organizations and built a Bayesian network. Our DCA approach uses the diagnostic inference of the Bayesian network to support DCA sessions. We evaluated our approach by applying a model for technology transfer to industry and conducted three consecutive evaluations: (i) in academia, (ii) with industry representatives of the Fraunhofer Project Center at UFBA, and (iii) in an industrial case study at the Brazilian National Development Bank (BNDES). [Results] We received positive feedback in all three evaluations and the cross-company data was considered helpful for determining main causes. [Conclusions] Our results strengthen our confidence in that supporting DCA with cross-company data is promising and should be further investigated.},
 author = {Marcos Kalinowski and Pablo Curty and Aline Paes and Alexandre Ferreira and Rodrigo Spinola and Daniel Mendez Fernandez and Michael Felderer and Stefan Wagner},
 booktitle = {2017 {IEEE}/{ACM} 39th International Conference on Software Engineering: Software Engineering in Practice Track ({ICSE}-{SEIP})},
 doi = {10.1109/icse-seip.2017.14},
 month = {may},
 publisher = {{IEEE}},
 title = {Supporting defect causal analysis in practice with cross-company data on causes of requirements engineering problems},
 url = {https://doi.org/10.1109%2Ficse-seip.2017.14},
 year = {2017}
}

@article{Karras_2020,
 abstract = {Establishing a shared software project vision is a key challenge in Requirements Engineering (RE). Several approaches use videos to represent visions. However, these approaches omit how to produce a good video. This missing guidance is one crucial reason why videos are not established in RE. We propose a quality model for videos representing a vision, so-called vision videos. Based on two literature reviews, we elaborate ten quality characteristics of videos and five quality characteristics of visions which together form a quality model for vision videos that includes all 15 quality characteristics. We provide two representations of the quality model: (a) a hierarchical decomposition of vision video quality into the quality characteristics and (b) a mapping of these characteristics to the video production and use process. While the hierarchical decomposition supports the evaluation of vision videos, the mapping provides guidance for video production. In an evaluation with 139 students, we investigated whether the 15 characteristics are related to the overall quality of vision videos perceived by the subjects from a developer’s the point of view. Six characteristics (video length, focus, prior knowledge, clarity, pleasure, and stability) correlated significantly with the likelihood that the subjects perceived a vision video as good. These relationships substantiate a fundamental relevance of the proposed quality model. Therefore, we conclude that the quality model is a sound basis for future refinements and extensions.},
 author = {Oliver Karras and Kurt Schneider and Samuel A. Fricker},
 doi = {10.1016/j.jss.2019.110479},
 journal = {Journal of Systems and Software},
 month = {apr},
 pages = {110479},
 publisher = {Elsevier {BV}},
 title = {Representing software project vision by means of video: A quality model for vision videos},
 url = {https://doi.org/10.1016%2Fj.jss.2019.110479},
 volume = {162},
 year = {2020}
}

@incollection{Kashfi_2016,
 abstract = {User eXperience (UX) is becoming increasingly important for success of software products. Yet, many companies still face various challenges in their work with UX. Part of these challenges relate to inadequate knowledge and awareness of UX and that current UX models are commonly not practical nor well integrated into existing Software Engineering (SE) models and concepts. Therefore, we present a conceptual UX-aware model of requirements for software development practitioners. This layered model shows the interrelation between UX and functional and quality requirements. The model is developed based on current models of UX and software quality characteristics. Through the model we highlight the main differences between various requirement types in particular essentially subjective and accidentally subjective quality requirements. We also present the result of an initial validation of the model through interviews with 12 practitioners and researchers. Our results show that the model can raise practitioners' knowledge and awareness of UX in particular in relation to requirement and testing activities. It can also facilitate UX-related communication among stakeholders with different backgrounds.},
 author = {Pariya Kashfi and Robert Feldt and Agneta Nilsson and Richard Berntsson Svensson},
 booktitle = {Lecture Notes in Computer Science},
 doi = {10.1007/978-3-319-44902-9_15},
 pages = {234--245},
 publisher = {Springer International Publishing},
 title = {A Conceptual {UX}-Aware Model of Requirements},
 url = {https://doi.org/10.1007%2F978-3-319-44902-9_15},
 year = {2016}
}

@inproceedings{Khurum_2007,
 abstract = {},
 author = {Mahvish Khurum and Khurum Aslam and Tony Gorschek},
 booktitle = {14th Asia-Pacific Software Engineering Conference ({APSEC}{\textquotesingle}07)},
 doi = {10.1109/aspec.2007.18},
 month = {dec},
 publisher = {{IEEE}},
 title = {A Method for Early Requirements Triage and Selection Utilizing Product Strategies},
 url = {https://doi.org/10.1109%2Faspec.2007.18},
 year = {2007}
}

@article{Khurum_2009,
 abstract = {},
 author = {Mahvish Khurum and Tony Gorschek},
 doi = {10.1016/j.jss.2009.06.048},
 journal = {Journal of Systems and Software},
 month = {dec},
 number = {12},
 pages = {1982--2003},
 publisher = {Elsevier {BV}},
 title = {A systematic review of domain analysis solutions for product lines},
 url = {https://doi.org/10.1016%2Fj.jss.2009.06.048},
 volume = {82},
 year = {2009}
}

@incollection{Khurum_2009,
 abstract = {},
 author = {Mahvish Khurum and Tony Gorschek and Lefteris Angelis and Robert Feldt},
 booktitle = {Requirements Engineering: Foundation for Software Quality},
 doi = {10.1007/978-3-642-02050-6_3},
 pages = {22--36},
 publisher = {Springer Berlin Heidelberg},
 title = {A Controlled Experiment of a Method for Early Requirements Triage Utilizing Product Strategies},
 url = {https://doi.org/10.1007%2F978-3-642-02050-6_3},
 year = {2009}
}

@article{Khurum_2015,
 abstract = {Context
New products create significant opportunities for differentiation and competitive advantage. To increase the chances of new product success, a universal set of critical activities and determinants have been recommended. Some researchers believe, however, that these factors are not universal, but are contextual.
Objective: This paper reports innovation processes followed to develop three software intensive products for understanding how and why innovation practice is dependent on innovation context.

Method
This paper reports innovation processes and practices with an in-depth multi-case study of three software product innovations from Ericsson, IBM, and Rorotika. It describes the actual innovation processes followed in the three cases and discusses the observed innovation practice and relates it to state-of-the-art.

Results
The cases point to a set of contextual factors that influence the choice of innovation activities and determinants for developing successful product innovations. The cases provide evidence that innovation practice cannot be standardized, but is contextual in nature.

Conclusion
The rich description of the interaction between context and innovation practice enables future investigations into contextual elements that influence innovation practice, and calls for the creation of frameworks enabling activity and determinant selection for a given context – since one size does not fit all.},
 author = {Mahvish Khurum and Samuel Fricker and Tony Gorschek},
 doi = {10.1016/j.infsof.2014.06.010},
 journal = {Information and Software Technology},
 month = {jan},
 pages = {595--613},
 publisher = {Elsevier {BV}},
 title = {The contextual nature of innovation {\textendash} An empirical investigation of three software intensive products},
 url = {https://doi.org/10.1016%2Fj.infsof.2014.06.010},
 volume = {57},
 year = {2015}
}

@inproceedings{Kitamura_2017,
 abstract = {},
 author = {Takashi Kitamura and Emil Alegroth and Rudolf Ramler},
 booktitle = {2017 {IEEE} International Conference on Software Testing, Verification and Validation Workshops ({ICSTW})},
 doi = {10.1109/icstw.2017.13},
 month = {mar},
 publisher = {{IEEE}},
 title = {Industry-Academia Collaboration in Software Testing: An Overview of {TAIC} {PART} 2017},
 url = {https://doi.org/10.1109%2Ficstw.2017.13},
 year = {2017}
}

@inproceedings{Klammer_2016,
 abstract = {},
 author = {Claus Klammer and Rudolf Ramler and Heinz Stummer},
 booktitle = {2016 42th Euromicro Conference on Software Engineering and Advanced Applications ({SEAA})},
 doi = {10.1109/seaa.2016.60},
 month = {aug},
 publisher = {{IEEE}},
 title = {Harnessing Automated Test Case Generators for {GUI} Testing in Industry},
 url = {https://doi.org/10.1109%2Fseaa.2016.60},
 year = {2016}
}

@incollection{Kubela_2011,
 abstract = {The paper deals with the force-torque control methodology for industrial robots that can be more or less applied on a variety
of industrial applications such as grinding, drilling, automatic assembly or other applications where the key aspect is to
control the physical contact between a tool and a workpiece mounted on the robot gripper or vice versa. In other words, contact
forces and respective moments need to be controlled in real-time. The experimental set-up is based mainly on a KUKA robot
(KR3, KR 16), FTC sensor (SCHUNK FTC-050), external PLC system (Embedded PC Beckhoff) for main control structures and other
devices. Main practical results are concerned with determining the contact between a workpiece, grasped in the robot gripper,
and the surface while maintaining a constant force during robot motion.},
 author = {T. Kubela and A. Pochyly and V. Singule and L. Flekal},
 booktitle = {Mechatronics},
 doi = {10.1007/978-3-642-23244-2_52},
 pages = {429--437},
 publisher = {Springer Berlin Heidelberg},
 title = {Force-Torque Control Methodology for Industrial Robots Applied on Finishing Operations},
 url = {https://doi.org/10.1007%2F978-3-642-23244-2_52},
 year = {2011}
}

@article{Kundu_2015,
 abstract = {},
 author = {Nirmal Kundu and Chandan Bhar and Visvesvaran Pandurangan},
 doi = {10.17485/ijst/2015/v8i35/74280},
 journal = {Indian Journal of Science and Technology},
 month = {dec},
 number = {35},
 publisher = {Indian Society for Education and Environment},
 title = {Development of Framework for an Integrated Model for Technology Transfer},
 url = {https://doi.org/10.17485%2Fijst%2F2015%2Fv8i35%2F74280},
 volume = {8},
 year = {2015}
}

@article{Lee_2019,
 abstract = {This research is focused on the technology transfer process in the automobile industry using project management tools. The aim of this research is the development of a technology-transfer model using Gantt charts and Critical Path Analysis flow diagrams to achieve a sustainable planning process in the global environment. To achieve this goal, the authors use Gantt charts and Critical Path Analysis flow diagrams. The hypothesis and three research questions are presented, which suggest a relationship between project management tools and the sustainable planning process of technology transfer. During the research, we use the case study of the Korean automobile industry as an excellent example of the technology-transfer process in global markets. A single project of technology transfer is discussed: the technology knowledge transfer from Korean headquarters to a Russian manufacturing subsidiary (Hyundai Motor Corporation). Quantitative data were collected through the open resources of the corporation; the qualitative data were analyzed through a case study and model parameter evaluation. The significant result that the combination of Gantt Charts and Critical Path Analysis flow diagrams methods improves the planning process for technology-transfer projects was found in this survey. It is noticed that (a) it is useful to apply project-management tools for technology transferring models; (b) Gantt Charts and Critical Path Analysis flow diagrams have a sustainable impact on technology transfer projects; and (c) critical paths and operational reserves in network diagrams help to optimize the planning process for technology transfer.},
 author = {Sangkon Lee and Olga A. Shvetsova},
 doi = {10.3390/pr7120917},
 journal = {Processes},
 month = {dec},
 number = {12},
 pages = {917},
 publisher = {{MDPI} {AG}},
 title = {Optimization of the Technology Transfer Process Using Gantt Charts and Critical Path Analysis Flow Diagrams: Case Study of the Korean Automobile Industry},
 url = {https://doi.org/10.3390%2Fpr7120917},
 volume = {7},
 year = {2019}
}

@inproceedings{Lenarduzzi_2021,
 abstract = {Background. Software Engineering (SE) researchers extensively perform experiments with human subjects. Well-defined samples are required to ensure external validity. Samples are selected purposely or by convenience, limiting the generalizability of results.

Objective. We aim to depict the current status of participants selection in empirical SE, identifying the main threats and how they are mitigated. We draft a robust approach to participants' selection.

Method. We reviewed existing participants' selection guidelines in SE, and performed a preliminary literature review to find out how participants' selection is conducted in SE in practice.

Results. We outline a new selection methodology, by 1) defining the characteristics of the desired population, 2) locating possible sources of sampling available for researchers, and 3) identifying and reducing the "distance'' between the selected sample and its corresponding population.

Conclusion. We propose a roadmap to develop and empirically validate the selection methodology.},
 author = {Valentina Lenarduzzi and Oscar Dieste and Davide Fucci and Sira Vegas},
 booktitle = {Proceedings of the 15th {ACM} / {IEEE} International Symposium on Empirical Software Engineering and Measurement ({ESEM})},
 doi = {10.1145/3475716.3484273},
 month = {oct},
 publisher = {{ACM}},
 title = {Towards a Methodology for Participant Selection in Software Engineering Experiments},
 url = {https://doi.org/10.1145%2F3475716.3484273},
 year = {2021}
}

@article{Lin_ker_2018,
 abstract = {Open Source Software (OSS) ecosystems have reshaped the ways how software-intensive firms develop products and deliver value to customers. However, firms still need support for strategic product planning in terms of what to develop internally and what to share as OSS. Existing models accurately capture commoditization in software business, but lack operational support to decide what contribution strategy to employ in terms of what and when to contribute. This study proposes a Contribution Acceptance Process (CAP) model from which firms can adopt contribution strategies that align with product strategies and planning. In a design science influenced case study executed at Sony Mobile, the CAP model was iteratively developed in close collaboration with the firm's practitioners. The CAP model helps classify artifacts according to business impact and control complexity so firms may estimate and plan whether an artifact should be contributed or not. Further, an information meta-model is proposed that helps operationalize the CAP model at the organization. The CAP model provides an operational OI perspective on what firms involved in OSS ecosystems should share, by helping them motivate contributions through the creation of contribution strategies. The goal is to help maximize return on investment and sustain needed influence in OSS ecosystems.},
 author = {J. Lin{\aa}ker and H. Munir and K. Wnuk and C.E. Mols},
 doi = {10.1016/j.jss.2017.09.032},
 journal = {Journal of Systems and Software},
 month = {jan},
 pages = {17--36},
 publisher = {Elsevier {BV}},
 title = {Motivating the contributions: An Open Innovation perspective on what to share as Open Source Software},
 url = {https://doi.org/10.1016%2Fj.jss.2017.09.032},
 volume = {135},
 year = {2018}
}

@article{Lin_ker_2020,
 abstract = {Context
Software-intensive organizations’ rationale for sharing Open Source Software (OSS) may be driven by both idealistic, strategic and commercial objectives, and include both monetary as well as non-monetary benefits. To gain the potential benefits, an organization may need to consider what they share and how, while taking into account risks, costs and other complexities.

Objective
This study aims to empirically investigate objectives and complexities organizations need to consider and balance between when deciding on what software to share as OSS, when to share it, and whether to create a new or contribute to an existing community.

Method
A multiple-case study of three case organizations was conducted in two research cycles, with data gathered from interviews with 20 practitioners from these organizations. The data was analyzed qualitatively in an inductive and iterative coding process.

Results
12 contribution objectives and 15 contribution complexities were found. Objectives include opportunities for improving reputation, managing suppliers, managing partners and competitors, and exploiting externally available knowledge and resources. Complexities include risk of loosing control, risk of giving away competitive advantage, risk of creating negative exposure, costs of contributing, and the possibility and need to contribute to an existing or new community.

Conclusions
Cross-case analysis and interview validation show that the identified objectives and complexities offer organizations a possibility to reflect on and adapt their contribution strategies based on their specific contexts and business goals.},
 author = {Johan Lin{\aa}ker and Björn Regnell},
 doi = {10.1007/s10664-020-09855-2},
 journal = {Empirical Software Engineering},
 month = {aug},
 number = {5},
 pages = {3799--3840},
 publisher = {Springer Science and Business Media {LLC}},
 title = {What to share, when, and where: balancing the objectives and complexities of open source software contributions},
 url = {https://doi.org/10.1007%2Fs10664-020-09855-2},
 volume = {25},
 year = {2020}
}

@incollection{M_ndez_Fern_ndez_2017,
 abstract = {Background: The sensitivity of Requirements Engineering (RE) to the context makes it difficult to efficiently control problems therein, thus, hampering an effective risk management devoted to allow for early corrective or even preventive measures. Problem: There is still little empirical knowledge about context-specific RE phenomena which would be necessary for an effective context-sensitive risk management in RE. Goal: We propose and validate an evidence-based approach to assess risks in RE using cross-company data about problems, causes and effects. Research Method: We use survey data from 228 companies and build a probabilistic network that supports the forecast of context-specific RE phenomena. We implement this approach using spreadsheets to support a light-weight risk assessment. Results: Our results from an initial validation in 6 companies strengthen our confidence that the approach increases the awareness for individual risk factors in RE, and the feedback further allows for disseminating our approach into practice.},
 author = {Daniel M{\'{e}}ndez Fern{\'{a}}ndez and Michaela Tie{\ss}ler and Marcos Kalinowski and Michael Felderer and Marco Kuhrmann},
 booktitle = {Lecture Notes in Business Information Processing},
 doi = {10.1007/978-3-319-71440-0_3},
 month = {nov},
 pages = {39--59},
 publisher = {Springer International Publishing},
 title = {On Evidence-Based Risk Management in Requirements Engineering},
 url = {https://doi.org/10.1007%2F978-3-319-71440-0_3},
 year = {2017}
}

@inproceedings{Maksimov_2019,
 abstract = {},
 author = {Yuliyan V. Maksimov and Samuel A. Fricker},
 booktitle = {2019 {IEEE} 27th International Requirements Engineering Conference Workshops ({REW})},
 doi = {10.1109/rew.2019.00013},
 month = {sep},
 publisher = {{IEEE}},
 title = {Framework for Analysis of Multi-party Collaboration},
 url = {https://doi.org/10.1109%2Frew.2019.00013},
 year = {2019}
}

@article{Malhotra_2022,
 abstract = {Industry-academia collaboration (IAC) has long been a source of discussion in various ways. A vital first step toward closing the gap is fostering alumni engagement in industry and academia. Industry-academia collaborations are like earth and water, and they live in harmony. They cannot exist apart from one another. The collaborative effort between industry and academia promotes improvement and innovation in technology and innovative research and enables the university to be more relevant to the industry. This article proposes a collaborative approach based on alumni influences and uses secondary data on the influences of alumni in engineering to enrich the collaboration between industry and academia. The industry and academia utilize the alumni’s potential to facilitate communication and offer their students and staff facilities. The research findings can be used by policymakers to innovate in the field of engineering and to strengthen the partnership between industry and academia in society. The model enables academia and industry to utilize the alumni strengths in enriching the collaboration; it also enhances academic research output, recruitment, fundraising, marketing, product promotion, and internship opportunities for students via alumni active participation. We propose some significant agendas for future work.},
 author = {Ruchika Malhotra and Massoud Massoudi and Rajni Jindal},
 doi = {10.1007/s10639-022-11276-1},
 journal = {Education and Information Technologies},
 month = {aug},
 number = {2},
 pages = {2263--2289},
 publisher = {Springer Science and Business Media {LLC}},
 title = {An alumni-based collaborative model to strengthen academia and industry partnership: The current challenges and strengths},
 url = {https://doi.org/10.1007%2Fs10639-022-11276-1},
 volume = {28},
 year = {2022}
}

@article{Maresova_2019,
 abstract = {},
 author = {Petra Maresova and Ruzena Stemberkova and Oluwaseun Fadeyi},
 doi = {10.3390/admsci9030067},
 journal = {Administrative Sciences},
 month = {sep},
 number = {3},
 pages = {67},
 publisher = {{MDPI} {AG}},
 title = {Models, Processes, and Roles of Universities in Technology Transfer Management: A Systematic Review},
 url = {https://doi.org/10.3390%2Fadmsci9030067},
 volume = {9},
 year = {2019}
}

@inproceedings{Marijan_2020,
 abstract = {},
 author = {Dusica Marijan and Arnaud Gotlieb},
 booktitle = {2020 46th Euromicro Conference on Software Engineering and Advanced Applications ({SEAA})},
 doi = {10.1109/seaa51224.2020.00053},
 month = {aug},
 publisher = {{IEEE}},
 title = {Lessons Learned on Research Co-Creation: Making Industry-Academia Collaboration Work},
 url = {https://doi.org/10.1109%2Fseaa51224.2020.00053},
 year = {2020}
}

@article{Marijan_2021,
 abstract = {There exists a long-standing challenge of building successful research collaborations between industry and academia in software engineering. There are multiple reasons contributing to this issue, including different timelines, impact metrics, expectations, and perceptions of researchers and practitioners, altogether leading to the issue known as the industryacademia collaboration gap. After the onset of the COVID-19 pandemic, most researchers and practitioners were sent to work from home, relying on virtual collaboration with their peers, which might have given rise to an even wider industry-academia collaboration gap. At the 8th International Workshop on Software Engineering Research and Industrial Practice, held virtually at the International Conference on Software Engineering 2021, we investigate the impact that working from home has had on research collaborations between industry and academia. We also take a look at how remote work may change research collaborations in the future. In this report, we present takeaways from keynote talks on this matter, share insights from the panel of six experts on the topic of industry-academia collaborations, and finally summarize findings from related paper presentations.},
 author = {Dusica Marijan and Chetan Bansal and Tamara Lopez},
 doi = {10.1145/3485952.3485957},
 journal = {{ACM} {SIGSOFT} Software Engineering Notes},
 month = {oct},
 number = {4},
 pages = {19--22},
 publisher = {Association for Computing Machinery ({ACM})},
 title = {Industry-Academia Research Collaborations During and After {COVID}-19},
 url = {https://doi.org/10.1145%2F3485952.3485957},
 volume = {46},
 year = {2021}
}

@article{Marijan_2021,
 abstract = {},
 author = {Dusica Marijan and Arnaud Gotlieb},
 doi = {10.1016/j.infsof.2020.106473},
 journal = {Information and Software Technology},
 month = {apr},
 pages = {106473},
 publisher = {Elsevier {BV}},
 title = {Industry-Academia research collaboration in software engineering: The Certus model},
 url = {https://doi.org/10.1016%2Fj.infsof.2020.106473},
 volume = {132},
 year = {2021}
}

@article{Marijan_2022,
 abstract = {Increasing the impact of software engineering research in the software industry and the society at large has long been a concern of high priority for the software engineering community. The problem of two cultures, research conducted in a vacuum (disconnected from the real world), or misaligned time horizons are just some of the many complex challenges standing in the way of successful industry–academia collaborations. This article reports on the experience of research collaboration and knowledge co-creation between industry and academia in software engineering as a way to bridge the research–practice collaboration gap. Our experience spans 14 years of collaboration between researchers in software engineering and the European and Norwegian software and IT industry. Using the participant observation and interview methods, we have collected and afterwards analyzed an extensive record of qualitative data. Drawing upon the findings made and the experience gained, we provide a set of 14 patterns and 14 anti-patterns for industry–academia collaborations, aimed to support other researchers and practitioners in establishing and running research collaboration projects in software engineering.},
 author = {Dusica Marijan and Sagar Sen},
 doi = {10.1145/3494519},
 journal = {{ACM} Transactions on Software Engineering and Methodology},
 month = {mar},
 number = {3},
 pages = {1--52},
 publisher = {Association for Computing Machinery ({ACM})},
 title = {Industry{\textendash}Academia Research Collaboration and Knowledge Co-creation: Patterns and Anti-patterns},
 url = {https://doi.org/10.1145%2F3494519},
 volume = {31},
 year = {2022}
}

@inproceedings{Marques_2022,
 abstract = {},
 author = {Denis Marques and T{\^{a}}mara Dallegrave and Luis Barbosa and Cleyton Rodrigues and Wylliams Santos},
 booktitle = {Proceedings of the 24th International Conference on Enterprise Information Systems},
 doi = {10.5220/0011115900003179},
 publisher = {{SCITEPRESS} - Science and Technology Publications},
 title = {Industry-Academy Collaboration in Agile Methodology: Preliminary Findings of a Systematic Literature Review},
 url = {https://doi.org/10.5220%2F0011115900003179},
 year = {2022}
}

@inproceedings{Mart_nez_Fern_ndez_2014,
 abstract = {More and more, software engineering researchers are motivated to solve real problems that bring value to industry. An example is the industry-academia collaboration described in this paper among everis, an IT consulting firm, and the GESSI research group at UPC. The goal of this paper is twofold: to evaluate the success of the collaboration, and to report the experience with conducting empirical studies in the industry and lessons learnt. We evaluated our collaboration with an existing model for technology transfer, and performed a focus group discussion to identify challenges we have faced. After initialization and alignment of the collaboration, a high maturity level has been achieved: we have obtained the first results in form of proposed solutions, scientific publications, and pilots run in real projects. In spite of this positive progress, further initiatives need to be undertaken in the last phases of the collaboration to achieve high degrees of maturity in deployment impact, industry benefit and innovativeness. Evaluating the collaboration has been positive, since we identified the next steps to be taken to achieve a high degree of technology transfer and innovation dissemination. We think it is a needed step in industry-academia collaborations in order to improve their success.},
 author = {Silverio Mart{\'{\i}}nez-Fern{\'{a}}ndez and Helena Martins Marques},
 booktitle = {Proceedings of the 2nd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1145/2593690.2593696},
 month = {jun},
 publisher = {{ACM}},
 title = {Practical experiences in designing and conducting empirical studies in industry-academia collaboration},
 url = {https://doi.org/10.1145%2F2593690.2593696},
 year = {2014}
}

@article{Martins_2020,
 abstract = {We have conducted in-depth interviews with experienced practitioners in the Safety-Critical Systems (SCS) domain in order to investigate several aspects related to requirements specification and safety analysis for SCS. We interviewed 19 practitioners from eleven SCS companies in different domains with the intention of verifying which approaches they use day-today, and what their perceptions are in relation to the approaches used to elicit, analyze, specify and validate safety requirements. The aim of this study is to obtain an in-depth understanding of how requirements engineering is carried out in companies that develop SCS.},
 author = {Luiz Eduardo G. Martins and Tony Gorschek},
 doi = {10.1109/tse.2018.2854716},
 journal = {{IEEE} Transactions on Software Engineering},
 month = {apr},
 number = {4},
 pages = {346--361},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Requirements Engineering for Safety-Critical Systems: An Interview Study with Industry Practitioners},
 url = {https://doi.org/10.1109%2Ftse.2018.2854716},
 volume = {46},
 year = {2020}
}

@inproceedings{Mehder_2022,
 abstract = {},
 author = {Sevval Mehder and Fatma Basak Aydemir},
 booktitle = {2022 {IEEE} 30th International Requirements Engineering Conference Workshops ({REW})},
 doi = {10.1109/rew56159.2022.00040},
 month = {aug},
 publisher = {{IEEE}},
 title = {Classification of Issue Discussions in Open Source Projects Using Deep Language Models},
 url = {https://doi.org/10.1109%2Frew56159.2022.00040},
 year = {2022}
}

@article{Mikkonen_2018,
 abstract = {},
 author = {Tommi Mikkonen and Casper Lassenius and Tomi Männistö and Markku Oivo and Janne Järvinen},
 doi = {10.1016/j.infsof.2017.10.013},
 journal = {Information and Software Technology},
 month = {mar},
 pages = {34--45},
 publisher = {Elsevier {BV}},
 title = {Continuous and collaborative technology transfer: Software engineering research with real-time industry impact},
 url = {https://doi.org/10.1016%2Fj.infsof.2017.10.013},
 volume = {95},
 year = {2018}
}

@article{Mohamad_2017,
 abstract = {Context: Communication and coordination are essential ingredients to successful requirements and software engineering. However, especially in large organisations, it is difficult to establish and maintain communication channels.
Objective: In order to facilitate communication, we investigate automatic construction of social network models from existing requirements and systems engineering models.
Method: We conducted a design science research study in three iterative cycles at a large automotive company, and evaluated the outcome based on 15 interviews with practitioners and a survey with 12 participants.
Results: The resulting approach, denoted LoCo CoCo, automatically creates and visualises social networks based on selected systems engineering components of real-life, productive systems engineering models. Our results indicate that automatic construction and visualisation of social network models could be feasible and useful to overcome existing communication challenges.
Conclusion: Despite a lack of quality in existing social data at the case company, practitioners found LoCo CoCo potentially helpful to overcome existing communication challenges. Additionally, the visualisation could trigger practitioners to keep their social data up to date.},
 author = {Mazen Mohamad and Grischa Liebel and Eric Knauss},
 doi = {10.1016/j.infsof.2017.08.002},
 journal = {Information and Software Technology},
 month = {dec},
 pages = {179--193},
 publisher = {Elsevier {BV}},
 title = {{LoCo} {CoCo}: Automatically constructing coordination and communication networks from model-based systems engineering data},
 url = {https://doi.org/10.1016%2Fj.infsof.2017.08.002},
 volume = {92},
 year = {2017}
}

@article{Moll_ri_2023,
 abstract = {Context
Research quality is intended to appraise the design and reporting of studies. It comprises a set of standards such as methodological rigor, practical relevance, and conformance to ethical standards. Depending on the perspective, different views of importance are given to the standards for research quality

Objective
To investigate the suitability of a conceptual model of research quality to Software Engineering (SE), from the perspective of researchers engaged in Empirical Software Engineering (ESE) research, in order to understand the core value of research quality

Method
We conducted a mixed-methods approach with two distinct group perspectives: (i) a research group; and (ii) the empirical SE research community. Our data collection approach comprised a questionnaire survey and a complementary focus group. We carried out a hierarchical voting prioritization to collect relative values for importance of standards for research quality

Results
In the context of this research, ‘internally valid’, ‘relevant research idea’, and ‘applicable results’ are perceived as the core standards for research quality in empirical SE. The alignment at the research group level was higher compared to that at the community level

Conclusion
The conceptual model was seen to express fairly the standards for research quality in the SE context. It presented limitations regarding its structure and components’ description, which resulted in an updated model.},
 author = {Jefferson Seide Moll{\'{e}}ri and Emilia Mendes and Kai Petersen and Michael Felderer},
 doi = {10.1016/j.csi.2022.103688},
 journal = {Computer Standards {\&}amp$\mathsemicolon$ Interfaces},
 month = {mar},
 pages = {103688},
 publisher = {Elsevier {BV}},
 title = {Determining a core view of research quality in empirical software engineering},
 url = {https://doi.org/10.1016%2Fj.csi.2022.103688},
 volume = {84},
 year = {2023}
}

@inproceedings{Muhammad_2013,
 abstract = {Heritage organisations wishing to participate in open and public aggregators such as Europeana, need to review and revise their own digital curation workflow processes in order to tackle both the technical integration as well as the organizational and operational issues. This framework of challenges is addressed by Europeana Inside, a new project cofunded by the European Union under the CIP-ICT-PSP Programme. In this paper, the major results that were produced during the functional specification activities are summarised and the MSP-VSE model that was deployed for the harmonisation of requirements is presented. MSP-VSE is currently being used to drive the cascading ECK Prototype Iterations and the related software evaluations performed by participating content providers.},
 author = {Naeem Muhammad and George Koutalieris and Marco Streefkerk and Nathalie Poot and Sam Alloing and Roxanne Wyns},
 booktitle = {2013 Digital Heritage International Congress ({DigitalHeritage})},
 doi = {10.1109/digitalheritage.2013.6743819},
 month = {oct},
 publisher = {{IEEE}},
 title = {A model to anticipate and analyse requirements of heritage organisations wishing to actively participate in Europeana},
 url = {https://doi.org/10.1109%2Fdigitalheritage.2013.6743819},
 year = {2013}
}

@inproceedings{Nair_2013,
 abstract = {Traceability between development artefacts and mainly from and to requirements plays a major role in system lifecycle, supporting activities such as system validation, change impact analysis, and regulation compliance. Many researchers have been working on this topic and have published their work throughout the editions of the Requirements Engineering Conference. This paper aims to analyse the research on traceability published in the past 20 years of this conference and to provide insights into its contribution to the traceability area. We have selected and reviewed 70 papers in the proceedings of the conference and summarised several aspects of traceability that have been addressed and by whom. The paper also discusses the evolution of the topic at the conference, compares the results with those reported in other publications, and proposes aspects on which further research should be conducted.},
 author = {Sunil Nair and Jose Luis de la Vara and Sagar Sen},
 booktitle = {2013 21st {IEEE} International Requirements Engineering Conference ({RE})},
 doi = {10.1109/re.2013.6636722},
 month = {jul},
 publisher = {{IEEE}},
 title = {A review of traceability research at the requirements engineering conference{\&}lt$\mathsemicolon$sup{\&}gt$\mathsemicolon$re{\&}amp$\mathsemicolon${\#}x0040$\mathsemicolon$21{\&}lt$\mathsemicolon$/sup{\&}gt$\mathsemicolon$},
 url = {https://doi.org/10.1109%2Fre.2013.6636722},
 year = {2013}
}

@incollection{Nair_2014,
 abstract = {[Context and motivation] Safety evidence plays an important role in gaining confidence in the safe operation of a system in a given context. For a large system, it is necessary to provide information about thousands of artefacts that might be used as evidence and about the relationships among themselves and also with other safety assurance assets. [Question/problem] Past research has only addressed some needs of traceability in safety-critical systems and thus has not provided a complete picture of safety evidence traceability. Lack of knowledge and awareness of these needs can result in poor evidence management and lead to certification risks. [Principal ideas/results] This paper aims to provide a broad overview of safety evidence traceability needs for practice and its associated challenges. We also propose a safety evidence traceability model, which has been validated with data from real-world critical systems. [Contribution] We discuss the motivation and challenges for safety evidence traceability, and present the various traces that need to be captured and maintained. This information can help researchers to shape future research based on industry needs and can help practitioners to gain a deeper understanding and a wider knowledge of safety evidence traceability, thereby facilitating safety assurance and certification.},
 author = {Sunil Nair and Jose Luis de la Vara and Alberto Melzi and Giorgio Tagliaferri and Laurent de-la-Beaujardiere and Fabien Belmonte},
 booktitle = {Requirements Engineering: Foundation for Software Quality},
 doi = {10.1007/978-3-319-05843-6_23},
 pages = {309--324},
 publisher = {Springer International Publishing},
 title = {Safety Evidence Traceability: Problem Analysis and Model},
 url = {https://doi.org/10.1007%2F978-3-319-05843-6_23},
 year = {2014}
}

@inproceedings{Nass_2020,
 abstract = {},
 author = {Michel Nass and Emil Alegroth and Robert Feldt},
 booktitle = {2020 {IEEE} International Conference on Software Testing, Verification and Validation Workshops ({ICSTW})},
 doi = {10.1109/icstw50294.2020.00065},
 month = {oct},
 publisher = {{IEEE}},
 title = {On the Industrial Applicability of Augmented Testing: An Empirical Study},
 url = {https://doi.org/10.1109%2Ficstw50294.2020.00065},
 year = {2020}
}

@article{Novikova_2022,
 abstract = {In times of globalisation and post-pandemic, it is the availability of advanced technologies , their effective use is a determining factor in economic growth. The process of transferring innovative technologies is associated with a significant level of risk, which negatively affects the economic, social and technical, and technological development of the economy of any country in the world. Thus, the study aims to develop an algorithm for managing key risks that arise in the exchange of technology in the scientific and educational environment in the context of the internationalisation of science. In turn, the risk analysis became the basis for developing proposals to eliminate probabilistic barriers, such as limited information, shortage of qualified personnel, low government activity, lack of business interest in high-cost and high-risk science-intensive projects, and the uncertainty of potential demand for new technology among consumers. The hypotheses proposed by the authors proved that educational collaborations, marketing intelligence, and the use of professional networking platforms are both sources of potential risks for technology transfer in scientific circles and the driver of its development. The theoretical and practical value of the research results is that they allow forming a theoretical and practical basis for the formation of the methodological paradigm of risk management of internationalisation of technology transfer, taking into account the peculiarities of the domestic economy and global challenges.},
 author = {Iryna Novikova and Alla Stepanova and Oksana Zhylinska and Anastasiia Samoilikova},
 doi = {10.55643/fcaptp.4.45.2022.3808},
 journal = {Financial and credit activity problems of theory and practice},
 month = {sep},
 number = {45},
 pages = {308--321},
 publisher = {{FinTechAlliance}},
 title = {{TECHNOLOGY} {TRANSFER} {RISK} {MANAGEMENT} {IN} {THE} {CONDITIONS} {OF} {SCIENTIFIC} {INTERNATIONALISATION}},
 url = {https://doi.org/10.55643%2Ffcaptp.4.45.2022.3808},
 volume = {4},
 year = {2022}
}

@article{Oliinyk_2015,
 abstract = {},
 author = {Olesia Oliinyk and Kai Petersen and Manfred Schoelzke and Martin Becker and Soeren Schneickert},
 doi = {10.1007/s00766-015-0237-z},
 journal = {Requirements Engineering},
 month = {aug},
 number = {1},
 pages = {105--135},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Structuring automotive product lines and feature models: an exploratory study at Opel},
 url = {https://doi.org/10.1007%2Fs00766-015-0237-z},
 volume = {22},
 year = {2015}
}

@inproceedings{Ouriques_2019,
 abstract = {Background: Organizations adopting Agile Software Development (ASD) use different Knowledge Management (KM) practices to retain and share knowledge. However, it is often the case that knowledge retention is carried out in an ad-hoc way. Aims: In this study, we report our experience from proposing the Knowledge Critically Evaluation Method (KCEM) to evaluate knowledge items (KIT). Our main goal with KCEMs is to support companies to systematically retain knowledge in ASD contexts. Method: We conducted an improvement case study to develop and evaluate KCEM. This research follows the guidelines for technology transfer between industry and academia. The case and unit of analysis is Ericsson, a Swedish company that develops telecommunication solutions. Results: In this paper, we provide initial results of both lab and static validation, enriched by the lessons learned. Conclusions: The preliminary results show that KCEM is easy to understand and use, provides a different perspective on the KIT by visualizing in the criticality chart, and reduces the level of abstraction associated to a knowledge subject area.},
 author = {Raquel Ouriques and Ricardo Britto and Krzysztof Wnuk and Joao Felipe Ouriques and Tony Gorschek},
 booktitle = {2019 {ACM}/{IEEE} International Symposium on Empirical Software Engineering and Measurement ({ESEM})},
 doi = {10.1109/esem.2019.8870167},
 month = {sep},
 publisher = {{IEEE}},
 title = {A Method to Evaluate Knowledge Resources in Agile Software Development},
 url = {https://doi.org/10.1109%2Fesem.2019.8870167},
 year = {2019}
}

@article{Ovchinnikova_2021,
 abstract = {The article overviews the existing models of technology transfer, including those within foreign universities, and highlights the most relevant ones that can be used by Russian universities in the post-COVID-19 conditions. The study should allow the university-based transfer centers to choose the model which is mostly suitable for their situation, and to include elements that will help them to maximize the efficiency of their activities. The existing centers will be able to make changes in their activity in order to update and/or to transform it in accordance with the changed conditions. For the management personnel of the university, the article also provides practical recommendations on managing technology transfer centers. The authors reveal the key functioning elements of various technology transfer models, which can be used by management personnel to design technology transfer centers based on Russian universities. The possible result of the stakeholders’ getting to know this study might be their creating and implementing regulations to govern the technology transfer centers’ activities; forming a personnel reserve; advanced existing personnel training and multi-competence teams’ creating; forming a flexible budgetary policy, as well as a policy of values, for the technology transfer center to function within.},
 author = {N. E. Ovchinnikova and D. G. Lazarenko},
 doi = {10.15826/umpa.2021.01.005},
 journal = {University Management: Practice and Analysis},
 month = {may},
 number = {1},
 pages = {62--82},
 publisher = {Ural Federal University},
 title = {The Analysis of Conceptual Theoretical Approaches to the Problem of Technology Transfer in Foreign Universities},
 url = {https://doi.org/10.15826%2Fumpa.2021.01.005},
 volume = {25},
 year = {2021}
}

@article{Ovchinnikova_2021,
 abstract = {The article overviews the existing models of technology transfer, including those within foreign universities, and highlights the most relevant ones that can be used by Russian universities in the post-COVID-19 conditions. The study should allow the university-based transfer centers to choose the model which is mostly suitable for their situation, and to include elements that will help them to maximize the efficiency of their activities. The existing centers will be able to make changes in their activity in order to update and/or to transform it in accordance with the changed conditions. For the management personnel of the university, the article also provides practical recommendations on managing technology transfer centers. The authors reveal the key functioning elements of various technology transfer models, which can be used by management personnel to design technology transfer centers based on Russian universities. The possible result of the stakeholders’ getting to know this study might be their creating and implementing regulations to govern the technology transfer centers’ activities; forming a personnel reserve; advanced existing personnel training and multi-competence teams’ creating; forming a flexible budgetary policy, as well as a policy of values, for the technology transfer center to function within.},
 author = {N. E. Ovchinnikova and D. G. Lazarenko},
 doi = {10.15826/umpa.2021.01.005},
 journal = {University Management: Practice and Analysis},
 month = {may},
 number = {1},
 pages = {62--82},
 publisher = {Ural Federal University},
 title = {The Analysis of Conceptual Theoretical Approaches to the Problem of Technology Transfer in Foreign Universities},
 url = {https://doi.org/10.15826%2Fumpa.2021.01.005},
 volume = {25},
 year = {2021}
}

@article{Pagani_2015,
 abstract = {},
 author = {Regina Negri Pagani and Jo{\~{a}}o Luiz Kovaleski and Luis Mauricio Resende},
 doi = {10.1007/s11192-015-1744-x},
 journal = {Scientometrics},
 month = {sep},
 number = {3},
 pages = {2109--2135},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Methodi Ordinatio: a proposed methodology to select and rank relevant scientific papers encompassing the impact factor, number of citation, and year of publication},
 url = {https://doi.org/10.1007%2Fs11192-015-1744-x},
 volume = {105},
 year = {2015}
}

@article{Pagani_2019,
 abstract = {The international circulation of scientists from developing to developed countries can be one of the ways to access advanced knowledge. Similarly, another alternative proposed in this paper is the international student mobility as a way to increase the tacit knowledge asset of a country. Based on this assumption, the purpose of this paper is to approach knowledge and technology transfer having two universities as subjects of study in order to identify the barriers and mechanisms in the transfer within the international student mobility scenario. The paper investigates two groups of students, one from Brazil and another from France, which participated in an international student mobility programme for a period longer than six months. Results show the main barriers and the most effective mechanisms for this category of knowledge and technology transfer. At the end of the paper, we propose a model which has as interfaces two universities as transferor and transferee.},
 author = {Regina Negri Pagani and Bruno Ramond and Vander Luiz Da Silva and Gilberto Zammar and Jo{\~{a}}o Luiz Kovaleski},
 doi = {10.1080/14778238.2019.1678415},
 journal = {Knowledge Management Research {\&}amp$\mathsemicolon$ Practice},
 month = {oct},
 number = {4},
 pages = {405--423},
 publisher = {Informa {UK} Limited},
 title = {Key factors in university-to-university knowledge and technology transfer on international student mobility},
 url = {https://doi.org/10.1080%2F14778238.2019.1678415},
 volume = {18},
 year = {2019}
}

@article{PERNST_L_2012,
 abstract = {The automotive industry is facing a tremendous growth in the engineering of software-intensive systems, giving rise to various challenges. To prevent problems related to the fit of new software technologies in vehicles and the manufacturing processes, a well functioning interaction between the functions for product development and manufacturing is crucial. This is complicated by the fact that the changeable nature of software development causes unprecedented needs for collaboration and coordination between these two functions. This paper reports on a process assessment that focuses on the interface between the functions for product development and manufacturing in the development and design of software-intensive automotive systems. The main purpose of the study was to identify the key issues for improvement in the area assessed. The assessment was performed at two Swedish automotive companies where data were collected from documents and in interviews with practitioners. Nine key improvement issues were established ranging from challenges in requirements engineering to the need for knowledge transfer between manufacturing and product development. In addition, to increase the understandability of the results and map possible avenues for solution and future research, the paper provides an extensive analysis of each improvement issue in relation to the state-of-the-art.},
 author = {J. PERNST{\AA}L and A. MAGAZINIUS and T. GORSCHEK},
 doi = {10.1142/s0218194012500271},
 journal = {International Journal of Software Engineering and Knowledge Engineering},
 month = {nov},
 number = {07},
 pages = {965--1004},
 publisher = {World Scientific Pub Co Pte Lt},
 title = {A {STUDY} {INVESTIGATING} {CHALLENGES} {IN} {THE} {INTERFACE} {BETWEEN} {PRODUCT} {DEVELOPMENT} {AND} {MANUFACTURING} {IN} {THE} {DEVELOPMENT} {OF} {SOFTWARE}-{INTENSIVE} {AUTOMOTIVE} {SYSTEMS}},
 url = {https://doi.org/10.1142%2Fs0218194012500271},
 volume = {22},
 year = {2012}
}

@incollection{Pernst_l_2013,
 abstract = {This paper presents a software process improvement (SPI) initiative conducted at two automotive companies, focusing on the inter-departmental interplay between manufacturing and product development, which are central players in automotive development. In such a complex environment with multiple departments with varying challenges(the planning of improvement possibilities was considered as mission critical to get support for changes in the companies. This paper reports the results of the SPI efforts following the process assessment, namely specifically the improvement planning step, which is often overlooked in empirical reports. We also thoroughly describe and report on lessons learned from employing our tailored planning method involving 41 professionals.
We found that requirements engineering, early manufacturing involvement and roles and responsibilities were prioritized as main challenges to address. Furthermore, our and the involved professionals’ experiences of the used SPI (planning) method, showed that it was useful, giving valuable decision support for the planning of the improvement.},
 author = {Joakim Pernst{\aa}l and Tony Gorschek and Robert Feldt and Dan Flor{\'{e}}n},
 booktitle = {Product-Focused Software Process Improvement},
 doi = {10.1007/978-3-642-39259-7_10},
 pages = {93--107},
 publisher = {Springer Berlin Heidelberg},
 title = {Software Process Improvement in Inter-departmental Development of Software-Intensive Automotive Systems {\textendash} A Case Study},
 url = {https://doi.org/10.1007%2F978-3-642-39259-7_10},
 year = {2013}
}

@article{Pernst_l_2015,
 abstract = {},
 author = {J. Pernst{\aa}l and T. Gorschek and R. Feldt and D. Flor{\'{e}}n},
 doi = {10.1016/j.infsof.2015.06.007},
 journal = {Information and Software Technology},
 month = {nov},
 pages = {44--64},
 publisher = {Elsevier {BV}},
 title = {Requirements communication and balancing in large-scale software-intensive product development},
 url = {https://doi.org/10.1016%2Fj.infsof.2015.06.007},
 volume = {67},
 year = {2015}
}

@article{Petersen_2010,
 abstract = {Responsiveness to customer needs is an important goal in agile and lean software development. One major aspect is to have a continuous and smooth flow that quickly delivers value to the customer. In this paper we apply cumulative flow diagrams to visualize the flow of lean software development. The main contribution is the definition of novel measures connected to the diagrams to achieve the following goals: (1) increase throughput and reduce lead-time to achieve high responsiveness to customers' needs, and (2) to provide a tracking system that shows the progress/status of software product development. An evaluation of the measures in an industrial case study showed that practitioners found them useful and identify improvements based on the measurements, which were in line with lean and agile principles. Furthermore, the practitioners found the measures useful in seeing the progress of development for complex products where many tasks are executed in parallel. The measures are now an integral part of the improvement work at the studied company.},
 author = {K. Petersen and C. Wohlin},
 doi = {10.1002/spe.975},
 journal = {Software: Practice and Experience},
 month = {apr},
 number = {9},
 pages = {975--996},
 publisher = {Wiley},
 title = {Measuring the flow in lean software development},
 url = {https://doi.org/10.1002%2Fspe.975},
 volume = {41},
 year = {2010}
}

@article{Petersen_2010,
 abstract = {Software process improvement methods help to continuously refine and adjust the 
software process to improve its performance (e.g., in terms of lead-time, 
quality of the software product, reduction of change requests, and so forth). 
Lean software development propagates two important principles that help process 
improvement, namely identification of waste in the process and considering 
interactions between the individual parts of the software process from an 
end-to-end perspective. A large shift of thinking about the own way of working 
is often required to adopt lean. One of the potential main sources of failure 
is to try to make a too large shift about the ways of working at once. 
Therefore, the change to lean has to be done in a continuous and incremental 
way. In response to this we propose a novel approach to bring together the 
quality improvement paradigm and lean software development practices, the 
approach being called Software Process Improvement through the Lean Measurement 
(SPI-LEAM) Method. The method allows to assess the performance of the 
development process and take continuous actions to arrive at a more lean 
software process over time. The method is under implementation in industry and 
an initial evaluation of the method has been performed.},
 author = {Kai Petersen and Claes Wohlin},
 doi = {10.1016/j.jss.2010.02.005},
 journal = {Journal of Systems and Software},
 month = {jul},
 number = {7},
 pages = {1275--1287},
 publisher = {Elsevier {BV}},
 title = {Software process improvement through the Lean Measurement ({SPI}-{LEAM}) method},
 url = {https://doi.org/10.1016%2Fj.jss.2010.02.005},
 volume = {83},
 year = {2010}
}

@article{Petersen_2014,
 abstract = {System of systems are of high complexity, and for each system, many different requirements are implemented in parallel. Systems are developed with some degree of managerial independence but later on have to work together. In this situation, many requirements are written, implemented, and tested in parallel for different systems that are to be integrated. This makes identifying bottlenecks challenging, and visualizations often used on project level (such as Kanban boards or burndown charts) have to be extended/complemented to cope with the increased complexity. In response to these challenges, the contributions of this study are to propose the following: (i) a visualization for early identification and proactive removal of bottlenecks; (ii) a visualization to check on the success of bottleneck resolution; and (iii) to provide an industry evaluation of the visualizations in a case study of a system of systems developed at Ericsson AB in Sweden. The feedback by the practitioners showed that the visualizations were perceived as useful in improving throughput and lead time. The quantitative analysis showed that the visualizations were able in identifying bottlenecks and showing improvements or the lack thereof. On the basis of the qualitative and quantitative data collected, we conclude that the visualizations are useful in bottleneck identification and resolution. Copyright © 2014 John Wiley & Sons, Ltd.},
 author = {Kai Petersen and Peter Roos and Staffan Nyström and Per Runeson},
 doi = {10.1002/smr.1653},
 journal = {Journal of Software: Evolution and Process},
 month = {may},
 number = {12},
 pages = {1150--1171},
 publisher = {Wiley},
 title = {Early identification of bottlenecks in very large scale system of systems software development},
 url = {https://doi.org/10.1002%2Fsmr.1653},
 volume = {26},
 year = {2014}
}

@inproceedings{Petersen_2014,
 abstract = {},
 author = {Kai Petersen and Emelie Engström},
 booktitle = {Proceedings of the 2014 international workshop on Long-term industrial collaboration on software engineering},
 doi = {10.1145/2647648.2647650},
 month = {sep},
 publisher = {{ACM}},
 title = {Finding relevant research solutions for practical problems},
 url = {https://doi.org/10.1145%2F2647648.2647650},
 year = {2014}
}

@incollection{Petersen_2016,
 abstract = {Industry–academia collaboration in software engineering is essential for the relevance of research, as research may make important contributions to the improvement of software engineering. Thus, software engineering researchers are an asset in software process improvement. In this chapter, I present different experiences of being an embedded researcher in industry contributing to software process improvement. The process improvement works were focused on helping organizations to move from plan-driven processes to agile and lean processes. We will elaborate on the challenges, essential practices, and related benefits that were observed when working closely with industry in the role of embedded researchers. Supporting examples from different published cases form the basis for this experience report.},
 author = {Kai Petersen},
 booktitle = {Managing Software Process Evolution},
 doi = {10.1007/978-3-319-31545-4_12},
 pages = {235--255},
 publisher = {Springer International Publishing},
 title = {A Researcher's Experiences in Supporting Industrial Software Process Improvement},
 url = {https://doi.org/10.1007%2F978-3-319-31545-4_12},
 year = {2016}
}

@incollection{Pinard_2016,
 abstract = {A growing body of literature suggests that Assistive Technologies for Cognition (ATCs) are efficient at improving independence and life participation of persons with cognitive impairments. Despite years of research, ATCs implementation in the field of cognitive rehabilitation remains a real challenge. These intervention tools are still not common in clinics and only a few assistive technologies developed in research reach the commercialization phase. This chapter discusses difficulties with regard to the valorization of ATCs and their widespread adoption and provides a reflective tool to optimize the implementation of cognitive assistants.},
 author = {St{\'{e}}phanie Pinard and Kevin Bouchard and Yannick Adelise and V{\'{e}}ronique Fortin and H{\'{e}}l{\`{e}}ne Pigot and Nathalie Bier and Sylvain Giroux},
 booktitle = {Trends in Ambient Intelligent Systems},
 doi = {10.1007/978-3-319-30184-6_3},
 pages = {57--86},
 publisher = {Springer International Publishing},
 title = {Valorization of Assistive Technologies for Cognition: Lessons and Practices},
 url = {https://doi.org/10.1007%2F978-3-319-30184-6_3},
 year = {2016}
}

@inproceedings{Ramler_2016,
 abstract = {},
 author = {Rudolf Ramler and Michael Felderer and Takashi Kitamura and Darko Marinov},
 booktitle = {2016 {IEEE} Ninth International Conference on Software Testing, Verification and Validation Workshops ({ICSTW})},
 doi = {10.1109/icstw.2016.36},
 month = {apr},
 publisher = {{IEEE}},
 title = {Industry-Academia Collaboration in Software Testing: An Overview of {TAIC} {PART} 2016},
 url = {https://doi.org/10.1109%2Ficstw.2016.36},
 year = {2016}
}

@inproceedings{Ribeiro_2015,
 abstract = {},
 author = {Talita Vieira Ribeiro and Guilherme Horta Travassos},
 booktitle = {2015 {IEEE}/{ACM} 3rd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1109/cesi.2015.12},
 month = {may},
 publisher = {{IEEE}},
 title = {On the Alignment of Source Code Quality Perspectives through Experimentation: An Industrial Case},
 url = {https://doi.org/10.1109%2Fcesi.2015.12},
 year = {2015}
}

@inproceedings{Rico_2020,
 abstract = {},
 author = {Sergio Rico},
 booktitle = {Proceedings of the Evaluation and Assessment in Software Engineering},
 doi = {10.1145/3383219.3386125},
 month = {apr},
 publisher = {{ACM}},
 title = {Exploring and improving industry-academia communication in software engineering},
 url = {https://doi.org/10.1145%2F3383219.3386125},
 year = {2020}
}

@article{Rokaya_2022,
 abstract = {Hydrology research has played a vital role in improving hydrological process understanding and by extension, devising solutions to address water management challenges that are critical for people and the environment. Research projects in hydrology are often considered successful when scientific or engineering advancements through new insights or new models or improved understanding are published in peer reviewed or other literature. Quantitative research outputs, such as number of journal publications, number of students trained, number of conference presentations, or additional funding leveraged are considered key indicators of success in research. In this commentary, we argue that research has limited utility when practical applications that add value to practitioners are not explored concurrently within the research process. We discuss some outstanding challenges in translating academic research into practice, and make some recommendations to bridge the increasing gap between research and practice through a strong knowledge mobilization effort. A path from mucky middle to bridging the gap between research and practice.},
 author = {Prabin Rokaya and Alain Pietroniro},
 doi = {10.1002/hyp.14717},
 journal = {Hydrological Processes},
 month = {oct},
 number = {10},
 publisher = {Wiley},
 title = {Does academic research have practical relevance? A question of translating hydrology research into practice},
 url = {https://doi.org/10.1002%2Fhyp.14717},
 volume = {36},
 year = {2022}
}

@incollection{Ruhi_2016,
 abstract = {[Context and motivation:] As a relevant and viable research methodology that addresses the development and empirical investigation of new artifacts, design science research (DSR) has gained traction in the requirements and software engineering research community over the past decade. [Question/Problem:] In this paper, we deliberate the synergies between the lean mindset and DSR, and explore the application of lean development approaches in the planning and execution of software and requirements engineering research projects. [Principal idea:] The widespread adoption of lean approaches in many business and technology practices today provides the impetus to explore their application in the context of software and requirements engineering empirical research. Toward this, we offer a review of key principles underlying the lean mindset and provide an overview of the typical processes followed in DSR research projects. Subsequently, we reflect the potential for lean development approaches to facilitate DSR projects. [Contribution:] We propose a conceptual framework that integrates lean principles with DSR phases and outputs, and we aim to inspire future discussion on the application of the lean mindset in the planning and execution of empirical research projects.},
 author = {Umar Ruhi and Okhaide Akhigbe},
 booktitle = {Requirements Engineering: Foundation for Software Quality},
 doi = {10.1007/978-3-319-30282-9_20},
 pages = {286--300},
 publisher = {Springer International Publishing},
 title = {Lean Development in Design Science Research: Deliberating Principles, Prospects and Pitfalls},
 url = {https://doi.org/10.1007%2F978-3-319-30282-9_20},
 year = {2016}
}

@article{Runeson_2008,
 abstract = {Abstract,Case study is a suitable research methodology,for software engineering,research since it studies contemporary phenomena in its natural context. However, the understanding of what constitutes a case study varies, and hence the quality of the resulting studies. This paper aims,at providing,an introduction to case study methodology,and,guidelines for researchers,conducting,case studies and,readers studying,reports of such,studies. The content is based on the authors’ own,experience from conducting,and reading case studies. The terminology,and,guidelines are compiled,from,different methodology,handbooks,in other research domains, in particular social science and information systems, and adapted to the needs,in software,engineering. We,present,recommended,practices for software engineering,case studies as well,as empirically,derived,and,evaluated,checklists for researchers and readers of case study research. Keywords,Casestudy.Research methodology.Checklists .Guidelines},
 author = {Per Runeson and Martin Höst},
 doi = {10.1007/s10664-008-9102-8},
 journal = {Empirical Software Engineering},
 month = {dec},
 number = {2},
 pages = {131--164},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Guidelines for conducting and reporting case study research in software engineering},
 url = {https://doi.org/10.1007%2Fs10664-008-9102-8},
 volume = {14},
 year = {2008}
}

@inproceedings{Runeson_2012,
 abstract = {Industry -- academia collaboration is critical for empirical research to exist. However, there are many obstacles in the collaboration process. This paper reports on the experiences gained by the author, in a 2-year collaboration project on software testing which involved on-site work by the researcher in the industry premises. Based on notes, minutes of meetings, and progress reports, the project history is outlined. The project is analyzed, using collaboration models as a frame of reference. We conclude that there must be a balance between company 'pull' and academia 'push' in the collaboration Management support is inevitably a key factor to success, while other factors like cross-cultural skills and interfaces towards key resources also contribute.},
 author = {Per Runeson},
 booktitle = {2012 {IEEE} Fifth International Conference on Software Testing, Verification and Validation},
 doi = {10.1109/icst.2012.190},
 month = {apr},
 publisher = {{IEEE}},
 title = {It Takes Two to Tango -- An Experience Report on Industry -- Academia Collaboration},
 url = {https://doi.org/10.1109%2Ficst.2012.190},
 year = {2012}
}

@inproceedings{Runeson_2014,
 abstract = {In industry–academia collaboration projects, there are many issues related to different time horizons in industry and academia. If not adressed upfront, they may hinder collabora-tion in such projects. We analyze our expe-riences from a 10 year industry–academia col-laboration program, the EASE Industrial Ex-cellence Center in Sweden, and identify issues and feasible practices to overcome the hur-dles of different time horizons. Specifically, we identify issues related to contracts, goals, re-sults, organization (in)stability, and work prac-tices. We identify several areas where the time horizon is different, and conclude that mutual awareness of these differences and management commitment to the collaboration are the key means to overcome the differences. The launch of a mediating institute may also be part of the solution.},
 author = {Per Runeson and Sten Minör and Johan Sven{\'{e}}r},
 booktitle = {Proceedings of the 2014 international workshop on Long-term industrial collaboration on software engineering},
 doi = {10.1145/2647648.2647652},
 month = {sep},
 publisher = {{ACM}},
 title = {Get the cogs in synch},
 url = {https://doi.org/10.1145%2F2647648.2647652},
 year = {2014}
}

@inproceedings{Runeson_2014,
 abstract = {Industry–academia projects exist in complex contexts of various stakeholders, time perspec-tives, and goals. In order to analyze projects and communicate about them, we have de-fined an "architectural" model for industry– academia collaboration, inspired by Kruchten's software architecture model. The model has four views of i) time, ii) space, iii) activity and iv) domain, corresponding to the ques-tions: when, where, how and what. The +1 view is the scenario, binding the other four to-gether. We illustrate the model by applying it to the Industrial Excellence Center EASE and the Sigrun Software Innovation and En-gineering Institute. The model helps analyz-ing industry–academia collaboration projects, to find gaps and reduce redundant work.},
 author = {Per Runeson and Sten Minör},
 booktitle = {Proceedings of the 2014 international workshop on Long-term industrial collaboration on software engineering},
 doi = {10.1145/2647648.2647651},
 month = {sep},
 publisher = {{ACM}},
 title = {The 4$\mathplus$1 view model of industry--academia collaboration},
 url = {https://doi.org/10.1145%2F2647648.2647651},
 year = {2014}
}

@incollection{Runeson_2020,
 abstract = {Software engineering research aims to help improve real-world practice. With the adoption of empirical software engineering research methods, the understanding of real-world needs and validation of solution proposals have evolved. However, the philosophical perspective on what constitutes theoretical knowledge and research contributions in software engineering is less discussed in the community. In this chapter, we use the design science paradigm as a frame for articulating and communicating prescriptive software engineering research contributions. Design science embraces problem conceptualization, solution (or artifact) design, and validation of solution proposals, with recommendations for practice phrased as technological rules. Design science is used in related research areas, particularly information systems and management theory. We elaborate the constructs of design science for software engineering, relate them to different conceptualizations of design science, and provide examples of possible research methods. We outline how the assessment of research contributions, industry–academia communication, and theoretical knowledge building may be supported by the design science paradigm. Finally, we provide examples of software engineering research presented through a design science lens.},
 author = {Per Runeson and Emelie Engström and Margaret-Anne Storey},
 booktitle = {Contemporary Empirical Methods in Software Engineering},
 doi = {10.1007/978-3-030-32489-6_5},
 pages = {127--147},
 publisher = {Springer International Publishing},
 title = {The Design Science Paradigm as a Frame for Empirical Software Engineering},
 url = {https://doi.org/10.1007%2F978-3-030-32489-6_5},
 year = {2020}
}

@inproceedings{Saini_2021,
 abstract = {},
 author = {Nishrith Saini and Ricardo Britto},
 booktitle = {2021 {IEEE}/{ACM} 43rd International Conference on Software Engineering: Software Engineering in Practice ({ICSE}-{SEIP})},
 doi = {10.1109/icse-seip52600.2021.00010},
 month = {may},
 publisher = {{IEEE}},
 title = {Using Machine Intelligence to Prioritise Code Review Requests},
 url = {https://doi.org/10.1109%2Ficse-seip52600.2021.00010},
 year = {2021}
}

@article{Salleh_2018,
 abstract = {Context
Research carried out in industrial contexts are recognized as important to the advancement of software engineering knowledge and practice. However, several challenges present themselves in the three key phases of research carried out in industrial contexts, recruitment, engagement and feedback.

Objective
The aim of this paper is to report the challenges related to each of the three phases of research carried out in industrial contexts, and the associated solutions we have found useful from our combined body of industrial empirical software engineering research studies spanning four case studies, five grounded theory studies, seven survey studies and two quasi-experimental studies involving a total of over 400 industrial participants in the past decade.

Method
We designed an instrument to gather details of our studies carried out in industrial contexts and performed thematic analysis to synthesise and draw out the most prominent challenges faced.

Results
We present a set of recommendations around study design, conduct and reporting to try and mitigate some of these challenges as they apply specifically to industrial empirical research.

Conclusion
These recommendations can guide researchers, novice and experienced, working in close collaboration with industry stakeholders to make the most of their industrial software engineering research.},
 author = {Norsaremah Salleh and Rashina Hoda and Moon Ting Su and Tanjila Kanij and John Grundy},
 doi = {10.1016/j.infsof.2017.12.001},
 journal = {Information and Software Technology},
 month = {jun},
 pages = {161--172},
 publisher = {Elsevier {BV}},
 title = {Recruitment, engagement and feedback in empirical software engineering studies in industrial contexts},
 url = {https://doi.org/10.1016%2Fj.infsof.2017.12.001},
 volume = {98},
 year = {2018}
}

@article{Salvador_2020,
 abstract = {This article aimed to propose and test a model to assess the potential of sustainability reporting (SR) standards as facilitators for knowledge and technology transfer (KTT), the Sustainable Reporting Knowledge and Technology Transfer (SURKaTT) Model. The proposed model can be used mainly by researchers and public organizations that intend to or are currently conducting SR initiatives. It can be used to assess and compare SR standards, being a facilitator to KTT processes. GRI, a worldwide well-known SR standard was assessed using the SURKaTT Model, and results show that GRI performed at only 58.8% of its potential to facilitate KTT processes. This pioneering approach can encourage researchers onto developing further criteria to assess the possibilities of KTT in SR, and it is a kick-off start for SR to be considered a both purposeful and serendipitous source of KTT initiatives.},
 author = {Rodrigo Salvador and Murillo Vetroni Barros and Guilherme Francisco Prado and Regina Negri Pagani and Cassiano Moro Piekarski and Antonio Carlos Francisco},
 doi = {10.1002/csr.2046},
 journal = {Corporate Social Responsibility and Environmental Management},
 month = {sep},
 number = {1},
 pages = {251--264},
 publisher = {Wiley},
 title = {Knowledge and technology transfer in sustainability reports: Fomenting stakeholder engagement for sustainable development},
 url = {https://doi.org/10.1002%2Fcsr.2046},
 volume = {28},
 year = {2020}
}

@article{Sandberg_2011,
 abstract = {Both the software industry and academia promote collaboration to solve challenges together that neither can solve alone. Collaboration brings opportunities to understand and improve in ways not possible when working apart, but it succeeds only if both parties are contributing. A collaboration model developed from eight years' experience setting up and managing a research center explicitly focused on industry needs is based on five success factors enabling research results (need orientation, industry goal alignment, deployment impact, industry benefit, and innovativeness), five success factors enabling research activities (management engagement, network access, collaborator match, communication ability, and continuity), and 10 action principles for industry-academia collaboration management.},
 author = {A. Sandberg and L. Pareto and T. Arts},
 doi = {10.1109/ms.2011.49},
 journal = {{IEEE} Software},
 month = {jul},
 number = {4},
 pages = {74--83},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Agile Collaborative Research: Action Principles for Industry-Academia Collaboration},
 url = {https://doi.org/10.1109%2Fms.2011.49},
 volume = {28},
 year = {2011}
}

@incollection{Sandberg_2014,
 abstract = {},
 author = {Anna Sandberg},
 booktitle = {Continuous Software Engineering},
 doi = {10.1007/978-3-319-11283-1_3},
 pages = {29--36},
 publisher = {Springer International Publishing},
 title = {Academia{\textendash}Industry Collaboration: Getting Closer is the Key!},
 url = {https://doi.org/10.1007%2F978-3-319-11283-1_3},
 year = {2014}
}

@inproceedings{Sandberg_2017,
 abstract = {},
 author = {Anna Borjesson Sandberg and Ivica Crnkovic},
 booktitle = {2017 {IEEE}/{ACM} 39th International Conference on Software Engineering: Software Engineering in Practice Track ({ICSE}-{SEIP})},
 doi = {10.1109/icse-seip.2017.20},
 month = {may},
 publisher = {{IEEE}},
 title = {Meeting Industry-Academia Research Collaboration Challenges with Agile Methodologies},
 url = {https://doi.org/10.1109%2Ficse-seip.2017.20},
 year = {2017}
}

@inproceedings{Santos_2018,
 author = {Kleoson Santos and Sandro Oliveira},
 booktitle = {Anais do {WER}18 - Workshop em Engenharia de Requisitos},
 doi = {10.17771/pucrio.wer.inf2018-53},
 publisher = {{PUC}-Rio},
 title = {Um Estudo de Caso de Aplica{\c{c}}{\~{a}}o de um M{\'{e}}todo {\'{A}}gil para Desenvolvimento de Requisitos de Software: O {REAC}},
 url = {https://doi.org/10.17771%2Fpucrio.wer.inf2018-53},
 year = {2018}
}

@article{Santos_2020,
 abstract = {Software testing plays a major role in the quality of software since it assures that the software complies with its expected behavior. However, this is an expensive activity and, thus, companies usually do not perform testing activities on software projects due to the time required. These costs may be even higher in testing processes that rely only on manual test execution, which is both time-consuming and error-prone. One strategy commonly used to mitigate these costs is to use tools to automate testing activities such as test execution, test documentation, and test case generation. This paper presents an experience report in the context of a Test Factory about the use of a tool that partially automates the specification of test procedures from textual use cases. This tool automatically retrieves use cases from the requirement management system, generates the test case procedures, requires inputs from the tester, and then sends the test cases to the test management system. This paper details how this tool was used in real releases of an industrial software project. We also evaluated our tool with four test analysts from a different project to gather more data regarding its efficiency to support the test case documentation.},
 author = {Erick Barros dos Santos and Lucas Sim{\~{a}}o Da Costa and Tha{\'{\i}}s Marinho De Amorim and Bruno Sab{\'{o}}ia Arag{\~{a}}o and Ismayle de Sousa Santos and Danilo Reis De Vasconcelos and Rossana Maria de Castro Andrade},
 doi = {10.5753/jserd.2020.731},
 journal = {Journal of Software Engineering Research and Development},
 month = {nov},
 publisher = {Sociedade Brasileira de Computacao - {SB}},
 title = {Extraction of test cases procedures from textual use cases: is it worth it?},
 url = {https://doi.org/10.5753%2Fjserd.2020.731},
 volume = {8},
 year = {2020}
}

@article{Santos_Silva_2023,
 abstract = {},
 author = {Luan Carlos Santos Silva and Carla Schwengber Ten Caten and Silvia Gaia and Rodrigo de Oliveira Souza},
 doi = {10.3390/su15086873},
 journal = {Sustainability},
 month = {apr},
 number = {8},
 pages = {6873},
 publisher = {{MDPI} {AG}},
 title = {Tool for Assessment of the Green Technology Transfer Structure in Brazilian Public Universities},
 url = {https://doi.org/10.3390%2Fsu15086873},
 volume = {15},
 year = {2023}
}

@article{Schneider_2013,
 abstract = {Global software engineering (GSE) has received increased attention, as globalization enables and encourages increased distribution of product development. Many empirical studies and systematic literature reviews (SLRs) focus on the identification of challenges, this paper however presents the first SLR collecting and analyzing solutions associated with GSE, while also evaluating the level of empirical validation of said solutions. As a starting point the paper presents a GSE model, designed to categorize solutions into process areas, useful for the analysis of the research community's contributions to state-of-the-art and identifying fundamental gaps in research. In addition, the model categorizing the solutions is populated with references and good-examples, useful for practitioners, which can use the model to find solutions to overall challenges in various process areas. The overall results of the systematic review revealed more than 330 papers containing 127 solutions that were then identified and mapped to the model. The process areas of project management are highly populated, while other areas like product integration have received surprisingly little attention. In addition, selected process area is elaborated upon in terms of contents and deficiencies.},
 author = {Stefan Schneider and Richard Torkar and Tony Gorschek},
 doi = {10.1016/j.ijinfomgt.2012.06.002},
 journal = {International Journal of Information Management},
 month = {feb},
 number = {1},
 pages = {119--132},
 publisher = {Elsevier {BV}},
 title = {Solutions in global software engineering: A systematic literature review},
 url = {https://doi.org/10.1016%2Fj.ijinfomgt.2012.06.002},
 volume = {33},
 year = {2013}
}

@inproceedings{Souza_2017,
 abstract = {},
 author = {Eric Souza and Ana Moreira and Cristiano De Faveri},
 booktitle = {2017 17th International Conference on Computational Science and Its Applications ({ICCSA})},
 doi = {10.1109/iccsa.2017.8000015},
 month = {jul},
 publisher = {{IEEE}},
 title = {An approach to align business and {IT} perspectives during the {SOA} services identification},
 url = {https://doi.org/10.1109%2Ficcsa.2017.8000015},
 year = {2017}
}

@incollection{Staron_2019,
 abstract = {Action research is one of many research methodologies used in contemporary empirical software engineering. Its practical orientation and embedding in the context of a company are its main appeal. However, the embedding can be challenging as it requires active participation from industrial partners. Therefore, we can sometimes change the course of our studies and use a methodology that is closely related—design science research. In this chapter, we explore the basic principles of design science research and make the comparison between these two methodologies.},
 author = {Miroslaw Staron},
 booktitle = {Action Research in Software Engineering},
 doi = {10.1007/978-3-030-32610-4_8},
 month = {nov},
 pages = {141--151},
 publisher = {Springer International Publishing},
 title = {Action Research vs. Design Research},
 url = {https://doi.org/10.1007%2F978-3-030-32610-4_8},
 year = {2019}
}

@book{Staron_2020,
 abstract = {This book addresses action research (AR), one of the main research methodologies used for academia-industry research collaborations. It elaborates on how to find the right research activities and how to distinguish them from non-significant ones. Further, it details how to glean lessons from the research results, no matter whether they are positive or negative. Lastly, it shows how companies can evolve and build talents while expanding their product portfolio.

The book’s structure is based on that of AR projects; it sequentially covers and discusses each phase of the project. Each chapter shares new insights into AR and provides the reader with a better understanding of how to apply it. In addition, each chapter includes a number of practical use cases or examples. Taken together, the chapters cover the entire software lifecycle: from problem diagnosis to project (or action) planning and execution, to documenting and disseminating results, including validity assessments for AR studies.

The goal of this book is to help everyone interested in industry-academia collaborations to conduct joint research. It is for students of software engineering who need to learn about how to set up an evaluation, how to run a project, and how to document the results. It is for all academics who aren’t afraid to step out of their comfort zone and enter industry. It is for industrial researchers who know that they want to do more than just develop software blindly. And finally, it is for stakeholders who want to learn how to manage industrial research projects and how to set up guidelines for their own role and expectations.},
 author = {Miroslaw Staron},
 doi = {10.1007/978-3-030-32610-4},
 publisher = {Springer International Publishing},
 title = {Action Research in Software Engineering},
 url = {https://doi.org/10.1007%2F978-3-030-32610-4},
 year = {2020}
}

@inproceedings{Staron_2021,
 abstract = {},
 author = {Miroslaw Staron and Helena Odenstedt Herges and Silvana Naredi and Linda Block and Ali El-Merhi and Richard Vithal and Mikael Elam},
 booktitle = {2021 {IEEE}/{ACM} 1st Workshop on {AI} Engineering - Software Engineering for {AI} ({WAIN})},
 doi = {10.1109/wain52551.2021.00016},
 month = {may},
 publisher = {{IEEE}},
 title = {Robust Machine Learning in Critical Care {\textemdash} Software Engineering and Medical Perspectives},
 url = {https://doi.org/10.1109%2Fwain52551.2021.00016},
 year = {2021}
}

@article{Stig_2011,
 abstract = {Premature introduction of new technologies in product development is likely to lead to both budget and schedule overruns. The assessment of when a technology is ready to be transferred from technology development to product development and production is critical for striking the right balance of short time-to-market and low risk. Previous research on internal technology transfer has mainly focused on the development of methods and tools for assessing technology readiness for major development programs in governmental agencies, revealing few cases of such implementations in technology driven industrial companies. This paper aims to provide description of experiences from using such tools at a case company and prescription on how to manage the identified challenges. The study is based on 22 semi-structured interviews, primarily with personnel from the technology and product development departments. The results indicate that the readiness assessments suggested in literature can support decisions also in industrial companies. However, adapting the tools to the internal differences between technologies is important for minimizing administrative workload and ensuring implementation readiness as opposed to just technology readiness. The strategy for their adaptation could benefit from more research on the practices of companies dealing with internal technology transfer and from the development of a framework for how to adapt the assessment process to different contexts.},
 author = {Daniel Corin Stig and Ulf Högman and Dag Bergsjö},
 doi = {10.1002/j.2334-5837.2011.tb01249.x},
 journal = {{INCOSE} International Symposium},
 month = {jun},
 number = {1},
 pages = {898--912},
 publisher = {Wiley},
 title = {7.3.2 Assessment of Readiness for Internal Technology Transfer - A Case Study},
 url = {https://doi.org/10.1002%2Fj.2334-5837.2011.tb01249.x},
 volume = {21},
 year = {2011}
}

@inproceedings{Strand_2020,
 abstract = {Code review is a commonly used practice in software development. It refers to the process of reviewing new code changes before they are merged with a codebase. However, to perform the review, developers are mostly assigned manually to code changes. This may lead to problems such as a time-consuming selection process, limited pool of known candidates and risk of over-allocation of a few reviewers. To address the above problems, we developed Carrot, a machine learning-based tool to recommend code reviewers. We conducted an improvement case study at Ericsson. We evaluated Carrot using a mixed approach. we evaluated the prediction accuracy using historical data and the metrical Mean Reciprocal Rank (MRR). Furthermore, we deployed the tool in one Ericsson project and evaluated how adequate the recommendations were from the point of view of the tool users and the recommended reviewers. We also asked the opinion of senior developers about the usefulness of the tool. The results show that Carrot can help identify relevant non-obvious reviewers and be of great assistance to new developers. However, there were mixed opinions on Carrot's ability to assist with workload balancing and the decrease code review lead time.},
 author = {Anton Strand and Markus Gunnarson and Ricardo Britto and Muhmmad Usman},
 booktitle = {Proceedings of the {ACM}/{IEEE} 42nd International Conference on Software Engineering: Software Engineering in Practice},
 doi = {10.1145/3377813.3381365},
 month = {jun},
 publisher = {{ACM}},
 title = {Using a context-aware approach to recommend code reviewers},
 url = {https://doi.org/10.1145%2F3377813.3381365},
 year = {2020}
}

@article{Svahnberg_2012,
 abstract = {Software products are usually developed for either a specific customer (bespoke) or a broader market (market-driven). Due to their characteristic, bespoke and market-driven development face different challenges, especially concerning requirements engineering. Many challenges are caused by an inadequate requirements engineering process, and hence there is a need for process improvement frameworks based on empirical research and industry needs. In a previous article we introduced Uni-REPM, a lightweight requirements engineering process assessment framework based on a review of empirically motivated practices in market-driven and bespoke requirements engineering literature. In this article, we validate this framework in academia as well as industry, in order to prepare Uni-REPM for widespread industry use. We conduct two validations; a static validation based on interviews with seven academic experts and a dynamic validation where Uni-REPM is applied in four industrial organisations. Uni-REPM is refined according to the feedback obtained in the validations. The study shows that Uni-REPM is a quick, simple, and cost-effective solution to assess the maturity level of the requirements engineering process of projects. Moreover, the assessment method using checklists is highly usable and applicable in various international development environments.},
 author = {Mikael Svahnberg and Tony Gorschek and Thi Than Loan Nguyen and Mai Nguyen},
 doi = {10.1007/s00766-012-0148-1},
 journal = {Requirements Engineering},
 month = {mar},
 number = {1},
 pages = {85--103},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Uni-{REPM}: validated and improved},
 url = {https://doi.org/10.1007%2Fs00766-012-0148-1},
 volume = {18},
 year = {2012}
}

@inproceedings{Svensson_2011,
 abstract = {Requirements prioritization is recognized as an important but challenging activity in software product development. For a product to be successful, it is crucial to find the right balance among competing quality requirements. Although literature offers many methods for requirements prioritization, the research on prioritization of quality requirements is limited. This study identifies how quality requirements are prioritized in practice at 11 successful companies developing software intensive systems. We found that ad-hoc prioritization and priority grouping of requirements are the dominant methods for prioritizing quality requirements. The results also show that it is common to use customer input as criteria for prioritization but absence of any criteria was also common. The results suggests that quality requirements by default have a lower priority than functional requirements, and that they only get attention in the prioritizing process if decision-makers are dedicated to invest specific time and resources on QR prioritization. The results of this study may help future research on quality requirements to focus investigations on industry-relevant issues.},
 author = {Richard Berntsson Svensson and Tony Gorschek and Bjorn Regnell and Richard Torkar and Ali Shahrokni and Robert Feldt and Aybuke Aurum},
 booktitle = {2011 {IEEE} 19th International Requirements Engineering Conference},
 doi = {10.1109/re.2011.6051652},
 month = {aug},
 publisher = {{IEEE}},
 title = {Prioritization of quality requirements: State of practice in eleven companies},
 url = {https://doi.org/10.1109%2Fre.2011.6051652},
 year = {2011}
}

@article{Torkar_2011,
 abstract = {Today's software companies face the challenges of highly distributed development projects and constantly changing requirements. This paper proposes the adoption of relevant Free/Libre/Open Source Software (FLOSS) practices in order to improve software development projects in industry. Many FLOSS projects have proven to be very successful, producing high quality products with steady and frequent releases. This study aims to identify FLOSS practices that can be adapted for the corporate environment. To achieve this goal, a framework to compare FLOSS and industrial development methodologies was created. Three successful FLOSS projects were selected as study targets (the Linux Kernel, the FreeBSD operating system, and the JBoss application server), as well as two projects from Ericsson, a large telecommunications company. Based on an analysis of these projects, FLOSS best practices were tailored to fit industrial development environments. The final results consisted of a set of key adoption opportunities that aimed to improve software quality and overall development productivity by importing best practices from the FLOSS environment. The adoption opportunities were then validated at three large corporations.},
 author = {Richard Torkar and   and Pau Minoves and Janina Garrig{\'{o}}s and   and},
 doi = {10.17705/1jais.00252},
 journal = {Journal of the Association for Information Systems},
 month = {jan},
 number = {1},
 pages = {88--122},
 publisher = {Association for Information Systems},
 title = {Adopting Free/Libre/Open Source Software Practices, Techniques and Methods for Industrial Use},
 url = {https://doi.org/10.17705%2F1jais.00252},
 volume = {12},
 year = {2011}
}

@article{TORKAR_2012,
 abstract = {Requirements traceability enables software engineers to trace a requirement from its emergence to its ful¯llment. In this paper we examine requirements traceability de¯nitions, challenges, tools and techniques, by the use of a systematic review performing an exhaustive search through the years 1997À2007. We present a number of common de¯nitions, challenges, available tools and techniques (presenting empirical evidence when found), while complementing the results and analysis with a static validation in industry through a series of interviews.},
 author = {RICHARD TORKAR and TONY GORSCHEK and ROBERT FELDT and MIKAEL SVAHNBERG and UZAIR AKBAR RAJA and KASHIF KAMRAN},
 doi = {10.1142/s021819401250009x},
 journal = {International Journal of Software Engineering and Knowledge Engineering},
 month = {may},
 number = {03},
 pages = {385--433},
 publisher = {World Scientific Pub Co Pte Lt},
 title = {{REQUIREMENTS} {TRACEABILITY}: A {SYSTEMATIC} {REVIEW} {AND} {INDUSTRY} {CASE} {STUDY}},
 url = {https://doi.org/10.1142%2Fs021819401250009x},
 volume = {22},
 year = {2012}
}

@article{Unterkalmsteiner_2013,
 abstract = {Software Process Improvement (SPI) encompasses the analysis and modification of the processes within software development, aimed at improving key areas that contribute to the organizations' goals. The task of evaluating whether the selected improvement path meets these goals is challenging. Based on the results of a systematic literature review on SPI measurement and evaluation practices, we developed a framework (SPI-MEF) that supports the planning and implementation of SPI evaluations. SPI-MEF guides the practitioner in scoping the evaluation, determining measures and performing the assessment. SPI-MEF does not assume a specific approach to process improvement and can be integrated in existing measurement programs, refocusing the assessment on evaluating the improvement initiative's outcome. Sixteen industry and academic experts evaluated the framework's usability and capability to support practitioners, providing additional insights that were integrated in the application guidelines of the framework.},
 author = {Michael Unterkalmsteiner and Tony Gorschek and A. K. M. Moinul Islam and Chow Kian Cheng and Rahadian Bayu Permadi and Robert Feldt},
 doi = {10.1002/smr.1637},
 journal = {Journal of Software: Evolution and Process},
 month = {oct},
 number = {2},
 pages = {251--279},
 publisher = {Wiley},
 title = {A conceptual framework for {SPI} evaluation},
 url = {https://doi.org/10.1002%2Fsmr.1637},
 volume = {26},
 year = {2013}
}

@article{Unterkalmsteiner_2015,
 abstract = {},
 author = {Michael Unterkalmsteiner and Tony Gorschek and Robert Feldt and Niklas Lavesson},
 doi = {10.1007/s10664-015-9410-8},
 journal = {Empirical Software Engineering},
 month = {nov},
 number = {6},
 pages = {2324--2365},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Large-scale information retrieval in software engineering - an experience report from industrial application},
 url = {https://doi.org/10.1007%2Fs10664-015-9410-8},
 volume = {21},
 year = {2015}
}

@article{Unterkalmsteiner_2015,
 abstract = {The development of large, software-intensive systems is a complex undertaking that we generally tackle by a divide and conquer strategy. Companies thereby face the challenge of coordinating individual aspects of software development, in particular between requirements engineering (RE) and software testing (ST). A lack of REST alignment can not only lead to wasted effort but also to defective software. However, before a company can improve the mechanisms of coordination they need to be understood first. With REST-bench we aim at providing an assessment tool that illustrates the coordination in software development projects and identify concrete improvement opportunities. We have developed REST-bench on the sound fundamentals of a taxonomy on REST alignment methods and validated the method in five case studies. Following the principles of technical action research, we collaborated with five companies, applying REST-bench and iteratively improving the method based on the lessons we learned. We applied REST-bench both in Agile and plan-driven environments, in projects lasting from weeks to years, and staffed as large as 1000 employees. The improvement opportunities we identified and the feedback we received indicate that the assessment was effective and efficient. Furthermore, participants confirmed that their understanding on the coordination between RE and ST improved.},
 author = {Michael Unterkalmsteiner and Tony Gorschek and Robert Feldt and Eriks Klotins},
 doi = {10.1016/j.jss.2015.07.018},
 journal = {Journal of Systems and Software},
 month = {nov},
 pages = {62--77},
 publisher = {Elsevier {BV}},
 title = {Assessing requirements engineering and software test alignment{\textemdash}Five case studies},
 url = {https://doi.org/10.1016%2Fj.jss.2015.07.018},
 volume = {109},
 year = {2015}
}

@article{Usman_2018,
 abstract = {Expert judgment based effort estimation techniques are widely used for estimating software effort. In the absence of process support, experts may overlook important factors during estimation, leading to inconsistent estimates. This might cause underestimation, which is a common problem in software projects. This multi-case study aims to improve expert estimation of software development effort. Our goal is two-fold: 1) to propose a process to develop and evolve estimation checklists for agile teams, and 2) to evaluate the usefulness of the checklists in improving expert estimation processes. The use of checklists improved the accuracy of the estimates in two case companies. In particular, the underestimation bias was reduced to a large extent. For the third case, we could not perform a similar analysis, due to the unavailability of historical data. However, when checklist was used in two sprints, the estimates were quite accurate (median Balanced Relative Error (BRE) bias of -0.05). The study participants from the case companies observed several benefits of using the checklists during estimation, such as increased confidence in estimates, improved consistency due to help in recalling relevant factors, more objectivity in the process, improved understanding of the tasks being estimated, and reduced chances of missing tasks.},
 author = {Muhammad Usman and Kai Petersen and Jürgen Börstler and Pedro Santos Neto},
 doi = {10.1016/j.jss.2018.09.054},
 journal = {Journal of Systems and Software},
 month = {dec},
 pages = {286--309},
 publisher = {Elsevier {BV}},
 title = {Developing and using checklists to improve software effort estimation: A multi-case study},
 url = {https://doi.org/10.1016%2Fj.jss.2018.09.054},
 volume = {146},
 year = {2018}
}

@article{Vansovits_2022,
 abstract = {In the present paper, a software framework comprising the implementation of Model Predictive Control—a popular industrial control method—is presented. The framework is versatile and can be run on a variety of target systems including programmable logic controllers and distributed control system implementations. However, the main attractive property of the framework stems from the goal of achieving smooth technology transfer from the academic setting to real industrial applications. Technology transfer is, in general, difficult to achieve, because of the apparent disconnect between academic studies and actual industry. The proposed software framework aims at bridging this gap for model predictive control—a powerful control technique which can result in substantial performance improvement of industrial control loops, thus adhering to modern trends for reducing energy waste and fulfilling sustainable development goals. In the paper, the proposed solution is motivated and described, and experimental evidence of its successful deployment is provided using a real industrial plant.},
 author = {Vitali Vansovits and Eduard Petlenkov and Aleksei Tepljakov and Kristina Vassiljeva and Juri Belikov},
 doi = {10.3390/s22114149},
 journal = {Sensors},
 month = {may},
 number = {11},
 pages = {4149},
 publisher = {{MDPI} {AG}},
 title = {Bridging the Gap in Technology Transfer for Advanced Process Control with Industrial Applications},
 url = {https://doi.org/10.3390%2Fs22114149},
 volume = {22},
 year = {2022}
}

@inproceedings{Vasconcellos_2017,
 abstract = {O alinhamento de melhoria do processo de software (MPS) com objetivos organizacionais envolve decisões em níveis estratégico e tático. Este artigo apresenta um estudo qualitativo sobre a utilidade de um processo formal de tomada de decisão no alinhamento estratégico de MPS. A definição e o refinamento do processo proposto ajudaram a desenvolver proposições teóricas de forma indutiva. Questionários adaptados do Modelo de Aceitação de Tecnologia avaliaram positivamente tanto a facilidade de uso quanto a utilidade percebida da solução proposta. Os resultados indicam que um processo formal de tomada de decisão é útil e necessário para o alinhamento estratégico de MPS.},
 author = {Francisco J. S. Vasconcellos and Ca{\'{\i}}que Minhare and Leonardo Fuchs and Jucele F. A. Vasconcellos and Jos{\'{e}} Adson O. G. Da Cunha and Auri M. R. Vincenzi},
 booktitle = {Anais do {XVI} Simp{\'{o}}sio Brasileiro de Qualidade de Software ({SBQS} 2017)},
 doi = {10.5753/sbqs.2017.15096},
 month = {aug},
 publisher = {Sociedade Brasileira de Computa{\c{c}}{\~{a}}o - {SBC}},
 title = {Alinhamento estrat{\'{e}}gico de melhoria de processos de software: percep{\c{c}}{\~{o}}es de um processo de apoio {\`{a}} decis{\~{a}}o},
 url = {https://doi.org/10.5753%2Fsbqs.2017.15096},
 year = {2017}
}

@article{Vasconcellos_2017,
 abstract = {Context: Software process improvement (SPI) aims to increase the effectiveness of a software organization. Many studies indicate that the strategic alignment is a critical factor for the SPI success. However, little is known about practical approaches to achieving and maintaining such alignment. Objective: The goal of this study is to evaluate the validation evidence of the existing approaches to the strategic alignment of SPI. Method: We develop a search protocol that combines database search and snowballing to perform the systematic literature review and evaluate empirical studies by applying rigor and relevance criteria. To evaluate the efficiency of our protocol, we use a “quasi-gold standard” to compute the sensitivity and precision of the search. Result: We identified 30 studies (18 empirical) and 19 approaches to strategic alignment of SPI from 495 retrieved studies. Only three out of the 18 empirical studies were rated as high in the categories rigor and relevance, suggesting the need for a stronger validation of the approaches. Conclusion: We conclude that the lack of empirical validation indicates that the results of the existing approaches have not been adequately transferred to practitioners yet, calling for more rigorous studies on the subject.},
 author = {Francisco J.S. Vasconcellos and Geraldo B. Landre and Jos{\'{e}} Adson O.G. Cunha and Juliano L. Oliveira and Ronaldo A. Ferreira and Auri M.R. Vincenzi},
 doi = {10.1016/j.jss.2016.09.030},
 journal = {Journal of Systems and Software},
 month = {jan},
 pages = {45--63},
 publisher = {Elsevier {BV}},
 title = {Approaches to strategic alignment of software process improvement: A systematic literature review},
 url = {https://doi.org/10.1016%2Fj.jss.2016.09.030},
 volume = {123},
 year = {2017}
}

@inproceedings{Verdecchia_2017,
 abstract = {},
 author = {Roberto Verdecchia and Giuseppe Procaccianti and Ivano Malavolta and Patricia Lago and Joost Koedijk},
 booktitle = {2017 {ACM}/{IEEE} International Symposium on Empirical Software Engineering and Measurement ({ESEM})},
 doi = {10.1109/esem.2017.39},
 month = {nov},
 publisher = {{IEEE}},
 title = {Estimating Energy Impact of Software Releases and Deployment Strategies: The {KPMG} Case Study},
 url = {https://doi.org/10.1109%2Fesem.2017.39},
 year = {2017}
}

@inproceedings{Vetro_2015,
 abstract = {Background/Context: Gathering empirical knowledge is a time consuming task and the results from empirical studies often are soon outdated by new technological solutions. As a result, the impact of empirical results on software engineering practice is often not guaranteed. Objective/Aim: In this paper, we summarize the ongoing discussion on "Empirical Software Engineering 2.0" as a way to improve the impact of empirical results on indus- trial practices. We propose a way to combine data mining and analysis with domain knowledge to enable fast feedback cycles between researchers and practitioners. Method: We identify the key concepts on gathering fast feedback in empirical software engineering by following an experience-based line of reasoning by argument. Based on the identified key concepts, we design and execute a small proof of concept with a company, to demonstrate potential benefits of the approach. Results: In our example we observed that a simple double feedback mechanism notably increased the precision of the data analysis and improved the quality of the knowledge gathered. Conclusion: Our results serve as a basis to foster discus- sion and collaboration within the research community for a development of the idea},
 author = {Antonio Vetro and Saahil Ognawala and Daniel Mendez Fernandez and Stefan Wagner},
 booktitle = {2015 {IEEE}/{ACM} 37th {IEEE} International Conference on Software Engineering},
 doi = {10.1109/icse.2015.198},
 month = {may},
 publisher = {{IEEE}},
 title = {Fast Feedback Cycles in Empirical Software Engineering Research},
 url = {https://doi.org/10.1109%2Ficse.2015.198},
 year = {2015}
}

@article{Vilela_2020,
 abstract = {Context: Software is an important part in safety- critical system (SCS) development since it is becoming a major source of hazards. Requirements-related hazards have been as- sociated with many accidents and safety incidents. Requirements issues tend to be mitigated in companies with high processes maturity levels since they do their business in a systematic, consistent and proactive approach. However, requirements en- gineers need systematic guidance to consider safety concerns early in the development process. Goal: the paper investigates which safety practices are suitable to be used in the Requirements Engineering (RE) process for SCS and how to design a safety maturity model for this area. Method: we followed the design science methodology to propose Uni-REPM SCS, a safety module for Unified Requirements Engineering Process Maturity Model (Uni-REPM). We also conducted a static validation with two practitioners and nine academic experts to evaluate its coverage, correctness, usefulness and applicability. Results: The module has seven main processes, fourteen sub-processes and 148 practices that form the basis of safety processes maturity. Moreover, we describe its usage through a tool. Conclusions: The validation indicates a good coverage of practices and well receptivity by the experts. Finally, the module can help companies in evaluating their current practices. IEEE},
 author = {Jessyka Vilela and Jaelson Castro and Luiz Eduardo G. Martins and Tony Gorschek},
 doi = {10.1109/tse.2018.2846576},
 journal = {{IEEE} Transactions on Software Engineering},
 month = {mar},
 number = {3},
 pages = {222--250},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Safety Practices in Requirements Engineering: The Uni-{REPM} Safety Module},
 url = {https://doi.org/10.1109%2Ftse.2018.2846576},
 volume = {46},
 year = {2020}
}

@incollection{Visaggio_2009,
 abstract = {As it is well-known, knowledge exploitation is becoming the focus of the economy for the competitiveness of both organizations
and countries. In this chapter some models that enable enterprises towards the knowledge society are presented. An Experience
Factory is suggested as support to such behavioral models. It collects empirical experiences as Experience-Knowledge Packages.
The most relevant innovation of the chapter is represented by the contents and structure of the packages which are different
from ones in the literature. The changes made to the structure aim to convince potential addressees to use the contents of
the packages and favor their adoption independently from the author(s) of the package. Consequently, the proposed structure
allows to produce packages incrementally and cooperatively. The proposed changes derive from the lessons learnt in previous
experiences of technology transfer. The chapter presents the PROMETHEUS platform which implements all the requirements for
collecting and distributing Knowledge-Experience Packages.},
 author = {Giuseppe Visaggio},
 booktitle = {Software Engineering},
 doi = {10.1007/978-3-540-95888-8_9},
 pages = {223--256},
 publisher = {Springer Berlin Heidelberg},
 title = {Knowledge Base and Experience Factory for Empowering Competitiveness},
 url = {https://doi.org/10.1007%2F978-3-540-95888-8_9},
 year = {2009}
}

@inproceedings{Vollmer_2019,
 abstract = {},
 author = {Anna Maria Vollmer and Silverio Martinez-Fernandez and Alessandra Bagnato and Jari Partanen and Lidia Lopez and Pilar Rodriguez},
 booktitle = {2019 {ACM}/{IEEE} International Symposium on Empirical Software Engineering and Measurement ({ESEM})},
 doi = {10.1109/esem.2019.8870162},
 month = {sep},
 publisher = {{IEEE}},
 title = {Practical experiences and value of applying software analytics to manage quality},
 url = {https://doi.org/10.1109%2Fesem.2019.8870162},
 year = {2019}
}

@phdthesis{Vriezekolk,
 abstract = {},
 author = {Eelco Vriezekolk},
 doi = {10.3990/1.9789036541411},
 publisher = {University Library/University of Twente},
 title = {Assessing telecommunication service availability risks for organisations},
 url = {https://doi.org/10.3990%2F1.9789036541411}
}

@incollection{Vriezekolk_2015,
 abstract = {[Context and motivation] It is desirable that requirement engineering methods are reliable, that is, that methods can be repeated with the same results. Risk assessments methods, however, often have low reliability when they identify risk mitigations for a system based on expert judgement. [Question/problem] Our goal is to assess the reliability of an availability risk assessment method for telecominfrastructures, and to identify possibilities for improvement of its reliability. [Principal ideas/results] We propose an experimental validation of reliability, and report on its application. We give a detailed analysis of sources of variation, explain how we controlled them and validated their mitigations, and motivate the statistical procedure used to analyse the outcome. [Contribution] Our results can be used to improve the reliability of risk assessment methods. Our approach to validating reliability can be useful for the assessment of the reliability of other methods.},
 author = {Eelco Vriezekolk and Sandro Etalle and Roel Wieringa},
 booktitle = {Requirements Engineering: Foundation for Software Quality},
 doi = {10.1007/978-3-319-16101-3_1},
 pages = {1--16},
 publisher = {Springer International Publishing},
 title = {Experimental Validation of a Risk Assessment Method},
 url = {https://doi.org/10.1007%2F978-3-319-16101-3_1},
 year = {2015}
}

@article{Wang_2018,
 abstract = {Requirements traceability (RT) is a core activity in Requirements Engineering. Various types of RT technologies have been extensively studied for decades. In this paper, we present a systematic literature review from 114 papers between 2006 and 2016 on RT techniques. We summarized 10 major challenges in current RT activities, and categorized existing RT techniques into 6 groups and 25 sub-groups. Moreover, we built mapping relations between these challenges and techniques, and identified 7 potential future research directions. Based on 83 empirical studies, the evaluations for technology transfer are conducted. The main conclusions are: (1) The “trustworthy” and “automated” challenges are the most widely investigated ones, while “scalable” “coordinated” “dynamic” and “lightweight” challenges receive much less attention; (2) “Trace link generation” especially information retrieval-based (IR-based) methods, are the most studied techniques; (3) IR-based methods have the most potential to be adopted by industry, as they have been validated from multiple viewpoints; (4) Seven promising future research directions are identified, which include developing scalable, dynamic and lightweight tracing techniques, introducing new approaches in other disciplines to meet the RT challenges, improving the express ability of trace links, promoting the industry adoption of RT technologies and developing new techniques to support developers’ coordination.},
 author = {Bangchao Wang and Rong Peng and Yuanbang Li and Han Lai and Zhuo Wang},
 doi = {10.1016/j.jss.2018.09.001},
 journal = {Journal of Systems and Software},
 month = {dec},
 pages = {59--79},
 publisher = {Elsevier {BV}},
 title = {Requirements traceability technologies and technology transfer decision support: A systematic review},
 url = {https://doi.org/10.1016%2Fj.jss.2018.09.001},
 volume = {146},
 year = {2018}
}

@incollection{Wieringa_2014,
 abstract = {The road map of this book was shown in outline in the Preface, and is here shown with more detail in Fig. 16.1 (Research Goals and Research Questions). As stated in the Introduction, design science research iterates over solving design problems and answering knowledge questions. Design problems that need novel treatments are dealt with rationally by the design cycle, which has been treated in Part II. Knowledge questions that require empirical research to answer, are dealt with rationally by the empirical cycle, which has been treated in Part IV. Design and empirical research both require theoretical knowledge in the form of conceptual frameworks and theoretical generalizations, which enhance our capability to describe, explain, and predict phenomena, and to design artifacts that produce these phenomena. Theoretical frameworks have been treated in Part III.},
 author = {Roel J. Wieringa},
 booktitle = {Design Science Methodology for Information Systems and Software Engineering},
 doi = {10.1007/978-3-662-43839-8_16},
 pages = {215--223},
 publisher = {Springer Berlin Heidelberg},
 title = {A Road Map of Research Methods},
 url = {https://doi.org/10.1007%2F978-3-662-43839-8_16},
 year = {2014}
}

@incollection{Wieringa_2014,
 abstract = {A design science project iterates over the activities of designing and investigating. The design task itself is decomposed into three tasks, namely, problem investigation, treatment design, and treatment validation. We call this set of three tasks the design cycle, because researchers iterate over these tasks many times in a design science research project.},
 author = {Roel J. Wieringa},
 booktitle = {Design Science Methodology for Information Systems and Software Engineering},
 doi = {10.1007/978-3-662-43839-8_3},
 pages = {27--34},
 publisher = {Springer Berlin Heidelberg},
 title = {The Design Cycle},
 url = {https://doi.org/10.1007%2F978-3-662-43839-8_3},
 year = {2014}
}

@book{Wohlin_2012,
 abstract = {},
 author = {Claes Wohlin and Per Runeson and Martin Höst and Magnus C. Ohlsson and Björn Regnell and Anders Wessl{\'{e}}n},
 doi = {10.1007/978-3-642-29044-2},
 publisher = {Springer Berlin Heidelberg},
 title = {Experimentation in Software Engineering},
 url = {https://doi.org/10.1007%2F978-3-642-29044-2},
 year = {2012}
}

@article{Wohlin_2012,
 abstract = {Collaboration between industry and academia supports improvement and innovation in industry and helps to ensure industrial relevance in academic research. This article presents an exploratory study of factors for successful collaboration between industry and academia. A survey designed for data collection was first conducted in Sweden and then replicated in Australia. The context for the two studies is different, thus forming a starting point for potential generalizations in the future: the industrial side of collaboration is the key element for successful collaboration, with key factors being buy-in and support from company management and collaboration champion on site. These findings may help industry and academia to set up successful collaborative ventures in the future},
 author = {Claes Wohlin and Aybuke Aurum and Lefteris Angelis and Laura Phillips and Yvonne Dittrich and Tony Gorschek and Hakan Grahn and Kennet Henningsson and Simon Kagstrom and Graham Low and Per Rovegard and Piotr Tomaszewski and Christine van Toorn and Jeff Winter},
 doi = {10.1109/ms.2011.92},
 journal = {{IEEE} Software},
 month = {mar},
 number = {2},
 pages = {67--73},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {The Success Factors Powering Industry-Academia Collaboration},
 url = {https://doi.org/10.1109%2Fms.2011.92},
 volume = {29},
 year = {2012}
}

@incollection{Wohlin_2012,
 abstract = {The experiment data from the operation is input to the analysis and interpretation. After collecting experimental data in the operation phase, we want to be able to draw conclusions based on this data. To be able to draw valid conclusions, we must interpret the experiment data.},
 author = {Claes Wohlin and Per Runeson and Martin Höst and Magnus C. Ohlsson and Björn Regnell and Anders Wessl{\'{e}}n},
 booktitle = {Experimentation in Software Engineering},
 doi = {10.1007/978-3-642-29044-2_10},
 pages = {123--151},
 publisher = {Springer Berlin Heidelberg},
 title = {Analysis and Interpretation},
 url = {https://doi.org/10.1007%2F978-3-642-29044-2_10},
 year = {2012}
}

@incollection{Wohlin_2012,
 abstract = {},
 author = {Claes Wohlin and Per Runeson and Martin Höst and Magnus C. Ohlsson and Björn Regnell and Anders Wessl{\'{e}}n},
 booktitle = {Experimentation in Software Engineering},
 doi = {10.1007/978-3-642-29044-2_11},
 pages = {153--157},
 publisher = {Springer Berlin Heidelberg},
 title = {Presentation and Package},
 url = {https://doi.org/10.1007%2F978-3-642-29044-2_11},
 year = {2012}
}

@incollection{Wohlin_2012,
 abstract = {Systematic literature reviews are conducted to “identify, analyse and interpret all available evidence related to a specific research question” [96]. As it aims to give a complete, comprehensive and valid picture of the existing evidence, both the identification, analysis and interpretation must be conducted in a scientifically and rigorous way. In order to achieve this goal, Kitchenham and Charters have adapted guidelines for systematic literature reviews, primarily from medicine, evaluated them [24] and updated them accordingly [96]. These guidelines, structured according to a three-step process for planning, conducting and reporting the review, are summarized below.},
 author = {Claes Wohlin and Per Runeson and Martin Höst and Magnus C. Ohlsson and Björn Regnell and Anders Wessl{\'{e}}n},
 booktitle = {Experimentation in Software Engineering},
 doi = {10.1007/978-3-642-29044-2_4},
 pages = {45--54},
 publisher = {Springer Berlin Heidelberg},
 title = {Systematic Literature Reviews},
 url = {https://doi.org/10.1007%2F978-3-642-29044-2_4},
 year = {2012}
}

@incollection{Wohlin_2012,
 abstract = {The primary objective of the presentation of this experiment is to illustrate experimentation and the steps in the experiment process introduced in the previous chapters. The presentation of the experiment in this chapter is focused on the experiment process rather than following the proposed report structure in Chap. 11.},
 author = {Claes Wohlin and Per Runeson and Martin Höst and Magnus C. Ohlsson and Björn Regnell and Anders Wessl{\'{e}}n},
 booktitle = {Experimentation in Software Engineering},
 doi = {10.1007/978-3-642-29044-2_12},
 pages = {161--174},
 publisher = {Springer Berlin Heidelberg},
 title = {Experiment Process Illustration},
 url = {https://doi.org/10.1007%2F978-3-642-29044-2_12},
 year = {2012}
}

@inproceedings{Wohlin_2013,
 abstract = {Software engineering research can be done in many ways, in particular it can be done in different ways when it comes to working with industry. This paper presents a list of top 10 challenges to work with industry based on our experience from working with industry in a very close collaboration with continuous exchange of knowledge and information. The top 10 list is based on a large number of research projects and empirical studies conducted with industrial research partners since 1983. It is concluded that close collaboration is a long-term undertaking and a large investment. The importance of addressing the top 10 challenges is stressed, since they form the basis for a long-term sustainable and successful collaboration between industry and academia.},
 author = {Claes Wohlin},
 booktitle = {2013 1st International Workshop on Conducting Empirical Studies in Industry ({CESI})},
 doi = {10.1109/cesi.2013.6618469},
 month = {may},
 publisher = {{IEEE}},
 title = {Empirical software engineering research with industry: Top 10 challenges},
 url = {https://doi.org/10.1109%2Fcesi.2013.6618469},
 year = {2013}
}

@article{Wohlin_2021,
 abstract = {},
 author = {Claes Wohlin and Per Runeson},
 doi = {10.1016/j.infsof.2021.106678},
 journal = {Information and Software Technology},
 month = {dec},
 pages = {106678},
 publisher = {Elsevier {BV}},
 title = {Guiding the selection of research methodology in industry{\textendash}academia collaboration in software engineering},
 url = {https://doi.org/10.1016%2Fj.infsof.2021.106678},
 volume = {140},
 year = {2021}
}

@article{Wohlin_2022,
 abstract = {},
 author = {Claes Wohlin and Marcos Kalinowski and Katia Romero Felizardo and Emilia Mendes},
 doi = {10.1016/j.infsof.2022.106908},
 journal = {Information and Software Technology},
 month = {jul},
 pages = {106908},
 publisher = {Elsevier {BV}},
 title = {Successful combination of database search and snowballing for identification of primary studies in systematic literature studies},
 url = {https://doi.org/10.1016%2Fj.infsof.2022.106908},
 volume = {147},
 year = {2022}
}

@inproceedings{Wohlrab_2017,
 abstract = {},
 author = {Rebekka Wohlrab},
 booktitle = {2017 {IEEE}/{ACM} 39th International Conference on Software Engineering Companion ({ICSE}-C)},
 doi = {10.1109/icse-c.2017.31},
 month = {may},
 publisher = {{IEEE}},
 title = {Continuous Management of Design- and Run-Time Artifacts for Self-Adaptive Systems},
 url = {https://doi.org/10.1109%2Ficse-c.2017.31},
 year = {2017}
}

@inproceedings{Xiao_2014,
 abstract = {Security tools can help developers build more secure software systems by helping developers detect or fix security vulnerabilities in source code. However, developers do not always use these tools. In this paper, we investigate a number of social factors that impact developers' adoption decisions, based on a multidisciplinary field of research called diffusion of innovations. We conducted 42 one-on-one interviews with professional software developers, and our results suggest a number of ways in which security tool adoption depends on developers' social environments and on the channels through which information about tools is communicated. For example, some participants trusted developers with strong reputations on the Internet as much as they trust their colleagues for information about security tools.},
 author = {Shundan Xiao and Jim Witschey and Emerson Murphy-Hill},
 booktitle = {Proceedings of the 17th {ACM} conference on Computer supported cooperative work {\&}amp$\mathsemicolon$ social computing},
 doi = {10.1145/2531602.2531722},
 month = {feb},
 publisher = {{ACM}},
 title = {Social influences on secure development tool adoption},
 url = {https://doi.org/10.1145%2F2531602.2531722},
 year = {2014}
}

@inproceedings{Yin_2020,
 abstract = {},
 author = {Likang Yin and Vladimir Filkov},
 booktitle = {Proceedings of the 35th {IEEE}/{ACM} International Conference on Automated Software Engineering},
 doi = {10.1145/3324884.3416640},
 month = {dec},
 publisher = {{ACM}},
 title = {Team discussions and dynamics during {DevOps} tool adoptions in {OSS} projects},
 url = {https://doi.org/10.1145%2F3324884.3416640},
 year = {2020}
}

@inproceedings{Yskout_2020,
 abstract = {},
 author = {Koen Yskout and Thomas Heyman and Dimitri Van Landuyt and Laurens Sion and Kim Wuyts and Wouter Joosen},
 booktitle = {Proceedings of the {ACM}/{IEEE} 42nd International Conference on Software Engineering: New Ideas and Emerging Results},
 doi = {10.1145/3377816.3381741},
 month = {jun},
 publisher = {{ACM}},
 title = {Threat modeling},
 url = {https://doi.org/10.1145%2F3377816.3381741},
 year = {2020}
}

@inproceedings{Zahedi_2018,
 abstract = {Context: Governments are providing more and more support for academia-industry collaborations for industry led research and innovation via Cooperative Research Centers (CRC). It is important to understand the processes and practices of such programs for transferring scientific R&D to innovation. Goal: We aimed at empirically investigating the processes and practices implemented in the context of one of the Australian CRCs, aimed at transferring big data research to innovative software solutions for national security. Method: We applied case study method and collected and analyzed data from 17 interviews and observations of the participants of the studied CRC program. Findings: We present the innovation process implemented in the studied CRC. We particularly highlight the practices used to involve end-users in the innovation process. We further elaborate on the challenges of running this collaborative model for software technology innovation.},
 author = {Mansooreh Zahedi and Muhammad Ali Babar and Brenton Cooper},
 booktitle = {Proceedings of the 12th {ACM}/{IEEE} International Symposium on Empirical Software Engineering and Measurement},
 doi = {10.1145/3239235.3239241},
 month = {oct},
 publisher = {{ACM}},
 title = {An empirical investigation of transferring research to software technology innovation},
 url = {https://doi.org/10.1145%2F3239235.3239241},
 year = {2018}
}

@article{Zhang_2013,
 abstract = {With software analytics, software practitioners explore and analyze data to obtain insightful, actionable information for tasks regarding software development, systems, and users. The StackMine project produced a software analytics system for Microsoft product teams. The project provided lessons on applying software analytics technologies to positively impact software development practice. The lessons include focusing on problems that practitioners care about, using domain knowledge for correct data understanding and problem modeling, building prototypes early to get practitioners' feedback, taking into account scalability and customizability, and evaluating analysis results using criteria related to real tasks.},
 author = {Dongmei Zhang and Shi Han and Yingnong Dang and Jian-Guang Lou and Haidong Zhang and Tao Xie},
 doi = {10.1109/ms.2013.94},
 journal = {{IEEE} Software},
 month = {sep},
 number = {5},
 pages = {30--37},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Software Analytics in Practice},
 url = {https://doi.org/10.1109%2Fms.2013.94},
 volume = {30},
 year = {2013}
}

@article{Zhang_2019,
 abstract = {Running and analyzing a large number of tests in an industrial scenario is labor intensive and time consuming. Hence, it is necessary to select a smaller number of tests for cost reduction as well as fault detection. For a type of nonnumeric systems, the linear-order algorithm for adaptive random testing (ART) (LART) technique is proposed by making tests evenly spread in nonnumeric input domains. To further enhance LART in the industrial scenarios where the number of input categories is too large, a new technique called category selection-based ART (CSBART), in which partial categories are selected to calculate tests’ distances to guide LART, is proposed in this article. The fault-coverage effectiveness of CSBART is evaluated via an empirical study on two large scale billing systems with tens of millions of test cases, and the results demonstrate the promising performance of the proposed CSBART. We also find that, after category selection, CSBART can outperform a more complex and widespread n-per cluster sampling technique that uses K-means clustering to certain extents.},
 author = {Zhiyi Zhang and Yabin Wang and Ziyuan Wang and Ju Qian},
 doi = {10.1109/tr.2019.2927643},
 journal = {{IEEE} Transactions on Reliability},
 month = {dec},
 number = {4},
 pages = {1429--1443},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {How to Effectively Reduce Tens of Millions of Tests: An Industrial Case Study on Adaptive Random Testing},
 url = {https://doi.org/10.1109%2Ftr.2019.2927643},
 volume = {68},
 year = {2019}
}

@article{2003,
 abstract = {},
 doi = {10.1080/07421222.2003.11045751},
 journal = {Journal of Management Information Systems},
 month = {jul},
 number = {1},
 pages = {123--151},
 publisher = {Informa {UK} Limited},
 title = {Investigating Determinants of Software Developers{\textquotesingle} Intentions to Follow Methodologies},
 url = {https://doi.org/10.1080%2F07421222.2003.11045751},
 volume = {20},
 year = {2003}
}

@article{2003,
 abstract = {},
 doi = {10.1080/07421222.2003.11045751},
 journal = {Journal of Management Information Systems},
 month = {jul},
 number = {1},
 pages = {123--151},
 publisher = {Informa {UK} Limited},
 title = {Investigating Determinants of Software Developers{\textquotesingle} Intentions to Follow Methodologies},
 url = {https://doi.org/10.1080%2F07421222.2003.11045751},
 volume = {20},
 year = {2003}
}

@book{2008,
 abstract = {},
 doi = {10.1007/978-1-84800-044-5},
 editor = {Forrest Shull and Janice Singer and Dag I. K. Sj{\o}berg},
 publisher = {Springer London},
 title = {Guide to Advanced Empirical Software Engineering},
 url = {https://doi.org/10.1007%2F978-1-84800-044-5},
 year = {2008}
}

@incollection{2013,
 abstract = {},
 booktitle = {{IEEE} Computer Society Real World Software Engineering Problems},
 doi = {10.1002/9780470047408.ch9},
 month = {feb},
 pages = {247--273},
 publisher = {John Wiley {\&} Sons, Inc.},
 title = {Software Engineering Process},
 url = {https://doi.org/10.1002%2F9780470047408.ch9},
 year = {2013}
}

@article{_LENTZ_1995,
 abstract = {},
 author = {-Dominique -LENTZ},
 doi = {10.3845/ree.1995.011},
 journal = {Revue de l{\textquotesingle}Electricit{\'{e}} et de l{\textquotesingle}Electronique},
 number = {01},
 pages = {63},
 publisher = {{SEE}},
 title = {Un Atelier de G{\'{e}}nie Logiciel pour d{\'{e}}centraliser et r{\'{e}}utiliser des applications},
 url = {https://doi.org/10.3845%2Free.1995.011},
 volume = {-},
 year = {1995}
}

@inproceedings{Aschauer_2010,
 abstract = {Domain specific languages play an important role in model-driven engineering of software-intensive industrial systems. A rich body of knowledge exists on the development of languages, modeling environments, and transformation systems. The understanding of architectural choices for combining these parts into a feasible solution, however, is not particularly deep. We report on an endeavor in the realm of a technology transfer process from academia to industry, where we encountered unexpected influences of the architecture on the modeling language. By examining the evolution of our language and its programming interface, we show that these influences mainly stemmed from practical considerations; for identifying these early on, tight interaction between our research lab and the industrial partner was key. In addition, we share insights into the practice of cooperating with industry by presenting essential lessons we learned.},
 author = {Thomas Aschauer and Gerd Dauenhauer and Wolfgang Pree},
 booktitle = {Proceedings of the 32nd {ACM}/{IEEE} International Conference on Software Engineering - Volume 2},
 doi = {10.1145/1810295.1810304},
 month = {may},
 publisher = {{ACM}},
 title = {A modeling language{\textquotesingle}s evolution driven by tight interaction between academia and industry},
 url = {https://doi.org/10.1145%2F1810295.1810304},
 year = {2010}
}

@inproceedings{Baldassarre_2013,
 abstract = {},
 author = {Maria Teresa Baldassarre and Danilo Caivano and Giuseppe Visaggio},
 booktitle = {Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering},
 doi = {10.1145/2460999.2461020},
 month = {apr},
 publisher = {{ACM}},
 title = {Empirical studies for innovation dissemination},
 url = {https://doi.org/10.1145%2F2460999.2461020},
 year = {2013}
}

@inproceedings{Balzer,
 abstract = {The ACSE series of events aims to advance the adoption of software engineering tools and techniques by bringing together researchers and practitioners who investigate novel approaches to fostering the transition between limited-use research prototypes and broadly applicable practical solutions. One proven technique to aid adoption is to leverage existing commercial platforms and infrastructure. The key objective of ACSE 2004 is to explore innovative approaches to the adoption of proof-of-concept systems by embedding them in extensions of Commercial Off-The-Shelf (COTS) products and/or using middleware technologies to integrate the prototypes into existing toolsets.},
 author = {B. Balzer and M. Litoiu and H. Muller and D. Smith and M. Storey and S. Tilley and K. Wong},
 booktitle = {Proceedings. 26th International Conference on Software Engineering},
 doi = {10.1109/icse.2004.1317517},
 publisher = {{IEEE} Comput. Soc},
 title = {4th international workshop on adoption-centric software engineering},
 url = {https://doi.org/10.1109%2Ficse.2004.1317517}
}

@inproceedings{Barreiros_2017,
 abstract = {In Software Engineering, technology transfer has been faced as a peer to peer problem, concerning only the adoption and innovation agents. This approach works well when one is just seeking the adoption of a technology by a specific client, but it can not solve a common problem that is the adoption of new technologies by a large mass of potential new users. In wider context, it no longer makes sense to focus on peer to peer transfer. A new way of looking at the problem is necessary. The diffusion of innovations is more natural when it is treated as a spread of information in a community, similar to that observed in epidemics. This work proposes a paradigm shift to show that the adoption of programming languages can be formally treated as an epidemic. This shift of focus allows the dynamics of adoption of programming languages to be mathematically modeled as such, defining models that explain the communities' behavior when adopting programming languages, and allows some forecast to be made.},
 author = {Emanoel Barreiros and Jones Albuquerque and Jo{\~{a}}o F. L. de Oliveira and Helaine Lins and Sergio Soares},
 booktitle = {Proceedings of the {XXXI} Brazilian Symposium on Software Engineering},
 doi = {10.1145/3131151.3131188},
 month = {sep},
 publisher = {{ACM}},
 title = {Programming Language Adoption as an Epidemiological Phenomenon},
 url = {https://doi.org/10.1145%2F3131151.3131188},
 year = {2017}
}

@article{Berntsson_Svensson_2011,
 abstract = {Quality requirements play a critical role in driving architectural design and are an important issue in software development.
Therefore, quality requirements need to be considered, specified, and quantified early during system analysis and not later
in the development phase in an ad-hoc fashion. This paper presents the quality performance model that estimates quality targets
in relation to market expectations as a basis for the architecting of quality requirements. The purpose of the model is to
provide concepts for qualitative reasoning of quality levels in the decision-making of setting actual targets of quality requirements
for coming releases of the product. The quality performance model is evaluated at one case company, using a market-driven
development approach, in the electronic payment-processing domain. The results show that the model is useful for supporting
early decision-making in, e.g., release planning of quality requirements.},
 author = {Richard Berntsson Svensson and Yuri Sprockel and Björn Regnell and Sjaak Brinkkemper},
 doi = {10.1007/s00766-011-0125-0},
 journal = {Requirements Engineering},
 month = {jun},
 number = {4},
 pages = {283--298},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Setting quality targets for coming releases with {QUPER}: an industrial case study},
 url = {https://doi.org/10.1007%2Fs00766-011-0125-0},
 volume = {17},
 year = {2011}
}

@inproceedings{Berntsson_Svensson_2011,
 abstract = {Release planning plays an important role for the success of a software product vendor that develops software- intensive incremental products. It is important that the software product is released to the market at the right time, and offers higher quality than the competitors. However, an especially challenging problem for a software product vendor is to set the right quality target in relation to future market demands and competitor products. In this paper, we present a prototype for QUPER, a special-purpose tool for supporting release planning of quality requirements. The applicability of the QUPER prototype tool is demonstrated through academic and industrial evaluations. The study showed that the tool provides a clear overview of the current market situation by the generated roadmaps, and to reach an alignment between practitioners, e.g., product managers and developers, of what level of quality is actually needed. Keywords-QUPER; quality requirements; release planning; empirical.},
 author = {Richard Berntsson Svensson and Pontus Lindberg Parker and Bjorn Regnell},
 booktitle = {2011 Fifth International Workshop on Software Product Management ({IWSPM})},
 doi = {10.1109/iwspm.2011.6046204},
 month = {aug},
 publisher = {{IEEE}},
 title = {A prototype tool for {QUPER} to support release planning of quality requirements},
 url = {https://doi.org/10.1109%2Fiwspm.2011.6046204},
 year = {2011}
}

@inproceedings{Bhawnani_2006,
 abstract = {In this paper, we describe a technology transfer case study with Siemens Corporate Technology, Systems and Engineering in Munich, Germany in which intelligent decision support was provided for road mapping of the services provided by this unit. The challenge was to provide roadmaps for optimal success in order to achieve maximum market competitiveness and customer satisfaction while simultaneously balancing the resources, business rules, risks, constraints and priorities of different stakeholders and customers around the world. The paper thus describes how ReleasePlanner, a cutting edge technology based on hybrid intelligence developed by the Laboratory for Software Engineering Decision Support at the University of Calgary was used to provide decision support. The technology transfer process and its impact at Siemens are reported.},
 author = {Pankaj Bhawnani and Guenther Ruhe and Franz Kudorfer and Ludger Meyer},
 booktitle = {Proceedings of the 2006 international workshop on Software technology transfer in software engineering},
 doi = {10.1145/1138046.1138057},
 month = {may},
 publisher = {{ACM}},
 title = {Intelligent decision support for road mapping a technology transfer case study with seimens corporate technology},
 url = {https://doi.org/10.1145%2F1138046.1138057},
 year = {2006}
}

@inproceedings{Bhawnani_2006,
 abstract = {In this paper, we describe a technology transfer case study with Siemens Corporate Technology, Systems and Engineering in Munich, Germany in which intelligent decision support was provided for road mapping of the services provided by this unit. The challenge was to provide roadmaps for optimal success in order to achieve maximum market competitiveness and customer satisfaction while simultaneously balancing the resources, business rules, risks, constraints and priorities of different stakeholders and customers around the world. The paper thus describes how ReleasePlanner, a cutting edge technology based on hybrid intelligence developed by the Laboratory for Software Engineering Decision Support at the University of Calgary was used to provide decision support. The technology transfer process and its impact at Siemens are reported.},
 author = {Pankaj Bhawnani and Guenther Ruhe and Franz Kudorfer and Ludger Meyer},
 booktitle = {Proceedings of the 2006 international workshop on Software technology transfer in software engineering},
 doi = {10.1145/1138046.1138057},
 month = {may},
 publisher = {{ACM}},
 title = {Intelligent decision support for road mapping a technology transfer case study with seimens corporate technology},
 url = {https://doi.org/10.1145%2F1138046.1138057},
 year = {2006}
}

@inproceedings{Biesialska_2018,
 abstract = {Conducting empirical research in software engineering industry is a process, and as such, it should be generalizable. The aim of this paper is to discuss how academic researchers may address some of the challenges they encounter during conducting empirical research in the software industry by means of a systematic and structured approach. The protocol developed in this paper should serve as a practical guide for researchers and help them with conducting empirical research in this complex environment.},
 author = {Katarzyna Biesialska and Xavier Franch and Victor Munt{\'{e}}s-Mulero},
 booktitle = {Proceedings of the 6th International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1145/3193965.3193970},
 month = {may},
 publisher = {{ACM}},
 title = {Protocol and tools for conducting agile software engineering research in an industrial-academic setting},
 url = {https://doi.org/10.1145%2F3193965.3193970},
 year = {2018}
}

@inproceedings{Briand,
 abstract = {},
 author = {L.C. Briand and Y. Labiche and H.-D. Yan and M. Di Penta},
 booktitle = {20th {IEEE} International Conference on Software Maintenance, 2004. Proceedings.},
 doi = {10.1109/icsm.2004.1357823},
 publisher = {{IEEE}},
 title = {A controlled experiment on the impact of the object constraint language in {UML}-based maintenance},
 url = {https://doi.org/10.1109%2Ficsm.2004.1357823}
}

@article{Briand_2005,
 abstract = {The object constraint language (OCL) was introduced as part of the Unified Modeling Language (UML). Its main purpose is to make UML models more precise and unambiguous by providing a constraint language describing constraints that the UML diagrams alone do not convey, including class invariants, operation contracts, and statechart guard conditions. There is an ongoing debate regarding the usefulness of using OCL in UML-based development, questioning whether the additional effort and formality is worth the benefit. It is argued that natural language may be sufficient, and using OCL may not bring any tangible benefits. This debate is in fact similar to the discussion about the effectiveness of formal methods in software engineering, but in a much more specific context. This paper presents the results of two controlled experiments that investigate the impact of using OCL on three software engineering activities using UML analysis models: detection of model defects through inspections, comprehension of the system logic and functionality, and impact analysis of changes. The results show that, once past an initial learning curve, significant benefits can be obtained by using OCL in combination with UML analysis diagrams to form a precise UML analysis model. But, this result is however conditioned on providing substantial, thorough training to the experiment participants.},
 author = {L.C. Briand and Y. Labiche and M. Di Penta and H. Yan-Bondoc},
 doi = {10.1109/tse.2005.105},
 journal = {{IEEE} Transactions on Software Engineering},
 month = {oct},
 number = {10},
 pages = {833--849},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {An experimental investigation of formality in {UML}-based development},
 url = {https://doi.org/10.1109%2Ftse.2005.105},
 volume = {31},
 year = {2005}
}

@article{Brings_2018,
 abstract = {Introduction
Technology transfer aims at supporting the transfer of results from software engineering research from academia to industrial application.

Objective
This paper reports on the current state of technology transfer in software engineering.

Method
We conducted a systematic literature review, in which we investigated 3070 papers. We identified in total 70 relevant papers, which were subject of a detailed analysis.

Results
Many different approaches are proposed to foster technology transfer in software engineering. The majority of these approaches suggest direct collaboration between industry and academia or teaching new technologies in industrial training or university education. In addition, a considerable number of experience reports on technology transfer exist. Hence, a multitude of best practices, success stories, and lessons learned is reported. Among others, empirical evidence, maturity, and adaptability of the technology seem important preconditions for successful transfer, while social and organizational factors seem important barriers to successful technology transfer.

Conclusion
Our findings can aid software engineering researchers in determining how best to support the transfer of their research results into practice. Furthermore, analysis of the literature also revealed that no reports exist on the combination of various technology transfer approaches, which could increase advantages of existing approaches while reducing their disadvantages.},
 author = {Jennifer Brings and Marian Daun and Sarah Brinckmann and Kevin Keller and Thorsten Weyer},
 doi = {10.1002/smr.1981},
 journal = {Journal of Software: Evolution and Process},
 month = {aug},
 number = {11},
 pages = {e1981},
 publisher = {Wiley},
 title = {Approaches, success factors, and barriers for technology transfer in software engineering-Results of a systematic literature review},
 url = {https://doi.org/10.1002%2Fsmr.1981},
 volume = {30},
 year = {2018}
}

@inproceedings{Budgen,
 abstract = {Evidence (in different forms) is widely employed to establish and refine ideas about what constitutes good practice in many domains of science and engineering. However, software engineering (and computing in general) has so far been a notable exception to this, and our paper sets out to explore some of the reasons why this should be so, and how the situation might be changed in the future. We examine the ways in which some other domains collect and use evidence, and then examine both 'commercial' and 'open source' development practices to see how these currently make use of previous experience and evidence. Finally, we consider the possible role of systematic review groups in strengthening the way that evidence could be employed in future software engineering practices.},
 author = {D. Budgen and J. Boegh and A. Mohan},
 booktitle = {Eleventh Annual International Workshop on Software Technology and Engineering Practice},
 doi = {10.1109/step.2003.23},
 publisher = {{IEEE}},
 title = {Organising Evidence to Support Software Engineering Practice},
 url = {https://doi.org/10.1109%2Fstep.2003.23}
}

@article{Chan_2009,
 abstract = {It is widely believed that systems development methodologies (SDMs) can help improve the software development process. Nevertheless, their deployment often encounters resistance from systems developers. Agile methodologies, the latest batch of SDMs that are most suitable in dealing with volatile business requirements, are likely to face the same challenge as they require developers to drastically change their work habits and acquire new skills. This paper addresses what can be done to overcome the challenge to agile methodologies acceptance. We provide a critical review of the extant literature on the acceptance of traditional SDMs and agile methodologies, and develop a conceptual framework for agile methodologies acceptance based on a knowledge management perspective. This framework can provide guidance for future research into acceptance of agile methodologies, and has implications for practitioners concerned with the effective deployment of agile methodologies.},
 author = {Frank K.Y. Chan and James Y.L. Thong},
 doi = {10.1016/j.dss.2008.11.009},
 journal = {Decision Support Systems},
 month = {mar},
 number = {4},
 pages = {803--814},
 publisher = {Elsevier {BV}},
 title = {Acceptance of agile methodologies: A critical review and conceptual framework},
 url = {https://doi.org/10.1016%2Fj.dss.2008.11.009},
 volume = {46},
 year = {2009}
}

@inproceedings{Chilana_2015,
 abstract = {As we increasingly strive for scientific rigor and generalizability in HCI research, should we entertain any hope that by doing good science, our discoveries will eventually be more transferrable to industry? We present an in-depth case study of how an HCI research innovation goes through the process of transitioning from a university project to a revenue-generating startup financed by venture capital. The innovation is a novel contextual help system for the Web, and we reflect on the different methods used to evaluate it and how research insights endure attempted dissemination as a commercial product. Although the extent to which any innovation succeeds commercially depends on a number of factors like market forces, we found that our HCI innovation with user-centered origins was in a unique position to gain traction with customers and garner buy-in from investors. However, since end users were not the buyers of our product, a strong user-centered focus obfuscated other critical needs of the startup and pushed out perspectives of non-user-centered stakeholders. To make the research-to-product transition, we had to focus on adoption-centered design, the process of understanding and designing for adopters and stakeholders of the product. Our case study raises questions about how we evaluate the novelty and research contributions of HCI innovations with respect to their potential for commercial impact.},
 author = {Parmit K. Chilana and Amy J. Ko and Jacob Wobbrock},
 booktitle = {Proceedings of the 33rd Annual {ACM} Conference on Human Factors in Computing Systems},
 doi = {10.1145/2702123.2702412},
 month = {apr},
 publisher = {{ACM}},
 title = {From User-Centered to Adoption-Centered Design},
 url = {https://doi.org/10.1145%2F2702123.2702412},
 year = {2015}
}

@incollection{D_az_Ley,
 abstract = {An important reason why measurement program implementation fails is that the maturity of companies as regards measurement has not been taken into account at its definition phase. Unfortunately, the major methods and frameworks supporting measurement programs –such as Goal Question Metric (GQM), Goal-Driven Software Measurement, GQ(I)M, PSM and ISO/IEC 15939– do not explicitly address, this issue, which is especially important in small and medium settings, where low measurement maturity level is typical and there are more measurement implementation constraints. Additionally, these companies usually have poor measurement knowledge, limited resources and budget, which prevent measurement integration in the corporate culture. This restricts measurement support in these companies and increases the chances of failure. In this paper we will be looking at an adaptation of the software measurement maturity method developed by Daskalantonakis. The so-called “MIS-PyME maturity model” is focused on giving support towards measurement program definition and is integrated in MIS-PyME, a methodological framework for measurement suited to small and medium settings.},
 author = {Mar{\'{\i}}a D{\'{\i}}az-Ley and F{\'{e}}lix Garc{\'{\i}}a and Mario Piattini},
 booktitle = {Product-Focused Software Process Improvement},
 doi = {10.1007/978-3-540-69566-0_5},
 pages = {19--33},
 publisher = {Springer Berlin Heidelberg},
 title = {{MIS}-{PyME} Software Measurement Maturity Model-Supporting the Definition of Software Measurement Programs},
 url = {https://doi.org/10.1007%2F978-3-540-69566-0_5}
}

@article{D_az_Ley_2010,
 abstract = {One important reason for the failure of measurement program implementation is that the maturity of companies as regards measurement has not been taken into account during the definition phase. Unfortunately, the major methods and frameworks that support measurement programs – such as Goal Question Metric (GQM), Goal-Driven Software Measurement, GQ(I)M, PSM and ISO/IEC 15939 – do not address this issue explicitly. This can especially affect small and medium settings, where a low measurement maturity level is typical and where there are more measurement implementation limitations. This is the case both as far as software engineering is concerned and with respect to measurement knowledge. Nevertheless, companies do wish to define measurement programs adapted to the measurement maturity of the company and they want to improve their measurement maturity. There are few measurement assessment models and these are neither well-known nor applied in industry. This paper presents a measurement capability maturity model which supports companies both in defining their measurement programs, as adapted to the measurement maturity of the company, and in detecting measurement improvement suggestions.},
 author = {Mar{\'{\i}}a D{\'{\i}}az-Ley and F{\'{e}}lix Garc{\'{\i}}a and Mario Piattini},
 doi = {10.1016/j.advengsoft.2010.06.007},
 journal = {Advances in Engineering Software},
 month = {oct},
 number = {10-11},
 pages = {1223--1237},
 publisher = {Elsevier {BV}},
 title = {{MIS}-{PyME} software measurement capability maturity model {\textendash} Supporting the definition of software measurement programs and capability determination},
 url = {https://doi.org/10.1016%2Fj.advengsoft.2010.06.007},
 volume = {41},
 year = {2010}
}

@article{Daun_2023,
 abstract = {},
 author = {Marian Daun and Jennifer Brings and Patricia Aluko Obe and Bastian Tenbergen},
 doi = {10.1002/spe.3200},
 journal = {Software: Practice and Experience},
 month = {mar},
 publisher = {Wiley},
 title = {An industry survey on approaches, success factors, and barriers for technology transfer in software engineering},
 url = {https://doi.org/10.1002%2Fspe.3200},
 year = {2023}
}

@inproceedings{Delamaro_2008,
 abstract = {Code mobility has become an attractive alternative to the implementation of distributed systems. In the last few years much effort has been made in the study and development of techniques to support the development of software based on mobile code. In spite of this effort, there is still a lack of criteria and environments to test mobile software. In this paper we investigate the use of control and data flow based criteria for testing software with mobility features. A testing tool named JaBUTi/MA supports coverage analysis based on client triggered and server triggered instrumentation. A case study is presented to assess the use of JaBUTi/MA on mobile agents.},
 author = {Marcio E. Delamaro and Auri Marcelo Rizzo Vincenzi and Jos{\'{e}} Carlos Maldonado},
 booktitle = {Electronic Workshops in Computing},
 doi = {10.14236/ewic/ease2008.16},
 month = {jun},
 publisher = {{BCS} Learning {\&} Development},
 title = {Evaluating Structural Criteria for Testing Mobile Code},
 url = {https://doi.org/10.14236%2Fewic%2Fease2008.16},
 year = {2008}
}

@article{Di_az_Ley_2008,
 abstract = {The successful implementation of software measurement programs is not an easy task. Software measurement program implementations sometimes fail, and this failure is frequently caused by their definition: the measurement program does not provide the required information, the data required are difficult to obtain and so on. The definition of measurement programs is even less encouraging in small and medium enterprises (SMEs), since most of the outstanding measurement program models are not suited to these types of companies. Additionally, the literature provides few cases of measurement program implementation, which could be used as a source of reference for good practices through which to successfully perform these activities. A measurement program definition framework suited to SMEs called MIS-PyME is used to implement a measurement program in the software development and maintenance department of a medium company. The result of this measurement program and the good practices detected from this experience are expounded, along with the benefits obtained using MIS-PyME in contrast to our previous experiences of using the goal question indicator metric.},
 author = {M. Di{\'}az-Ley and F. Garci{\'}a and M. Piattini},
 doi = {10.1049/iet-sen:20080026},
 journal = {{IET} Software},
 number = {5},
 pages = {417},
 publisher = {Institution of Engineering and Technology ({IET})},
 title = {Implementing a software measurement program in small and medium enterprises: a suitable framework},
 url = {https://doi.org/10.1049%2Fiet-sen%3A20080026},
 volume = {2},
 year = {2008}
}

@inproceedings{Diebold_2014,
 abstract = {Background: Particularly during and after research projects, technology transfer into practice plays an important role for academia to get technologies into use and for industry to improve their development. Objective: Our goal was to gain more and current knowledge about how technology transfer from software engineering (SE) research into industrial practice is accomplished best and how to measure the effectiveness of this transfer. Method: We conducted a study in the context of two German research projects, covering many different organizations from industry and academia. Results: This paper presents the design of the study and the survey performed. After introducing the concept of technology transfer we used and adapted, we present preliminary results. Conclusions: We observed that traditional means such as meetings or workshops are still the most widely used mediums for technology transfer in SE. We also discovered that, even though the duration of transfer depends on the object being transferred, the average duration is three years, which is far less than previously published (~18 years).},
 author = {Philipp Diebold and Antonio Vetr{\`{o}}},
 booktitle = {Proceedings of the 8th {ACM}/{IEEE} International Symposium on Empirical Software Engineering and Measurement},
 doi = {10.1145/2652524.2652552},
 month = {sep},
 publisher = {{ACM}},
 title = {Bridging the gap: {SE} technology transfer into practice},
 url = {https://doi.org/10.1145%2F2652524.2652552},
 year = {2014}
}

@inproceedings{Diebold_2015,
 abstract = {},
 author = {Philipp Diebold and Antonio Vetro and Daniel Mendez Fernandez},
 booktitle = {2015 {ACM}/{IEEE} International Symposium on Empirical Software Engineering and Measurement ({ESEM})},
 doi = {10.1109/esem.2015.7321189},
 month = {oct},
 publisher = {{IEEE}},
 title = {An Exploratory Study on Technology Transfer in Software Engineering},
 url = {https://doi.org/10.1109%2Fesem.2015.7321189},
 year = {2015}
}

@inproceedings{Durelli_2012,
 abstract = {Pervasive computing has been increasingly finding its way into mainstream. Such paradigm has been fostering the development of systems that transparently interact with users, push context awareness further, and are able to deal with aspects of the user's day-to-day experience. Pervasive systems have been constantly and invisibly introduced in our everyday lives, moving us towards a pervasive computing world. Therefore, in this paper we argue that there is a need to prepare for the challenges that such paradigm will bring about. As dependability is a key feature in pervasive environments, we highlight some of these challenges in the light of software testing, which will play an important role on a plausible pervasive computing world. We address this topic by (i) illustrating challenges for testing pervasive software in an example scenario, (ii) describing our outlook on how the tool support for testing pervasive systems will interact with testers and practitioners alike, and (iii) outlining what research thrusts we need to emphasize in order to prepare for this change.},
 author = {Vinicius H. S. Durelli and Andre T. Endo and Adenilso Simao and Marcio E. Delamaro},
 booktitle = {2012 26th Brazilian Symposium on Software Engineering},
 doi = {10.1109/sbes.2012.21},
 month = {sep},
 publisher = {{IEEE}},
 title = {Towards Envisaging Software Testing in a Pervasive Computing World},
 url = {https://doi.org/10.1109%2Fsbes.2012.21},
 year = {2012}
}

@incollection{Emam_2000,
 abstract = {In the recent past there has been a rapid increase in the use of process assessments in the software industry. Such assessments play an important role in initiating and tracking process improvements. In addition, there has been a proliferation of best practice models that are the basis for the assessments. The purpose of this chapter is to review the empirical evidence that exists to date on the efficacy of process assessments, with a specific focus on the CMM for software and the emerging ISO/IEC 15504 international standard. The available evidence is quite extensive, and supports the claims that assessments can be an effective tool for process improvement. We also highlight gaps in the literature where further work needs to be done.},
 author = {Khaled El Emam and Dennis R. Goldenson},
 booktitle = {Advances in Computers},
 doi = {10.1016/s0065-2458(00)80008-x},
 pages = {319--423},
 publisher = {Elsevier},
 title = {An empirical review of software process assessments},
 url = {https://doi.org/10.1016%2Fs0065-2458%2800%2980008-x},
 year = {2000}
}

@inproceedings{Fuller,
 abstract = {The ultimate aim of software engineering methods and tools is to reduce risks associated with the development of software products. Accepted risk management procedures recognize that software development is inherently risky, however fail to take into account the changing nature of both software products and the organizations undertaking their development. SE research has traditionally focused on the needs of very large corporations undertaking equally mammoth and complex development projects, thus most tools and methods are predicated on this model. Yet most software development is undertaken by small to medium enterprises. Consequently, these development efforts are either undertaken with little or no adherence to any SE standard process or by attempting to tailor processes intended for larger organizations. Neither of these alternatives is ideal, with both introducing new elements of risk. The rise of the Internet as a platform for commercial applications has partly driven this move away from monolithic software development and has also contributed to the proliferation of software products built using COTS components. Clearly there is a risk involved in the use of components not developed specifically for a particular application while Internet applications introduce an. entirely new set of possible risks. These newer risk factors directly affect the quality of the software product and the paper discusses these factors in detail, showing how they contribute to making software development today an even riskier proposition than previously},
 author = {A. Fuller and P. Croll and O. Garcia},
 booktitle = {Proceedings Second Asia-Pacific Conference on Quality Software},
 doi = {10.1109/apaqs.2001.990009},
 publisher = {{IEEE} Comput. Soc},
 title = {Why software engineering is riskier than ever},
 url = {https://doi.org/10.1109%2Fapaqs.2001.990009}
}

@article{Garousi_2016,
 abstract = {},
 author = {Vahid Garousi and Matt M. Eskandar and Kadir Herkilo{\u{g}}lu},
 doi = {10.1007/s11219-016-9319-5},
 journal = {Software Quality Journal},
 month = {jun},
 number = {4},
 pages = {1091--1143},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Industry{\textendash}academia collaborations in software testing: experience and success stories from Canada and Turkey},
 url = {https://doi.org/10.1007%2Fs11219-016-9319-5},
 volume = {25},
 year = {2016}
}

@article{Garousi_2016,
 abstract = {Context: The global software industry and the software engineering (SE) academia are two large communities. However, unfortunately, the level of joint industry-academia collaborations in SE is still relatively very low, compared to the amount of activity in each of the two communities. It seems that the two ’camps’ show only limited interest/motivation to collaborate with one other. Many researchers and practitioners have written about the challenges, success patterns (what to do, i.e., how to collaborate) and anti-patterns (what not do do) for industry-academia collaborations.},
 author = {Vahid Garousi and Kai Petersen and Baris Ozkan},
 doi = {10.1016/j.infsof.2016.07.006},
 journal = {Information and Software Technology},
 month = {nov},
 pages = {106--127},
 publisher = {Elsevier {BV}},
 title = {Challenges and best practices in industry-academia collaborations in software engineering: A systematic literature review},
 url = {https://doi.org/10.1016%2Fj.infsof.2016.07.006},
 volume = {79},
 year = {2016}
}

@article{Gorschek_2006,
 abstract = {Technology transfer, and thus industry-relevant research, involves more than merely producing research results and delivering them in publications and technical reports. It demands close cooperation and collaboration between industry and academia throughout the entire research process. During research conducted in a partnership between Blekinge Institute of Technology and two companies, Danaher Motion Saro AB (DHR) and ABB, we devised a technology transfer model that embodies this philosophy. We initiated this partnership to conduct industry-relevant research in requirements engineering and product management. Technology transfer in this context is a prerequisite: it validates academic research results in a real setting, and it provides a way to improve industry development and business processes},
 author = {Tony Gorschek and Per Garre and Stig Larsson and Claes Wohlin},
 doi = {10.1109/ms.2006.147},
 journal = {{IEEE} Software},
 month = {nov},
 number = {6},
 pages = {88--95},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {A Model for Technology Transfer in Practice},
 url = {https://doi.org/10.1109%2Fms.2006.147},
 volume = {23},
 year = {2006}
}

@article{Gorschek_2007,
 abstract = {Software requirements are often formulated on different levels and hence they are difficult to compare to each other. To address
this issue, a model that allows for placing requirements on different levels has been developed. The model supports both abstraction
and refinement of requirements, and hence requirements can both be compared with each other and to product strategies. Comparison
between requirements will allow for prioritization of requirements, which in many cases is impossible if the requirements
are described on different abstraction levels. Comparison to product strategies will enable early and systematic acceptance
or dismissal of requirements, minimizing the risk for overloading. This paper presents an industrial evaluation of the model.
It has been evaluated in two different companies, and the experiences and findings are presented. It is concluded that the
requirements abstraction model provides helpful improvements to the industrial requirements engineering process.},
 author = {Tony Gorschek and Per Garre and Stig B. M. Larsson and Claes Wohlin},
 doi = {10.1007/s00766-007-0047-z},
 journal = {Requirements Engineering},
 month = {may},
 number = {3},
 pages = {163--190},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Industry evaluation of the Requirements Abstraction Model},
 url = {https://doi.org/10.1007%2Fs00766-007-0047-z},
 volume = {12},
 year = {2007}
}

@inproceedings{Grigoleit_2015,
 abstract = {Background: Successful transfer of the results of research projects into practice is of great interest to all project participants. It can be assumed that different transfer mediums fulfill technology transfer (TT) with different levels of success and that they are impaired by different kinds of barriers. Objective: The goal of this study is to gain a better understanding about the different mediums used for TT in software engineering, and to identify barriers weakening the success of the application of such mediums. Method: We conducted an exploratory study implemented by a survey in the context of a German research project with a broad range of used mediums. Results: The main reported barriers were low expectations of usefulness, no awareness of existence, lack of resources, or inadequateness in terms of outdated material or being in an immature state. Conclusions: We interpreted our results as symptoms of a lack of a dissemination plan in the project. Further work will be needed to explore the implications for the transfer of research results (knowledge and techniques) to practice.},
 author = {Florian Grigoleit and Antonio Vetro and Philipp Diebold and Daniel Mendez Fernandez and Wolfgang Bohm},
 booktitle = {2015 {ACM}/{IEEE} International Symposium on Empirical Software Engineering and Measurement ({ESEM})},
 doi = {10.1109/esem.2015.7321203},
 month = {oct},
 publisher = {{IEEE}},
 title = {In Quest for Proper Mediums for Technology Transfer in Software Engineering},
 url = {https://doi.org/10.1109%2Fesem.2015.7321203},
 year = {2015}
}

@inproceedings{Guo_2008,
 abstract = {Software project managers play an important role in selecting their software development process. In this study we conducted a survey of software project managers about software process change. The result of the survey revealed several factors affecting this type of decision making. It also revealed critical issues in software development projects. In particular, the findings point to the importance of a piloting strategy in technology transfer, as well as the importance of highlighting cost, quality, and schedule information in reporting evidence of a new technique's effectiveness. We expect that the findings of this study could facilitate research on technology transfer and adoption.},
 author = {Yuepu Guo and Carolyn B. Seaman},
 booktitle = {Proceedings of the Second {ACM}-{IEEE} international symposium on Empirical software engineering and measurement},
 doi = {10.1145/1414004.1414046},
 month = {oct},
 publisher = {{ACM}},
 title = {A survey of software project managers on software process change},
 url = {https://doi.org/10.1145%2F1414004.1414046},
 year = {2008}
}

@inproceedings{Harrold_2000,
 abstract = {Testing is an important process that is performed to support quality assurance. Testing activities support quality assurance by gathering information about the nature of the software being studied. These activities consist of designing test cases, executing the software with those test cases, and examining the results produced by those executions. Studies indicate that more than fifty percent of the cost of software development is devoted to testing, with the percentage for testing critical software being even higher. As software becomes more pervasive and is used more often to perform critical tasks, it will be required to be of higher quality. Unless we can find efficient ways to perform effective testing, the percentage of development costs devoted to testing will increase significantly. This report briefly assesses the state of the art in software testing, outlines some future directions in software testing, and gives some pointers to software testing resources.},
 author = {Mary Jean Harrold},
 booktitle = {Proceedings of the Conference on The Future of Software Engineering},
 doi = {10.1145/336512.336532},
 month = {may},
 publisher = {{ACM}},
 title = {Testing},
 url = {https://doi.org/10.1145%2F336512.336532},
 year = {2000}
}

@incollection{Houdek_2003,
 abstract = {Results of empirical investigations are key input for industrial software process improvement activities. The relevance of an investigation for a given environment, however, depends on the similarities or dissimilarities of the investigation environment compared to the industrial environment which is interested in using a new technology. The optimal (or most relevant) results may be gained when performing the experiment in the industrial environment itself. Unfortunately, this takes place only rarely as experiments in industrial environments are either expensive (when new and old technology are used in parallel) or risky (when only the new technology is used).To overcome this dilemma, we introduced the concept of external experiments, i.e. experiments which are conducted in an environment different from the industrial target environment and which tries to simulate the characteristics of the industrial environment as best as possible. This paper describes this concept in detail, presents a process for identification, conduction and exploitation of such experiments and shows some results from past investigations which used this concept.},
 author = {Frank Houdek},
 booktitle = {Lecture Notes on Empirical Software Engineering},
 doi = {10.1142/9789812795588_0004},
 month = {mar},
 pages = {133--166},
 publisher = {{WORLD} {SCIENTIFIC}},
 title = {External Experiments {\textendash} A Workable Paradigm for Collaboration Between Industry and Academia},
 url = {https://doi.org/10.1142%2F9789812795588_0004},
 year = {2003}
}

@article{https://doi.org/10.14279/tuj.eceasst.34.589,
 abstract = {Model-Driven Engineering (MDE) has emerged as an actively researched and established approach for next generation control application development. Technology transfer to the industry is a topical research problem. Since most professional factory process control engineers do not have computer science backgrounds, there is an urgent need for studies of the role of user guidance in the professional learning, and thus, of industrial adoption of MDE approaches. In this study professionals were invited to a hands-on assessment of the AUKOTON MDE approach for factory process control engineering. Qualitative empirical material was collected and analyzed to identify the role of user guidance in the context of other factors impacting industrial adoption. Challenges in adoption that could be solved by user guidance were identified with the theory of organizational knowledge creation (SECI) model.},
 author = {Rauhamäki, Jari and Laitinen, Outi and Sierla, Seppo and Kuikka, Seppo},
 doi = {10.14279/TUJ.ECEASST.34.589},
 journal = {Electronic Communications of the EASST},
 language = {en},
 pages = {Volume 34: Software Modeling in Education at MODELS 2010},
 publisher = {European Association of Software Science and Technology},
 title = {The Role of User Guidance in the Industrial Adoption of MDE Approach},
 url = {http://journal.ub.tu-berlin.de/eceasst/article/view/589},
 year = {2011}
}

@phdthesis{https://doi.org/10.18725/oparu-318,
 abstract = {},
 author = {Metzker, Eduard},
 copyright = {Standard (Fassung vom 03.05.2003)},
 doi = {10.18725/OPARU-318},
 keywords = {Acceptance model, Configurable method kit, Learning organizations, Software process improvement, Usability engineering, User-centred design, Software development. Methods, Evaluation, Software Engineering},
 language = {en},
 publisher = {Universität Ulm},
 title = {Adoption-centric usability engineering: systematic deployment, evaluation and improvement of usability engineering methods in the software engineering lifecycle},
 url = {https://oparu.uni-ulm.de/xmlui/handle/123456789/345},
 year = {2005}
}

@article{Ivarsson_2009,
 abstract = {One of the main goals of an applied research field such as requirements engineering is the transfer of research results to
industrial use. To promote industrial adoption of technologies developed in academia, researchers need to provide tangible
evidence of the advantages of using them. This can be done through industry validation, enabling researchers to test and validate
technologies in a real setting with real users and applications. The evidence obtained, together with detailed information
on how the validation was conducted, offers rich decision support material for industrial practitioners seeking to adopt new
technologies. This paper presents a comprehensive systematic literature review of all papers published in the Requirements
Engineering journal containing any type of technology evaluation. The aim is to gauge the support for technology transfer,
i.e., to what degree industrial practitioners can use the reporting of technology evaluations in the journal as decision support 
for adopting the technologies in industrial practice. Findings show that very few evaluations offer full technology transfer 
support, i.e., have a realistic scale, application or subjects. The major improvement potential concerning support for technology
transfer is found to be the subjects used in the evaluations. Attaining company support, including support for using practitioners
as subjects, is vital for technology transfer and for researchers seeking to validate technologies.},
 author = {Martin Ivarsson and Tony Gorschek},
 doi = {10.1007/s00766-009-0080-1},
 journal = {Requirements Engineering},
 month = {mar},
 number = {3},
 pages = {155--175},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Technology transfer decision support in requirements engineering research: a systematic review of {REj}},
 url = {https://doi.org/10.1007%2Fs00766-009-0080-1},
 volume = {14},
 year = {2009}
}

@article{Ivarsson_2010,
 abstract = {One of the main goals of an applied research field such as software engineering is the transfer and widespread use of research
results in industry. To impact industry, researchers developing technologies in academia need to provide tangible evidence
of the advantages of using them. This can be done trough step-wise validation, enabling researchers to gradually test and
evaluate technologies to finally try them in real settings with real users and applications. The evidence obtained, together
with detailed information on how the validation was conducted, offers rich decision support material for industry practitioners
seeking to adopt new technologies and researchers looking for an empirical basis on which to build new or refined technologies.
This paper presents model for evaluating the rigor and industrial relevance of technology evaluations in software engineering.
The model is applied and validated in a comprehensive systematic literature review of evaluations of requirements engineering
technologies published in software engineering journals. The aim is to show the applicability of the model and to characterize
how evaluations are carried out and reported to evaluate the state-of-research. The review shows that the model can be applied
to characterize evaluations in requirements engineering. The findings from applying the model also show that the majority
of technology evaluations in requirements engineering lack both industrial relevance and rigor. In addition, the research
field does not show any improvements in terms of industrial relevance over time.},
 author = {Martin Ivarsson and Tony Gorschek},
 doi = {10.1007/s10664-010-9146-4},
 journal = {Empirical Software Engineering},
 month = {oct},
 number = {3},
 pages = {365--395},
 publisher = {Springer Science and Business Media {LLC}},
 title = {A method for evaluating rigor and industrial relevance of technology evaluations},
 url = {https://doi.org/10.1007%2Fs10664-010-9146-4},
 volume = {16},
 year = {2010}
}

@inproceedings{Jedlitschka_2010,
 abstract = {Background: The identification of alternative technologies - which is one step of the formal decision-making process -- results in a judgment on whether a technology is considered as a candidate for the further decision-making process. A model has been proposed that aims at improving the delivery of relevant information from ESE research to software managers. Objectives: Evaluate the effectiveness of the model of software managers information needs Method: Experiment with software managers from industry who read two versions of a report on a controlled experiment, one of which contained the information as required by the information needs model. Results: Participants reading the version of the report based on the model perceived that they could judge better whether the technology is appropriate than those reading the original version of the paper. Conclusion: The information needs model provides a means for supporting the identification of alternative solutions and thus has the potential to solve the problem of making decisions.},
 author = {Andreas Jedlitschka},
 booktitle = {Proceedings of the 2010 {ACM}-{IEEE} International Symposium on Empirical Software Engineering and Measurement},
 doi = {10.1145/1852786.1852812},
 month = {sep},
 publisher = {{ACM}},
 title = {Evaluating a model of software managers{\textquotesingle} information needs},
 url = {https://doi.org/10.1145%2F1852786.1852812},
 year = {2010}
}

@article{Jedlitschka_2013,
 abstract = {},
 author = {Andreas Jedlitschka and Natalia Juristo and Dieter Rombach},
 doi = {10.1007/s10664-013-9268-6},
 journal = {Empirical Software Engineering},
 month = {aug},
 number = {6},
 pages = {1921--1955},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Reporting experiments to satisfy professionals' information needs},
 url = {https://doi.org/10.1007%2Fs10664-013-9268-6},
 volume = {19},
 year = {2013}
}

@inproceedings{Jin_2016,
 abstract = {The success rate of technology transfer from government laboratories is quite low. This paper combines findings from academic research to provide valuable managerial insights. We conclude that technology transfer factors identified so far actually relate to four management processes: project management, strategy management, innovation management, and relationship management.},
 author = {D. Jin and X. Mo and A. M. Subramanian and K. H. Chai and C. C. Hang},
 booktitle = {2016 {IEEE} International Conference on Management of Innovation and Technology ({ICMIT})},
 doi = {10.1109/icmit.2016.7605009},
 month = {sep},
 publisher = {{IEEE}},
 title = {Key management processes to technology transfer success},
 url = {https://doi.org/10.1109%2Ficmit.2016.7605009},
 year = {2016}
}

@article{Kienle_2011,
 abstract = {In this paper, we are exploring the approach to utilize system-specific static analyses of code with the goal to improve software
quality for specific software systems. Specialized analyses, tailored for a particular system, make it possible to take advantage
of system/domain knowledge that is not available to more generic analyses. Furthermore, analyses can be selected and/or developed
in order to best meet the challenges and specific issues of the system at hand. As a result, such analyses can be used as
a complement to more generic code analysis tools because they are likely to have a better impact on (business) concerns such
as improving certain software quality attributes and reducing certain classes of failures. We present a case study of a large,
industrial embedded system, giving examples of what kinds of analyses could be realized and demonstrate the feasibility of
implementing such analyses. We synthesize lessons learned based on our case study and provide recommendations on how to realize
system-specific analyses and how to get them adopted by industry.},
 author = {Holger M. Kienle and Johan Kraft and Thomas Nolte},
 doi = {10.1007/s11219-011-9138-7},
 journal = {Software Quality Journal},
 month = {apr},
 number = {2},
 pages = {337--367},
 publisher = {Springer Science and Business Media {LLC}},
 title = {System-specific static code analyses: a case study in the complex embedded systems domain},
 url = {https://doi.org/10.1007%2Fs11219-011-9138-7},
 volume = {20},
 year = {2011}
}

@incollection{Lethbridge_2008,
 abstract = {In this chapter we will discuss some of the pragmatic considerations that we believe university researchers and companies
should consider when establishing collaborative software engineering research projects; in particular, those involving empirical
studies of software engineers. The chapter is illustrated using as a case study a research collaboration in which the authors
are involved. We enumerate the costs, benefits, risks and risk-reducing factors that can have an impact on all the parties
involved in the collaboration (the company, the faculty members and the graduate student researchers). Understanding this
information is needed to help justify the research in the first place, and to manage it effectively. We then discuss many
of the activities that will be needed to plan and manage the project, including such issues as attracting students, handling
intellectual property, obtaining ethical approval and interacting with participants. The main objective of the chapter is
to provoke some thoughts in the minds of those planning empirical research projects in software engineering.},
 author = {Timothy C. Lethbridge and Steve Lyon and Peter Perry},
 booktitle = {Guide to Advanced Empirical Software Engineering},
 doi = {10.1007/978-1-84800-044-5_10},
 pages = {257--281},
 publisher = {Springer London},
 title = {The Management of University{\textendash}Industry Collaborations Involving Empirical Studies of Software Enginee},
 url = {https://doi.org/10.1007%2F978-1-84800-044-5_10},
 year = {2008}
}

@incollection{Lings_2004,
 abstract = {Many things can militate against the successfu l transfer of IS methods from research to commercial environments. In this paper we synthesize a framework for reasoning about method transfer. Four main themes emerge from analysis of the relevant literature: the importance of a clear conceptual framework for a method; support for learning; usability within a defined context; and acceptability to stakeholders. These themes are elaborated in the paper, and also illuminated, by reference to Langefors infological equation and from experience gained in four case studies of method transfer. We claim that there is an onus on both method developers and those responsible for method adoption to consider all identified aspects, in an attempt to minimize inherent tensions between methods in concept and methods in action. Full Text at Springer, may require registration or fee},
 author = {Brian Lings and Björn Lundell},
 booktitle = {Information Systems Research},
 doi = {10.1007/1-4020-8095-6_29},
 pages = {535--553},
 publisher = {Springer {US}},
 title = {On Transferring a Method into a Usage Situation},
 url = {https://doi.org/10.1007%2F1-4020-8095-6_29},
 year = {2004}
}

@article{Lundell_2004,
 abstract = {Tool support for information systems (IS) development can be considered from many perspectives, and it is not surprising that different stakeholders perceive such tools very differently. This can contribute on one side to poor selection processes and ineffective deployment of CASE, and on another to inappropriate tool development. In this paper, the relationship between CASE-tools and IS development methods is considered from three stakeholder perspectives: concept developer, IS developer and product developer. These perspectives, and the tensions between them, are characterised within a ‘stakeholder triangle’. Some of the major issues related to each tension are highlighted, and the triangle is then used to consider the importance, and implications for all stakeholders, of considering all tensions together. In particular, we suggest that the concept of ‘method in action’ be complemented by that of ‘method in tool’. We believe that these insights will contribute to the continuing debate on how to reduce adoption failures.Journal of Information Technology (2004) 19, 215–223. doi:10.1057/palgrave.jit.2000022 Published online 21 September 2004},
 author = {Björn Lundell and Brian Lings},
 doi = {10.1057/palgrave.jit.2000022},
 journal = {Journal of Information Technology},
 month = {sep},
 number = {3},
 pages = {215--223},
 publisher = {{SAGE} Publications},
 title = {Method in Action and Method in Tool: A Stakeholder Perspective},
 url = {https://doi.org/10.1057%2Fpalgrave.jit.2000022},
 volume = {19},
 year = {2004}
}

@incollection{M_ndez_Fern_ndez_2015,
 abstract = {Most requirements engineering (RE) process improvement approaches are solution-driven and activity-based. They focus on the assessment of the RE of a company against an external norm of best practices. A consequence is that practitioners often have to rely on an improvement approach that skips a profound problem analysis and that results in an RE approach that might be alien to the organisational needs. In recent years, we have developed an RE improvement approach (called \emph{ArtREPI}) that guides a holistic RE improvement against individual goals of a company putting primary attention to the quality of the artefacts. In this paper, we aim at exploring ArtREPI's benefits and limitations. We contribute an industrial evaluation of ArtREPI by relying on a case study research. Our results suggest that ArtREPI is well-suited for the establishment of an RE that reflects a specific organisational culture but to some extent at the cost of efficiency resulting from intensive discussions on a terminology that suits all involved stakeholders. Our results reveal first benefits and limitations, but we can also conclude the need of longitudinal and independent investigations for which we herewith lay the foundation.},
 author = {Daniel M{\'{e}}ndez Fern{\'{a}}ndez and Stefan Wagner},
 booktitle = {Product-Focused Software Process Improvement},
 doi = {10.1007/978-3-319-26844-6_9},
 pages = {114--130},
 publisher = {Springer International Publishing},
 title = {A Case Study on Artefact-Based {RE} Improvement in Practice},
 url = {https://doi.org/10.1007%2F978-3-319-26844-6_9},
 year = {2015}
}

@article{Manchanda_2013,
 author = {Deepika Manchanda and Akashdeep Singh and Neha Garg},
 doi = {10.5120/13919-1751},
 journal = {International Journal of Computer Applications},
 month = {oct},
 number = {13},
 pages = {4--10},
 publisher = {Foundation of Computer Science},
 title = {An Insight upon the Effect of Quality Assurance on the Cost of Software Development},
 url = {https://doi.org/10.5120%2F13919-1751},
 volume = {80},
 year = {2013}
}

@incollection{Mandi__2010,
 abstract = {The success of a measurement initiative in a software company depends on the quality of the links between metrics programs
and organizational business goals. GQM+Strategies is a new approach designed to help in establishing links between the organizational business goals and measurement
programs. However, there are no reported industrial experiences that demonstrate the practical value of the method. We designed
a five-step research approach in order to assess the method’s practical value. The approach utilized revised Bloom’s taxonomy
as a framework for assessing the practitioners’ cognition level of the concepts. The results of our study demonstrated that
the method has practical value for the case company, and it is capable of addressing real-world problems. In the conducted
empirical study, the cognition level of the practitioners was sufficient for a successful implementation of the method.

KeywordsGQM+Strategies-GQM-Software Metrics-Bloom’s Taxonomy},
 author = {Vladimir Mandi{\'{c}} and Lasse Harjumaa and Jouni Markkula and Markku Oivo},
 booktitle = {Lecture Notes in Computer Science},
 doi = {10.1007/978-3-642-14347-2_3},
 pages = {14--25},
 publisher = {Springer Berlin Heidelberg},
 title = {Early Empirical Assessment of the Practical Value of {GQM}$\mathplus$Strategies},
 url = {https://doi.org/10.1007%2F978-3-642-14347-2_3},
 year = {2010}
}

@inproceedings{Marijan_2020,
 abstract = {},
 author = {Dusica Marijan and Arnaud Gotlieb},
 booktitle = {2020 46th Euromicro Conference on Software Engineering and Advanced Applications ({SEAA})},
 doi = {10.1109/seaa51224.2020.00053},
 month = {aug},
 publisher = {{IEEE}},
 title = {Lessons Learned on Research Co-Creation: Making Industry-Academia Collaboration Work},
 url = {https://doi.org/10.1109%2Fseaa51224.2020.00053},
 year = {2020}
}

@article{Marijan_2021,
 abstract = {},
 author = {Dusica Marijan and Arnaud Gotlieb},
 doi = {10.1016/j.infsof.2020.106473},
 journal = {Information and Software Technology},
 month = {apr},
 pages = {106473},
 publisher = {Elsevier {BV}},
 title = {Industry-Academia research collaboration in software engineering: The Certus model},
 url = {https://doi.org/10.1016%2Fj.infsof.2020.106473},
 volume = {132},
 year = {2021}
}

@article{Mart_nez_2013,
 abstract = {},
 author = {Yulkeidi Mart{\'{\i}}nez and Cristina Cachero and Santiago Meli{\'{a}}},
 doi = {10.1016/j.infsof.2012.07.004},
 journal = {Information and Software Technology},
 month = {feb},
 number = {2},
 pages = {189--200},
 publisher = {Elsevier {BV}},
 title = {{MDD} vs. traditional software development: A practitioner's subjective perspective},
 url = {https://doi.org/10.1016%2Fj.infsof.2012.07.004},
 volume = {55},
 year = {2013}
}

@inproceedings{Mart_nez_Fern_ndez_2014,
 abstract = {More and more, software engineering researchers are motivated to solve real problems that bring value to industry. An example is the industry-academia collaboration described in this paper among everis, an IT consulting firm, and the GESSI research group at UPC. The goal of this paper is twofold: to evaluate the success of the collaboration, and to report the experience with conducting empirical studies in the industry and lessons learnt. We evaluated our collaboration with an existing model for technology transfer, and performed a focus group discussion to identify challenges we have faced. After initialization and alignment of the collaboration, a high maturity level has been achieved: we have obtained the first results in form of proposed solutions, scientific publications, and pilots run in real projects. In spite of this positive progress, further initiatives need to be undertaken in the last phases of the collaboration to achieve high degrees of maturity in deployment impact, industry benefit and innovativeness. Evaluating the collaboration has been positive, since we identified the next steps to be taken to achieve a high degree of technology transfer and innovation dissemination. We think it is a needed step in industry-academia collaborations in order to improve their success.},
 author = {Silverio Mart{\'{\i}}nez-Fern{\'{a}}ndez and Helena Martins Marques},
 booktitle = {Proceedings of the 2nd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1145/2593690.2593696},
 month = {jun},
 publisher = {{ACM}},
 title = {Practical experiences in designing and conducting empirical studies in industry-academia collaboration},
 url = {https://doi.org/10.1145%2F2593690.2593696},
 year = {2014}
}

@inproceedings{Michalik_2008,
 abstract = {Software Engineering is developing very fast. To keep up with the changes, software companies need effective methods of knowledge transfer. In the paper a 3-step approach to knowledge transfer, called Technical Drama, is presented. The paper is focused on transferring knowledge concerning architecture evaluation, but the approach could also be applied to transferring knowledge concerning inspections, testing etc. It is claimed in the paper that the Technical Drama can be useful in the industrial context (two case studies are described) as well as at university (then a kind of software studio is required).},
 author = {Bartosz Michalik and Jerzy Nawrocki and Miros{\l}aw Ochodek},
 booktitle = {Proceedings of the 13th international conference on Software engineering  - {ICSE} {\textquotesingle}08},
 doi = {10.1145/1368088.1368193},
 publisher = {{ACM} Press},
 title = {3-step knowledge transition},
 url = {https://doi.org/10.1145%2F1368088.1368193},
 year = {2008}
}

@inproceedings{Mihailescu_2016,
 abstract = {},
 author = {Daniela Mihailescu and Marius Mihailescu and Sven Carlsson},
 booktitle = {2016 49th Hawaii International Conference on System Sciences ({HICSS})},
 doi = {10.1109/hicss.2016.615},
 month = {jan},
 publisher = {{IEEE}},
 title = {The Evolution of an Enterprise System Implementation Methodology by Adaptation through Reflexivity},
 url = {https://doi.org/10.1109%2Fhicss.2016.615},
 year = {2016}
}

@article{Mikkonen_2018,
 abstract = {},
 author = {Tommi Mikkonen and Casper Lassenius and Tomi Männistö and Markku Oivo and Janne Järvinen},
 doi = {10.1016/j.infsof.2017.10.013},
 journal = {Information and Software Technology},
 month = {mar},
 pages = {34--45},
 publisher = {Elsevier {BV}},
 title = {Continuous and collaborative technology transfer: Software engineering research with real-time industry impact},
 url = {https://doi.org/10.1016%2Fj.infsof.2017.10.013},
 volume = {95},
 year = {2018}
}

@article{Mohan_2013,
 abstract = {Despite the advantages of using IS methodologies, they are often rejected by actual users. Consequently, researchers have repeatedly attempted to understand why individuals accept certain methodologies while rejecting others. In order to differentiate what has been done from what needs to be done in research, a systematic review of academic studies that examine the acceptance of IS methodologies by actual users was conducted. This review revealed 19 articles. We found that the studies were either: (a) descriptive, (b) focused on specific determinants, or (c) applied a holistic approach, examining methodology acceptance from a number of dimensions. Furthermore, while cognitive aspects have received considerable attention, none of the publications studied the effect of habits, emotions and the personal characteristics of individuals. We also examined the studies with respect to the reported research practices, and thereby identified areas of improvement. Based upon our findings, we developed a research agenda to guide future studies on this crucial subject.},
 author = {Kunal Mohan and Frederik Ahlemann},
 doi = {10.1016/j.ijinfomgt.2013.06.003},
 journal = {International Journal of Information Management},
 month = {oct},
 number = {5},
 pages = {831--839},
 publisher = {Elsevier {BV}},
 title = {Understanding acceptance of information system development and management methodologies by actual users: A review and assessment of existing literature},
 url = {https://doi.org/10.1016%2Fj.ijinfomgt.2013.06.003},
 volume = {33},
 year = {2013}
}

@article{Moll_ri_2019,
 abstract = {**Context:** Empirical research in software engineering contributes towards developing scientific knowledge in this field, which in turn is relevant to inform decision-making in industry. A number of empirical studies have been carried out to date in software engineering, and the need for guidelines for conducting and evaluating such research has been stressed.

**Objective:** The main goal of this mapping study is to identify and summarize the body of knowledge on research guidelines, assessment instruments and knowledge organization systems on how to conduct and evaluate empirical research in software engineering.

**Method:** A systematic mapping study employing manual search and snowballing techniques was carried out to identify the suitable papers. To build up the catalog, we extracted and categorized information provided by the identified papers.

**Results:** The mapping study comprises a list of 341 methodological papers, classified according to research methods, research phases covered, and type of instrument provided. Later, we derived a brief explanatory review of the instruments provided for each of the research methods.

**Conclusion:** We provide: an aggregated body of knowledge on the state of the art relating to guidelines, assessment instruments and knowledge organization systems for carrying out empirical software engineering research; an exemplary usage scenario that can be used to guide those carrying out such studies is also provided. Finally, we discuss the catalog’s implications for research practice and the needs for further research.},
 author = {Jefferson Seide Moll{\'{e}}ri and Kai Petersen and Emilia Mendes},
 doi = {10.1016/j.infsof.2018.08.008},
 journal = {Information and Software Technology},
 month = {jan},
 pages = {117--149},
 publisher = {Elsevier {BV}},
 title = {{CERSE} - Catalog for empirical research in software engineering: A Systematic mapping study},
 url = {https://doi.org/10.1016%2Fj.infsof.2018.08.008},
 volume = {105},
 year = {2019}
}

@inproceedings{Nikula,
 abstract = {Software process improvement is a complex and expensive endeavor requiring extensive resources and long term commitment. In the present study software process improvement (SPI) problems in small organizations were tackled by dividing the overall effort into three subtopics: technical infrastructure, working practices, and management infrastructure. Partitioning the SPI efforts into these three subtopics makes it apparent that all of these topics do not need to be tackled in the same way but some tasks can, e.g., be outsourced. In this paper the results of an investigation into the use of the model above in requirements engineering (RE) process improvement are reported from three industrial case studies. A domain specific method was constructed independently of the utilizing companies, i.e., outsourced, and it was then used in SPI efforts in the companies to establish a solid infrastructure for basic RE in a short period of time, with limited resources, and without previous expertise in RE. It is argued that the suggested partitioning can both lower the threshold for initiating software process improvement efforts in industry and increase the likelihood of successfully completing them.},
 author = {U. Nikula and J. Sajaniemi},
 booktitle = {2005 Australian Software Engineering Conference},
 doi = {10.1109/aswec.2005.46},
 publisher = {{IEEE}},
 title = {Tackling the Complexity of Requirements Engineering Process Improvement by Partitioning the Improvement Task},
 url = {https://doi.org/10.1109%2Faswec.2005.46}
}

@article{Ogunyemi_2017,
 abstract = {Globalization is responsible for rapid development and release of information technologies. Globalization drives the competitiveness of people and organizations. Competitiveness makes organizations in particular to seek for solutions to enhance their competitive edge. Recent survey results on server virtualization suggest that the need to enhance competitiveness by reducing costs and improving business productivity is a major reason for the adoption of server virtualization in organizations. Thus, in taking adoption decisions on emerging technologies such as server virtualization, the provocative question we ask is: Is server virtualization implementation in business and public organizations a worthwhile investment? The outcomes of this study clearly show the answer is YES. However, the pitfalls associated with the implementation of these technologies are capable of making future adopters skeptical. This study examined the benefits and drawbacks of server virtualization implementation in 83 South African organizations. Server virtualization implementation has couple of drawbacks, which should be looked into.},
 author = {Abiodun Ogunyemi and Kevin Johnston},
 doi = {10.1142/s0219622017500146},
 journal = {International Journal of Information Technology {\&}amp$\mathsemicolon$ Decision Making},
 month = {apr},
 number = {03},
 pages = {711--736},
 publisher = {World Scientific Pub Co Pte Lt},
 title = {Is Server Virtualization Implementation in Business and Public Organizations a Worthwhile Investment?},
 url = {https://doi.org/10.1142%2Fs0219622017500146},
 volume = {16},
 year = {2017}
}

@inproceedings{Okonkwo_2018,
 abstract = {},
 author = {Wilfred C. Okonkwo and Magda Huisman},
 booktitle = {2018 {IEEE} 42nd Annual Computer Software and Applications Conference ({COMPSAC})},
 doi = {10.1109/compsac.2018.10243},
 month = {jul},
 publisher = {{IEEE}},
 title = {The Use of System Development Methodologies in the Development of Mobile Applications: Are they Worthy of Use?},
 url = {https://doi.org/10.1109%2Fcompsac.2018.10243},
 year = {2018}
}

@inproceedings{Passos_2011,
 abstract = {Folklore and beliefs are strong in the software practitioners' community. Software engineering is a communication intensive activity. Software engineers are innovation driven and regularly use automated resources to share ideas, new paradigms and approaches to support and improve their practices. This information flow generates technical folklore and beliefs (that do not have a formal trial basis). Software engineers applying practices are influenced by these and they are inevitably taken on board in the adoption of a particular technology or practice. This paper presents an industrial case study, using a qualitative approach, to investigate the origins and impacts of beliefs on software development team practices. Its main contribution is on the understanding of creation and evolution of technical beliefs, and in studying its use for team practices improvement in the software engineering industry.},
 author = {Carol Passos and Ana Paula Braun and Daniela S. Cruzes and Manoel Mendonca},
 booktitle = {2011 International Symposium on Empirical Software Engineering and Measurement},
 doi = {10.1109/esem.2011.63},
 month = {sep},
 publisher = {{IEEE}},
 title = {Analyzing the Impact of Beliefs in Software Project Practices},
 url = {https://doi.org/10.1109%2Fesem.2011.63},
 year = {2011}
}

@inproceedings{Passos_2013,
 abstract = {It is believed that people consider the implications of their actions and act based on a reasonable assessment of those implications. In this context, belief can be defined as a state of mind that embodies trust and confidence in something. So, behavior is driven by what is believed, by what is culturally assumed to be true about the world. Our work aims to study and characterize a belief system of software project teams to understand the beliefs underlying an intention or practice, and seek answers about how people progress from intention to behavior in software engineering environments. We applied a behavioral theory in terms of organizational and team level factors associated to beliefs about the software development practices. A set of interviews on origins, sources and impacts of beliefs on software practices was conducted with professionals from different project teams and companies. The results point out a strong influence of past experiences and repeated behavior on software development practices of project teams. Also, we list a set of practical recommendations for software companies that are dealing with the challenges of adopting new practices on software projects.},
 author = {Carol Passos and Daniela S. Cruzes and Arthur Hayne and Manoel Mendonca},
 booktitle = {2013 {ACM} / {IEEE} International Symposium on Empirical Software Engineering and Measurement},
 doi = {10.1109/esem.2013.31},
 month = {oct},
 publisher = {{IEEE}},
 title = {Recommendations to the Adoption of New Software Practices: A Case Study of Team Intention and Behavior in Three Software Companies},
 url = {https://doi.org/10.1109%2Fesem.2013.31},
 year = {2013}
}

@incollection{Petersen_2016,
 abstract = {Industry–academia collaboration in software engineering is essential for the relevance of research, as research may make important contributions to the improvement of software engineering. Thus, software engineering researchers are an asset in software process improvement. In this chapter, I present different experiences of being an embedded researcher in industry contributing to software process improvement. The process improvement works were focused on helping organizations to move from plan-driven processes to agile and lean processes. We will elaborate on the challenges, essential practices, and related benefits that were observed when working closely with industry in the role of embedded researchers. Supporting examples from different published cases form the basis for this experience report.},
 author = {Kai Petersen},
 booktitle = {Managing Software Process Evolution},
 doi = {10.1007/978-3-319-31545-4_12},
 pages = {235--255},
 publisher = {Springer International Publishing},
 title = {A Researcher's Experiences in Supporting Industrial Software Process Improvement},
 url = {https://doi.org/10.1007%2F978-3-319-31545-4_12},
 year = {2016}
}

@article{Pinheiro_2003,
 abstract = {This paper is an experience report on an initiative to incorporate requirements engineering practices into the development process of two large corporations. The project was framed by a government program to foster collaboration between academia, industry, and government agencies. Its expected result—proposals for cooperative work—is in itself a major challenge, since it was not decided from the beginning what aspect of requirements engineering would be covered by the proposals.We describe the cooperation process followed by the project partners, three universities, and two companies, the difficulties found therein, and compare our experience with other reports on the issue of adoption of requirements engineering into the mainstream practice.},
 author = {Francisco A. C. Pinheiro and Julio Cesar Sampaio do Prado Leite and Jaelson F. B. Castro},
 doi = {10.1023/a:1022994516210},
 journal = {The Journal of Technology Transfer},
 number = {2},
 pages = {159--165},
 publisher = {Springer Science and Business Media {LLC}},
 url = {https://doi.org/10.1023%2Fa%3A1022994516210},
 volume = {28},
 year = {2003}
}

@inproceedings{Ponce_2018,
 abstract = {},
 author = {Pedro Ponce and Arturo Molina},
 booktitle = {2018 {IEEE} International Conference on Engineering, Technology and Innovation ({ICE}/{ITMC})},
 doi = {10.1109/ice.2018.8436375},
 month = {jun},
 publisher = {{IEEE}},
 title = {Transfering Software Form Univesities to Industries: A Case Study {ICTL}},
 url = {https://doi.org/10.1109%2Fice.2018.8436375},
 year = {2018}
}

@inproceedings{Punter_2006,
 abstract = {In this position paper we address the issue of transferring a technology from research into an industrial organization by presenting a refined process for technology transfer. Based on over two decades of industrial experience, we identified the need for a dedicated technology engineering phase for that process. Although little attention has been paid to this technology engineering phase in the academic world, we believe it to be essential for sustainable technology transfer.},
 author = {Teade Punter and Ren{\'{e}} L. Krikhaar and Reinder J. Bril},
 booktitle = {Proceedings of the 2006 international workshop on Software technology transfer in software engineering},
 doi = {10.1145/1138046.1138052},
 month = {may},
 publisher = {{ACM}},
 title = {Sustainable Technology Transfer},
 url = {https://doi.org/10.1145%2F1138046.1138052},
 year = {2006}
}

@article{Punter_2009,
 abstract = {},
 author = {Teade Punter and Ren{\'{e}} L. Krikhaar and Reinder J. Bril},
 doi = {10.1016/j.jss.2008.12.035},
 journal = {Journal of Systems and Software},
 month = {jun},
 number = {6},
 pages = {993--1003},
 publisher = {Elsevier {BV}},
 title = {Software engineering technology innovation {\textendash} Turning research results into industrial success},
 url = {https://doi.org/10.1016%2Fj.jss.2008.12.035},
 volume = {82},
 year = {2009}
}

@article{Rahimi_2015,
 abstract = {Ludic engagement provides opportunity to gain from available gaming innovations to efficiently enhance mobility, reduce cost and error, and improve quality of life, particularly for patients suffering from stroke or other traumas left with reduced mobility and access to physical therapy often needed for long periods of time. Early clinical trials and implementations have provided promising evidences to the feasibility of using sensors, speech, voice recognition and visual interaction functionality of gaming consoles for assessing and improving physical performance of patients. This paper studies the cause and effect interplay of the salient derivers in the acceptance of ludic engagement. It reports on the conducted literature review and by performing ethnographic interviews creates a combined map of users' mental landscape using fuzzy cognitive map (FCM). Then using FCM simulation, the scenario of financial stimulation is identified as the most successful path to the timely adoption of ludic engagement.},
 author = {Noshad Rahimi and Julie Golzarian},
 doi = {10.1504/ijmei.2015.070130},
 journal = {International Journal of Medical Engineering and Informatics},
 number = {3},
 pages = {269},
 publisher = {Inderscience Publishers},
 title = {Assessing the Kinect technology acceptance/diffusion into healthcare (the case of physical therapy)},
 url = {https://doi.org/10.1504%2Fijmei.2015.070130},
 volume = {7},
 year = {2015}
}

@article{Rainer_2017,
 abstract = {Context: Software practitioners are often the primary source of information for software engineering research. They naturally produce information about their experiences of software practice, and the beliefs they infer from their experiences. Researchers must evaluate the quality and quantity of this information for their research. Objective: To examine how concepts and methods from argumentation research can be used to study practitioners' evidence, inference and beliefs so as to better understand and improve software practice. Method: We develop a preliminary framework and preliminary methodology, and use those to identify, extract and structure practitioners' evidence, inference and beliefs. We illustrate the application of the framework and methodology with examples from a practitioner's blog post. Result: The practitioner uses (factual) stories, analogies, examples and popular opinion as evidence, and uses that evidence in defeasible reasoning to justify his beliefs and to rebut the beliefs of other practitioners. Conclusion: The framework, methodology and examples could provide a foundation for software engineering researchers to develop a more sophisticated understanding of, and appreciation for, practitioners' defeasible evidence, inference and belief. Further work needs to automate (parts of) the methodology to support larger-scale application of the methodology.},
 author = {Austen Rainer},
 doi = {10.1016/j.infsof.2017.01.011},
 journal = {Information and Software Technology},
 month = {jul},
 pages = {62--80},
 publisher = {Elsevier {BV}},
 title = {Using argumentation theory to analyse software practitioners' defeasible evidence, inference and belief},
 url = {https://doi.org/10.1016%2Fj.infsof.2017.01.011},
 volume = {87},
 year = {2017}
}

@inproceedings{Ramakrishnan,
 abstract = {},
 author = {S. Ramakrishnan and A. Cambrell},
 booktitle = {Proceedings. Ninth {IEEE} International Conference on Engineering of Complex Computer Systems},
 doi = {10.1109/iceccs.2004.1310918},
 publisher = {{IEEE} Comput. Soc},
 title = {Muse over university organisational ecology in action and service-oriented architectures},
 url = {https://doi.org/10.1109%2Ficeccs.2004.1310918}
}

@inproceedings{Razdan_2009,
 abstract = {Technical computing has unique requirements which are exemplified by factors such as: an extreme focus on run-time performance, a high degree of responsiveness to the customer base, a continued focus on innovation, concurrent support on multiple computing platforms and most importantly, a very limited set of deep subject matter experts who have the skills to build the solution. Exacerbating the above issues is the fact that the field has traditionally seen a great deal of mergers and acquisition activity which leads quickly to an accumulation of disjoint software development systems. This paper describes a detailed case study built within a leading technical computing company which achieved significant success by focusing relentlessly on enhancing the productivity of the individual developer. The work was driven by the author as the general manager of the organization, and measured results of the transformation will be presented in this paper.},
 author = {Rahul Razdan and Steve Esposito and Jay Lawrence and Peter Conner},
 booktitle = {2009 3rd International Symposium on Empirical Software Engineering and Measurement},
 doi = {10.1109/esem.2009.5316000},
 month = {oct},
 publisher = {{IEEE}},
 title = {Empirical results from the transformation of a large commercial technical computing environment},
 url = {https://doi.org/10.1109%2Fesem.2009.5316000},
 year = {2009}
}

@article{Riemenschneider_2002,
 abstract = {Many organizations attempt to deploy methodologies intended to improve software development processes. However, resistance by individual software developers against using such methodologies often obstructs their successful deployment. To better explain why individual developers accept or resist methodologies, five theoretical models of individual intentions to accept information technology tools were examined. In a field study of 128 developers in a large organization that implemented a methodology, each model explained significant variance in developers' intentions to use the methodology. Similar to findings from the tool adoption context, we found that, if a methodology is not regarded as useful by developers, its prospects for successful deployment may be severely undermined. In contrast to the typical pattern of findings in a tool context, however, we found that methodology adoption intentions are driven by: 1) the presence of an organizational mandate to use the methodology, 2) the compatibility of the methodology with how developers perform their work, and 3) the opinions of developers' coworkers and supervisors toward using the methodology. Collectively, these results provide surprising new insights into why software developers accept or resist methodologies and suggest what software engineering managers might do to overcome developer resistance.},
 author = {C.K. Riemenschneider and B.C. Hardgrave and F.D. Davis},
 doi = {10.1109/tse.2002.1158287},
 journal = {{IEEE} Transactions on Software Engineering},
 month = {dec},
 number = {12},
 pages = {1135--1145},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Explaining software developer acceptance of methodologies: a comparison of five theoretical models},
 url = {https://doi.org/10.1109%2Ftse.2002.1158287},
 volume = {28},
 year = {2002}
}

@inproceedings{Rombach_2007,
 abstract = {The rapid and complex research and innovation processes require high-tech companies to optimize their technology transfer processes. It is clearly not sufficient to solely rely on internal R&D; strategic cooperations with external research centers of excellence are needed in order to compete in the global innovation market. Candidates for such strategic cooperations are universities, research institutions, and technology focused consulting companies. Key challenge is the effective integration of external competences into the company-internal innovation processes. In this paper we present a survey of the state-of-the-art in technology transfer, high-light promising success cases for the future, and derive success criteria for successful technology transfer in a global world. The cooperation between Siemens and Fraunhofer IESE is presented as a concrete example.},
 author = {Dieter Rombach and Reinhold Achatz},
 booktitle = {Future of Software Engineering ({FOSE} {\textquotesingle}07)},
 doi = {10.1109/fose.2007.16},
 month = {may},
 publisher = {{IEEE}},
 title = {Research Collaborations between Academia and Industry},
 url = {https://doi.org/10.1109%2Ffose.2007.16},
 year = {2007}
}

@inproceedings{Sanchez_2007,
 abstract = {Test-driven development (TDD) is an agile practice that is widely accepted and advocated by most agile methods and methodologists. In this paper, we report on a post hoc analysis of the results of an IBM team who has sustained use of TDD for five years and over ten releases of a Java-implemented product. The team worked from a design and wrote tests incrementally before or while they wrote code and, in the process, developed a significant asset of automated tests. The IBM team realized sustained quality improvement relative to a pre-TDD project and consistently had defect density below industry standards. As a result, our data indicate that the TDD practice can aid in the production of high quality products. This quality improvement would compensate for the moderate perceived productivity losses. Additionally, our data indicates that the use of TDD may decrease the degree to which code complexity increases as software ages, as measured by cyclomatic complexity metric.},
 author = {J.C. Sanchez and L. Williams and E.M. Maximilien},
 booktitle = {Agile 2007 ({AGILE} 2007)},
 doi = {10.1109/agile.2007.43},
 month = {aug},
 publisher = {{IEEE}},
 title = {On the Sustained Use of a Test-Driven Development Practice at {IBM}},
 url = {https://doi.org/10.1109%2Fagile.2007.43},
 year = {2007}
}

@inproceedings{Silva_2018,
 abstract = {Maintenance is often the most expensive and time-consuming of all software system lifecycle phases. Technical Debt (TD) refers to technical decisions on shortcuts and workarounds taken during the software development. It affects the internal quality of software. Therefore, software maintenance can be difficult when the TD is not perceived or managed in the projects. Despite the increasing attention of practitioners and researchers, TD studies indicate its management (TDM) is still incipient. Particularly in Brazilian Software Organizations (BSOs), there is still a lack of information on how practitioners perceive and manage the TD in software projects. This paper reports the results of two studies aiming to investigate the current knowledge level of practitioners from BSOs regarding TD and TDM, and to produce a summary of the available technologies to manage TD. To achieve these objectives, we surveyed practitioners from BSOs and undertook a quasi-Systematic Literature Review (qSLR) to gather specific TDM technologies. The survey results indicated that the general BSOs practitioners' knowledge regarding TD and TDM is still low. Few participants from the survey reported managing TD. The qSLR results provide evidence-based information about a set of TDM technologies, synthesized in evidence briefings to facilitate their use by software practitioners in the industry. Moreover, this paper offers links to a research package to aid in the replication process and support future investigations.},
 author = {Victor Silva and Helvio Jeronimo and Guilherme Horta Travassos},
 booktitle = {Proceedings of the {XVII} Brazilian Symposium on Software Quality},
 doi = {10.1145/3275245.3275267},
 month = {oct},
 publisher = {{ACM}},
 title = {Technical Debt Management in Brazilian Software Organizations},
 url = {https://doi.org/10.1145%2F3275245.3275267},
 year = {2018}
}

@inproceedings{Staples_2015,
 abstract = {},
 author = {Mark Staples},
 booktitle = {2015 {IEEE}/{ACM} 4th {SEMAT} Workshop on a General Theory of Software Engineering},
 doi = {10.1109/gtse.2015.14},
 month = {may},
 publisher = {{IEEE}},
 title = {The Unending Quest for Valid, Useful Software Engineering Theories},
 url = {https://doi.org/10.1109%2Fgtse.2015.14},
 year = {2015}
}

@inproceedings{Svensson_2010,
 abstract = {Quality requirements complement functional requirements with information on the target quality levels of software functions or emergent system quality aspects. In release planning the allocation of development effort in further investments into product enhancements, new or enhanced functions are competing with quality improvements for limited resources. When setting balanced quality targets for development of coming releases, the estimated costs of improved software quality is needed as a basis for decisions. In this paper, we present initial results from an industrial evaluation of modeling guidelines for the Cost View in the QUality PERformance (QUPER) model. The initial results indicate the feasibility of the proposed modeling approach to cost estimation of quality requirements in QUPER, but further validation is needed.},
 author = {Richard Berntsson Svensson and Björn Regnell and Aybuke Aurum},
 booktitle = {Proceedings of the 11th International Conference on Product Focused Software},
 doi = {10.1145/1961258.1961263},
 month = {jun},
 publisher = {{ACM}},
 title = {Towards modeling guidelines for capturing the cost of improving software product quality in release planning},
 url = {https://doi.org/10.1145%2F1961258.1961263},
 year = {2010}
}

@inproceedings{Tan_2009,
 abstract = {The competitive nature of today's business environment has made it necessary for educators to inculcate in our students a sense of innovativeness in Information Systems (IS) development. While working on real-world projects presents the most ideal opportunity to achieve this objective, it is not always possible to gain access to them. This paper proposes how the case study pedagogy using problem-based learning can be synergized with project-based learning to provide a feasible alternative. An integrative research model based on the IS development methodology acceptance theories is used to investigate the usefulness, satisfaction and acceptance of the proposed business innovation process.},
 author = {Wee-Kek Tan and Hock-Hai Teo},
 booktitle = {Proceedings of the special interest group on management information system{\textquotesingle}s 47th annual conference on Computer personnel research},
 doi = {10.1145/1542130.1542136},
 month = {may},
 publisher = {{ACM}},
 title = {Training students to be innovative information systems developers},
 url = {https://doi.org/10.1145%2F1542130.1542136},
 year = {2009}
}

@incollection{Terzidis_2018,
 abstract = {The process of commercializing new technologies, i.e. of creating technology push innovations, is poorly understood and modeled in very different and heterogeneous ways in the academic literature. Furthermore, no framework exists up to now to allow for practical facilitation like Design Thinking supporting user-centric innovations. To tackle these shortcomings, this chapter aims to improve the understanding of the technology push process and take initial steps towards a practical methodological framework. The understanding is enhanced by creating a consolidated and unified model of the process which builds on a systematic literature review. Additionally, methods are identified, evaluated and combined into a workshop format for the most critical phase of technology application selection. A case example in a university setting shows that the workshop is well-suited to advance technologies. Both the process model and the workshop concept are relevant for the academic and practical contexts: The process model aids in better understanding the technology push process and unifies different views. The workshop is an essential first step in designing a systematic framework for practical technology push developments with concrete methods and tools. The methodology is new to the field of innovation management and forms a well-designed starting point for similar endeavors.},
 author = {Orestis Terzidis and Leonid Vogel},
 booktitle = {{FGF} Studies in Small Business and Entrepreneurship},
 doi = {10.1007/978-3-319-73509-2_6},
 pages = {111--135},
 publisher = {Springer International Publishing},
 title = {A Unified Model of the Technology Push Process and Its Application in a Workshop Setting},
 url = {https://doi.org/10.1007%2F978-3-319-73509-2_6},
 year = {2018}
}

@inproceedings{Umarji,
 abstract = {Process improvement initiatives such as metrics programs have a high failure rate during their assimilation in a software organization. Lack of attention to social issues and lack of communication are some of the factors affecting their acceptance. Social Psychology includes study of such acceptance issues in the adoption of technology in the workplace. Although metrics implementations are often more intrusive and their benefits are indirect compared to workplace technology in general, both are introduced for similar reasons and induce organizational change. Therefore, we apply technology adoption concepts to metrics program implementation to develop a predictive model that takes as input organizational culture, practitioner mindset, and the nature of the metrics program. Our model relates these inputs to the likelihood of a successful metrics program implementation and to areas that may need improvement. This paper includes the results of a pilot study. The predictor variables ease of use, usefulness, control, and attitude were significantly correlated with the dependent variable, the respondent's intention to perform metrics activities.},
 author = {M. Umarji and H. Emurian},
 booktitle = {11th {IEEE} International Software Metrics Symposium ({METRICS}{\textquotesingle}05)},
 doi = {10.1109/metrics.2005.6},
 publisher = {{IEEE}},
 title = {Acceptance Issues in Metrics Program Implementation},
 url = {https://doi.org/10.1109%2Fmetrics.2005.6}
}

@article{Umarji_2005,
 abstract = {Software Process Improvement (SPI) initiatives induce organizational change, by introducing new tools, techniques and work practices. Organizations have to address acceptance issues such as resistance to change, compatibility and fear of adverse consequences. Social psychology literature includes the Technology Acceptance Model (TAM) and the Theory of Planned Behavior (TPB), which study such adoption issues and predict intention to use and actual usage of workplace technology. Some constructs of these models could be applied to software organizations to make it easier for them to counter the initial resistance and to assimilate process improvement into the work culture. To increase applicability of these models to the SPI context, some additional constructs are proposed, by taking into account organizational culture, the impact of changes caused by SPI and the unique characteristics of software developers.},
 author = {Medha Umarji and Carolyn Seaman},
 doi = {10.1145/1082983.1083121},
 journal = {{ACM} {SIGSOFT} Software Engineering Notes},
 month = {may},
 number = {4},
 pages = {1--6},
 publisher = {Association for Computing Machinery ({ACM})},
 title = {Predicting acceptance of Software Process Improvement},
 url = {https://doi.org/10.1145%2F1082983.1083121},
 volume = {30},
 year = {2005}
}

@inproceedings{Umarji_2005,
 abstract = {},
 author = {Medha Umarji and Carolyn Seaman},
 booktitle = {Proceedings of the 2005 workshop on Human and social factors of software engineering  - {HSSE} {\textquotesingle}05},
 doi = {10.1145/1083106.1083121},
 publisher = {{ACM} Press},
 title = {Predicting acceptance of Software Process Improvement},
 url = {https://doi.org/10.1145%2F1083106.1083121},
 year = {2005}
}

@article{van_Aswegen_2014,
 abstract = {},
 author = {Kobus van Aswegen and Magda Huisman and Estelle Taylor},
 doi = {10.1108/itse-09-2014-0026},
 journal = {Interactive Technology and Smart Education},
 month = {nov},
 number = {4},
 pages = {238--253},
 publisher = {Emerald},
 title = {To use or not to use? {SDM} utilisation in the development of {LMS} in South Africa},
 url = {https://doi.org/10.1108%2Fitse-09-2014-0026},
 volume = {11},
 year = {2014}
}

@incollection{Vavpoti__2004,
 abstract = {In the paper we present software development methodology evaluation model that helps a software development company to find out what is the most suitable methodology for its needs. The purpose of the evaluation model is not to prescribe the use of a certain methodology, but merely to suggest what kind of methodology is suitable for a certain type of organization or project. In the paper we discuss requirements and guidelines for the evaluation model, and design and function of the model.},
 author = {Damjan Vavpoti{\v{c}} and Marko Bajec and Marjan Krisper},
 booktitle = {Constructing the Infrastructure for the Knowledge Economy},
 doi = {10.1007/978-1-4757-4852-9_9},
 pages = {141--153},
 publisher = {Springer {US}},
 title = {Software Development Methodology Evaluation Model},
 url = {https://doi.org/10.1007%2F978-1-4757-4852-9_9},
 year = {2004}
}

@inproceedings{Vollmer_2019,
 abstract = {},
 author = {Anna Maria Vollmer and Silverio Martinez-Fernandez and Alessandra Bagnato and Jari Partanen and Lidia Lopez and Pilar Rodriguez},
 booktitle = {2019 {ACM}/{IEEE} International Symposium on Empirical Software Engineering and Measurement ({ESEM})},
 doi = {10.1109/esem.2019.8870162},
 month = {sep},
 publisher = {{IEEE}},
 title = {Practical experiences and value of applying software analytics to manage quality},
 url = {https://doi.org/10.1109%2Fesem.2019.8870162},
 year = {2019}
}

@inproceedings{von_Nostitz_Wallwitz_2018,
 abstract = {While promising software engineering approaches are proposed every day, only few are adapted by professional developers. There are many potential reasons for this, such as, problems in identifying helpful approaches, missing tools, or lacking practical relevance. With our current research, we are concerned to improve the knowledge transfer from research to practice. In this paper, we discuss the impact of development environments and programming languages on knowledge transfer - considering that many scientific approaches and tools are interesting for professional developers, but rarely adopted by them. We base our discussion mainly on our personal experiences with industry-academia collaborations. To determine whether these experiences also apply to other developers, we additionally conducted a survey with 89 participants from academia and industry. The first results of our on-going work indicate a gap between the development environments and programming languages that are supported or used by researchers and those that are applied in industry. Based on our results, we describe initial discussions that can help to improve collaborations between industry and research.},
 author = {Ivonne von Nostitz-Wallwitz and Jacob Krüger and Thomas Leich},
 booktitle = {Proceedings of the 5th International Workshop on Software Engineering Research and Industrial Practice},
 doi = {10.1145/3195546.3195548},
 month = {may},
 publisher = {{ACM}},
 title = {Towards improving industrial adoption},
 url = {https://doi.org/10.1145%2F3195546.3195548},
 year = {2018}
}

@inproceedings{Wieringa_2008,
 abstract = {For several decades there has been a debate in the computing sciences about the relative roles of design and empirical research, and about the contribution of design and research methodology to the relevance of research results. In this minitutorial we review this debate and compare it with evidence about the relation between design and research in the history of science and technology. Our review shows that research and design are separate but concurrent activities, and that relevance of research results depends on problem setting rather than on rigorous methods. We argue that rigorous scientific methods separate design from research, and we give simple model for how to do this in a problem-driven way.},
 author = {Roel Wieringa and Hans Heerkens},
 booktitle = {2008 16th {IEEE} International Requirements Engineering Conference},
 doi = {10.1109/re.2008.63},
 month = {sep},
 publisher = {{IEEE}},
 title = {Design Science, Engineering Science and Requirements Engineering},
 url = {https://doi.org/10.1109%2Fre.2008.63},
 year = {2008}
}

@inproceedings{Wieringa_2010,
 abstract = {Design scientists have to balance the demands of methodological rigor that they share with purely curiosity-driven scientists, with the demands of practical utility that they share with utility-driven engineers. Balancing these conflicting demands can be conceptually complex and may lead to methodological mistakes. For example, treating a design question as an empirical research question may lead to researcher to omit the identification of the practical problem to solve, to omit the identification of stakeholder-motivated evaluation criteria, or to omit trade-off and sensitivity analysis. This tutorial aims to clear up this methodological mist in the case of software engineering (SE) research.},
 author = {Roel Wieringa},
 booktitle = {Proceedings of the 32nd {ACM}/{IEEE} International Conference on Software Engineering - Volume 2},
 doi = {10.1145/1810295.1810446},
 month = {may},
 publisher = {{ACM}},
 title = {Design science methodology},
 url = {https://doi.org/10.1145%2F1810295.1810446},
 year = {2010}
}

@inproceedings{Yin_2020,
 abstract = {},
 author = {Likang Yin and Vladimir Filkov},
 booktitle = {Proceedings of the 35th {IEEE}/{ACM} International Conference on Automated Software Engineering},
 doi = {10.1145/3324884.3416640},
 month = {dec},
 publisher = {{ACM}},
 title = {Team discussions and dynamics during {DevOps} tool adoptions in {OSS} projects},
 url = {https://doi.org/10.1145%2F3324884.3416640},
 year = {2020}
}

@inproceedings{Eldh_2013,
 abstract = {Research collaborations must be set up for a win-win relationship, avoiding many hurdles along the way. In this short paper the goal is to identify some considerations when conducting empirical studies in industry. These considerations deal with problem solution approaches, communication focus, unpleasant results, mismatching interpretations and scope, business aspects and some evaluation criteria for a successful collaboration.},
 author = {Sigrid Eldh},
 booktitle = {2013 1st International Workshop on Conducting Empirical Studies in Industry ({CESI})},
 doi = {10.1109/cesi.2013.6618476},
 month = {may},
 publisher = {{IEEE}},
 title = {Some researcher considerations when conducting empirical studies in industry},
 url = {https://doi.org/10.1109%2Fcesi.2013.6618476},
 year = {2013}
}

@inproceedings{Ferreira_2021,
 abstract = {},
 author = {Mvian Ferreira and Mariza Bigonha and Kecia A. M. Ferreira},
 booktitle = {2021 {IEEE}/{ACM} 8th International Workshop on Software Engineering Research and Industrial Practice ({SER}{\&}amp$\mathsemicolon${IP})},
 doi = {10.1109/ser-ip52554.2021.00015},
 month = {jun},
 publisher = {{IEEE}},
 title = {On The Gap Between Software Maintenance Theory and Practitioners' Approaches},
 url = {https://doi.org/10.1109%2Fser-ip52554.2021.00015},
 year = {2021}
}

@article{Garousi_2016,
 abstract = {},
 author = {Vahid Garousi and Matt M. Eskandar and Kadir Herkilo{\u{g}}lu},
 doi = {10.1007/s11219-016-9319-5},
 journal = {Software Quality Journal},
 month = {jun},
 number = {4},
 pages = {1091--1143},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Industry{\textendash}academia collaborations in software testing: experience and success stories from Canada and Turkey},
 url = {https://doi.org/10.1007%2Fs11219-016-9319-5},
 volume = {25},
 year = {2016}
}

@article{Garousi_2016,
 abstract = {Context: The global software industry and the software engineering (SE) academia are two large communities. However, unfortunately, the level of joint industry-academia collaborations in SE is still relatively very low, compared to the amount of activity in each of the two communities. It seems that the two ’camps’ show only limited interest/motivation to collaborate with one other. Many researchers and practitioners have written about the challenges, success patterns (what to do, i.e., how to collaborate) and anti-patterns (what not do do) for industry-academia collaborations.},
 author = {Vahid Garousi and Kai Petersen and Baris Ozkan},
 doi = {10.1016/j.infsof.2016.07.006},
 journal = {Information and Software Technology},
 month = {nov},
 pages = {106--127},
 publisher = {Elsevier {BV}},
 title = {Challenges and best practices in industry-academia collaborations in software engineering: A systematic literature review},
 url = {https://doi.org/10.1016%2Fj.infsof.2016.07.006},
 volume = {79},
 year = {2016}
}

@article{Kalenda_2018,
 abstract = {},
 author = {Martin Kalenda and Petr Hyna and Bruno Rossi},
 doi = {10.1002/smr.1954},
 journal = {Journal of Software: Evolution and Process},
 month = {may},
 number = {10},
 pages = {e1954},
 publisher = {Wiley},
 title = {Scaling agile in large organizations: Practices, challenges, and success factors},
 url = {https://doi.org/10.1002%2Fsmr.1954},
 volume = {30},
 year = {2018}
}

@article{Malhotra_2022,
 abstract = {Industry-academia collaboration (IAC) has long been a source of discussion in various ways. A vital first step toward closing the gap is fostering alumni engagement in industry and academia. Industry-academia collaborations are like earth and water, and they live in harmony. They cannot exist apart from one another. The collaborative effort between industry and academia promotes improvement and innovation in technology and innovative research and enables the university to be more relevant to the industry. This article proposes a collaborative approach based on alumni influences and uses secondary data on the influences of alumni in engineering to enrich the collaboration between industry and academia. The industry and academia utilize the alumni’s potential to facilitate communication and offer their students and staff facilities. The research findings can be used by policymakers to innovate in the field of engineering and to strengthen the partnership between industry and academia in society. The model enables academia and industry to utilize the alumni strengths in enriching the collaboration; it also enhances academic research output, recruitment, fundraising, marketing, product promotion, and internship opportunities for students via alumni active participation. We propose some significant agendas for future work.},
 author = {Ruchika Malhotra and Massoud Massoudi and Rajni Jindal},
 doi = {10.1007/s10639-022-11276-1},
 journal = {Education and Information Technologies},
 month = {aug},
 number = {2},
 pages = {2263--2289},
 publisher = {Springer Science and Business Media {LLC}},
 title = {An alumni-based collaborative model to strengthen academia and industry partnership: The current challenges and strengths},
 url = {https://doi.org/10.1007%2Fs10639-022-11276-1},
 volume = {28},
 year = {2022}
}

@inproceedings{Mart_nez_Fern_ndez_2014,
 abstract = {More and more, software engineering researchers are motivated to solve real problems that bring value to industry. An example is the industry-academia collaboration described in this paper among everis, an IT consulting firm, and the GESSI research group at UPC. The goal of this paper is twofold: to evaluate the success of the collaboration, and to report the experience with conducting empirical studies in the industry and lessons learnt. We evaluated our collaboration with an existing model for technology transfer, and performed a focus group discussion to identify challenges we have faced. After initialization and alignment of the collaboration, a high maturity level has been achieved: we have obtained the first results in form of proposed solutions, scientific publications, and pilots run in real projects. In spite of this positive progress, further initiatives need to be undertaken in the last phases of the collaboration to achieve high degrees of maturity in deployment impact, industry benefit and innovativeness. Evaluating the collaboration has been positive, since we identified the next steps to be taken to achieve a high degree of technology transfer and innovation dissemination. We think it is a needed step in industry-academia collaborations in order to improve their success.},
 author = {Silverio Mart{\'{\i}}nez-Fern{\'{a}}ndez and Helena Martins Marques},
 booktitle = {Proceedings of the 2nd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1145/2593690.2593696},
 month = {jun},
 publisher = {{ACM}},
 title = {Practical experiences in designing and conducting empirical studies in industry-academia collaboration},
 url = {https://doi.org/10.1145%2F2593690.2593696},
 year = {2014}
}

@incollection{Petersen_2016,
 abstract = {Industry–academia collaboration in software engineering is essential for the relevance of research, as research may make important contributions to the improvement of software engineering. Thus, software engineering researchers are an asset in software process improvement. In this chapter, I present different experiences of being an embedded researcher in industry contributing to software process improvement. The process improvement works were focused on helping organizations to move from plan-driven processes to agile and lean processes. We will elaborate on the challenges, essential practices, and related benefits that were observed when working closely with industry in the role of embedded researchers. Supporting examples from different published cases form the basis for this experience report.},
 author = {Kai Petersen},
 booktitle = {Managing Software Process Evolution},
 doi = {10.1007/978-3-319-31545-4_12},
 pages = {235--255},
 publisher = {Springer International Publishing},
 title = {A Researcher's Experiences in Supporting Industrial Software Process Improvement},
 url = {https://doi.org/10.1007%2F978-3-319-31545-4_12},
 year = {2016}
}

@article{Rico_2021,
 abstract = {},
 author = {Sergio Rico and Elizabeth Bjarnason and Emelie Engström and Martin Höst and Per Runeson},
 doi = {10.1002/smr.2372},
 journal = {Journal of Software: Evolution and Process},
 month = {jul},
 number = {10},
 publisher = {Wiley},
 title = {A case study of industry{\textendash}academia communication in a joint software engineering research project},
 url = {https://doi.org/10.1002%2Fsmr.2372},
 volume = {33},
 year = {2021}
}

@inproceedings{Runeson_2014,
 abstract = {In industry–academia collaboration projects, there are many issues related to different time horizons in industry and academia. If not adressed upfront, they may hinder collabora-tion in such projects. We analyze our expe-riences from a 10 year industry–academia col-laboration program, the EASE Industrial Ex-cellence Center in Sweden, and identify issues and feasible practices to overcome the hur-dles of different time horizons. Specifically, we identify issues related to contracts, goals, re-sults, organization (in)stability, and work prac-tices. We identify several areas where the time horizon is different, and conclude that mutual awareness of these differences and management commitment to the collaboration are the key means to overcome the differences. The launch of a mediating institute may also be part of the solution.},
 author = {Per Runeson and Sten Minör and Johan Sven{\'{e}}r},
 booktitle = {Proceedings of the 2014 international workshop on Long-term industrial collaboration on software engineering},
 doi = {10.1145/2647648.2647652},
 month = {sep},
 publisher = {{ACM}},
 title = {Get the cogs in synch},
 url = {https://doi.org/10.1145%2F2647648.2647652},
 year = {2014}
}

@inproceedings{Runeson_2014,
 abstract = {Industry–academia projects exist in complex contexts of various stakeholders, time perspec-tives, and goals. In order to analyze projects and communicate about them, we have de-fined an "architectural" model for industry– academia collaboration, inspired by Kruchten's software architecture model. The model has four views of i) time, ii) space, iii) activity and iv) domain, corresponding to the ques-tions: when, where, how and what. The +1 view is the scenario, binding the other four to-gether. We illustrate the model by applying it to the Industrial Excellence Center EASE and the Sigrun Software Innovation and En-gineering Institute. The model helps analyz-ing industry–academia collaboration projects, to find gaps and reduce redundant work.},
 author = {Per Runeson and Sten Minör},
 booktitle = {Proceedings of the 2014 international workshop on Long-term industrial collaboration on software engineering},
 doi = {10.1145/2647648.2647651},
 month = {sep},
 publisher = {{ACM}},
 title = {The 4$\mathplus$1 view model of industry--academia collaboration},
 url = {https://doi.org/10.1145%2F2647648.2647651},
 year = {2014}
}

@inproceedings{Shanbhag_2022,
 abstract = {},
 author = {Shriram Shanbhag and Sridhar Chimalakonda},
 booktitle = {Proceedings of the 30th {ACM} Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
 doi = {10.1145/3540250.3560883},
 month = {nov},
 publisher = {{ACM}},
 title = {Exploring the under-explored terrain of non-open source data for software engineering through the lens of federated learning},
 url = {https://doi.org/10.1145%2F3540250.3560883},
 year = {2022}
}

@inproceedings{Tripathi_2015,
 abstract = {Mining Software Repositories (MSR) is an applied and practise-oriented field aimed at solving real problems encountered by practitioners and bringing value to Industry. We believe that empirical studies on both Open Source Software (OSS) and Closed or Proprietary Source (CSS/PSS) is required in MSR research to increase generalizability or transferability of findings and reduce external (or threats) validity concerns. Furthermore, we believe that a collaboration between University and Industry is must or important in achieving the stated goals and agenda of MSR research (such as deployment and technology transfer). We analyse past five years of research papers published in MSR series of conferences (2010-2014) and count the number of studies using solely OSS data or solely CSS data or both OSS and CSS data. We also count the number of papers published by authors solely from Universities, solely from Industry and from both University and Industry. We present our findings which indicate lack of University-Industry collaboration (measured using co-authorship in scientific publications) and paucity of empirical studies on CSS/PSS data. Our analysis reveals that out of 187 studies over a period of 5 years, 90:9% studies are conducted solely on OSS dataset. We present our findings which indicate that only 14:43% of the studies involve a University-Industry collaboration.},
 author = {Ambika Tripathi and Savita Dabral and Ashish Sureka},
 booktitle = {2015 {IEEE} 1st International Workshop on Software Analytics ({SWAN})},
 doi = {10.1109/swan.2015.7070489},
 month = {mar},
 publisher = {{IEEE}},
 title = {University-industry collaboration and open source software ({OSS}) dataset in mining software repositories ({MSR}) research},
 url = {https://doi.org/10.1109%2Fswan.2015.7070489},
 year = {2015}
}

@inproceedings{von_Nostitz_Wallwitz_2018,
 abstract = {While promising software engineering approaches are proposed every day, only few are adapted by professional developers. There are many potential reasons for this, such as, problems in identifying helpful approaches, missing tools, or lacking practical relevance. With our current research, we are concerned to improve the knowledge transfer from research to practice. In this paper, we discuss the impact of development environments and programming languages on knowledge transfer - considering that many scientific approaches and tools are interesting for professional developers, but rarely adopted by them. We base our discussion mainly on our personal experiences with industry-academia collaborations. To determine whether these experiences also apply to other developers, we additionally conducted a survey with 89 participants from academia and industry. The first results of our on-going work indicate a gap between the development environments and programming languages that are supported or used by researchers and those that are applied in industry. Based on our results, we describe initial discussions that can help to improve collaborations between industry and research.},
 author = {Ivonne von Nostitz-Wallwitz and Jacob Krüger and Thomas Leich},
 booktitle = {Proceedings of the 5th International Workshop on Software Engineering Research and Industrial Practice},
 doi = {10.1145/3195546.3195548},
 month = {may},
 publisher = {{ACM}},
 title = {Towards improving industrial adoption},
 url = {https://doi.org/10.1145%2F3195546.3195548},
 year = {2018}
}

@inproceedings{Wohlin_2013,
 abstract = {Software engineering research can be done in many ways, in particular it can be done in different ways when it comes to working with industry. This paper presents a list of top 10 challenges to work with industry based on our experience from working with industry in a very close collaboration with continuous exchange of knowledge and information. The top 10 list is based on a large number of research projects and empirical studies conducted with industrial research partners since 1983. It is concluded that close collaboration is a long-term undertaking and a large investment. The importance of addressing the top 10 challenges is stressed, since they form the basis for a long-term sustainable and successful collaboration between industry and academia.},
 author = {Claes Wohlin},
 booktitle = {2013 1st International Workshop on Conducting Empirical Studies in Industry ({CESI})},
 doi = {10.1109/cesi.2013.6618469},
 month = {may},
 publisher = {{IEEE}},
 title = {Empirical software engineering research with industry: Top 10 challenges},
 url = {https://doi.org/10.1109%2Fcesi.2013.6618469},
 year = {2013}
}

@inproceedings{Enoiu_2014,
 abstract = {hen it comes to industrial organizations, current collaboration efforts in software engineering research are very often kept in-house, depriving these organizations off the skills necessary to build independent collaborative research. The current trend, towards empirical software engineering research, requires certain standards to be established which would guide these collaborative efforts in creating a strong partnership that promotes independent, evidence-based, software engineering research. This paper examines key enabling factors for an efficient and effective industry-academia collaboration in the software testing domain. A major finding of the research was that while technology is a strong enabler to better collaboration, it must be complemented with industrial openness to disclose research results and the use of a dedicated tooling platform. We use as an example an automated test generation approach that has been developed in the last two years collaboratively with Bombardier Transportation AB in Sweden.},
 author = {Eduard Paul Enoiu and Adnan {\v{C}}au{\v{s}}evi{\'{c}}},
 booktitle = {Proceedings of the 2014 international workshop on Long-term industrial collaboration on software engineering},
 doi = {10.1145/2647648.2647655},
 month = {sep},
 publisher = {{ACM}},
 title = {Enablers and impediments for collaborative research in software testing},
 url = {https://doi.org/10.1145%2F2647648.2647655},
 year = {2014}
}

@article{Garousi_2016,
 abstract = {},
 author = {Vahid Garousi and Matt M. Eskandar and Kadir Herkilo{\u{g}}lu},
 doi = {10.1007/s11219-016-9319-5},
 journal = {Software Quality Journal},
 month = {jun},
 number = {4},
 pages = {1091--1143},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Industry{\textendash}academia collaborations in software testing: experience and success stories from Canada and Turkey},
 url = {https://doi.org/10.1007%2Fs11219-016-9319-5},
 volume = {25},
 year = {2016}
}

@article{Garousi_2016,
 abstract = {Context: The global software industry and the software engineering (SE) academia are two large communities. However, unfortunately, the level of joint industry-academia collaborations in SE is still relatively very low, compared to the amount of activity in each of the two communities. It seems that the two ’camps’ show only limited interest/motivation to collaborate with one other. Many researchers and practitioners have written about the challenges, success patterns (what to do, i.e., how to collaborate) and anti-patterns (what not do do) for industry-academia collaborations.},
 author = {Vahid Garousi and Kai Petersen and Baris Ozkan},
 doi = {10.1016/j.infsof.2016.07.006},
 journal = {Information and Software Technology},
 month = {nov},
 pages = {106--127},
 publisher = {Elsevier {BV}},
 title = {Challenges and best practices in industry-academia collaborations in software engineering: A systematic literature review},
 url = {https://doi.org/10.1016%2Fj.infsof.2016.07.006},
 volume = {79},
 year = {2016}
}

@inproceedings{Lavallee_2015,
 abstract = {Convincing industrial partners to support an exploratory study can be difficult, as benefits are often fuzzy at the beginning. The objective of this paper is to present recommendations for industrial exploratory studies based on our experience. The recommendations are based on ten months of observations during a non-participant, exploratory study with a single industrial partner. This study confirms a number of methodological challenges already identified in the software engineering literature. Based on recommendations from the literature and our own experience, we propose a process for future observational exploratory studies.},
 author = {Mathieu Lavallee and Pierre N. Robillard},
 booktitle = {2015 {IEEE}/{ACM} 3rd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1109/cesi.2015.10},
 month = {may},
 publisher = {{IEEE}},
 title = {Planning for the Unknown: Lessons Learned from Ten Months of Non-participant Exploratory Observations in the Industry},
 url = {https://doi.org/10.1109%2Fcesi.2015.10},
 year = {2015}
}

@incollection{Petersen_2016,
 abstract = {Industry–academia collaboration in software engineering is essential for the relevance of research, as research may make important contributions to the improvement of software engineering. Thus, software engineering researchers are an asset in software process improvement. In this chapter, I present different experiences of being an embedded researcher in industry contributing to software process improvement. The process improvement works were focused on helping organizations to move from plan-driven processes to agile and lean processes. We will elaborate on the challenges, essential practices, and related benefits that were observed when working closely with industry in the role of embedded researchers. Supporting examples from different published cases form the basis for this experience report.},
 author = {Kai Petersen},
 booktitle = {Managing Software Process Evolution},
 doi = {10.1007/978-3-319-31545-4_12},
 pages = {235--255},
 publisher = {Springer International Publishing},
 title = {A Researcher's Experiences in Supporting Industrial Software Process Improvement},
 url = {https://doi.org/10.1007%2F978-3-319-31545-4_12},
 year = {2016}
}

@inproceedings{Strandberg_2019,
 abstract = {},
 author = {Per Erik Strandberg},
 booktitle = {2019 {ACM}/{IEEE} International Symposium on Empirical Software Engineering and Measurement ({ESEM})},
 doi = {10.1109/esem.2019.8870192},
 month = {sep},
 publisher = {{IEEE}},
 title = {Ethical Interviews in Software Engineering},
 url = {https://doi.org/10.1109%2Fesem.2019.8870192},
 year = {2019}
}

@article{Strandberg_2022,
 abstract = {Software testing is key for quality assurance of embedded systems. However, with increased development pace, the amount of test results data risks growing to a level where exploration and visualization of the results are unmanageable. This paper covers a tool, Tim, implemented at a company developing embedded systems, where software development occurs in parallel branches and nightly testing is partitioned over software branches, test systems and test cases. Tim aims to replace a previous solution with problems of scalability, requirements and technological flora. Tim was implemented with a reference group over several months. For validation, data were collected both from reference group meetings and logs from the usage of the tool. Data were analyzed quantitatively and qualitatively. The main contributions from the study include the implementation of eight views for test results exploration and visualization, the identification of four solutions patterns for these views (filtering, aggregation, previews and comparisons), as well as six challenges frequently discussed at reference group meetings (expectations, anomalies, navigation, integrations, hardware details and plots). Results are put in perspective with related work and future work is proposed, e.g., enhanced anomaly detection and integrations with more systems such as risk management, source code and requirements repositories.},
 author = {Per Erik Strandberg and Wasif Afzal and Daniel Sundmark},
 doi = {10.1007/s10009-022-00647-1},
 journal = {International Journal on Software Tools for Technology Transfer},
 month = {feb},
 number = {2},
 pages = {261--285},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Software test results exploration and visualization with continuous integration and nightly testing},
 url = {https://doi.org/10.1007%2Fs10009-022-00647-1},
 volume = {24},
 year = {2022}
}

@article{Garousi_2016,
 abstract = {},
 author = {Vahid Garousi and Matt M. Eskandar and Kadir Herkilo{\u{g}}lu},
 doi = {10.1007/s11219-016-9319-5},
 journal = {Software Quality Journal},
 month = {jun},
 number = {4},
 pages = {1091--1143},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Industry{\textendash}academia collaborations in software testing: experience and success stories from Canada and Turkey},
 url = {https://doi.org/10.1007%2Fs11219-016-9319-5},
 volume = {25},
 year = {2016}
}

@article{Garousi_2016,
 abstract = {Context: The global software industry and the software engineering (SE) academia are two large communities. However, unfortunately, the level of joint industry-academia collaborations in SE is still relatively very low, compared to the amount of activity in each of the two communities. It seems that the two ’camps’ show only limited interest/motivation to collaborate with one other. Many researchers and practitioners have written about the challenges, success patterns (what to do, i.e., how to collaborate) and anti-patterns (what not do do) for industry-academia collaborations.},
 author = {Vahid Garousi and Kai Petersen and Baris Ozkan},
 doi = {10.1016/j.infsof.2016.07.006},
 journal = {Information and Software Technology},
 month = {nov},
 pages = {106--127},
 publisher = {Elsevier {BV}},
 title = {Challenges and best practices in industry-academia collaborations in software engineering: A systematic literature review},
 url = {https://doi.org/10.1016%2Fj.infsof.2016.07.006},
 volume = {79},
 year = {2016}
}

@incollection{Guillot_2017,
 abstract = {},
 author = {Isabelle Guillot and Geetha Paulmani and Vivekanandan Kumar and Shawn N. Fraser},
 booktitle = {Lecture Notes in Computer Science},
 doi = {10.1007/978-3-319-63874-4_15},
 pages = {196--212},
 publisher = {Springer International Publishing},
 title = {Case Studies of Industry-Academia Research Collaborations for Software Development with Agile},
 url = {https://doi.org/10.1007%2F978-3-319-63874-4_15},
 year = {2017}
}

@article{Hansen_2021,
 abstract = {},
 author = {Irina-Emily Hansen and Ola Jon Mork and Torgeir Welo and Geir Ringen},
 doi = {10.1007/s13132-021-00846-2},
 journal = {Journal of the Knowledge Economy},
 month = {nov},
 number = {4},
 pages = {3172--3194},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Bridging the `Valley of Death': Can Agile Principles Be Applied in Industry-Academia Research and Innovation Projects?},
 url = {https://doi.org/10.1007%2Fs13132-021-00846-2},
 volume = {13},
 year = {2021}
}

@inproceedings{Kanso_2014,
 abstract = {Collaborative research between academia and industry is considered by many the perfect combination of expertise. The strong academic theoretical background is perfectly complemented by the applied knowledge of the industry. Yet we see many collaborative projects that fail to deliver the intended results. We believe that long-term collaboration should be based on foundations that ensure its success. In this paper we aim at defining those foundations by reflecting on the successful collaborative research projects we achieved.},
 author = {Ali Kanso and Denis Monette},
 booktitle = {Proceedings of the 2014 international workshop on Long-term industrial collaboration on software engineering},
 doi = {10.1145/2647648.2647654},
 month = {sep},
 publisher = {{ACM}},
 title = {Foundations for long-term collaborative research},
 url = {https://doi.org/10.1145%2F2647648.2647654},
 year = {2014}
}

@inproceedings{Kruger_2017,
 abstract = {},
 author = {Jacob Kruger and Ivonne Schroter and Andy Kenner and Thomas Leich},
 booktitle = {2017 {IEEE}/{ACM} 5th International Workshop on Conducting Empirical Studies in Industry ({CESI})},
 doi = {10.1109/cesi.2017.6},
 month = {may},
 publisher = {{IEEE}},
 title = {Empirical Studies in Question-Answering Systems: A Discussion},
 url = {https://doi.org/10.1109%2Fcesi.2017.6},
 year = {2017}
}

@inproceedings{Lavallee_2015,
 abstract = {Convincing industrial partners to support an exploratory study can be difficult, as benefits are often fuzzy at the beginning. The objective of this paper is to present recommendations for industrial exploratory studies based on our experience. The recommendations are based on ten months of observations during a non-participant, exploratory study with a single industrial partner. This study confirms a number of methodological challenges already identified in the software engineering literature. Based on recommendations from the literature and our own experience, we propose a process for future observational exploratory studies.},
 author = {Mathieu Lavallee and Pierre N. Robillard},
 booktitle = {2015 {IEEE}/{ACM} 3rd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1109/cesi.2015.10},
 month = {may},
 publisher = {{IEEE}},
 title = {Planning for the Unknown: Lessons Learned from Ten Months of Non-participant Exploratory Observations in the Industry},
 url = {https://doi.org/10.1109%2Fcesi.2015.10},
 year = {2015}
}

@article{Malhotra_2022,
 abstract = {Industry-academia collaboration (IAC) has long been a source of discussion in various ways. A vital first step toward closing the gap is fostering alumni engagement in industry and academia. Industry-academia collaborations are like earth and water, and they live in harmony. They cannot exist apart from one another. The collaborative effort between industry and academia promotes improvement and innovation in technology and innovative research and enables the university to be more relevant to the industry. This article proposes a collaborative approach based on alumni influences and uses secondary data on the influences of alumni in engineering to enrich the collaboration between industry and academia. The industry and academia utilize the alumni’s potential to facilitate communication and offer their students and staff facilities. The research findings can be used by policymakers to innovate in the field of engineering and to strengthen the partnership between industry and academia in society. The model enables academia and industry to utilize the alumni strengths in enriching the collaboration; it also enhances academic research output, recruitment, fundraising, marketing, product promotion, and internship opportunities for students via alumni active participation. We propose some significant agendas for future work.},
 author = {Ruchika Malhotra and Massoud Massoudi and Rajni Jindal},
 doi = {10.1007/s10639-022-11276-1},
 journal = {Education and Information Technologies},
 month = {aug},
 number = {2},
 pages = {2263--2289},
 publisher = {Springer Science and Business Media {LLC}},
 title = {An alumni-based collaborative model to strengthen academia and industry partnership: The current challenges and strengths},
 url = {https://doi.org/10.1007%2Fs10639-022-11276-1},
 volume = {28},
 year = {2022}
}

@incollection{Petersen_2016,
 abstract = {Industry–academia collaboration in software engineering is essential for the relevance of research, as research may make important contributions to the improvement of software engineering. Thus, software engineering researchers are an asset in software process improvement. In this chapter, I present different experiences of being an embedded researcher in industry contributing to software process improvement. The process improvement works were focused on helping organizations to move from plan-driven processes to agile and lean processes. We will elaborate on the challenges, essential practices, and related benefits that were observed when working closely with industry in the role of embedded researchers. Supporting examples from different published cases form the basis for this experience report.},
 author = {Kai Petersen},
 booktitle = {Managing Software Process Evolution},
 doi = {10.1007/978-3-319-31545-4_12},
 pages = {235--255},
 publisher = {Springer International Publishing},
 title = {A Researcher's Experiences in Supporting Industrial Software Process Improvement},
 url = {https://doi.org/10.1007%2F978-3-319-31545-4_12},
 year = {2016}
}

@inproceedings{Prechelt_2015,
 abstract = {Context: The difficulty (not just effort) of obtaining access for software engineering empirical studies in industry varies greatly. Supposedly, some of this variance in difficulty is particular, stemming from properties of individual contexts (the industrial partners and their work), while the rest is repeatable, related to properties of the research question and research design. Question: What are these recurring difficulty factors that arise from research question and research design? What mechanisms produce their influence? Method: We use ideation and knowledge extraction from research experience to identify potential difficulty factors, use expert discussion to understand their mechanisms, and use concept analysis to arrange them into a taxonomy. We evaluate the result by comparatively applying it to two research efforts pursued by the same research group. Results: We find six scope factors, five problematic intervention effects factors, and seven helpful intervention (side-)effects factors. Conclusion: Considering these factors systematically during the formulation of a research question and the design of a research method can help with balancing data collection difficulty with results validity and relevance.},
 author = {Lutz Prechelt and Franz Zieris and Holger Schmeisky},
 booktitle = {2015 {IEEE}/{ACM} 3rd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1109/cesi.2015.11},
 month = {may},
 publisher = {{IEEE}},
 title = {Difficulty Factors of Obtaining Access for Empirical Studies in Industry},
 url = {https://doi.org/10.1109%2Fcesi.2015.11},
 year = {2015}
}

@article{Rico_2021,
 abstract = {},
 author = {Sergio Rico and Elizabeth Bjarnason and Emelie Engström and Martin Höst and Per Runeson},
 doi = {10.1002/smr.2372},
 journal = {Journal of Software: Evolution and Process},
 month = {jul},
 number = {10},
 publisher = {Wiley},
 title = {A case study of industry{\textendash}academia communication in a joint software engineering research project},
 url = {https://doi.org/10.1002%2Fsmr.2372},
 volume = {33},
 year = {2021}
}

@inproceedings{Sandberg_2017,
 abstract = {},
 author = {Anna Borjesson Sandberg and Ivica Crnkovic},
 booktitle = {2017 {IEEE}/{ACM} 39th International Conference on Software Engineering: Software Engineering in Practice Track ({ICSE}-{SEIP})},
 doi = {10.1109/icse-seip.2017.20},
 month = {may},
 publisher = {{IEEE}},
 title = {Meeting Industry-Academia Research Collaboration Challenges with Agile Methodologies},
 url = {https://doi.org/10.1109%2Ficse-seip.2017.20},
 year = {2017}
}

@inproceedings{Widforss_2015,
 abstract = {},
 author = {Gunnar Widforss and Malin Rosqvist},
 booktitle = {2015 {IEEE} International Conference on Engineering, Technology and Innovation/ International Technology Management Conference ({ICE}/{ITMC})},
 doi = {10.1109/ice.2015.7438648},
 month = {jun},
 publisher = {{IEEE}},
 title = {On top of the consortium: Keeping control of consortium-building in {ICT} R{\&}amp$\mathsemicolon$D programmes},
 url = {https://doi.org/10.1109%2Fice.2015.7438648},
 year = {2015}
}

@article{2004,
 abstract = {},
 doi = {10.1145/968464.968465},
 editor = {Dorothy Leidner and Wynne W. Chin},
 journal = {{ACM} {SIGMIS} Database: the {DATABASE} for Advances in Information Systems},
 month = {feb},
 number = {1},
 pages = {4--4},
 publisher = {Association for Computing Machinery ({ACM})},
 title = {From the editors},
 url = {https://doi.org/10.1145%2F968464.968465},
 volume = {35},
 year = {2004}
}

@article{__2012,
 abstract = {Class imbalance problem has emerged as one of the crucial issues in machine learning and data mining communities since there is increasing growth and availability of real world data distributed skew or unequal misclassification costs of the minority and majority classes. This paper compares the performance of several boosting and cost-sensitive boosting methods in terms of their capabilities in dealing with the class imbalance problem by using evaluation metrics, precision, F-Measure, Geometric mean (G-mean), and the area under receiver operating characteristics curve (AUC) on five NASA benchmark imbalanced datasets (JM1, KC1, KC2, PC1 and CM1). The learning algorithms studied in this paper include Logistic regression, AdaBoost, AdaC1, AdaC2, AdaC3, and cost-sensitive classifiers based on the former two respectively. The experimental results show that it is difficult to say which one is the best for handling class imbalance without consideration of evaluation metrics.},
 author = {Fangjun Wu -},
 doi = {10.4156/jcit.vol7.issue21.1},
 journal = {Journal of Convergence Information Technology},
 month = {nov},
 number = {21},
 pages = {1--8},
 publisher = {{AICIT}},
 title = {Comparing Boosting and Cost-Sensitive Boosting With Imbalanced Data},
 url = {https://doi.org/10.4156%2Fjcit.vol7.issue21.1},
 volume = {7},
 year = {2012}
}

@article{Al_Baik_2019,
 abstract = {In the past decades, software organizations have been relying on implementing process improvement methods to advance quality, productivity, and predictability of their development and maintenance efforts. However, these methods have proven to be challenging to implement in many situations, and when implemented, their benefits are often not sustained. Commonly, the workforce requires guidance during the initial deployment, but what happens after the guidance stops? Why do not traditional improvement methods deliver the desired results? And, how do we maintain the improvements when they are realized? In response to these questions, we have combined social and organizational learning methods with Lean's continuous improvement philosophy, Kaizen, which has resulted in an IDKL model that has successfully promoted continuous learning and improvement. The IDKL has evolved through a real-life project with an industrial partner; the study employed ethnographic action research with 231 participants and had lasted for almost 3 years. The findings show that on average, Lead Time has dropped by 46%, Process Cycle Efficiency has increased by 137%, First-Pass Process Yield has increased by 27%, and Customer Satisfaction has increased by 25%.},
 author = {Osama Al-Baik and James Miller},
 doi = {10.1109/tse.2018.2829722},
 journal = {{IEEE} Transactions on Software Engineering},
 month = {dec},
 number = {12},
 pages = {1189--1210},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Integrative Double Kaizen Loop ({IDKL}): Towards a Culture of Continuous Learning and Sustainable Improvements for Software Organizations},
 url = {https://doi.org/10.1109%2Ftse.2018.2829722},
 volume = {45},
 year = {2019}
}

@inproceedings{Asgari_2005,
 abstract = {In this research, we are developing our understanding of how the high performance computing community develops effective parallel implementations of programs by collecting the folklore within the community. We use this folklore as the basis for a series of experiments, which we expect, will validate or negate these assumptions.},
 author = {Sima Asgari and Lorin Hochstein and Victor Basili and Marvin Zelkowitz and Jeff Hollingsworth and Jeff Carver and Forrest Shull},
 booktitle = {Proceedings of the second international workshop on Software engineering for high performance computing system applications},
 doi = {10.1145/1145319.1145325},
 month = {may},
 publisher = {{ACM}},
 title = {Generating testable hypotheses from tacit knowledge for high productivity computing},
 url = {https://doi.org/10.1145%2F1145319.1145325},
 year = {2005}
}

@article{Basili_2006,
 abstract = {If empirical software engineering is to grow as a valid scientific endeavor, the ability to acquire, use, share, and compare data collected from a variety of sources must be encouraged. This is necessary to validate the formal models being developed within computer science. However, within the empirical software engineering community this has not been easily accomplished. This paper analyses experience from a number of projects, and defines the issues, which include the following: (1) How should data, testbeds, and artifacts be shared? (2) What limits should be placed on who can use them and how? How does one limit potential misuse? (3) What is the appropriate way to credit the organization and individual that spent the effort collecting the data, developing the testbed, and building the artifact? (4) Once shared, who owns the evolved asset? As a solution to these issues, the paper proposes a framework for an empirical software engineering artifact agreement, which is intended to address the needs for both creator and user of such artifacts and should foster a market in making available and using such artifacts. If this framework for sharing software engineering artifacts is commonly accepted, it should encourage artifact owners to make the artifacts accessible to others (gaining credit is more likely and misuse is less likely), and it may be easier for other researchers to request artifacts since there will be a well-defined protocol for how to deal with relevant matters.},
 author = {Victor R. Basili and Marvin V. Zelkowitz and Dag I. K. Sj{\o}berg and Philip Johnson and Anthony J. Cowling},
 doi = {10.1007/s10664-006-9030-4},
 journal = {Empirical Software Engineering},
 month = {dec},
 number = {1},
 pages = {107--119},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Protocols in the use of empirical software engineering artifacts},
 url = {https://doi.org/10.1007%2Fs10664-006-9030-4},
 volume = {12},
 year = {2006}
}

@incollection{Basili_2013,
 abstract = {This paper offers a four-decade overview of the evolution of empirical software engineering from a personal perspective. It represents what I saw as major milestones in terms of the kind of thinking that affected the nature of the work. I use examples from my own work as I feel that work followed the evolution of the field and is representative of the thinking at various points in time. I try to say where we fell short and where we need to go, in the end discussing the barriers we still need to address. © 2013 Springer-Verlag Berlin Heidelberg. All rights are reserved.},
 author = {Victor R. Basili},
 booktitle = {Perspectives on the Future of Software Engineering},
 doi = {10.1007/978-3-642-37395-4_17},
 pages = {255--273},
 publisher = {Springer Berlin Heidelberg},
 title = {A Personal Perspective on the Evolution of Empirical Software Engineering},
 url = {https://doi.org/10.1007%2F978-3-642-37395-4_17},
 year = {2013}
}

@techreport{Basili_Victor_R__2007,
 abstract = {In order to understand how high performance computing (HPC) programs are developed, a series of experiments, using students in graduate level HPC classes and various research centers, were conducted at various locations in the US. In this report, we discuss this research, give some of the early results of those experiments, and describe a web-based Experiment Manager we are developing that allows us to run studies more easily and consistently at universities and laboratories, allowing us to generate results that more accurately reflect the process of building HPC programs.},
 author = {Basili, Victor, R. and  Zelkowitz, Marvin, V.},
 doi = {10.2172/919531},
 month = {nov},
 publisher = {Office of Scientific and Technical Information ({OSTI})},
 title = {Experiments to Understand {HPC} Time to Development (Final report for Department of Energy contract {DE}-{FG}02-04ER25633) Report {DOE}/{ER}/25633-1},
 url = {https://doi.org/10.2172%2F919531},
 year = {2007}
}

@inproceedings{Baskeles_2007,
 abstract = {In software engineering, the main aim is to develop projects that produce the desired results within limited schedule and budget. The most important factor affecting the budget of a project is the effort. Therefore, estimating effort is crucial because hiring people more than needed leads to a loss of income and hiring people less than needed leads to an extension of schedule. The main objective of this research is making an analysis of software effort estimation to overcome problems related to it: budget and schedule extension. To accomplish this, we propose a model that uses machine learning methods. We evaluate these models on public datasets and data gathered from software organizations in Turkey. It is found out in the experiments that the best method for a dataset may change and this proves the point that the usage of one model cannot always produce the best results.},
 author = {Bilge Baskeles and Burak Turhan and Ayse Bener},
 booktitle = {2007 22nd international symposium on computer and information sciences},
 doi = {10.1109/iscis.2007.4456863},
 month = {nov},
 publisher = {{IEEE}},
 title = {Software effort estimation using machine learning methods},
 url = {https://doi.org/10.1109%2Fiscis.2007.4456863},
 year = {2007}
}

@article{Bellini_2006,
 abstract = {This paper, using qualitative and quantitative data relative to the software process improvement initiative in which the Italian branch of a multinational software company was engaged from January 1997 to May 2001, investigates the impact of Capability Maturity Model (CMM) certification on organisational learning. A knowledge management perspective is adopted to explain the software development process increase in productivity. Data suggest that CMM can effectively support and address knowledge management and learning within a software organisation. Disciplined methods and practices are expected to result in better control over the software development process, and organisations using a well-structured process model such as the CMM can use the process infrastructure it provides for organisational learning.},
 author = {Emilio Bellini and Corrado Lo Storto},
 doi = {10.1504/ijiscm.2006.012045},
 journal = {International Journal of Information Systems and Change Management},
 number = {4},
 pages = {339},
 publisher = {Inderscience Publishers},
 title = {The impact of software capability maturity model on knowledge management and organisational learning: empirical findings and useful insights},
 url = {https://doi.org/10.1504%2Fijiscm.2006.012045},
 volume = {1},
 year = {2006}
}

@inproceedings{Bellini_2006,
 abstract = {Methods and practices adopted by software professionals to develop and maintain software are believed to have significant impact on the project outcomes in terms of development cost and product quality. Disciplined methods and practices are expected to result in better control over the software development process. Even though there is a great awareness that software quality is largely dependent on the way the development process is carried on, there is lack of empirical evidence supporting the effect of software development processes on life-cycle productivity or quality and particularly of the impact of CMM certification on productivity improvement. This paper, using qualitative and quantitative data relative to the software process improvement initiative in which the Italian branch of a multinational software company was engaged from Jan. 1997 to May 2001, investigates the impact of CMM certification on organizational learning. In particular, a knowledge management perspective is adopted to explain the software development process increase in productivity. Data suggest the idea that CMM can effectively support and address knowledge management and learning within a software organization. Organizations using a well-structured process model such as the CMM can use the process infrastructure it provides for organizational learning. As an organization moves up the CMM levels, predictability is increased, risk is better managed and reduced and organizational learning is enhanced},
 author = {Emilio Bellini and Corrado Storto},
 booktitle = {2006 Technology Management for the Global Future - {PICMET} 2006 Conference},
 doi = {10.1109/picmet.2006.296694},
 month = {jul},
 publisher = {{IEEE}},
 title = {{CMM} Implementation and Organizational Learning: Findings from a Case Study Analysis},
 url = {https://doi.org/10.1109%2Fpicmet.2006.296694},
 year = {2006}
}

@article{Brietzke_2006,
 abstract = {Several companies have been carrying out software processes improvement projects. However, some of them give up before the project ends and others take much longer than expected to get it accomplished. This way, identifying the resistance factors that influence the implementation of such projects might serve as a reference to professionals in this area on the one hand, and help to manage future projects on the other, throught the use of priventive actions that either lessen or eliminate the resistance factors' consequences. For this matter, this article presents a survey with 36 professionals involved in initiatives of software prosses improvement in 18 companies in the state of Rio Grande do Sul, Brazil.},
 author = {Josiane Brietzke and Abraham Rabelo},
 doi = {10.19153/cleiej.9.1.4},
 journal = {{CLEI} Electronic Journal},
 month = {jun},
 number = {1},
 publisher = {Centro Latino Americano de Estudios en Informatica},
 title = {Resistance factors in software processes improvement},
 url = {https://doi.org/10.19153%2Fcleiej.9.1.4},
 volume = {9},
 year = {2006}
}

@article{Card_2008,
 abstract = {This article reports our experiences deploying statistical methods at BAE Systems Network Systems (BAE NS), a software and systems development organization. We focus not on the methods' mathematical details but on the problem of deploying them to managers and practitioners. Of course, misunderstanding and misuse of these methods will interfere with their successful deployment, so some knowledge of statistical methods is required.},
 author = {David N. Card and Kevin Domzalski and Glyn Davies},
 doi = {10.1109/ms.2008.66},
 journal = {{IEEE} Software},
 month = {may},
 number = {3},
 pages = {37--47},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Making Statistics Part of Decision Making in an Engineering Organization},
 url = {https://doi.org/10.1109%2Fms.2008.66},
 volume = {25},
 year = {2008}
}

@incollection{Chen_2007,
 abstract = {In this article, we present a categorization of CMMI Specific Practices, and use this to reanalyze prior work describing the
perceived value of those practices for Small-to-Medium-sized Enterprises (SMEs), in order to better understand the software
engineering practice needs of SMEs. Our categorization is based not on process areas, but on outcome areas (covering organizational,
process, project, and product outcomes) and on the nature of activities leading to outcomes in those areas (covering planning,
doing, checking, and improvement activities). Our reanalysis of the perceived value of Specific Practices for the CMMI Level
2 Process Areas shows that SMEs most value practices for working on project-related outcomes, and for planning and doing work
on product-related outcomes. Our categorization of practices will serve as a framework for further study about CMMI and other
SPI approaches.},
 author = {Xi Chen and Mark Staples},
 booktitle = {Lecture Notes in Computer Science},
 doi = {10.1007/978-3-540-75381-0_6},
 pages = {59--70},
 publisher = {Springer Berlin Heidelberg},
 title = {Using Practice Outcome Areas to Understand Perceived Value of {CMMI} Specific Practices for {SMEs}},
 url = {https://doi.org/10.1007%2F978-3-540-75381-0_6},
 year = {2007}
}

@inproceedings{Colman_2013,
 abstract = {This document describes the author's PhD work done to date. The motivation and background is described, and the hypothesis presented, which is that an online multi-player video game could provide cognitive therapy for brain-injured people. The proposed experiment is described, explaining the design decisions made. The expected contribution of this research is stated.},
 author = {Jason E. Colman},
 booktitle = {{CHI} {\textquotesingle}13 Extended Abstracts on Human Factors in Computing Systems},
 doi = {10.1145/2468356.2468700},
 month = {apr},
 publisher = {{ACM}},
 title = {Multi-player online video games for cognitive rehabilitation},
 url = {https://doi.org/10.1145%2F2468356.2468700},
 year = {2013}
}

@incollection{Conradi_2003,
 abstract = {Software development is an experimental discipline, i.e. somewhat unpredictable. This suggests that software processes improvement should be based on the continuous iteration of characterization, goal setting, selection of improved technology, monitoring and analysis of its effects. This paper describes experiences from the empirical studies in two large SPI programmes in Norway. Five main lessons were learned: 1) It is a challenge for the industrial partners to invest enough reso urces in SPI activities. 2) The research partners must learn to know the companies, and 3) they must work as a multi- competent and coherent unit towards them. 4) Any SPI initiative must show visible, short-term payoff. 5) Establishing a solid baseline from which to improve is unrealistic. Based on these lessons, a set of operational recommendations for other researchers in the area are proposed.},
 author = {Reidar Conradi and Tore Dyb{\aa} and Dag I. K. Sj{\o}berg and Tor Ulsund},
 booktitle = {Software Process Technology},
 doi = {10.1007/978-3-540-45189-1_4},
 pages = {32--45},
 publisher = {Springer Berlin Heidelberg},
 title = {Lessons Learned and Recommendations from Two Large Norwegian {SPI} Programmes},
 url = {https://doi.org/10.1007%2F978-3-540-45189-1_4},
 year = {2003}
}

@article{Damian_2004,
 abstract = {This paper describes an industrial experience in process improvement at one of the Unisys development labs in Australia. Following a capability maturity model (CMM) mini-assessment, the organization is undertaking significant changes in the requirements management process, which include the introduction of group session approaches to requirements analysis and a structured method for writing requirements. An empirical evaluation which investigated other aspects of the process improvement than the CMM model indicates tangible benefits as well as perceived long-term benefits during design and testing. Findings confirm that a more thorough requirements analysis results in more clearly defined, better understood and specified requirements, and an enhanced ability to address the market needs and product strategy requirements. The catalyst behind these improvements included project management leadership, managing the human dimension, collaboration among stakeholders and senior management support.},
 author = {Daniela Damian and Didar Zowghi and Lakshminarayanan Vaidyanathasamy and Yogendra Pal},
 doi = {10.1023/b:emse.0000013514.19567.ad},
 journal = {Empirical Software Engineering},
 month = {mar},
 number = {1/2},
 pages = {45--75},
 publisher = {Springer Science and Business Media {LLC}},
 title = {An Industrial Case Study of Immediate Benefits of Requirements Engineering Process Improvement at the Australian Center for Unisys Software},
 url = {https://doi.org/10.1023%2Fb%3Aemse.0000013514.19567.ad},
 volume = {9},
 year = {2004}
}

@article{Damm_2008,
 abstract = {Analysis of anomalies reported during testing of a project can tell a lot about how well the processes and products work. Still, organizations rarely use anomaly reports for more than progress tracking although projects commonly spend a significant part of the development time on finding and correcting faults. This paper presents an anomaly metrics model that organizations can use for identifying improvements in the development process, i.e. to reduce the cost and lead-time spent on rework-related activities and to improve the quality of the delivered product. The model is the result of a four year research project performed at Ericsson.},
 author = {Lars-Ola Damm and Lars Lundberg and Claes Wohlin},
 doi = {10.1016/j.jss.2008.01.017},
 journal = {Journal of Systems and Software},
 month = {nov},
 number = {11},
 pages = {1968--1982},
 publisher = {Elsevier {BV}},
 title = {A model for software rework reduction through a combination of anomaly metrics},
 url = {https://doi.org/10.1016%2Fj.jss.2008.01.017},
 volume = {81},
 year = {2008}
}

@article{Dangle_2005,
 abstract = {The Capability Maturity Model for software has become a major force in software development process improvement. We looked at the role of process improvement in the context of a small organization. Although the Capability Maturity Model integration is replacing the CMM, we focused on the older CMM. We had to look at more than which CMM key process areas apply to small businesses. Our overall goal was to institute good software development practices, we used the language of the CMM to gain the management's cooperation. Applying these practices is essential to managing growth, yet undertaking this effort without prior experience could impede a small company's innovative nature. This case study's purpose was to investigate the success factors of a software process improvement effort for a small software development organization.},
 author = {K.C. Dangle and P. Larsen and M. Shaw and M.V. Zelkowitz},
 doi = {10.1109/ms.2005.162},
 journal = {{IEEE} Software},
 month = {nov},
 number = {6},
 pages = {68--75},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Software process improvement in small organizations: a case study},
 url = {https://doi.org/10.1109%2Fms.2005.162},
 volume = {22},
 year = {2005}
}

@article{Dyba_2005,
 abstract = {Understanding how to implement software process improvement (SPI) successfully is arguably the most challenging issue facing the SPI field today. The SPI literature contains many case studies of successful companies and descriptions of their SPI programs. However, the research efforts to date are limited and inconclusive and without adequate theoretical and psychometric justification. This paper extends and integrates models from prior research by performing an empirical investigation of the key factors for success in SPI. A quantitative survey of 120 software organizations was designed to test the conceptual model and hypotheses of the study. The results indicate that success depends critically on six organizational factors, which explained more than 50 percent of the variance in the outcome variable. The main contribution of the paper is to increase the understanding of the influence of organizational issues by empirically showing that they are at least as important as technology for succeeding with SPI and, thus, to provide researchers and practitioners with important new insights regarding the critical factors of success in SPI.},
 author = {T. Dyba},
 doi = {10.1109/tse.2005.53},
 journal = {{IEEE} Transactions on Software Engineering},
 month = {may},
 number = {5},
 pages = {410--424},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {An empirical investigation of the key factors for success in software process improvement},
 url = {https://doi.org/10.1109%2Ftse.2005.53},
 volume = {31},
 year = {2005}
}

@article{Falessi_2017,
 abstract = {},
 author = {Davide Falessi and Natalia Juristo and Claes Wohlin and Burak Turhan and Jürgen Münch and Andreas Jedlitschka and Markku Oivo},
 doi = {10.1007/s10664-017-9523-3},
 journal = {Empirical Software Engineering},
 month = {jun},
 number = {1},
 pages = {452--489},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Empirical software engineering experts on the use of students and professionals in experiments},
 url = {https://doi.org/10.1007%2Fs10664-017-9523-3},
 volume = {23},
 year = {2017}
}

@article{Falessi_2017,
 abstract = {},
 author = {Davide Falessi and Natalia Juristo and Claes Wohlin and Burak Turhan and Jürgen Münch and Andreas Jedlitschka and Markku Oivo},
 doi = {10.1007/s10664-017-9523-3},
 journal = {Empirical Software Engineering},
 month = {jun},
 number = {1},
 pages = {452--489},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Empirical software engineering experts on the use of students and professionals in experiments},
 url = {https://doi.org/10.1007%2Fs10664-017-9523-3},
 volume = {23},
 year = {2017}
}

@inproceedings{Freitas_Mendes_2013,
 abstract = {The importance of Information Technology in guaranteeing the success of an organization has greatly increased, hence, many models and practices have been developed to improve its effectiveness and efficiency. In order to improve Information Technology practices, however, it is important to initially diagnose current practices and then decide what needs to be improved. This article describes a method which can be used to diagnose Information Technology Governance processes. Initially, a method for diagnosing software processes was used in order to assess Information Technology Governance processes. Then, by analyzing weaknesses faced, a specific method for Diagnosing Information Technology Processes was created, which had already been tested in another organization.},
 author = {Fabiana Freitas Mendes},
 booktitle = {2013 46th Hawaii International Conference on System Sciences},
 doi = {10.1109/hicss.2013.43},
 month = {jan},
 publisher = {{IEEE}},
 title = {A Method for Diagnosing Information Technology Governance Processes},
 url = {https://doi.org/10.1109%2Fhicss.2013.43},
 year = {2013}
}

@inproceedings{Garcia_2010,
 abstract = {While software process improvement methods appear to be well suited for embedded systems development, their use has not become an organized practice. In the same way as that of software development, the embedded systems development could be failing due a bad management in the development process. In this paper we introduce the SPIES methodology that integrates the CMMI-DEV v1.2 Level 2 process areas to specify a process for developing embedded systems. This methodology incorporates principles to support the lack of management and improve the process specification. To illustrate this methodology, we design an experimental system to manage a traffic light system.},
 author = {I. Garcia and C. Pacheco and A. Herrera},
 booktitle = {2010 {IEEE} Electronics, Robotics and Automotive Mechanics Conference},
 doi = {10.1109/cerma.2010.95},
 month = {sep},
 publisher = {{IEEE}},
 title = {Defining a Software Process Improvement-Based Methodology for Embedded Systems Development},
 url = {https://doi.org/10.1109%2Fcerma.2010.95},
 year = {2010}
}

@inproceedings{Garcia_2010,
 abstract = {Software process improvement holds a significant promise to reduce cycle times and provide greater value to all development activities involved in the software process development. While these methods appear to be well suited for embedded systems development, their use has not become an organized practice. In the same way as that of software development, the embedded systems development could be failing due a bad management in the development process. CMMI-DEV v1.2 is a process improvement maturity model that has been developed by the Software Engineering Institute at Carnegie Mellon. CMMI-DEV v1.2 defines “what” processes and activities need to be done and not “how” these processes and activities are done. In this paper we introduce the SPIES methodology that integrates the CMMI-DEV v1.2 Level 2 process areas to specify a process for developing embedded systems. This methodology incorporates the TSP principles to support the lack of management and improve the process specification. To illustrate this approach, we describe an experimental system in which it has been applied to develop and manage a traffic light system.},
 author = {I. Garcia and I. Andrea},
 booktitle = {2010 10th {IEEE} International Conference on Computer and Information Technology},
 doi = {10.1109/cit.2010.74},
 month = {jun},
 publisher = {{IEEE}},
 title = {Using the Software Process Improvement approach for Defining a Methodology for Embedded Systems Development using the {CMMI}-{DEV} v1.2},
 url = {https://doi.org/10.1109%2Fcit.2010.74},
 year = {2010}
}

@article{Gay_2010,
 abstract = {Testing large-scale systems is expensive in terms of both time and money. Running simulations early in the process is a proven method of finding the design faults likely to lead to critical system failures, but determining the exact cause of those errors is still time-consuming and requires access to a limited number of domain experts. It is desirable to find an automated method that explores the large number of combinations and is able to isolate likely fault points.
Treatment learning is a subset of minimal contrast-set learning that, rather than classifying data into distinct categories, focuses on finding the unique factors that lead to a particular classification. That is, they find the smallest change to the data that causes the largest change in the class distribution. These treatments, when imposed, are able to identify the factors most likely to cause a mission-critical failure. The goal of this research is to comparatively assess treatment learning against state-of-the-art numerical optimization techniques. To achieve this, this paper benchmarks the TAR3 and TAR4.1 treatment learners against optimization techniques across three complex systems, including two projects from the Robust Software Engineering (RSE) group within the National Aeronautics and Space Administration (NASA) Ames Research Center. The results clearly show that treatment learning is both faster and more accurate than traditional optimization methods.},
 author = {Gregory Gay and Tim Menzies and Misty Davies and Karen Gundy-Burlet},
 doi = {10.1007/s10515-010-0072-x},
 journal = {Automated Software Engineering},
 month = {may},
 number = {4},
 pages = {439--468},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Automatically finding the control variables for complex system behavior},
 url = {https://doi.org/10.1007%2Fs10515-010-0072-x},
 volume = {17},
 year = {2010}
}

@article{Gondra_2008,
 abstract = {The importance of software testing to quality assurance cannot be overemphasized. The estimation of a module’s fault-proneness is important for minimizing cost and improving the effectiveness of the software testing process. Unfortunately, no general technique for estimating software fault-proneness is available. The observed correlation between some software metrics and fault-proneness has resulted in a variety of predictive models based on multiple metrics. Much work has concentrated on how to select the software metrics that are most likely to indicate fault-proneness. In this paper, we propose the use of machine learning for this purpose. Specifically, given historical data on software metric values and number of reported errors, an Artificial Neural Network (ANN) is trained. Then, in order to determine the importance of each software metric in predicting fault-proneness, a sensitivity analysis is performed on the trained ANN. The software metrics that are deemed to be the most critical are then used as the basis of an ANN-based predictive model of a continuous measure of fault-proneness. We also view fault-proneness prediction as a binary classification task (i.e., a module can either contain errors or be error-free) and use Support Vector Machines (SVM) as a state-of-the-art classification method. We perform a comparative experimental study of the effectiveness of ANNs and SVMs on a data set obtained from NASA’s Metrics Data Program data repository.},
 author = {Iker Gondra},
 doi = {10.1016/j.jss.2007.05.035},
 journal = {Journal of Systems and Software},
 month = {feb},
 number = {2},
 pages = {186--195},
 publisher = {Elsevier {BV}},
 title = {Applying machine learning to software fault-proneness prediction},
 url = {https://doi.org/10.1016%2Fj.jss.2007.05.035},
 volume = {81},
 year = {2008}
}

@article{Gorschek_2006,
 abstract = {Technology transfer, and thus industry-relevant research, involves more than merely producing research results and delivering them in publications and technical reports. It demands close cooperation and collaboration between industry and academia throughout the entire research process. During research conducted in a partnership between Blekinge Institute of Technology and two companies, Danaher Motion Saro AB (DHR) and ABB, we devised a technology transfer model that embodies this philosophy. We initiated this partnership to conduct industry-relevant research in requirements engineering and product management. Technology transfer in this context is a prerequisite: it validates academic research results in a real setting, and it provides a way to improve industry development and business processes},
 author = {Tony Gorschek and Per Garre and Stig Larsson and Claes Wohlin},
 doi = {10.1109/ms.2006.147},
 journal = {{IEEE} Software},
 month = {nov},
 number = {6},
 pages = {88--95},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {A Model for Technology Transfer in Practice},
 url = {https://doi.org/10.1109%2Fms.2006.147},
 volume = {23},
 year = {2006}
}

@article{Gorschek_2007,
 abstract = {Software requirements are often formulated on different levels and hence they are difficult to compare to each other. To address
this issue, a model that allows for placing requirements on different levels has been developed. The model supports both abstraction
and refinement of requirements, and hence requirements can both be compared with each other and to product strategies. Comparison
between requirements will allow for prioritization of requirements, which in many cases is impossible if the requirements
are described on different abstraction levels. Comparison to product strategies will enable early and systematic acceptance
or dismissal of requirements, minimizing the risk for overloading. This paper presents an industrial evaluation of the model.
It has been evaluated in two different companies, and the experiences and findings are presented. It is concluded that the
requirements abstraction model provides helpful improvements to the industrial requirements engineering process.},
 author = {Tony Gorschek and Per Garre and Stig B. M. Larsson and Claes Wohlin},
 doi = {10.1007/s00766-007-0047-z},
 journal = {Requirements Engineering},
 month = {may},
 number = {3},
 pages = {163--190},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Industry evaluation of the Requirements Abstraction Model},
 url = {https://doi.org/10.1007%2Fs00766-007-0047-z},
 volume = {12},
 year = {2007}
}

@article{Gorschek_2007,
 abstract = {Software requirements are often formulated on different levels and hence they are difficult to compare to each other. To address
this issue, a model that allows for placing requirements on different levels has been developed. The model supports both abstraction
and refinement of requirements, and hence requirements can both be compared with each other and to product strategies. Comparison
between requirements will allow for prioritization of requirements, which in many cases is impossible if the requirements
are described on different abstraction levels. Comparison to product strategies will enable early and systematic acceptance
or dismissal of requirements, minimizing the risk for overloading. This paper presents an industrial evaluation of the model.
It has been evaluated in two different companies, and the experiences and findings are presented. It is concluded that the
requirements abstraction model provides helpful improvements to the industrial requirements engineering process.},
 author = {Tony Gorschek and Per Garre and Stig B. M. Larsson and Claes Wohlin},
 doi = {10.1007/s00766-007-0047-z},
 journal = {Requirements Engineering},
 month = {may},
 number = {3},
 pages = {163--190},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Industry evaluation of the Requirements Abstraction Model},
 url = {https://doi.org/10.1007%2Fs00766-007-0047-z},
 volume = {12},
 year = {2007}
}

@article{Gorschek_2008,
 abstract = {When software development teams modify their requirements engineering process as an independent variable, they often examine the implications of these process changes by assessing the quality of the products of the requirements engineering process, e.g., a software requirements specification (SRS). Using the quality of the SRS as the dependent variable is flawed. As an alternative, this paper presents a framework of dependent variables that serves as a full range for requirements engineering quality assessment. In this framework, the quality of the SRS itself is just the first level. Other higher, and more significant levels, include whether the project was successful and whether the resulting product was successful. And still higher levels include whether or not the company was successful and whether there was a positive or negative impact on society as a whole.},
 author = {Tony Gorschek and Alan M. Davis},
 doi = {10.1016/j.infsof.2007.10.003},
 journal = {Information and Software Technology},
 month = {jan},
 number = {1-2},
 pages = {67--75},
 publisher = {Elsevier {BV}},
 title = {Requirements engineering: In search of the dependent variables},
 url = {https://doi.org/10.1016%2Fj.infsof.2007.10.003},
 volume = {50},
 year = {2008}
}

@article{HAAPIO_2011,
 abstract = {Software project effort estimation requires high accuracy, but accurate estimations are difficult to achieve. Increasingly, data mining is used to improve an organization's software process quality, e.g. the accuracy of effort estimations. Data is collected from projects, and data miners are used to discover beneficial knowledge. This paper reports a data mining experiment in which we examined 32 software projects to improve effort estimation. We examined three major categories of software project activities, and focused on the activities of the category which has got the least attention in research so far, the non-construction activities. The analysis is based on real software project data supplied by a large European software company. In our data mining experiment, we applied a range of machine learners. We found that the estimated total software project effort is a predictor in modeling and predicting the actual quality management effort of the project.},
 author = {TOPI HAAPIO and TIM MENZIES},
 doi = {10.1142/s0218194011005438},
 journal = {International Journal of Software Engineering and Knowledge Engineering},
 month = {sep},
 number = {05},
 pages = {725--753},
 publisher = {World Scientific Pub Co Pte Lt},
 title = {{EXPLORING} {THE} {EFFORT} {OF} {GENERAL} {SOFTWARE} {PROJECT} {ACTIVITIES} {WITH} {DATA} {MINING}},
 url = {https://doi.org/10.1142%2Fs0218194011005438},
 volume = {21},
 year = {2011}
}

@inproceedings{Haddad_2011,
 abstract = {Literature reports indicate that software companies with less than 50 employees may represent up to 85% of the software organizations in several countries, including the United States. While the well-known process models may not be ideal in a relatively small setting, there is good news. Some of the large process models are being scaled down at the same time that new models are being developed specifically for smaller software organizations. The best news is that software process research metrics have been studied for years, and there are many options available for metrics utilization, either within or outside of a process improvement framework, regardless of the size of the setting. This work explores the challenges and benefits of using software metrics in small organizations, and outlines a practical framework, based on the Goal/Question/Metric paradigm, for instituting metrics programs in small organizations. This approach is motivated by industrial experiences reported in the literature and contributes to improving software development practices.},
 author = {Hisham M. Haddad and Donald Eric Meredith},
 booktitle = {2011 Eighth International Conference on Information Technology: New Generations},
 doi = {10.1109/itng.2011.47},
 month = {apr},
 publisher = {{IEEE}},
 title = {Instituting Software Metrics in Small Organizations: A Practical Approach},
 url = {https://doi.org/10.1109%2Fitng.2011.47},
 year = {2011}
}

@inproceedings{Herbsleb_2003,
 abstract = {},
 author = {James D. Herbsleb and Audris Mockus},
 booktitle = {Proceedings of the 9th European software engineering conference held jointly with 11th {ACM} {SIGSOFT} international symposium on Foundations of software engineering},
 doi = {10.1145/940071.940091},
 month = {sep},
 publisher = {{ACM}},
 title = {Formulation and preliminary test of an empirical theory of coordination in software engineering},
 url = {https://doi.org/10.1145%2F940071.940091},
 year = {2003}
}

@incollection{Hochstein_2008,
 abstract = {The classroom is a valuable resource for conducting software engineering experiments. However, coordinating a family of experiments in classroom environments presents a number of challenges to researchers. Understanding how to run such experiments, developing procedures to collect accurate data, and collecting data that is consistent across multiple studies are major problems. This paper describes an environment, the Experiment Manager that simplifies the process of collecting, managing, and sanitizing data from classroom experiments, while minimizing disruption to natural subject behavior. We have successfully used this environment to study the impact of parallel programming languages in the high‐performance computing domain on programmer productivity at multiple universities across the United States.},
 author = {Lorin Hochstein and Taiga Nakamura and Forrest Shull and Nico Zazworka and Victor R. Basili and Marvin V. Zelkowitz},
 booktitle = {Advances in Computers},
 doi = {10.1016/s0065-2458(08)00605-0},
 pages = {175--200},
 publisher = {Elsevier},
 title = {Chapter 5 An Environment for Conducting Families of Software Engineering Experiments},
 url = {https://doi.org/10.1016%2Fs0065-2458%2808%2900605-0},
 year = {2008}
}

@article{Hong_2004,
 abstract = {With an increasing attention being paid to Six-Sigma applications in the software industry, there has been an increasing alignment between Six-Sigma and the Goal Question Measurement or GQM approach. Questions have been raised such as whether Six-Sigma is totally different from GQM, or is there ''nothing new'' in Six-Sigma. Also, are there potential conflicts between these two prominent approaches? Do they provide software companies with an ''either'', ''or'' solution, or can the two be combined? In this paper, we explore the differences and similarities as well as the strengths and weaknesses between Six-Sigma and GQM. Some conclusions and recommendations are presented in this light.},
 author = {G.Y. Hong and T.N. Goh},
 doi = {10.1504/ijssca.2004.005278},
 journal = {International Journal of Six Sigma and Competitive Advantage},
 number = {1},
 pages = {65},
 publisher = {Inderscience Publishers},
 title = {A comparison of Six-Sigma and {GQM} approaches in software development},
 url = {https://doi.org/10.1504%2Fijssca.2004.005278},
 volume = {1},
 year = {2004}
}

@incollection{Houdek_2003,
 abstract = {Results of empirical investigations are key input for industrial software process improvement activities. The relevance of an investigation for a given environment, however, depends on the similarities or dissimilarities of the investigation environment compared to the industrial environment which is interested in using a new technology. The optimal (or most relevant) results may be gained when performing the experiment in the industrial environment itself. Unfortunately, this takes place only rarely as experiments in industrial environments are either expensive (when new and old technology are used in parallel) or risky (when only the new technology is used).To overcome this dilemma, we introduced the concept of external experiments, i.e. experiments which are conducted in an environment different from the industrial target environment and which tries to simulate the characteristics of the industrial environment as best as possible. This paper describes this concept in detail, presents a process for identification, conduction and exploitation of such experiments and shows some results from past investigations which used this concept.},
 author = {Frank Houdek},
 booktitle = {Lecture Notes on Empirical Software Engineering},
 doi = {10.1142/9789812795588_0004},
 month = {mar},
 pages = {133--166},
 publisher = {{WORLD} {SCIENTIFIC}},
 title = {External Experiments {\textendash} A Workable Paradigm for Collaboration Between Industry and Academia},
 url = {https://doi.org/10.1142%2F9789812795588_0004},
 year = {2003}
}

@misc{https://doi.org/10.25911/5d611f608fba5,
 abstract = {},
 author = {Awang Abu Bakar, Normi Sham},
 copyright = {Author retains copyright},
 doi = {10.25911/5D611F608FBA5},
 keywords = {QA76.76.S46 A93 2011, Software engineering, Open source software, Computational complexity},
 language = {en},
 publisher = {The Australian National University},
 title = {The effects of software design complexity on defects : a study in open-source systems},
 url = {https://openresearch-repository.anu.edu.au/handle/1885/150085},
 year = {2011}
}

@article{https://doi.org/10.7939/r3sn01j23,
 abstract = {},
 author = {Al Baik, Osama H},
 doi = {10.7939/R3SN01J23},
 publisher = {University of Alberta Libraries},
 title = {An Empirical Investigation of Applying Lean Production to Software Development and IT Services: Outcomes, Challenges, and Lessons Learned},
 url = {https://era.library.ualberta.ca/items/94af55b1-afb5-401e-a804-95b170305e6e},
 year = {2017}
}

@inproceedings{Huo_2006,
 abstract = {Software process improvement has been a focus of industry for many years. To assist the procedure and implementation of software process improvement we provide a software process recovery method based on mining project enactment data. The goal of process recovery is to improve the quality of a planned software process. We investigate the enactment of a planned software process from the view of understanding the appropriateness and fitness for purpose of the process model from the viewpoint of the project managers in the context of a small software development organization. We collected empirical data from this organization and then applied our method to a pilot case study. The main contribution of our work is to provide a methodology of software process model recovery which supports software process improvement.},
 author = {Ming Huo and He Zhang and Ross Jeffery},
 booktitle = {Proceedings of the 2006 international workshop on Software quality},
 doi = {10.1145/1137702.1137711},
 month = {may},
 publisher = {{ACM}},
 title = {An exploratory study of process enactment as input to software process improvement},
 url = {https://doi.org/10.1145%2F1137702.1137711},
 year = {2006}
}

@article{Ivarsson_2011,
 abstract = {Knowledge management in software engineering and software process improvement activities pose challenges as initiatives are
deployed. Most existing approaches are either too expensive to deploy or do not take an organization’s specific needs into
consideration. There is thus a need for scalable improvement approaches that leverage knowledge already residing in the organizations.
This paper presents tool support for an Experience Factory approach for disseminating and improving practices used in an organization.
Experiences from using practices in development projects are captured in postmortems and provide iteratively improved decision
support for identifying what practices work well and what needs improvement. An initial evaluation of using the tool for organizational
improvement has been performed utilizing both academia and industry. The results from the evaluation indicate that organizational
characteristics influence how practices and experiences can be used. Experiences collected in postmortems are estimated to
have little effect on improvements to practices used throughout the organization. However, in organizations where different
practices are used in different parts of the organization, making practices available together with experiences from use,
as well as having context information, can influence decisions on what practices to use in projects.},
 author = {Martin Ivarsson and Tony Gorschek},
 doi = {10.1007/s11219-011-9139-6},
 journal = {Software Quality Journal},
 month = {may},
 number = {1},
 pages = {173--199},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Tool support for disseminating and improving development practices},
 url = {https://doi.org/10.1007%2Fs11219-011-9139-6},
 volume = {20},
 year = {2011}
}

@article{IVARSSON_2012,
 abstract = {Knowledge management (KM) in software engineering and software process improvement (SPI) are challenging. Most existing KM and SPI frameworks are too expensive to deploy or do not take an organization's specific needs or knowledge into consideration. There is thus a need for scalable improvement approaches that leverage knowledge already residing in the organizations.
This paper presents the Practice Selection Framework (PSF), an Experience Factory approach, enabling lightweight experience capture and use by utilizing postmortem reviews. Experiences gathered concern performance and applicability of practices used in the organization, gained from concluded projects. Project managers use these as decision support for selecting practices to use in future projects, enabling explicit knowledge transfer across projects and the development organization as a whole. Process managers use the experiences to determine if there is potential for improvement of practices used in the organization. This framework was developed and subsequently validated in industry to get feedback on usability and usefulness from practitioners. The validation consisted of tailoring and testing the framework using real data from the organization and comparing it to current practices used in the organization to ensure that the approach meets industry needs. The results from the validation are encouraging and the participants' assessment of PSF and particularly the tailoring developed was positive.},
 author = {MARTIN IVARSSON and TONY GORSCHEK},
 doi = {10.1142/s0218194012500027},
 journal = {International Journal of Software Engineering and Knowledge Engineering},
 month = {feb},
 number = {01},
 pages = {17--58},
 publisher = {World Scientific Pub Co Pte Ltd},
 title = {{PRACTICE} {SELECTION} {FRAMEWORK}},
 url = {https://doi.org/10.1142%2Fs0218194012500027},
 volume = {22},
 year = {2012}
}

@inproceedings{Johnson_2005,
 abstract = {},
 author = {Philip M. Johnson},
 booktitle = {Proceedings of the 27th international conference on Software engineering  - {ICSE} {\textquotesingle}05},
 doi = {10.1145/1062455.1062609},
 publisher = {{ACM} Press},
 title = {Second international workshop on software engineering for high performance computing system applications},
 url = {https://doi.org/10.1145%2F1062455.1062609},
 year = {2005}
}

@incollection{Kalmar_2003,
 abstract = {Zusammenfassung: Software-Engineering ist eine wichtige Produktivtechnik für das 21. Jahrhunderts, weil Software in zunehmend mehr Branchen Anwendung findet und maßgeblich die Leistungs- und Wettbewerbsfähigkeit einer Vielzahl von Produkten beeinflusst. Vor diesem Hintergrund vernetzt das virtuelle Software- Engineering-Kompetenzzentrum (ViSEK) Software-Professionals aus Forschung und Industrie und bietet insbesondere kleinen und mittelständigen Unternehmen (KMUs) einen umfassenden Wissenspool von Technologie-Beschreibungen und Erfahrungen. Ausgehend von sozio-kulturellen Lerntheorien unterstützt ViSEK den Aufbau von Lerngemeinschaften zwischen Software-Professionals auf drei verschiedenen Ebenen (a) zwischen führenden nationalen Forschungsgruppen, (b) zwischen Forschungsgruppen und Praktikern und (c) zwischen Praktikern. Zwei Ansätze für den Aufbau von Lerngemeinschaften beschreiben wir detaillierter (a) ein Internet Portal, welches Software-Engineering Wissen darstellt und Funktio- nalität für die Unterstützung von Gemeinschaftsbildung bietet, (b) regionale Netzwerke die Erfahrungsaustausch und Lernen in bestimmten Feldern des Soft- ware-Engineerings unterstützen.},
 author = {Ralf Kalmar and Volker Wulf},
 booktitle = {Wirtschaftsinformatik 2003 Band {II}},
 doi = {10.1007/978-3-642-57445-0_49},
 pages = {987--1006},
 publisher = {Physica-Verlag {HD}},
 title = {Das virtuelle Software-Engineering-Kompetenzzentrum ({ViSEK})},
 url = {https://doi.org/10.1007%2F978-3-642-57445-0_49},
 year = {2003}
}

@article{Kauppinen_2004,
 abstract = {This paper aims at identifying critical factors affecting organization-wide implementation of requirements engineering (RE) processes. The paper is based on a broad literature review and three longitudinal case studies that were carried out using an action research method. The results indicate that RE process implementation is a demanding undertaking, and its success greatly depends on such human factors as motivation, commitment and enthusiasm. Therefore, it is essential that the RE process is useful for its individual users. Furthermore, the results indicate that organizations can gain benefits from RE by defining a simple RE process, by focusing on a small set of RE practices, and by supporting the systematic usage of these practices.},
 author = {Marjo Kauppinen and Matti Vartiainen and Jyrki Kontio and Sari Kujala and Reijo Sulonen},
 doi = {10.1016/j.infsof.2004.04.002},
 journal = {Information and Software Technology},
 month = {nov},
 number = {14},
 pages = {937--953},
 publisher = {Elsevier {BV}},
 title = {Implementing requirements engineering processes throughout organizations: success factors and challenges},
 url = {https://doi.org/10.1016%2Fj.infsof.2004.04.002},
 volume = {46},
 year = {2004}
}

@incollection{Krikhaar,
 abstract = {Most industries are challenging to increase productivity of software development. Often many process improvement activities
are started with enthusiasm, unfortunately most of these are less successful than forecasted or improvements do not sustain
for long. This paper presents the Seven Forces Improvement Method, SFIM, which claims to overcome unexpected disappointment
in improvement results. SFIM is built upon different aspects that influence the success of software process improvements,
such as culture, skills and organization. The method has been applied to improvement activities in a large software department
for a number of years. The success of SFIM is compared with the compliance with the SFIM method. The paper shows that application
of SFIM increases the success rate of software improvement activities in industry.},
 author = {Ren{\'{e}} Krikhaar and Martin Mermans},
 booktitle = {Product-Focused Software Process Improvement},
 doi = {10.1007/978-3-540-73460-4_9},
 pages = {65--80},
 publisher = {Springer Berlin Heidelberg},
 title = {Software Development Improvement with {SFIM}},
 url = {https://doi.org/10.1007%2F978-3-540-73460-4_9}
}

@inproceedings{Kultur_2008,
 abstract = {Companies usually have limited amount of data for effort estimation. Machine learning methods have been preferred over parametric models due to their flexibility to calibrate the model for the available data. On the other hand, as machine learning methods become more complex they need more data to learn from. Therefore the challenge is to increase the performance of the algorithm when there is limited data. In this research we used a relatively complex machine learning algorithm, neural networks, and showed that stable and accurate estimations are achievable with an ensemble using associative memory. Our experimental results revealed that our proposed algorithm (ENNA) achieves on the average PRED(25) = 36.4 which is a significant increase compared to Neural Network (NN) PRED(25) = 8.},
 author = {Yigit Kultur and Burak Turhan and Ayse Basar Bener},
 booktitle = {Proceedings of the 16th {ACM} {SIGSOFT} International Symposium on Foundations of software engineering},
 doi = {10.1145/1453101.1453148},
 month = {nov},
 publisher = {{ACM}},
 title = {{ENNA}},
 url = {https://doi.org/10.1145%2F1453101.1453148},
 year = {2008}
}

@article{Kultur_2009,
 abstract = {Companies usually have limited amount of data for effort estimation. Machine learning methods have been preferred over parametric models due to their flexibility to calibrate the model for the available data. On the other hand, as machine learning methods become more complex, they need more data to learn from. Therefore the challenge is to increase the performance of the algorithm when there is limited data. In this paper, we use a relatively complex machine learning algorithm, neural networks, and show that stable and accurate estimations are achievable with an ensemble using associative memory. Our experimental results show that our proposed algorithm (ENNA) produces significantly better results than neural network (NN) in terms of accuracy and robustness. We also analyze the effect of feature subset selection on ENNA’s estimation performance in a wrapper framework. We show that the proposed ENNA algorithm that use the features selected by the wrapper does not perform worse than those that use all available features. Therefore, measuring only company specific key factors is sufficient to obtain accurate and robust estimates about software cost estimation using ENNA.},
 author = {Yigit Kultur and Burak Turhan and Ayse Bener},
 doi = {10.1016/j.knosys.2009.05.001},
 journal = {Knowledge-Based Systems},
 month = {aug},
 number = {6},
 pages = {395--402},
 publisher = {Elsevier {BV}},
 title = {Ensemble of neural networks with associative memory ({ENNA}) for estimating software development costs},
 url = {https://doi.org/10.1016%2Fj.knosys.2009.05.001},
 volume = {22},
 year = {2009}
}

@inproceedings{Lavallee_2012,
 abstract = {This paper presents the results of a systematic review on the impacts of Software Process Improvement (SPI) on developers. This review selected 26 studies from the highest quality journals, conferences, and workshop in the field. The results were compiled and organized following the grounded theory approach. Results from the grounded theory were further categorized using the Ishikawa (or fishbone) diagram. The Ishikawa Diagram models all the factors potentially impacting software developers, and shows both the positive and negative impacts. Positive impacts include a reduction in the number of crises, and an increase in team communications and morale, as well as better requirements and documentation. Negative impacts include increased overhead on developers through the need to collect data and compile documentation, an undue focus on technical approaches, and the fact that SPI is oriented toward management and process quality, and not towards developers and product quality. This systematic review should support future practice through the identification of important obstacles and opportunities for achieving SPI success. Future research should also benefit from the problems and advantages of SPI identified by developers.},
 author = {Mathieu Lavallee and Pierre N. Robillard},
 booktitle = {2012 34th International Conference on Software Engineering ({ICSE})},
 doi = {10.1109/icse.2012.6227201},
 month = {jun},
 publisher = {{IEEE}},
 title = {The impacts of software process improvement on developers: A systematic review},
 url = {https://doi.org/10.1109%2Ficse.2012.6227201},
 year = {2012}
}

@article{Lindvall_2005,
 abstract = {Empirical evidence and technology evaluation are needed to close the gap between the state of the art and the state of the practice in software engineering. However, there are difficulties associated with evaluating technologies based on empirical evidence: insufficient specification of context variables, cost of experimentation, and risks associated with trying out new technologies. In this paper, we propose the idea of an evolutionary testbed for addressing these problems. We demonstrate the utility of the testbed in empirical studies involving two different research technologies applied to the testbed, as well as the results of these studies. The work is part of NASAs High Dependability Computing Project (HDCP), in which we are evaluating a wide range of new technologies for improving the dependability of NASA mission-critical systems.},
 author = {Mikael Lindvall and Ioana Rus and Forrest Shull and Marvin Zelkowitz and Paolo Donzelli and Atif Memon and Victor Basili and Patricia Costa and Roseanne Tvedt and Lorin Hochstein and Sima Asgari and Chris Ackermann and Dan Pech},
 doi = {10.1007/s11334-005-0007-z},
 journal = {Innovations in Systems and Software Engineering},
 month = {mar},
 number = {1},
 pages = {3--11},
 publisher = {Springer Science and Business Media {LLC}},
 title = {An evolutionary testbed for software technology evaluation},
 url = {https://doi.org/10.1007%2Fs11334-005-0007-z},
 volume = {1},
 year = {2005}
}

@article{M_nch_2005,
 abstract = {Due to demanding customer needs and evolving technology, software organizations are forced to trade individual functional and non-functional product quality profiles against other factors such as cost, time, or productivity. The ability to influence or even control these factors requires a deep understanding of the complex relations between process and product attributes in relevant contexts. Based on such understanding, decision support is needed to adjust processes so that they match the product quality goals without violating given project constraints. We propose to use a Virtual Software Engineering Laboratory (VSEL) to establish such decision support cost-effectively. VSELs can be considered as being complementary to existing (empirical)
Software Engineering Laboratories. This paper gives an introduction into the cornerstones of VSELs, discusses how they complement traditional empirically based Software Engineering Laboratories (SELs), and illustrates with the help of case examples from industrial and research environments, how to use them in support of product-focused trade-off analyses.},
 author = {Jürgen Münch and Dietmar Pfahl and Ioana Rus},
 doi = {10.1007/s11219-005-4253-y},
 journal = {Software Quality Journal},
 month = {dec},
 number = {4},
 pages = {407--428},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Virtual Software Engineering Laboratories in Support of Trade-off Analyses},
 url = {https://doi.org/10.1007%2Fs11219-005-4253-y},
 volume = {13},
 year = {2005}
}

@article{M_s_rl__2011,
 abstract = {As the application layer in embedded systems dominates over the hardware, ensuring software quality becomes a real challenge.
Software testing is the most time-consuming and costly project phase, specifically in the embedded software domain. Misclassifying
a safe code as defective increases the cost of projects, and hence leads to low margins. In this research, we present a defect
prediction model based on an ensemble of classifiers. We have collaborated with an industrial partner from the embedded systems
domain. We use our generic defect prediction models with data coming from embedded projects. The embedded systems domain is
similar to mission critical software so that the goal is to catch as many defects as possible. Therefore, the expectation
from a predictor is to get very high probability of detection (pd). On the other hand, most embedded systems in practice are commercial products, and companies would like to lower their costs
to remain competitive in their market by keeping their false alarm (pf) rates as low as possible and improving their precision rates. In our experiments, we used data collected from our industry
partners as well as publicly available data. Our results reveal that ensemble of classifiers significantly decreases pf down
to 15% while increasing precision by 43% and hence, keeping balance rates at 74%. The cost-benefit analysis of the proposed
model shows that it is enough to inspect 23% of the code on local datasets to detect around 70% of defects.

KeywordsDefect prediction–Ensemble of classifiers–Static code attributes–Embedded software},
 author = {Ay{\c{s}}e Tosun M{\i}s{\i}rl{\i} and Ay{\c{s}}e Ba{\c{s}}ar Bener and Burak Turhan},
 doi = {10.1007/s11219-010-9128-1},
 journal = {Software Quality Journal},
 month = {jan},
 number = {3},
 pages = {515--536},
 publisher = {Springer Science and Business Media {LLC}},
 title = {An industrial case study of classifier ensembles for locating software defects},
 url = {https://doi.org/10.1007%2Fs11219-010-9128-1},
 volume = {19},
 year = {2011}
}

@article{McHugh_2012,
 abstract = {A recent revision to the European Medical Device Directive (MDD) 2007/47/EC made 14 amendments to the original directive (93/42/EEC). A number of these changes directly affect the development of software for use in healthcare. The most significant change in relation to medical device software development is that stand-alone software is now seen as an active medical device and should be developed following state-of-the-art medical device software development processes. State-of-the-art medical device software processes are understood within the industry as developing software in accordance with IEC 62304 and standards that are aligned with it. This study identifies how changes to the MDD affect medical device software development companies and recommendations are made as to how medical device software development companies can conform to the latest regulatory requirements. Additionally, the study provides an overview of how Medi SPICE is currently being developed to provide organisations with a single point of reference for the practices that should be implemented in order to produce regulatory compliant medical device software.},
 author = {M. McHugh and F. McCaffery and V. Casey},
 doi = {10.1049/iet-sen.2011.0198},
 journal = {{IET} Software},
 number = {5},
 pages = {431},
 publisher = {Institution of Engineering and Technology ({IET})},
 title = {Software process improvement to assist medical device software development organisations to comply with the amendments to the medical device directive},
 url = {https://doi.org/10.1049%2Fiet-sen.2011.0198},
 volume = {6},
 year = {2012}
}

@incollection{Menzies_2005,
 abstract = {Artificial Intelligence (AI) is useful. AI can deliver more functionality for reduced cost. AI should be used more widely but won't be unless developers can trust adaptive, nondeterministic, or complex AI systems.Verification and validation is one method used by software analysts to gain that trust. AI systems have features that make them hard to check using conventional V&V methods. Nevertheless, as we show in this chapter, there are enough alternative readily-available methods that enable the V&V of AI software.},
 author = {Tim Menzies and Charles Pecheur},
 booktitle = {Advances in Computers},
 doi = {10.1016/s0065-2458(05)65004-8},
 pages = {153--201},
 publisher = {Elsevier},
 title = {Verification and Validation and Artificial Intelligence},
 url = {https://doi.org/10.1016%2Fs0065-2458%2805%2965004-8},
 year = {2005}
}

@article{Menzies_2006,
 abstract = {Effort estimation often requires generalizing from a small number of historical projects. Generalization from such limited experience is an inherently underconstrained problem. Hence, the learned effort models can exhibit large deviations that prevent standard statistical methods (e.g., t-tests) from distinguishing the performance of alternative effort-estimation methods. The COSEEKMO effort-modeling workbench applies a set of heuristic rejection rules to comparatively assess results from alternative models. Using these rules, and despite the presence of large deviations, COSEEKMO can rank alternative methods for generating effort models. Based on our experiments with COSEEKMO, we advise a new view on supposed "best practices" in model-based effort estimation: 1) Each such practice should be viewed as a candidate technique which may or may not be useful in a particular domain, and 2) tools like COSEEKMO should be used to help analysts explore and select the best method for a particular domain},
 author = {Tim Menzies and Zhihao Chen and Jairus Hihn and Karen Lum},
 doi = {10.1109/tse.2006.114},
 journal = {{IEEE} Transactions on Software Engineering},
 month = {nov},
 number = {11},
 pages = {883--895},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Selecting Best Practices for Effort Estimation},
 url = {https://doi.org/10.1109%2Ftse.2006.114},
 volume = {32},
 year = {2006}
}

@article{Menzies_2007,
 abstract = {The value of using static code attributes to learn defect predictors has been widely debated. Prior work has explored issues like the merits of "McCabes versus Halstead versus lines of code counts" for generating defect predictors. We show here that such debates are irrelevant since how the attributes are used to build predictors is much more important than which particular attributes are used. Also, contrary to prior pessimism, we show that such defect predictors are demonstrably useful and, on the data studied here, yield predictors with a mean probability of detection of 71 percent and mean false alarms rates of 25 percent. These predictors would be useful for prioritizing a resource-bound exploration of code that has yet to be inspected},
 author = {Tim Menzies and Jeremy Greenwald and Art Frank},
 doi = {10.1109/tse.2007.256941},
 journal = {{IEEE} Transactions on Software Engineering},
 month = {jan},
 number = {1},
 pages = {2--13},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Data Mining Static Code Attributes to Learn Defect Predictors},
 url = {https://doi.org/10.1109%2Ftse.2007.256941},
 volume = {33},
 year = {2007}
}

@inproceedings{Menzies_2008,
 abstract = {In mission critical systems, such as those developed by NASA, it is very important that the test engineers properly recognize the severity of each issue they identify during testing. Proper severity assessment is essential for appropriate resource allocation and planning for fixing activities and additional testing. Severity assessment is strongly influenced by the experience of the test engineers and by the time they spend on each issue. The paper presents a new and automated method named SEVERIS (severity issue assessment), which assists the test engineer in assigning severity levels to defect reports. SEVERIS is based on standard text mining and machine learning techniques applied to existing sets of defect reports. A case study on using SEVERIS with data from NASApsilas Project and Issue Tracking System (PITS) is presented in the paper. The case study results indicate that SEVERIS is a good predictor for issue severity levels, while it is easy to use and efficient.},
 author = {Tim Menzies and Andrian Marcus},
 booktitle = {2008 {IEEE} International Conference on Software Maintenance},
 doi = {10.1109/icsm.2008.4658083},
 month = {sep},
 publisher = {{IEEE}},
 title = {Automated severity assessment of software defect reports},
 url = {https://doi.org/10.1109%2Ficsm.2008.4658083},
 year = {2008}
}

@article{Menzies_2008,
 abstract = {After data mining National Aeronautics and Space Administration (NASA) independent verification and validation (IV&V) data, we offer (a) an early life cycle predictor for project issue frequency and severity; (b) an IV&V task selector (that used the predictor to find the appropriate IV&V tasks); and (c) pruning heuristics describing what tasks to ignore, if the budget cannot accommodate all selected tasks. In ten-way cross-validation experiments, the predictor performs very well indeed: the average f-measure for predicting four classes of issue severity was over 0.9. This predictor is built using public-domain data and software. To the best of our knowledge, this is the first reproducible report of a predictor for issue frequency and severity that can be applied early in the life cycle.},
 author = {Tim Menzies and Markland Benson and Ken Costello and Christina Moats and Melissa Northey and Julian Richardson},
 doi = {10.1007/s11334-008-0046-3},
 journal = {Innovations in Systems and Software Engineering},
 month = {feb},
 number = {2},
 pages = {169--183},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Learning better {IV}{\&}amp$\mathsemicolon$V practices},
 url = {https://doi.org/10.1007%2Fs11334-008-0046-3},
 volume = {4},
 year = {2008}
}

@article{Menzies_2010,
 abstract = {There exists a large and growing number of proposed estimation methods but little conclusive evidence ranking one method over
another. Prior effort estimation studies suffered from “conclusion instability”, where the rankings offered to different methods
were not stable across (a)different evaluation criteria; (b)different data sources; or (c)different random selections of
that data. This paper reports a study of 158 effort estimation methods on data sets based on COCOMO features. Four “best”
methods were detected that were consistently better than the “rest” of the other 154 methods. These rankings of “best” and
“rest” methods were stable across (a)three different evaluation criteria applied to (b)multiple data sets from two different
sources that were (c)divided into hundreds of randomly selected subsets using four different random seeds. Hence, while there
exists no single universal “best” effort estimation method, there appears to exist a small number (four) of most useful methods.
This result both complicates and simplifies effort estimation research. The complication is that any future effort estimation
analysis should be preceded by a “selection study” that finds the best local estimator. However, the simplification is that
such a study need not be labor intensive, at least for COCOMO style data sets.

KeywordsCOCOMO-Effort estimation-Data mining-Evaluation},
 author = {Tim Menzies and Omid Jalali and Jairus Hihn and Dan Baker and Karen Lum},
 doi = {10.1007/s10515-010-0070-z},
 journal = {Automated Software Engineering},
 month = {may},
 number = {4},
 pages = {409--437},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Stable rankings for different effort models},
 url = {https://doi.org/10.1007%2Fs10515-010-0070-z},
 volume = {17},
 year = {2010}
}

@article{Mikkonen_2018,
 abstract = {},
 author = {Tommi Mikkonen and Casper Lassenius and Tomi Männistö and Markku Oivo and Janne Järvinen},
 doi = {10.1016/j.infsof.2017.10.013},
 journal = {Information and Software Technology},
 month = {mar},
 pages = {34--45},
 publisher = {Elsevier {BV}},
 title = {Continuous and collaborative technology transfer: Software engineering research with real-time industry impact},
 url = {https://doi.org/10.1016%2Fj.infsof.2017.10.013},
 volume = {95},
 year = {2018}
}

@article{Mizell_2007,
 abstract = {},
 author = {Carolyn Mizell and Linda Malone},
 doi = {10.1080/10429247.2007.11431746},
 journal = {Engineering Management Journal},
 month = {dec},
 number = {4},
 pages = {28--34},
 publisher = {Informa {UK} Limited},
 title = {A Project Management Approach to Using Simulation for Cost Estimation on Large, Complex Software Development Projects},
 url = {https://doi.org/10.1080%2F10429247.2007.11431746},
 volume = {19},
 year = {2007}
}

@phdthesis{Moraes,
 abstract = {},
 author = {Ricardo Alves Moraes},
 doi = {10.26512/2015.06.d.18976},
 publisher = {Biblioteca Central da {UNB}},
 title = {Proposta de melhoria para o processo de desenvolvimento de software do ex{\'{e}}rcito brasileiro com base no modelo de gest{\~{a}}o de risco e na metodologia {\'{a}}gil},
 url = {https://doi.org/10.26512%2F2015.06.d.18976}
}

@inproceedings{Munch_2003,
 abstract = {Empirical knowledge from software engineering studies is an important source for the creation of accurate simulation models. This article describes the development of a simulation model using empirical knowledge gained from an experiment at the NASA/GSFC Software Engineering Laboratory and from two replications at the University of Kaiserslautern. Data and analysis results are used to identify influence dependencies between parameters, and to calibrate models. The goal of the model is the determination of the effects (i.e. defect detection efficacy) of a requirements inspection process under varying contexts. The purpose is to provide decision support for project managers and process engineers when planning or changing a development process. This article describes the systematic model development with a focus on the use of empirical knowledge. Additionally, limitations of the model, lessons learned, and research questions for future work are sketched. The model performed well in an initial validation run, with only little deviation from experimental values.},
 author = {J. Munch and O. Armbrust},
 booktitle = {2003 International Symposium on Empirical Software Engineering, 2003. {ISESE} 2003. Proceedings.},
 doi = {10.1109/isese.2003.1237961},
 publisher = {{IEEE}},
 title = {Using empirical knowledge from replicated experiments for software process simulation: a practical example},
 url = {https://doi.org/10.1109%2Fisese.2003.1237961},
 year = {2003}
}

@incollection{Niazi,
 abstract = {We have conducted face-to-face questionnaire based survey sessions with twenty-three Vietnamese software practitioners in order to determine software process improvement (SPI) de-motivators. The main objective of this study is to provide SPI practitioners with some insight into designing appropriate SPI implementation strategies and to maximize practitioners support for SPI. We asked practitioners to choose and rank various SPI de-motivator against the five types of assessments (high, medium, low, zero or do not know). From this, we propose the notion of ’perceived value’ associated with each SPI de-motivator. We have identified ’high’ and ’medium’ perceived values demotivators that can undermine SPI initiatives. We have identified what demotivates developers and managers to be actively involved in SPI initiatives. We have also identified SPI de-motivators of small-medium and large sized organisations.},
 author = {Mahmood Niazi and Muhammad Ali Babar},
 booktitle = {Product-Focused Software Process Improvement},
 doi = {10.1007/978-3-540-73460-4_13},
 pages = {118--131},
 publisher = {Springer Berlin Heidelberg},
 title = {De-motivators of Software Process Improvement: An Analysis of Vietnamese Practitioners' Views},
 url = {https://doi.org/10.1007%2F978-3-540-73460-4_13}
}

@incollection{Niazi_2004,
 abstract = {Advances have been made in the development of software process improvement (SPI) standards and models, i.e. Capability Maturity Model (CMM), more recently CMMI, and ISO’s SPICE. However, these advances have not been matched by equal advances in the adoption of these standards and models in software development which has resulted in limited success for many SPI efforts. The current problem with SPI is not a lack of a standard or model, but rather a lack of an effective strategy to successfully implement these standards or models. In the literature, much attention has been paid to “what activities to implement” rather than “how to implement” these activities. We believe that identification of only “what activities to implement” is not sufficient and that knowledge of “how to implement” is also required for successful implementation of SPI programmes. The aim of this research paper is to empirically explore the viewpoints and experiences of practitioners regarding SPI implementation and based on the findings to develop a model in order to guide practitioners in effectively implementing SPI programmes. This SPI implementation model has six phases and provides a very practical structure within which to implement SPI programmes in organizations.},
 author = {Mahmood Niazi and David Wilson and Didar Zowghi and Bernard Wong},
 booktitle = {Product Focused Software Process Improvement},
 doi = {10.1007/978-3-540-24659-6_1},
 pages = {1--16},
 publisher = {Springer Berlin Heidelberg},
 title = {A Model for the Implementation of Software Process Improvement: An Empirical Study},
 url = {https://doi.org/10.1007%2F978-3-540-24659-6_1},
 year = {2004}
}

@article{Niazi_2005,
 abstract = {},
 author = {Mahmood Niazi and David Wilson and Didar Zowghi},
 doi = {10.1016/j.jss.2003.10.017},
 journal = {Journal of Systems and Software},
 month = {jan},
 number = {2},
 pages = {155--172},
 publisher = {Elsevier {BV}},
 title = {A maturity model for the implementation of software process improvement: an empirical study},
 url = {https://doi.org/10.1016%2Fj.jss.2003.10.017},
 volume = {74},
 year = {2005}
}

@article{Niazi_2006,
 abstract = {In this article, we present findings from our recent empirical study of the critical success factors (CSFs) for software process improvement (SPI) implementation with 34 SPI practitioners. The objective of this study is to provide SPI practitioners with sufficient knowledge about the nature of issues that play a positive role in the implementation of SPI programmes in order to assist them in effectively planning SPI implementation strategies.Through our empirical study we identified seven factors (higher management support, training, awareness, allocation of resources, staff involvement, experienced staff and defined SPI implementation methodology) that are generally considered critical for successfully implementing SPI. We also report on a literature survey of CSFs that impact SPI and identify six factors (senior management commitment, staff involvement, staff time and resources, training and mentoring, creating process action teams and reviews). We compared our empirical study results with the literature and confirmed the factors identified in the literature, and also identified two new CSFs (SPI awareness and defined SPI implementation methodology) that were not identified in the literature. Finally, we analyzed the CSFs identified by different groups of practitioners and found that they are aware of what is imperative for the successful implementation of SPI programmes. Copyright © 2006 John Wiley & Sons, Ltd.},
 author = {Mahmood Niazi and David Wilson and Didar Zowghi},
 doi = {10.1002/spip.261},
 journal = {Software Process: Improvement and Practice},
 number = {2},
 pages = {193--211},
 publisher = {Wiley},
 title = {Critical success factors for software process improvement implementation: an empirical study},
 url = {https://doi.org/10.1002%2Fspip.261},
 volume = {11},
 year = {2006}
}

@article{Niazi_2008,
 abstract = {We have conducted an empirical study with 23 Vietnamese software practitioners to determine Software Process Improvement (SPI) demotivators. We have compared the demotivators identified by the Vietnamese practitioners with the demotivators identified by UK practitioners. The main objective of this study is to provide SPI managers with insight into the nature of factors that can hinder the success of a SPI program, so that SPI managers can better manage those demotivators to maximize practitioners' support for an SPI program.
We used face-to-face questionnaire-based survey sessions for gathering data. We also asked the participants to rank each identified SPI demotivator on a five-point scale (high, medium, low, zero or do not know) to determine the perceived importance of each demotivator. From this, we proposed the notion of ‘perceived value’ associated with each identified demotivator.
Our findings identify the ‘high’ and ‘medium’ perceived value demotivators that can undermine SPI initiatives. The findings also show that there are differences in SPI demotivators across practitioners' groups (i.e., developers and managers) and across organisational sizes (i.e. large and small-to-medium). Moreover, our results reveal the similarities and differences between SPI demotivators as perceived by practitioners in Vietnam and the United Kingdom. The findings are expected to provide SPI managers with insight to design and implement suitable strategies to deal with the identified SPI demotivators. Copyright},
 author = {Mahmood Niazi and Muhammad Ali Babar and Nolin Mark Katugampola},
 doi = {10.1002/spip.380},
 journal = {Software Process: Improvement and Practice},
 month = {may},
 number = {3},
 pages = {249--264},
 publisher = {Wiley},
 title = {Demotivators of software process improvement: an empirical investigation},
 url = {https://doi.org/10.1002%2Fspip.380},
 volume = {13},
 year = {2008}
}

@article{Niazi_2010,
 abstract = {ContextSoftware Process Improvement initiatives have been around for many years with the growing globalisation of software development is making them increasingly important.},
 author = {Mahmood Niazi and Muhammad Ali Babar and June M. Verner},
 doi = {10.1016/j.infsof.2010.06.005},
 journal = {Information and Software Technology},
 month = {nov},
 number = {11},
 pages = {1204--1216},
 publisher = {Elsevier {BV}},
 title = {Software Process Improvement barriers: A cross-cultural comparison},
 url = {https://doi.org/10.1016%2Fj.infsof.2010.06.005},
 volume = {52},
 year = {2010}
}

@article{Niazi_2015,
 abstract = {},
 author = {Mahmood Niazi},
 doi = {10.1002/smr.1704},
 journal = {Journal of Software: Evolution and Process},
 month = {feb},
 number = {9},
 pages = {700--722},
 publisher = {Wiley},
 title = {A comparative study of software process improvement implementation success factors},
 url = {https://doi.org/10.1002%2Fsmr.1704},
 volume = {27},
 year = {2015}
}

@inproceedings{Nikula,
 abstract = {Software process improvement is a complex and expensive endeavor requiring extensive resources and long term commitment. In the present study software process improvement (SPI) problems in small organizations were tackled by dividing the overall effort into three subtopics: technical infrastructure, working practices, and management infrastructure. Partitioning the SPI efforts into these three subtopics makes it apparent that all of these topics do not need to be tackled in the same way but some tasks can, e.g., be outsourced. In this paper the results of an investigation into the use of the model above in requirements engineering (RE) process improvement are reported from three industrial case studies. A domain specific method was constructed independently of the utilizing companies, i.e., outsourced, and it was then used in SPI efforts in the companies to establish a solid infrastructure for basic RE in a short period of time, with limited resources, and without previous expertise in RE. It is argued that the suggested partitioning can both lower the threshold for initiating software process improvement efforts in industry and increase the likelihood of successfully completing them.},
 author = {U. Nikula and J. Sajaniemi},
 booktitle = {2005 Australian Software Engineering Conference},
 doi = {10.1109/aswec.2005.46},
 publisher = {{IEEE}},
 title = {Tackling the Complexity of Requirements Engineering Process Improvement by Partitioning the Improvement Task},
 url = {https://doi.org/10.1109%2Faswec.2005.46}
}

@incollection{Noorwali_2013,
 abstract = {[Context and Motivation] "Those who cannot remember the past are condemned to repeat it" --- George Santayana. From the survey we conducted of requirements engineering (RE) practitioners, over 70% seldom use RE lessons in the RE process, though 85% of these would use such lessons if readily available. Our observation, however, is that, RE lessons are scattered, mainly implicitly, in the literature and practice, which, obviously, does not help the situation. [Problem/Question] Approximately 90% of the survey participants stated that not utilising RE lessons has significant negative impact on product quality, productivity, project delays and cost overruns. [Principal Ideas] We propose "maps" (or profiles) of RE lessons which, once populated, would highlight weak (dark) and strong (bright) areas of RE (and hence RE theories). Such maps would thus be: (a) a driver for research to "light up" the darker areas of RE and (b) a guide for practice to benefit from the brighter areas. [Contribution] The key contribution of this work is the concept of "maps" of RE lessons.},
 author = {Ibtehal Noorwali and Nazim H. Madhavji},
 booktitle = {Requirements Engineering: Foundation for Software Quality},
 doi = {10.1007/978-3-642-37422-7_9},
 pages = {119--124},
 publisher = {Springer Berlin Heidelberg},
 title = {Maps of Lessons Learnt in Requirements Engineering: A Research Preview},
 url = {https://doi.org/10.1007%2F978-3-642-37422-7_9},
 year = {2013}
}

@article{Pettersson_2008,
 abstract = {Software process improvement (SPI) is challenging, particularly for small and medium sized enterprises. Most existing SPI frameworks are either too expensive to deploy, or do not take an organizations’ specific needs into consideration. There is a need for light weight SPI frameworks that enable practitioners to base improvement efforts on the issues that are the most critical for the specific organization.This paper presents a step-by-step guide to process assessment and improvement planning using improvement framework utilizing light weight assessment and improvement planning (iFLAP), aimed at practitioners undertaking SPI initiatives. In addition to the guide itself the industrial application of iFLAP is shown through two industrial cases. iFLAP is a packaged improvement framework, containing both assessment and improvement planning capabilities, explicitly developed to be light weight in nature. Assessment is performed by eliciting improvements issues based on the organization’s experience and knowledge. The findings are validated through triangulation utilizing multiple data sources. iFLAP actively involves practitioners in prioritizing improvement issues and identifying dependencies between them in order to package improvements, and thus establish a, for the organization, realistic improvement plan. The two cases of iFLAP application in industry are presented together with lessons learned in order to exemplify actual use of the framework as well as challenges encountered.},
 author = {F. Pettersson and M. Ivarsson and T. Gorschek and P. Öhman},
 doi = {10.1016/j.jss.2007.08.032},
 journal = {Journal of Systems and Software},
 month = {jun},
 number = {6},
 pages = {972--995},
 publisher = {Elsevier {BV}},
 title = {A practitioner's guide to light weight software process assessment and improvement planning},
 url = {https://doi.org/10.1016%2Fj.jss.2007.08.032},
 volume = {81},
 year = {2008}
}

@incollection{Pfahl_2014,
 abstract = {Process simulation has been introduced as a tool in support of software project management more than 25 years ago. Since then, it has been considered an approach with high potential for making software project managers' work more effective and successful. Unfortunately, despite high expectations and many reports on prototypical process simulation applications in industrial contexts, little evidence exists that process simulation has become an accepted and regularly used tool of software project managers. This chapter investigates the reasons for lacking impact of process simulation in the software industry. This is done with the help of an in-depth description of a software process simulation application example. The application example focuses on the effects of various workforce allocation strategies on project performance, expressed in terms of project duration, effort consumption, and product quality. With the help of the application example and based on existing literature, the gap between the current state of the art of software process simulation and the actual state of practice is described and its root-causes are discussed. The chapter concludes with a list of issues that need to be addressed in order to close the gap between the state of the art and the state of practice. Most of the issues relate to the difficulty of demonstrating a positive cost-benefit ratio when applying process simulation as a tool in support of software project management tasks. © 2014 Springer-Verlag Berlin Heidelberg. All rights are reserved.},
 author = {Dietmar Pfahl},
 booktitle = {Software Project Management in a Changing World},
 doi = {10.1007/978-3-642-55035-5_17},
 pages = {425--446},
 publisher = {Springer Berlin Heidelberg},
 title = {Process Simulation: A Tool for Software Project Managers?},
 url = {https://doi.org/10.1007%2F978-3-642-55035-5_17},
 year = {2014}
}

@incollection{Porto,
 abstract = {Several companies have been carrying out software processes improvement projects. However, some of them give up before the project ends, and others take much longer than expected to get it accomplished. This way, identifying the resistance factors that influence the implementation of such projects might serve as a reference to professionals in this area on the one hand, and help to manage future projects on the other, through the use of preventive actions that either lessen or eliminate the resistance factors’ consequences. For this matter, this chapter presents a survey with 36 professionals involved in initiatives of software processes improvement in 18 companies in the state of Rio Grande do Sul, Brazil.},
 author = {Josiane Brietzke Porto},
 booktitle = {Software Process Improvement and Management},
 doi = {10.4018/978-1-61350-141-2.ch006},
 pages = {100--116},
 publisher = {{IGI} Global},
 title = {Resistance Factors in Software Processes Improvement},
 url = {https://doi.org/10.4018%2F978-1-61350-141-2.ch006}
}

@article{Prause_2016,
 abstract = {The DLR Space Administration designs and implements the German space program. While project management rests with the agency, suppliers are contracted for building the space devices and their software. As opposed to many other domains, these are often unique devices with uncommon and custom-built peripherals. Its software is specifically developed for a single mission only and controls critical functionality. A small coding error can mean the loss of a mission. For this reason, customer and supplier collaborate to improve products and processes to achieve better software at the end of a project. We discuss quality in the context of space projects, and report a cross-sectional view from a customer's perspective on various management tools for influencing suppliers' processes and product quality: standards, single-source tailoring and cross-company product assurance.},
 author = {Christian R. Prause and Markus Bibus and Carsten Dietrich and Wolfgang Jobi},
 doi = {10.1002/smr.1779},
 journal = {Journal of Software: Evolution and Process},
 month = {apr},
 number = {9},
 pages = {744--761},
 publisher = {Wiley},
 title = {Software product assurance at the German space agency},
 url = {https://doi.org/10.1002%2Fsmr.1779},
 volume = {28},
 year = {2016}
}

@incollection{Prause_2016,
 abstract = {The Space Administration of the German Aerospace Center designs and implements the German space program. While project management rests with the agency, suppliers are contracted for building devices and their software. As opposed to many other domains, a spacecraft is a unique device with uncommon and custom-built peripherals. Its software is specifically developed for a single mission only and often controls critical functionality. A small coding error can mean the loss of the spacecraft and mission failure. For this reason, customer and supplier closely collaborate on the field of software quality. We report from a customer’s perspective on how we manage software quality and ensure that suppliers evolve their processes: We contribute to standards, tailor quality, and process requirements to establish them in projects, and engage in cross-company product quality collaboration.},
 author = {Christian R. Prause and Markus Bibus and Carsten Dietrich and Wolfgang Jobi},
 booktitle = {Managing Software Process Evolution},
 doi = {10.1007/978-3-319-31545-4_8},
 pages = {137--163},
 publisher = {Springer International Publishing},
 title = {Managing Software Process Evolution for Spacecraft from a Customer's Perspective},
 url = {https://doi.org/10.1007%2F978-3-319-31545-4_8},
 year = {2016}
}

@incollection{Prause_2018,
 abstract = {You software guys are too much like the weavers in the story about the Emperor and his new clothes. When I go out to check on a software development the answers I get sound like, 'We’re fantastically busy weaving this magic cloth. Just wait a while and it’ll look terrific." But there’s nothing I can see or touch, no numbers I can relate to, no way to pick up signals that things aren’t really all that great. And there are too many people I know who have come out at the end wearing a bunch of expensive rags or nothing at all.' 

Space projects, and development of software embedded in these systems, are complex, sometimes costing hundreds of millions of Euros and involving several tiers of suppliers. An important means of improving mutual understanding is to increase transparency of the development status between customers and suppliers. We raise the problem of transparency in complex projects to the reader’s attention, and, relying on results of a small survey of practitioners, propose to use ECSS software metrics/KPIs as a mitigation. We present our metrication infrastructure, and describe issues to be considered when implementing an early metrication programme in a real-world, industry space project.

https://www.drprause.de/files/PROFES2018-EmperorNewClothes.pdf},
 author = {Christian R. Prause and Alfred Hönle},
 booktitle = {Product-Focused Software Process Improvement},
 doi = {10.1007/978-3-030-03673-7_21},
 pages = {288--296},
 publisher = {Springer International Publishing},
 title = {Emperor's New Clothes: Transparency Through Metrication in Customer-Supplier Relationships},
 url = {https://doi.org/10.1007%2F978-3-030-03673-7_21},
 year = {2018}
}

@article{Reed_2006,
 abstract = {RESUMEN RESUMEN 

An interesting issue facing software engineering relates to the evidence for adopting new techniques, tools, languages methodologies, and so on. We shouldn't always reject new models based on pure argument and logic , but ideally , we should subject such developments to some form of validation . The software engineering community has addressed this issue in part by the establishment of specialist conferences . Two of these are merging , and the Technical Council on Software Engineering thought you would like to know why .},
 author = {K. Reed},
 doi = {10.1109/ms.2006.100},
 journal = {{IEEE} Software},
 month = {jul},
 number = {4},
 pages = {98--99},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Experimental Software Engineering: A New Conference},
 url = {https://doi.org/10.1109%2Fms.2006.100},
 volume = {23},
 year = {2006}
}

@incollection{Rodr_guez_2009,
 abstract = {gile methods have appeared as an attractive alternative to conventional methodologies. These methods try to reduce the time to market and, indirectly, the cost of the product through flexible development and deep customer involvement. The processes related to requirements have been extensively studied in literature, in most cases in the frame of conventional methods. However, conclusions of conventional methodologies could not be necessarily valid for Agile; in some issues, conventional and Agile processes are radically different. As recent surveys report, inadequate project requirements is one of the most conflictive issues in agile approaches and better understanding about this is needed. This paper describes some findings concerning requirements activities in a project developed under an agile methodology. The project intended to evolve an existing product and, therefore, some background information was available. The major difficulties encountered were related to non-functional needs and management of requirements dependencies.},
 author = {Pilar Rodr{\'{\i}}guez and Agust{\'{\i}}n Yagüe and Pedro P. Alarc{\'{o}}n and Juan Garbajosa},
 booktitle = {Lecture Notes in Business Information Processing},
 doi = {10.1007/978-3-642-02152-7_14},
 pages = {171--184},
 publisher = {Springer Berlin Heidelberg},
 title = {Some Findings Concerning Requirements in Agile Methodologies},
 url = {https://doi.org/10.1007%2F978-3-642-02152-7_14},
 year = {2009}
}

@inproceedings{Rombach_2007,
 abstract = {The rapid and complex research and innovation processes require high-tech companies to optimize their technology transfer processes. It is clearly not sufficient to solely rely on internal R&D; strategic cooperations with external research centers of excellence are needed in order to compete in the global innovation market. Candidates for such strategic cooperations are universities, research institutions, and technology focused consulting companies. Key challenge is the effective integration of external competences into the company-internal innovation processes. In this paper we present a survey of the state-of-the-art in technology transfer, high-light promising success cases for the future, and derive success criteria for successful technology transfer in a global world. The cooperation between Siemens and Fraunhofer IESE is presented as a concrete example.},
 author = {Dieter Rombach and Reinhold Achatz},
 booktitle = {Future of Software Engineering ({FOSE} {\textquotesingle}07)},
 doi = {10.1109/fose.2007.16},
 month = {may},
 publisher = {{IEEE}},
 title = {Research Collaborations between Academia and Industry},
 url = {https://doi.org/10.1109%2Ffose.2007.16},
 year = {2007}
}

@article{Rombach_2008,
 abstract = {},
 author = {Dieter Rombach and Marcus Ciolkowski and Ross Jeffery and Oliver Laitenberger and Frank McGarry and Forrest Shull},
 doi = {10.1145/1449603.1449609},
 journal = {{ACM} {SIGSOFT} Software Engineering Notes},
 month = {oct},
 number = {6},
 pages = {26--35},
 publisher = {Association for Computing Machinery ({ACM})},
 title = {Impact of research on practice in the field of inspections, reviews and walkthroughs},
 url = {https://doi.org/10.1145%2F1449603.1449609},
 volume = {33},
 year = {2008}
}

@inproceedings{Santillo,
 abstract = {},
 author = {L. Santillo and M. Conte and R. Meli},
 booktitle = {11th {IEEE} International Software Metrics Symposium ({METRICS}{\textquotesingle}05)},
 doi = {10.1109/metrics.2005.18},
 publisher = {{IEEE}},
 title = {Early {\&}amp$\mathsemicolon$amp$\mathsemicolon$ Quick Function Point: Sizing More with Less},
 url = {https://doi.org/10.1109%2Fmetrics.2005.18}
}

@inproceedings{Santillo_2005,
 abstract = {The Early & Quick technique was originally proposed in 1997 for IFPUG Function Points, to size software in early stages of the development process, when functional requirements are still to be established in a detailed form and/or when a rapid measure is needed for existing software from a high-level viewpoint, within limited time. Typical lack of measurement details and requirements volatility in early project stages are overcome by the E&Q approach to provide a size estimate as a significant contribution to early project planning needs. Fundamental principles of the technique are classification by analogy, functionality structured aggregation, and multilevel approach, with statistical validation of numerical ranges. Recently, the technique has evolved, to fully comply with any functional size measurement method (ISO/IEC 14143:1998), so to cover new generation methods (e.g., COSMIC Full FP 2.2) and updated releases of existing methods (e.g., IFPUG FP 4.1 and 4.2). This paper describes the current technique release 2.0, application cases, validation results, supporting tools, and further improvement directions.},
 author = {L. Santillo and M. Conte and R. Meli},
 booktitle = {11th {IEEE} International Software Metrics Symposium ({METRICS}{\textquotesingle}05)},
 doi = {10.1109/metrics.2005.33},
 publisher = {{IEEE}},
 title = {Early {\&}amp$\mathsemicolon$amp$\mathsemicolon$ Quick function point: sizing more with less},
 url = {https://doi.org/10.1109%2Fmetrics.2005.33},
 year = {2005}
}

@article{Serdar_Bi_er_2016,
 abstract = {Testing is a crucial activity in software development. However exhaustive testing of a given software is impossible in practice because projects have serious time and budget limitations. Therefore, software testing teams need guidance about which modules they should focus on. Defect prediction techniques are useful for this situation because they let testers to identify and focus on defect prone parts of software. These techniques are essential for software teams, because they help teams to efficiently allocate their precious resources in testing phase. Software defect prediction has been an active research area in recent years. Researchers in this field have been using different types of metrics in their prediction models. However, value of extracting static code metrics for stylesheet languages has been ignored until now. User experience is a very important part of web applications and it's mostly provided using Cascading Style Sheets (CSS). In this research, our aim is to improve defect prediction performance for web applications by utilizing metrics generated from CSS code. We generated datasets from four open source web applications to conduct our experiments. Defect prediction is then performed using three different well-known machine learning algorithms. The results revealed that static code metrics based defect prediction techniques can be performed effectively to improve quality of CSS code in web applications. Therefore we recommend utilizing domain-specific characteristics of applications in defect prediction as they result in significantly high prediction performance with low costs.},
 author = {M. Serdar Bi{\c{c}}er and Banu Diri},
 doi = {10.1016/j.asoc.2016.05.038},
 journal = {Applied Soft Computing},
 month = {dec},
 pages = {1078--1084},
 publisher = {Elsevier {BV}},
 title = {Defect prediction for Cascading Style Sheets},
 url = {https://doi.org/10.1016%2Fj.asoc.2016.05.038},
 volume = {49},
 year = {2016}
}

@inproceedings{Shah_2012,
 abstract = {Software Process Improvement is a set of activities that leads to a better software process, and ensures the design and development of quality software in a timely manner. Recently, several software companies have decided to adopt maturity models such as the CMM/CMMI to ensure quality software processes. This paper presents the empirical study for successful implementation of CMMI in Pakistani Information Technology (IT) industry. Recent literature reveals that only few CMMI based assessments have been performed at software companies so far. Pakistani software companies are facing a lot of problems to attain a good level of CMMI. This paper has indentified the key factors to be used for analyzing the problems faced by these organizations. These factors have played a key role in analyzing the collected surveyed data from various perspectives. This research also presents the best practices for ease and successful implementation of CMMI to improve the quality of software processes in Pakistani IT industry.},
 author = {Syed Nasir Mehmood Shah and Mehrosh Khalid and Ahmad Kamil Bin Mahmood and Nazleeni Haron and Muhammad Younus Javed},
 booktitle = {2012 International Conference on Computer {\&}amp$\mathsemicolon$ Information Science ({ICCIS})},
 doi = {10.1109/iccisci.2012.6297173},
 month = {jun},
 publisher = {{IEEE}},
 title = {Implementation of Software Process Improvement in Pakistan: An empirical study},
 url = {https://doi.org/10.1109%2Ficcisci.2012.6297173},
 year = {2012}
}

@article{Sharma_2018,
 abstract = {Context
Since last more than one‐decade software process improvement, widely known as SPI has received the attention of the software engineering community.

Objective
The objective of the paper is to empirically examine and develop a framework to model structural dependences among inhibitors that impact SPI initiatives in software SMEs.

Methods
Authors used mixed method approach (empirical analysis and interpretive structural modeling, ISM) to evaluate, model, and analyze the association between SPI inhibitors in software SMEs.

Results
The results from empirical analysis and ISM show that lack of management commitment, lack of resources, and lack of communication and information sharing are the key SPI inhibitors. The association of various inhibitors with SPI implementation is found statistically significant with effect size (0.42 < Ø < 0.75, P < 0.05). Also, Spearman's coefficient of correlation for rankings of SPI inhibitors is found to be moderate to high, ie, 0.601 (P = 0.01 < 0.05) for SLR and interviews; 0.794 (P = 0.00) for SLR and empirical analysis; and 0.711 (P = 0.002 < 0.01) for interviews and empirical analysis.

Conclusions
Analysis of SPI inhibitors through the proposed triangulation approach and development of software process improvement inhibitors model highlights the importance of structural dependencies among the inhibitors.},
 author = {Pooja Sharma and Amrit Lal Sangal},
 doi = {10.1002/smr.1993},
 journal = {Journal of Software: Evolution and Process},
 month = {oct},
 number = {12},
 pages = {e1993},
 publisher = {Wiley},
 title = {Framework for empirical examination and modeling structural dependencies among inhibitors that impact {SPI} implementation initiatives in software {SMEs}},
 url = {https://doi.org/10.1002%2Fsmr.1993},
 volume = {30},
 year = {2018}
}

@inproceedings{Sjoberg_2007,
 abstract = {We present the vision that for all fields of software engineering (SE), empirical research methods should enable the development of scientific knowledge about how useful different SE technologies are for different kinds of actors, performing different kinds of activities, on different kinds of systems. It is part of the vision that such scientific knowledge will guide the development of new SE technology and is a major input to important SE decisions in industry. Major challenges to the pursuit of this vision are: more SE research should be based on the use of empirical methods; the quality, including relevance, of the studies using such methods should be increased; there should be more and better synthesis of empirical evidence; and more theories should be built and tested. Means to meet these challenges include (1) increased competence regarding how to apply and combine alternative empirical methods, (2) tighter links between academia and industry, (3) the development of common research agendas with a focus on empirical methods, and (4) more resources for empirical research.},
 author = {Dag I. K. Sjoberg and Tore Dyba and Magne Jorgensen},
 booktitle = {Future of Software Engineering ({FOSE} {\textquotesingle}07)},
 doi = {10.1109/fose.2007.30},
 month = {may},
 publisher = {{IEEE}},
 title = {The Future of Empirical Methods in Software Engineering Research},
 url = {https://doi.org/10.1109%2Ffose.2007.30},
 year = {2007}
}

@inproceedings{Teresa_Baldassarre_2015,
 abstract = {According to the Project Management Institute (PMI) project management consists of planning, organizing, motivating and controlling resources such as time and cost in order to produce products with acceptable quality levels. As so, project managers must monitor and control project execution, i.e. verify actual progress and performance of a project with respect to the project plan and timely identify where changes must be made on both process and product. Earned Value Management (EVM) is a valuable technique for determining and monitoring the progress of a project as it indicates performance variances based on measures related to work progress, schedule and cost information. This technique requires that a set of metrics be systematically collected throughout the entire project. A consequence is that, for large and long projects, managers may encounter difficulties in interpreting all the information collected and using it for decision-making. To assist managers in this tedious task, in this paper we classify the EVM metrics distinguishing them into five conceptual classes and present an interpretation model that managers can adopt as checklist for monitoring EVM values and tracking the project's progress. At this point of our research the decision model has been applied during an industrial project to monitor project progress and guide project manager decisions.},
 author = {Maria Teresa Baldassarre and Nicola Boffoli and Danilo Caivano and Giuseppe Visaggio},
 booktitle = {Proceedings of the 17th International Conference on Enterprise Information Systems},
 doi = {10.5220/0005470305020508},
 publisher = {{SCITEPRESS} - Science and and Technology Publications},
 title = {Tracking Project Progress with Earned Value Management Metrics - A Real Case},
 url = {https://doi.org/10.5220%2F0005470305020508},
 year = {2015}
}

@inproceedings{Thompson_2007,
 abstract = {People enacting processes deviate from the process definition for a variety of different reasons. These deviations may result in either negative or positive consequences for the organization involved. Detecting deviations as the process is being enacted provides an opportunity to determine not only the point in the process where the deviation occurred but a faster and more accurate diagnosis of any issues or problems and the rectification of such. We present a framework designed to detect deviations in enacting process "on the fly". The framework consists of a definition engine in which boundary values and process constraints are set, a monitoring engine which observes and records the process during enactment and a detection engine which compares observed values against the definition constraints and detects inconsistencies and deviations as they happen. The methods used are related to some of the work previously conducted in the process improvement and deviation detection domain, and brings these concepts together with our own ideas as a software tool. The developed model is demonstrated with a simulated process and the findings are evaluated.},
 author = {Sean Thompson and Torab Torabi and Purva Joshi},
 booktitle = {6th {IEEE}/{ACIS} International Conference on Computer and Information Science ({ICIS} 2007)},
 doi = {10.1109/icis.2007.18},
 publisher = {{IEEE}},
 title = {A Framework to Detect Deviations During Process Enactment},
 url = {https://doi.org/10.1109%2Ficis.2007.18},
 year = {2007}
}

@inproceedings{Thompson_2008,
 abstract = {The methodology described in this paper seeks not so much to break away from the other generic, broad methodologies presented in the literature thus far, but rather to apply our concept to a small and easier aspect of the process - resources. By applying our model to just process resources, we can keep it a lot simpler and easier to understand. Having said that, our methodology still remains generic and applicable to processes across all domains instead of being targeted at one, like manufacturing or software engineering the way most other presented models do. The model we describe here is specifically designed to detect instances of non-conformance between a ldquoprescribedrdquo process and its ldquoobservedrdquo process counterpart by structuring the data of the two and then making comparisons. A mathematically formal model is presented with a small illustrative example of how it can be usefully applied.},
 author = {Sean Thompson and Torab Torabi},
 booktitle = {2008 2nd {IEEE} International Conference on Digital Ecosystems and Technologies},
 doi = {10.1109/dest.2008.4635184},
 month = {feb},
 publisher = {{IEEE}},
 title = {A resource based formal methodology to detect non-conformance in processes},
 url = {https://doi.org/10.1109%2Fdest.2008.4635184},
 year = {2008}
}

@article{Tosun_2010,
 abstract = {Building defect prediction models in large organizations has many challenges due to limited resources and tight schedules in the software development lifecycle. It is not easy to collect data, utilize any type of algorithm and build a permanent model at once. We have conducted a study in a large telecommunications company in Turkey to employ a software measurement program and to predict pre-release defects. Based on our prior publication, we have shared our experience in terms of the project steps (i.e. challenges and opportunities). We have further introduced new techniques that improve our earlier results.},
 author = {Ay{\c{s}}e Tosun and Ay{\c{s}}e Bener and Burak Turhan and Tim Menzies},
 doi = {10.1016/j.infsof.2010.06.006},
 journal = {Information and Software Technology},
 month = {nov},
 number = {11},
 pages = {1242--1257},
 publisher = {Elsevier {BV}},
 title = {Practical considerations in deploying statistical methods for defect prediction: A case study within the Turkish telecommunications industry},
 url = {https://doi.org/10.1016%2Fj.infsof.2010.06.006},
 volume = {52},
 year = {2010}
}

@article{Turhan_2009,
 abstract = {Software defect prediction is important for reducing test times by allocating testing resources effectively. In terms of predicting the defects in software, Naive Bayes outperforms a wide range of other methods. However, Naive Bayes assumes the ‘independence’ and ‘equal importance’ of attributes. In this work, we analyze these assumptions of Naive Bayes using public software defect data from NASA. Our analysis shows that independence assumption is not harmful for software defect data with PCA pre-processing. Our results also indicate that assigning weights to static code attributes may increase the prediction performance significantly, while removing the need for feature subset selection.},
 author = {Burak Turhan and Ayse Bener},
 doi = {10.1016/j.datak.2008.10.005},
 journal = {Data {\&}amp$\mathsemicolon$ Knowledge Engineering},
 month = {feb},
 number = {2},
 pages = {278--290},
 publisher = {Elsevier {BV}},
 title = {Analysis of Naive Bayes' assumptions on software fault data: An empirical study},
 url = {https://doi.org/10.1016%2Fj.datak.2008.10.005},
 volume = {68},
 year = {2009}
}

@article{Turhan_2009,
 abstract = {},
 author = {Burak Turhan and Tim Menzies and Ay{\c{s}}e B. Bener and Justin Di Stefano},
 doi = {10.1007/s10664-008-9103-7},
 journal = {Empirical Software Engineering},
 month = {jan},
 number = {5},
 pages = {540--578},
 publisher = {Springer Science and Business Media {LLC}},
 title = {On the relative value of cross-company and within-company data for defect prediction},
 url = {https://doi.org/10.1007%2Fs10664-008-9103-7},
 volume = {14},
 year = {2009}
}

@inproceedings{Turhan_2011,
 abstract = {Defect prediction research mostly focus on optimizing the performance of models that are constructed for isolated projects. On the other hand, recent studies try to utilize data across projects for building defect prediction models. We combine both approaches and investigate the effects of using mixed (i.e. within and cross) project data on defect prediction performance, which has not been addressed in previous studies. We conduct experiments to analyze models learned from mixed project data using ten proprietary projects from two different organizations. We observe that code metric based mixed project models yield only minor improvements in the prediction performance for a limited number of cases that are difficult to characterize. Based on existing studies and our results, we conclude that using cross project data for defect prediction is still an open challenge that should only be considered in environments where there is no local data collection activity, and using data from other projects in addition to a project's own data does not pay off in terms of performance.},
 author = {Burak Turhan and Ayse Tosun and Ayse Bener},
 booktitle = {2011 37th {EUROMICRO} Conference on Software Engineering and Advanced Applications},
 doi = {10.1109/seaa.2011.59},
 month = {aug},
 publisher = {{IEEE}},
 title = {Empirical Evaluation of Mixed-Project Defect Prediction Models},
 url = {https://doi.org/10.1109%2Fseaa.2011.59},
 year = {2011}
}

@article{van_Gurp_2005,
 abstract = {SUMMARY We present the results of two case studies we conducted at Baan in the Netherlands. At the time of conducting the case studies, Baan was part of Invensys plc. (Baan is now owned by SSA Global Technologies.) In these case studies we investigated how companies identify design erosion and address this in their software, a practice we call 'design preservation'. In this study, we selected two sub-systems in Baan products that had recently been subjected to extensive maintenance activities because they were eroded. In this paper, we analyze the problems these systems had, how Baan identified that these systems were problematic, and the remedies that were used to address the problems. In addition to confirming some of our earlier conclusions, we have been able to extract some common causes for design erosion problems as well as a number of recommended design preservation practices, which, at least for Baan, have proven to be very effective in strengthening design preservation. Copyright c � 2005 John Wiley & Sons, Ltd.},
 author = {Jilles van Gurp and Sjaak Brinkkemper and Jan Bosch},
 doi = {10.1002/smr.313},
 journal = {Journal of Software Maintenance and Evolution: Research and Practice},
 number = {4},
 pages = {277--306},
 publisher = {Wiley},
 title = {Design preservation over subsequent releases of a software product: a case study of Baan {ERP}},
 url = {https://doi.org/10.1002%2Fsmr.313},
 volume = {17},
 year = {2005}
}

@article{Wallace_2014,
 abstract = {The use of software measures for project management and software process improvement has been encouraged for many years. However, the low level of acceptance and use of software measures in practice has been a constant concern. In this paper we propose and test a model which explains and predicts the use of software measures. The model is based on the technology acceptance model (TAM) and operationalizes the perceived usefulness construct according to the “desirable properties of software measures.” Our research provides guidance for software engineers in selecting among different software measures and for software metrics coordinators who are planning measurement programs.},
 author = {Linda G. Wallace and Steven D. Sheetz},
 doi = {10.1016/j.im.2013.12.003},
 journal = {Information {\&}amp$\mathsemicolon$ Management},
 month = {mar},
 number = {2},
 pages = {249--259},
 publisher = {Elsevier {BV}},
 title = {The adoption of software measures: A technology acceptance model ({TAM}) perspective},
 url = {https://doi.org/10.1016%2Fj.im.2013.12.003},
 volume = {51},
 year = {2014}
}

@inproceedings{Wang_Wei_2014,
 abstract = {This paper first introduces the safety rule which standardizes static software testing based on technology of source code analysis and lists a few big problems which can be tested by the technology. These problems can be categorized as memory management, uninitialized variables, null pointer exception, array access violation and exception and buffer overflow. Besides, this paper gives a static test tool, Klocwork, which analyses source code, and puts forward four stages of the static testing based on the technology of source code analysis. In the end, certain issues inside aerospace simulation applications are technically summarized with associated research plans.},
 author = {Wang Wei and  Meng Yunxiu and  Han Lilong and  Bai He},
 booktitle = {2014 {IEEE} Workshop on Advanced Research and Technology in Industry Applications ({WARTIA})},
 doi = {10.1109/wartia.2014.6976516},
 month = {sep},
 publisher = {{IEEE}},
 title = {From source code analysis to static software testing},
 url = {https://doi.org/10.1109%2Fwartia.2014.6976516},
 year = {2014}
}

@inproceedings{Weyuker_2011,
 abstract = {The Software Engineering Research community has slowly recognized that empirical studies are an important way of validating ideas and increasingly our community has stopped accepting the sufficiency of arguing that a smart person has come up with the idea and therefore it must be good. This has led to a flood of Software Engineering papers that contain at least some form of empirical study. However, not all empirical studies are created equal, and many may not even provide any useful information or value. We survey the gradual shift from essentially no empirical studies, to a small number of ones of questionable value, and look at what we need to do to insure that our empirical studies really contribute to the state of knowledge in the field. Thus we have the good, the bad, and the ugly. What are we as a community doing correctly? What are we doing less well than we should be because we either don't have the necessary artifacts or because the time and resources required to do "the good" is perceived to be too great? And where are we missing the boat entirely in terms of not addressing critical questions and often not even recognizing that these questions are central even if we don't know the answers. We look to see whether we can find some commonality in the projects that have really made the transition from research to widespread practice to see whether we can identify some common themes.},
 author = {Elaine J. Weyuker},
 booktitle = {2011 International Symposium on Empirical Software Engineering and Measurement},
 doi = {10.1109/esem.2011.66},
 month = {sep},
 publisher = {{IEEE}},
 title = {Empirical Software Engineering Research - The Good, The Bad, The Ugly},
 url = {https://doi.org/10.1109%2Fesem.2011.66},
 year = {2011}
}

@inproceedings{Wohlin_2013,
 abstract = {Software engineering research can be done in many ways, in particular it can be done in different ways when it comes to working with industry. This paper presents a list of top 10 challenges to work with industry based on our experience from working with industry in a very close collaboration with continuous exchange of knowledge and information. The top 10 list is based on a large number of research projects and empirical studies conducted with industrial research partners since 1983. It is concluded that close collaboration is a long-term undertaking and a large investment. The importance of addressing the top 10 challenges is stressed, since they form the basis for a long-term sustainable and successful collaboration between industry and academia.},
 author = {Claes Wohlin},
 booktitle = {2013 1st International Workshop on Conducting Empirical Studies in Industry ({CESI})},
 doi = {10.1109/cesi.2013.6618469},
 month = {may},
 publisher = {{IEEE}},
 title = {Empirical software engineering research with industry: Top 10 challenges},
 url = {https://doi.org/10.1109%2Fcesi.2013.6618469},
 year = {2013}
}

@inproceedings{Wong_2011,
 abstract = {The importance of system safety has intensified in recent years given the ever-growing use of safety-critical systems in avionics, medicine, nuclear energy, and other fields. However, despite the abundance of standards which exist to provide guidance for the development of safe software for safety-critical systems, there is no consensus on how to achieve safety assurance in a cost-effective fashion. This paper reviews five software safety standards: the FAA System Safety Handbook, the US DoD MIL-STD-882D, the UK MoD DEF-STAN 00-56, NASA-STD 8719.13b and the RTCA DO-178B, and evaluates each in terms of cost effectiveness. It provides an overview of several safety-critical projects, ones that have incurred significant cost overruns as well as ones that have produced safety-critical software in a reasonably cost-effective manner. By virtue of discussing such projects we posit that it is possible to develop software, despite significant safety assurance requirements, without necessarily sacrificing cost. Specifically, projects can realize savings by using mature processes and appropriate tools to assist in development of safety-critical software.},
 author = {W. Eric Wong and Andrea Demel and Vidroha Debroy and Michael F. Siok},
 booktitle = {2011 Fifth International Conference on Secure Software Integration and Reliability Improvement},
 doi = {10.1109/ssiri.2011.28},
 month = {jun},
 publisher = {{IEEE}},
 title = {Safe Software: Does It Cost More to Develop?},
 url = {https://doi.org/10.1109%2Fssiri.2011.28},
 year = {2011}
}

@incollection{Zelkowitz_2003,
 abstract = {When to apply a new technology in an organization is a critical decision for every software development organization. Earlier work defines a set of methods that the research community uses when a new technology is developed. This chapter presents a discussion of the set of methods that industrial organizations use before adopting a new technology. First there is a brief definition of the earlier research methods and then a definition of the set of industrial methods. A comparison of the two sets leads into the perspectives of these methods of experts in the research and industrial community via surveys made to those communities.},
 author = {Marvin V. Zelkowitz and Dolores R. Wallace and David W. Binkley},
 booktitle = {Lecture Notes on Empirical Software Engineering},
 doi = {10.1142/9789812795588_0006},
 month = {mar},
 pages = {229--263},
 publisher = {{WORLD} {SCIENTIFIC}},
 title = {Experimental Validation of New Software Technology},
 url = {https://doi.org/10.1142%2F9789812795588_0006},
 year = {2003}
}

@incollection{Zelkowitz_2013,
 abstract = {The field of software engineering had its beginnings in the 1960s, almost 50 years ago. Since that time you would expect that significant progress has been made in understanding the models, methods, and techniques that lend themselves to proper software development. However, we are still making some of the same mistakes that were supposedly solved in the 1960s and 1970s. Industry still doesn't understand the critical importance that correct programs have in the proper functioning of society today. In this paper, several examples are given in how we are still reinventing the wheel as well as describing new challenges that will impact software engineers in the near future. © 2013 Springer-Verlag Berlin Heidelberg. All rights are reserved.},
 author = {Marvin V. Zelkowitz},
 booktitle = {Perspectives on the Future of Software Engineering},
 doi = {10.1007/978-3-642-37395-4_21},
 pages = {349--358},
 publisher = {Springer Berlin Heidelberg},
 title = {Education of Software Engineers},
 url = {https://doi.org/10.1007%2F978-3-642-37395-4_21},
 year = {2013}
}

@book{2008,
 abstract = {},
 doi = {10.1007/978-1-84800-044-5},
 editor = {Forrest Shull and Janice Singer and Dag I. K. Sj{\o}berg},
 publisher = {Springer London},
 title = {Guide to Advanced Empirical Software Engineering},
 url = {https://doi.org/10.1007%2F978-1-84800-044-5},
 year = {2008}
}

@book{2013,
 abstract = {Computer software is increasingly critical to the products, infrastructure, and science upon which society depends. However, the production of society’s software is known to be problematic. Current understanding of software production, largely based on anecdotes, is inadequate. Achieving the deeper understanding needed to transform software production experiences into software production improvements requires collecting and using evidence on a large scale. This paper proposes some steps toward that outcome, with particular attention to what government can do to stimulate software engineering studies that will advance the capabilities of software production.},
 doi = {10.1007/978-3-642-37395-4},
 editor = {Jürgen Münch and Klaus Schmid},
 publisher = {Springer Berlin Heidelberg},
 title = {Perspectives on the Future of Software Engineering},
 url = {https://doi.org/10.1007%2F978-3-642-37395-4},
 year = {2013}
}

@inproceedings{Aschauer_2010,
 abstract = {Domain specific languages play an important role in model-driven engineering of software-intensive industrial systems. A rich body of knowledge exists on the development of languages, modeling environments, and transformation systems. The understanding of architectural choices for combining these parts into a feasible solution, however, is not particularly deep. We report on an endeavor in the realm of a technology transfer process from academia to industry, where we encountered unexpected influences of the architecture on the modeling language. By examining the evolution of our language and its programming interface, we show that these influences mainly stemmed from practical considerations; for identifying these early on, tight interaction between our research lab and the industrial partner was key. In addition, we share insights into the practice of cooperating with industry by presenting essential lessons we learned.},
 author = {Thomas Aschauer and Gerd Dauenhauer and Wolfgang Pree},
 booktitle = {Proceedings of the 32nd {ACM}/{IEEE} International Conference on Software Engineering - Volume 2},
 doi = {10.1145/1810295.1810304},
 month = {may},
 publisher = {{ACM}},
 title = {A modeling language{\textquotesingle}s evolution driven by tight interaction between academia and industry},
 url = {https://doi.org/10.1145%2F1810295.1810304},
 year = {2010}
}

@article{Asim_2019,
 abstract = {A supporting management discipline is an under researched phenomenon. A majority of firms’ operating capabilities relating to knowledge, innovation and technology management as a supporting management discipline. This paper reviews the literature in the research and development (R&D) domain to formulate and propose a conceptual model which is influenced by capabilities relating to knowledge, innovation and technology management. We performed a systematic literature review in which a range of articles were searched related to R&D, from 1990 to 2018. Our review is presented in two parts. The first part presents a descriptive analysis using the Preferred Reporting Items for Systemic View and Mata Analysis (PRISMA)protocol and the second part develop proposition based on keywords analysis. The review revealed that there are nine capabilities that contribute to influence on R&D based on three dimensions known as knowledge, innovation and technology management which correspond to some of the key resources that used to drive these capabilities. Finally, this work proposes a conceptual model based on the outcome of Systematic Literature Review (SLR) interpretation. This research may support current trends on the literature. The list of references may be considered a potential source for future research in this area.},
 author = {Zeeshan Asim and Shahryar Sorooshian},
 doi = {10.3390/joitmc5020021},
 journal = {Journal of Open Innovation: Technology, Market, and Complexity},
 month = {apr},
 number = {2},
 pages = {21},
 publisher = {Elsevier {BV}},
 title = {Exploring the Role of Knowledge, Innovation and Technology Management ({KNIT}) Capabilities that Influence Research and Development},
 url = {https://doi.org/10.3390%2Fjoitmc5020021},
 volume = {5},
 year = {2019}
}

@article{Awasthy_2020,
 abstract = {},
 author = {Richa Awasthy and Shayne Flint and Ramesh Sankarnarayana and Richard L. Jones},
 doi = {10.1108/jiuc-09-2019-0016},
 journal = {Journal of Industry-University Collaboration},
 month = {feb},
 number = {1},
 pages = {49--62},
 publisher = {Emerald},
 title = {A framework to improve university{\textendash}industry collaboration},
 url = {https://doi.org/10.1108%2Fjiuc-09-2019-0016},
 volume = {2},
 year = {2020}
}

@incollection{Besson_2012,
 abstract = {The constant technological improvement of products, services, processes and work environment is a critical factor for the development of our economy and society. It strongly depends on the ability to develop knowledge and technology, to transfer it from the point of generation to the site of adaptation and application and to put the technology into use for the benefit of the acquirers and transferors. So far, there is no widely accepted, reliable, predictable and efficient method to evaluate to what extent an organization performs such activities, i.e., innovation, knowledge- and technology transfer (IKaTT). To cope with this problem, we propose to adopt a process-oriented point of view where outcome quality is achieved by the means of process quality. This paper introduces a SPICE conformant innovation, knowledge and technology transfer process capability model that reuses the existing capability dimension of ISO/IEC 15504 to assess knowledge and technology development, transfer and innovation.},
 author = {Jeremy Besson and Tanja Woronowicz and Antanas Mitasiunas and Michael Boronowsky},
 booktitle = {Communications in Computer and Information Science},
 doi = {10.1007/978-3-642-30439-2_7},
 pages = {75--84},
 publisher = {Springer Berlin Heidelberg},
 title = {Innovation, Knowledge- and Technology Transfer Process Capability Model {\textendash} {innoSPICETM}},
 url = {https://doi.org/10.1007%2F978-3-642-30439-2_7},
 year = {2012}
}

@inproceedings{Biesialska_2018,
 abstract = {Conducting empirical research in software engineering industry is a process, and as such, it should be generalizable. The aim of this paper is to discuss how academic researchers may address some of the challenges they encounter during conducting empirical research in the software industry by means of a systematic and structured approach. The protocol developed in this paper should serve as a practical guide for researchers and help them with conducting empirical research in this complex environment.},
 author = {Katarzyna Biesialska and Xavier Franch and Victor Munt{\'{e}}s-Mulero},
 booktitle = {Proceedings of the 6th International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1145/3193965.3193970},
 month = {may},
 publisher = {{ACM}},
 title = {Protocol and tools for conducting agile software engineering research in an industrial-academic setting},
 url = {https://doi.org/10.1145%2F3193965.3193970},
 year = {2018}
}

@incollection{Boronowsky_2013,
 abstract = {The Process capability modeling elaborated by the world-wide software engineering community during the last 25 years became a tool for systematization and codifying knowledge and experience of process oriented activities. This tool is designed to improve the predictability of activity results, i.e. process capability. Namely, ISO/IEC 15504 defines a process capability dimension and the requirements for any external process definition to be applicable process capability dimension. Enterprise SPICE defines a domain-independent integrated model for enterprise-wide assessments and pertinent improvement. On the other hand, any application domain contains application specific knowledge and experience that is not covered in width and depth by domain independent process modeling. The purpose of this paper is to address the problem of application dependent SPICE conformant process modeling integrated with application independent components. It will be illustrated with the developer processes of the innovation, knowledge and technology transfer process model innoSPICE.},
 author = {Michael Boronowsky and Antanas Mitasiunas and Jonas Ragaisis and Tanja Woronowicz},
 booktitle = {Communications in Computer and Information Science},
 doi = {10.1007/978-3-642-38833-0_6},
 pages = {61--72},
 publisher = {Springer Berlin Heidelberg},
 title = {An Approach to Development of an Application Dependent {SPICE} Conformant Process Capability Model},
 url = {https://doi.org/10.1007%2F978-3-642-38833-0_6},
 year = {2013}
}

@article{Brings_2018,
 abstract = {Introduction
Technology transfer aims at supporting the transfer of results from software engineering research from academia to industrial application.

Objective
This paper reports on the current state of technology transfer in software engineering.

Method
We conducted a systematic literature review, in which we investigated 3070 papers. We identified in total 70 relevant papers, which were subject of a detailed analysis.

Results
Many different approaches are proposed to foster technology transfer in software engineering. The majority of these approaches suggest direct collaboration between industry and academia or teaching new technologies in industrial training or university education. In addition, a considerable number of experience reports on technology transfer exist. Hence, a multitude of best practices, success stories, and lessons learned is reported. Among others, empirical evidence, maturity, and adaptability of the technology seem important preconditions for successful transfer, while social and organizational factors seem important barriers to successful technology transfer.

Conclusion
Our findings can aid software engineering researchers in determining how best to support the transfer of their research results into practice. Furthermore, analysis of the literature also revealed that no reports exist on the combination of various technology transfer approaches, which could increase advantages of existing approaches while reducing their disadvantages.},
 author = {Jennifer Brings and Marian Daun and Sarah Brinckmann and Kevin Keller and Thorsten Weyer},
 doi = {10.1002/smr.1981},
 journal = {Journal of Software: Evolution and Process},
 month = {aug},
 number = {11},
 pages = {e1981},
 publisher = {Wiley},
 title = {Approaches, success factors, and barriers for technology transfer in software engineering-Results of a systematic literature review},
 url = {https://doi.org/10.1002%2Fsmr.1981},
 volume = {30},
 year = {2018}
}

@article{Brings_2020,
 abstract = {Context
Emergent behavior cannot be attributed to one individual system alone but arises in the interplay of various systems, components etc. Ensuring the correctness of emergent behavior is a well-known challenge that has been addressed by research in various subfields of software engineering.

Objective
This paper aims at providing a unified view on the research activities conducted and research contributions made on verification and validation of emergent behavior.

Methods
We have conducted a systematic mapping study on the topic of verification and validation of emergent behavior. We applied a combined search strategy using manual, database, and snowball search. In total we investigated 7211 papers, from these 168 relevant papers have been included and classified.

Results
Results show an increasing interest in the topic of verification and validation of emergent behavior. As only little validation and evaluation research has been conducted, the field can be considered still immature. There exist different verification and validation techniques used in the various solution approaches such as model checking, simulation, or runtime monitoring. It stands out that even though research is published in different software engineering fields and subfields no verification or validation technique can be attributed solely to a single field.},
 author = {Jennifer Brings and Marian Daun and Kevin Keller and Patricia Aluko Obe and Thorsten Weyer},
 doi = {10.1016/j.future.2020.06.049},
 journal = {Future Generation Computer Systems},
 month = {nov},
 pages = {1010--1037},
 publisher = {Elsevier {BV}},
 title = {A systematic map on verification and validation of emergent behavior in software engineering research},
 url = {https://doi.org/10.1016%2Fj.future.2020.06.049},
 volume = {112},
 year = {2020}
}

@inproceedings{Choma_2015,
 abstract = {The interest on promoting the Academia-Industry partnership in the software development field has been increasingly encouraged by means of research approaches that support the cooperation between researchers and practitioners. The main focus is driven by the collaborative work where the scientific research work meets the real needs of the Industry. Aiming to contribute to this effort we present an approach called Soft Coder (Software Cooperative Design Research) that combines CMD (Cooperative Method Development), a method of Action Re-search, to concepts of DSR (Design Science Research). Our proposal supports the conduction of projects integrating the view-points of Industry and Academia, aiming to add User experience (UX) methods into agile practices. We carried out two studies applying the Soft Coder approach in a software Industry, work in close cooperation with UX and SCRUM teams for building and evaluating artifacts based on UX methods to support practical activities of both teams.},
 author = {Joelma Choma and Luciana A.M. Zaina and Tiago Silva Da Silva},
 booktitle = {2015 29th Brazilian Symposium on Software Engineering},
 doi = {10.1109/sbes.2015.18},
 month = {sep},
 publisher = {{IEEE}},
 title = {Towards an Approach Matching {CMD} and {DSR} to Improve the Academia-Industry Software Development Partnership: A Case of Agile and {UX} Integration},
 url = {https://doi.org/10.1109%2Fsbes.2015.18},
 year = {2015}
}

@article{Choma_2016,
 abstract = {Background
The Academia-Industry partnership has been increasingly encouraged in the software development field. The main focus of the initiatives is driven by the collaborative work where the scientific research work meets the real needs of the Industry. Methods
Aiming to contribute to this effort we have proposed an approach called SoftCoDeR (Software Cooperative Design Research) that combines CMD (Cooperative Method Development), a method of Action Research, to concepts of DSR (Design Science Research). ResultsWe have applied the SoftCoDeR approach in a software development company to support a research and development project aiming to integrate User Experience practices into the agile software development process. Conclusions
In this paper, we present new findings about this approach that has been extended with the use of Experimental Software Engineering (ESE) practices to conduct experimental validations of artifacts before putting them in industrial practice.},
 author = {Joelma Choma and Luciana A. M. Zaina and Tiago S. da Silva},
 doi = {10.1186/s40411-016-0034-5},
 journal = {Journal of Software Engineering Research and Development},
 month = {dec},
 number = {1},
 publisher = {Sociedade Brasileira de Computacao - {SB}},
 title = {{SoftCoDeR} approach: promoting Software Engineering Academia-Industry partnership using {CMD}, {DSR} and {ESE}},
 url = {https://doi.org/10.1186%2Fs40411-016-0034-5},
 volume = {4},
 year = {2016}
}

@inproceedings{Diebold_2014,
 abstract = {Background: Particularly during and after research projects, technology transfer into practice plays an important role for academia to get technologies into use and for industry to improve their development. Objective: Our goal was to gain more and current knowledge about how technology transfer from software engineering (SE) research into industrial practice is accomplished best and how to measure the effectiveness of this transfer. Method: We conducted a study in the context of two German research projects, covering many different organizations from industry and academia. Results: This paper presents the design of the study and the survey performed. After introducing the concept of technology transfer we used and adapted, we present preliminary results. Conclusions: We observed that traditional means such as meetings or workshops are still the most widely used mediums for technology transfer in SE. We also discovered that, even though the duration of transfer depends on the object being transferred, the average duration is three years, which is far less than previously published (~18 years).},
 author = {Philipp Diebold and Antonio Vetr{\`{o}}},
 booktitle = {Proceedings of the 8th {ACM}/{IEEE} International Symposium on Empirical Software Engineering and Measurement},
 doi = {10.1145/2652524.2652552},
 month = {sep},
 publisher = {{ACM}},
 title = {Bridging the gap: {SE} technology transfer into practice},
 url = {https://doi.org/10.1145%2F2652524.2652552},
 year = {2014}
}

@inproceedings{Diebold_2015,
 abstract = {},
 author = {Philipp Diebold and Antonio Vetro and Daniel Mendez Fernandez},
 booktitle = {2015 {ACM}/{IEEE} International Symposium on Empirical Software Engineering and Measurement ({ESEM})},
 doi = {10.1109/esem.2015.7321189},
 month = {oct},
 publisher = {{IEEE}},
 title = {An Exploratory Study on Technology Transfer in Software Engineering},
 url = {https://doi.org/10.1109%2Fesem.2015.7321189},
 year = {2015}
}

@article{Domańska_2018,
 abstract = {},
 author = {Domańska, Agnieszka},
 doi = {10.23762/FSO_VOL6_NO4_6},
 issn = {2300-5947},
 journal = {Forum Scientiae Oeconomia},
 number = {No4},
 pages = {81–94},
 place = {PL},
 publisher = {WSB University},
 title = {Cooperation between knowledge-based institutions and business: empirical studies and network theories},
 url = {https://doi.org/10.23762/FSO_VOL6_NO4_6},
 year = {2018}
}

@article{Garousi_2016,
 abstract = {},
 author = {Vahid Garousi and Matt M. Eskandar and Kadir Herkilo{\u{g}}lu},
 doi = {10.1007/s11219-016-9319-5},
 journal = {Software Quality Journal},
 month = {jun},
 number = {4},
 pages = {1091--1143},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Industry{\textendash}academia collaborations in software testing: experience and success stories from Canada and Turkey},
 url = {https://doi.org/10.1007%2Fs11219-016-9319-5},
 volume = {25},
 year = {2016}
}

@article{Garousi_2016,
 abstract = {Context: The global software industry and the software engineering (SE) academia are two large communities. However, unfortunately, the level of joint industry-academia collaborations in SE is still relatively very low, compared to the amount of activity in each of the two communities. It seems that the two ’camps’ show only limited interest/motivation to collaborate with one other. Many researchers and practitioners have written about the challenges, success patterns (what to do, i.e., how to collaborate) and anti-patterns (what not do do) for industry-academia collaborations.},
 author = {Vahid Garousi and Kai Petersen and Baris Ozkan},
 doi = {10.1016/j.infsof.2016.07.006},
 journal = {Information and Software Technology},
 month = {nov},
 pages = {106--127},
 publisher = {Elsevier {BV}},
 title = {Challenges and best practices in industry-academia collaborations in software engineering: A systematic literature review},
 url = {https://doi.org/10.1016%2Fj.infsof.2016.07.006},
 volume = {79},
 year = {2016}
}

@article{Garousi_2019,
 abstract = {},
 author = {Vahid Garousi and Dietmar Pfahl and Jo{\~{a}}o M. Fernandes and Michael Felderer and Mika V. Mäntylä and David Shepherd and Andrea Arcuri and Ahmet Co{\c{s}}kun{\c{c}}ay and Bedir Tekinerdogan},
 doi = {10.1007/s10664-019-09711-y},
 journal = {Empirical Software Engineering},
 month = {apr},
 number = {4},
 pages = {2540--2602},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Characterizing industry-academia collaborations in software engineering: evidence from 101 projects},
 url = {https://doi.org/10.1007%2Fs10664-019-09711-y},
 volume = {24},
 year = {2019}
}

@article{https://doi.org/10.14456/ajmi.2014.5,
 abstract = {This paper discusses the issue of measuring corporate innovation capacity, and proposes a method for implementing such measurement program (i2Metrix). The actual survey on 19 Vietnamese leading businesses suggests that the i2Metrix design is working and can be further improved for future use. Responses by firms’s executives show not only their awareness of innovation but also interest in management tools and methods to make use of this crucially important but elusive concept and resource. Insights from the survey highlight a disciplined process of innovation, adoption, and diffusion.},
 author = {Hoang, Vuong Quan and Napier, Nancy K. and Hanh, Vu Kim and {Nguyen Manh Cuong} and Dung, Tran Tri},
 doi = {10.14456/AJMI.2014.5},
 journal = {1},
 keywords = {Creativity / Innovation, Technology management, Corporate culture, Core competency, Strategic management},
 pages = {ASEAN Journal of Management & Innovation},
 publisher = {Stamford International University},
 title = {Measuring Corporate Innovation Capacity: Experience and Implications from i2Metrix Implementation in Vietnam},
 url = {http://doi.nrct.go.th/?page=resolve_doi&resolve_doi=10.14456/ajmi.2014.5},
 volume = {1},
 year = {2014}
}

@inproceedings{Ingram_2020,
 abstract = {},
 author = {Claire Ingram and Jenn Chubb and Claire Boardman and Marian Ursu},
 booktitle = {Proceedings of the {IEEE}/{ACM} 42nd International Conference on Software Engineering Workshops},
 doi = {10.1145/3387940.3391479},
 month = {jun},
 publisher = {{ACM}},
 title = {Generating Real-World Impact from Academic Research},
 url = {https://doi.org/10.1145%2F3387940.3391479},
 year = {2020}
}

@incollection{Jedlitschka_2013,
 abstract = {Experimental software engineering has been defined as the scientific approach to systematically evaluating software technologies by referring to predefined hypotheses using sound empirical methods.

The purpose of this chapter is to give an overview of the history, current practice, and future of empirical practice in Software Engineering. In particular, based on what we have learned from 20 years of research in empirical software engineering, we describe the empirical approach we are currently using in terms of a scientific approach to applied research and as a means for systematic evaluation.},
 author = {Andreas Jedlitschka and Liliana Guzm{\'{a}}n and Jessica Jung and Constanza Lampasona and Silke Steinbach},
 booktitle = {Perspectives on the Future of Software Engineering},
 doi = {10.1007/978-3-642-37395-4_15},
 pages = {217--233},
 publisher = {Springer Berlin Heidelberg},
 title = {Empirical Practice in Software Engineering},
 url = {https://doi.org/10.1007%2F978-3-642-37395-4_15},
 year = {2013}
}

@incollection{M_nch_2013,
 abstract = {Customer value determines how products and services succeed in the marketplace. Early assessment of customer value is important for software startups, spin-off companies, and new product development in existing companies. Software technology often influences customer value and typically defines the main competitive advantage in both entrepreneurial and intrapreneurial settings. Value-related feedback from real customers is needed during software development and maintenance, and decision-making should be increasingly based on empirical evidence acquired through experiments. Getting such value-related feedback usually requires a so-called minimum viable product (MVP), i.e., an artefact that may be incomplete in functionality or quality, but displays characteristics that allows determining its customer value. In this article we report on a case study which used industry-academia collaboration for creating such an MVP. Our goal was to identify strengths and weaknesses of such an approach to creating MVPs while providing practical recommendations for improvement. The process followed in the case study was found to be very suitable for creating MVPs, reducing company-specific risks when testing customer-value, and advancing university education.},
 author = {Jürgen Münch and Fabian Fagerholm and Patrik Johnson and Janne Pirttilahti and Juha Torkkel and Janne Jäarvinen},
 booktitle = {Lean Enterprise Software and Systems},
 doi = {10.1007/978-3-642-44930-7_9},
 pages = {137--151},
 publisher = {Springer Berlin Heidelberg},
 title = {Creating Minimum Viable Products in Industry-Academia Collaborations},
 url = {https://doi.org/10.1007%2F978-3-642-44930-7_9},
 year = {2013}
}

@inproceedings{Marques_2022,
 abstract = {},
 author = {Denis Marques and T{\^{a}}mara Dallegrave and Luis Barbosa and Cleyton Rodrigues and Wylliams Santos},
 booktitle = {Proceedings of the 24th International Conference on Enterprise Information Systems},
 doi = {10.5220/0011115900003179},
 publisher = {{SCITEPRESS} - Science and Technology Publications},
 title = {Industry-Academy Collaboration in Agile Methodology: Preliminary Findings of a Systematic Literature Review},
 url = {https://doi.org/10.5220%2F0011115900003179},
 year = {2022}
}

@article{Mitasiunas_2011,
 abstract = {Further Development of Information Technology Transfer Concept for Adaptation and Exploitation of European Research Results in the Baltic Sea Region Countries
This paper describes further development of information technology transfer concept for adaptation and exploitation of European research results in the Baltic Sea Region (BSR) countries. Riga Technical University (RTU) and Vilnius University (VU) as the partners of BSR Interreg Programme project BONITA (Baltic Organisation and Network of Innovation Transfer Associations) participate in the research which aims to develop a generic innovation & technology transfer concept (ITTC) to improve the collaboration between academia and industry. Particular attention in the paper is paid to the successfully proven concept of small and specialized exhibitions (the so-called "showrooms") run by technology suppliers and technology transfer facilitators. The creation of the distributed multi-organisational showroom-network environment in the framework of BONITA project for the purpose of technology & innovation transfer improvement is described.},
 author = {Antanas Mitasiunas and Tatiana Rikure and Leonids Novickis and Aleksejs Jurenoks},
 doi = {10.2478/v10143-011-0035-0},
 journal = {Scientific Journal of Riga Technical University. Computer Sciences},
 month = {jan},
 number = {1},
 pages = {9--16},
 publisher = {Walter de Gruyter {GmbH}},
 title = {Further Development of Information Technology Transfer Concept for Adaptation and Exploitation of European Research Results in the Baltic Sea Region Countries},
 url = {https://doi.org/10.2478%2Fv10143-011-0035-0},
 volume = {45},
 year = {2011}
}

@incollection{Petersen_2016,
 abstract = {Industry–academia collaboration in software engineering is essential for the relevance of research, as research may make important contributions to the improvement of software engineering. Thus, software engineering researchers are an asset in software process improvement. In this chapter, I present different experiences of being an embedded researcher in industry contributing to software process improvement. The process improvement works were focused on helping organizations to move from plan-driven processes to agile and lean processes. We will elaborate on the challenges, essential practices, and related benefits that were observed when working closely with industry in the role of embedded researchers. Supporting examples from different published cases form the basis for this experience report.},
 author = {Kai Petersen},
 booktitle = {Managing Software Process Evolution},
 doi = {10.1007/978-3-319-31545-4_12},
 pages = {235--255},
 publisher = {Springer International Publishing},
 title = {A Researcher's Experiences in Supporting Industrial Software Process Improvement},
 url = {https://doi.org/10.1007%2F978-3-319-31545-4_12},
 year = {2016}
}

@inproceedings{Rombach_2015,
 abstract = {Conducting empirical studies and transferring their results into industry in a design discipline such as software engineering is ambitious. This is due to contextual restrictions, representativeness as well as problems in aggregating results from individual studies towards guidelines for practitioners.
Nevertheless, they are necessary, as scientific contributions need to be challengeable. Significant progress in areas such as measurement, controlled experiments, industrial case studies,
empirical based modeling, and packaging knowledge have been made over the past 30 to 40 years. External visibility has been increased significantly by means of books, conferences &
journals! Future challenges include attracting more industrial contributions to the existing body of knowledge, using quantitative & qualitative studies to create more trustful
evidences, and aggregation of empirical results. These challenges require community efforts.},
 author = {Dieter Rombach and Andreas Jedlitschka},
 booktitle = {2015 {IEEE}/{ACM} 3rd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1109/cesi.2015.7},
 month = {may},
 publisher = {{IEEE}},
 title = {The Maturation of Empirical Studies},
 url = {https://doi.org/10.1109%2Fcesi.2015.7},
 year = {2015}
}

@article{Sandberg_2011,
 abstract = {Both the software industry and academia promote collaboration to solve challenges together that neither can solve alone. Collaboration brings opportunities to understand and improve in ways not possible when working apart, but it succeeds only if both parties are contributing. A collaboration model developed from eight years' experience setting up and managing a research center explicitly focused on industry needs is based on five success factors enabling research results (need orientation, industry goal alignment, deployment impact, industry benefit, and innovativeness), five success factors enabling research activities (management engagement, network access, collaborator match, communication ability, and continuity), and 10 action principles for industry-academia collaboration management.},
 author = {A. Sandberg and L. Pareto and T. Arts},
 doi = {10.1109/ms.2011.49},
 journal = {{IEEE} Software},
 month = {jul},
 number = {4},
 pages = {74--83},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Agile Collaborative Research: Action Principles for Industry-Academia Collaboration},
 url = {https://doi.org/10.1109%2Fms.2011.49},
 volume = {28},
 year = {2011}
}

@incollection{Sandberg_2014,
 abstract = {},
 author = {Anna Sandberg},
 booktitle = {Continuous Software Engineering},
 doi = {10.1007/978-3-319-11283-1_3},
 pages = {29--36},
 publisher = {Springer International Publishing},
 title = {Academia{\textendash}Industry Collaboration: Getting Closer is the Key!},
 url = {https://doi.org/10.1007%2F978-3-319-11283-1_3},
 year = {2014}
}

@inproceedings{Sjoberg_2007,
 abstract = {We present the vision that for all fields of software engineering (SE), empirical research methods should enable the development of scientific knowledge about how useful different SE technologies are for different kinds of actors, performing different kinds of activities, on different kinds of systems. It is part of the vision that such scientific knowledge will guide the development of new SE technology and is a major input to important SE decisions in industry. Major challenges to the pursuit of this vision are: more SE research should be based on the use of empirical methods; the quality, including relevance, of the studies using such methods should be increased; there should be more and better synthesis of empirical evidence; and more theories should be built and tested. Means to meet these challenges include (1) increased competence regarding how to apply and combine alternative empirical methods, (2) tighter links between academia and industry, (3) the development of common research agendas with a focus on empirical methods, and (4) more resources for empirical research.},
 author = {Dag I. K. Sjoberg and Tore Dyba and Magne Jorgensen},
 booktitle = {Future of Software Engineering ({FOSE} {\textquotesingle}07)},
 doi = {10.1109/fose.2007.30},
 month = {may},
 publisher = {{IEEE}},
 title = {The Future of Empirical Methods in Software Engineering Research},
 url = {https://doi.org/10.1109%2Ffose.2007.30},
 year = {2007}
}

@incollection{Weiss_2013,
 abstract = {},
 author = {David M. Weiss and James Kirby and Robyn R. Lutz},
 booktitle = {Perspectives on the Future of Software Engineering},
 doi = {10.1007/978-3-642-37395-4_18},
 pages = {275--298},
 publisher = {Springer Berlin Heidelberg},
 title = {Moving Toward Evidence-Based Software Production},
 url = {https://doi.org/10.1007%2F978-3-642-37395-4_18},
 year = {2013}
}

@inproceedings{Yamashita_2015,
 abstract = {Currently, there is limited literature in Software Engineering (SE) that sheds light on the success factors and challenges for knowledge transfer between SE scientists and practitioners. Upon reflections on personal experiences from both academia and industry, this paper attempts to underpin some of the challenges for a successful collaboration, and relate them back to existing theories in the fields of Management, Medicine and Social Sciences. Furthermore, strategies for overcoming some of the challenges are provided and illustrated via a simplified example within the topic of Software Evolution. The intention of this paper is to establish a dialogue for an overall strategy within our field, by providing an illustrative example, and to promote a deeper reflection on the term 'knowledge transfer', which has predominantly focused on an unidirectional knowledge flow from academia to industry.},
 author = {Aiko Yamashita},
 booktitle = {2015 {IEEE}/{ACM} 2nd International Workshop on Software Engineering Research and Industrial Practice},
 doi = {10.1109/serip.2015.11},
 month = {may},
 publisher = {{IEEE}},
 title = {Integration of {SE} Research and Industry: Reflections, Theories and Illustrative Example},
 url = {https://doi.org/10.1109%2Fserip.2015.11},
 year = {2015}
}

@inproceedings{Zahedi_2018,
 abstract = {Context: Governments are providing more and more support for academia-industry collaborations for industry led research and innovation via Cooperative Research Centers (CRC). It is important to understand the processes and practices of such programs for transferring scientific R&D to innovation. Goal: We aimed at empirically investigating the processes and practices implemented in the context of one of the Australian CRCs, aimed at transferring big data research to innovative software solutions for national security. Method: We applied case study method and collected and analyzed data from 17 interviews and observations of the participants of the studied CRC program. Findings: We present the innovation process implemented in the studied CRC. We particularly highlight the practices used to involve end-users in the innovation process. We further elaborate on the challenges of running this collaborative model for software technology innovation.},
 author = {Mansooreh Zahedi and Muhammad Ali Babar and Brenton Cooper},
 booktitle = {Proceedings of the 12th {ACM}/{IEEE} International Symposium on Empirical Software Engineering and Measurement},
 doi = {10.1145/3239235.3239241},
 month = {oct},
 publisher = {{ACM}},
 title = {An empirical investigation of transferring research to software technology innovation},
 url = {https://doi.org/10.1145%2F3239235.3239241},
 year = {2018}
}

@book{2007,
 abstract = {International Federation for Information Processing The IFIP series publishes state-of-the-art results in the sciences and technologies of information and communication. The scope of the series includes: foundations of computer science; software theory and practice; education; computer applications in technology; communication systems; systems modeling and optimization; information systems; computers and society; computer systems technology; security and protection in information processing systems; artificial intelligence; and human-computer interaction. Proceedings and post-proceedings of referred international conferences in computer science and interdisciplinary fields are featured. These results often precede journal publication and represent the most current research. The principal aim of the IFIP series is to encourage education and the dissemination and exchange of information about all aspects of computing. For more information about the 300 other books in the IFIP series, please visit springer.com. For more information about IFIP, please visit ifip.org.},
 doi = {10.1007/978-0-387-73947-2},
 editor = {Jolita Ralyt{\'{e}} and Sjaak Brinkkemper and Brian Henderson-Sellers},
 publisher = {Springer {US}},
 title = {Situational Method Engineering: Fundamentals and Experiences},
 url = {https://doi.org/10.1007%2F978-0-387-73947-2},
 year = {2007}
}

@book{2013,
 abstract = {This book constitutes the refereed proceedings of the European Design Science Symposium, EDSS 2012 held in Leixlip, Ireland, in December 2012 which was held in conjunction with the Intel European Research and Innovation Conference, ERIC 2012. The 14 papers (4 invited papers and 10 full papers) presented were carefully reviewed and selected from various submissions. The papers cover the following topics: software, formal logic, rigorous mathematics, informal natural language descriptions.},
 doi = {10.1007/978-3-319-04090-5},
 editor = {Markus Helfert and Brian Donnellan},
 publisher = {Springer International Publishing},
 title = {Design Science: Perspectives from Europe},
 url = {https://doi.org/10.1007%2F978-3-319-04090-5},
 year = {2013}
}

@book{2015,
 abstract = {Modern organisations need to be able to adjust to changes in the environment, changes which are ever more rapid, and in doing so capitalise on the creativity and innovations of their employees. As suggested by Boulus and Bjorn (this volume), Information Technology (IT) applications today are likely to take the form of complex, integrated infrastructures, supporting collaboration within and across organisations. This places requirements on the IT infrastructure. As the work practices within an organisation change the supporting infrastructure also needs to evolve. 
This chapter presents an action research study of infrastructure development at the World Maritime University (WMU) in Malmö, Sweden, a UN-based university with a strong tradition of delegating responsibility and the commitment of the personnel to develop both work practices and supportive organisational and technical structures. The research question thus became: How can the development of an organisational IT management be based on a shop floor development strategy?},
 doi = {10.1007/978-1-4471-6720-4},
 editor = {Volker Wulf and Kjeld Schmidt and David Randall},
 publisher = {Springer London},
 title = {Designing Socially Embedded Technologies in the Real-World},
 url = {https://doi.org/10.1007%2F978-1-4471-6720-4},
 year = {2015}
}

@book{2016,
 abstract = {This volume constitutes the refereed post-conference proceedings of the 10th IFIP WG 13.8 International Conference on Culture, Technology, and Communication, CaTaC 2016, held in London, UK, in June 2016.

The 9 revised full papers were carefully reviewed and selected from 22 submissions. The papers explore the intersections between culture, technology, and communication, applying different theoretical and methodological perspectives, genres, and styles. They deal with cultural attitudes towards technology and communication, interaction design, and international development.},
 doi = {10.1007/978-3-319-50109-3},
 editor = {Jos{\'{e}} Abdelnour-Nocera and Michele Strano and Charles Ess and Maja Van der Velden and Herbert Hrachovec},
 publisher = {Springer International Publishing},
 title = {Culture, Technology, Communication. Common World, Different Futures},
 url = {https://doi.org/10.1007%2F978-3-319-50109-3},
 year = {2016}
}

@book{2017,
 abstract = {The four-volume set LNCS 10513—10516 constitutes the proceedings of the 16th IFIP TC 13 International Conference on Human-Computer Interaction, INTERACT 2017, held in Mumbai, India, in September 2017.
The total of 68 papers presented in these books was carefully reviewed and selected from 221 submissions. The contributions are organized in topical sections named:
Part I: adaptive design and mobile applications; aging and disabilities; assistive technology for blind users; audience engagement; co-design studies; cultural differences and communication technology; design rationale and camera-control.
Part II: digital inclusion; games; human perception, cognition and behavior; information on demand, on the move, and gesture interaction; interaction at the workplace; interaction with children.
Part III: mediated communication in health; methods and tools for user interface evaluation; multi-touch interaction; new interaction techniques; personalization and visualization; persuasive technology and rehabilitation; and pointing and target selection.},
 doi = {10.1007/978-3-319-67744-6},
 editor = {Regina Bernhaupt and Girish Dalvi and Anirudha Joshi and Devanuj K. Balkrishan and Jacki O{\textquotesingle}Neill and Marco Winckler},
 publisher = {Springer International Publishing},
 title = {Human-Computer Interaction - {INTERACT} 2017},
 url = {https://doi.org/10.1007%2F978-3-319-67744-6},
 year = {2017}
}

@book{2017,
 abstract = {The four-volume set LNCS 10513—10516 constitutes the proceedings of the 16th IFIP TC 13 International Conference on Human-Computer Interaction, INTERACT 2017, held in Mumbai, India, in September 2017. 
The total of 68 papers presented in these books was carefully reviewed and selected from 221 submissions. The contributions are organized in topical sections named:
Part I: adaptive design and mobile applications; aging and disabilities; assistive technology for blind users; audience engagement; co-design studies; cultural differences and communication technology; design rationale and camera-control. Part II: digital inclusion; games; human perception, cognition and behavior; information on demand, on the move, and gesture interaction; interaction at the workplace; interaction with children. Part III: mediated communication in health; methods and tools for user interface evaluation; multi-touch interaction; new interaction techniques; personalization and visualization; persuasive technology and rehabilitation; and pointing and target selection. Part IV: security and trust; social media and design innovation; UX adoption in the organizations; virtual reality and feeling of immersion; case studies; courses; demonstrations; interactive posters; field trips.},
 doi = {10.1007/978-3-319-68059-0},
 editor = {Regina Bernhaupt and Girish Dalvi and Anirudha Joshi and Devanuj K. Balkrishan and Jacki O'Neill and Marco Winckler},
 publisher = {Springer International Publishing},
 title = {Human-Computer Interaction {\textendash} {INTERACT} 2017},
 url = {https://doi.org/10.1007%2F978-3-319-68059-0},
 year = {2017}
}

@book{2018,
 abstract = {The digital age has introduced a deeper sense of connectivity in business environments. By relying more heavily on current technologies, organizations now experience more effective communication and collaboration opportunities. Online Collaboration and Communication in Contemporary Organizations is a critical scholarly resource that identifies the new practices and techniques for leading, knowledge sharing, and learning through the use of online collaboration. Featuring coverage on a broad range of topics such as online leadership, intercultural competence, and e-ethics, this book is geared toward professionals, managers, and researchers seeking current research on new practices for online collaboration and communication.},
 doi = {10.4018/978-1-5225-4094-6},
 editor = {Ditte Kolbaek},
 publisher = {{IGI} Global},
 title = {Online Collaboration and Communication in Contemporary Organizations},
 url = {https://doi.org/10.4018%2F978-1-5225-4094-6},
 year = {2018}
}

@book{2020,
 abstract = {This book constitutes the thoroughly refereed proceedings of the 15th International Conference on Design Science Research in Information Systems and Technology, DESRIST 2020, held in Kristiansand, Norway, in December 2020.
The 28 revised full research papers included in the volume together with 7 research-in-progress papers and 9 prototype papers, were carefully reviewed and selected from 93 submissions. They are organized in the following topical sections: digital public services; data science; design principles; methodology; platforms and networks; and service science.
Due to the Corona pandemic this event was held virtually.},
 doi = {10.1007/978-3-030-64823-7},
 editor = {Sara Hofmann and Oliver Müller and Matti Rossi},
 publisher = {Springer International Publishing},
 title = {Designing for Digital Transformation. Co-Creating Services with Citizens and Industry},
 url = {https://doi.org/10.1007%2F978-3-030-64823-7},
 year = {2020}
}

@inproceedings{_brand_2012,
 abstract = {Failure to understand, identify, and manage risk is often cited as a major cause of IT problems. While the project is the preferred level of analysis in most IT risk management research, IT is becoming increasingly infrastructural, and there is therefore a need to adapt risk strategies beyond the project level. In this paper, we explore how risk management practices in a successful IT service provider group emerged over time as the group coped with infrastructural dynamics and complexities. Drawing on Orlikowski's practice lens, we investigate actual practices and possible options related to risk management as rapid technological and organizational changes resulted in increased infrastructure management challenges for the IT service provider. Our research contributes to the IT risk management literature by applying risk theory to service management in the infrastructural domain and by moving beyond the project as level of analysis.},
 author = {Lars Öbrand and Nils-Petter Augustsson and Jonny Holmstrom and Lars Mathiassen},
 booktitle = {2012 45th Hawaii International Conference on System Sciences},
 doi = {10.1109/hicss.2012.565},
 month = {jan},
 publisher = {{IEEE}},
 title = {The Emergence of Information Infrastructure Risk Management in {IT} Services},
 url = {https://doi.org/10.1109%2Fhicss.2012.565},
 year = {2012}
}

@article{_gerfalk_2018,
 abstract = {},
 author = {Pär J. {\AA}gerfalk and Mikael Wiberg},
 doi = {10.17705/1cais.04304},
 journal = {Communications of the Association for Information Systems},
 pages = {68--77},
 publisher = {Association for Information Systems},
 title = {Pragmatizing the Normative Artifact: Design Science Research in Scandinavia and Beyond},
 url = {https://doi.org/10.17705%2F1cais.04304},
 year = {2018}
}

@article{_gerfalk_2020,
 abstract = {},
 author = {Pär J. {\AA}gerfalk},
 doi = {10.1080/0960085x.2020.1721947},
 journal = {European Journal of Information Systems},
 month = {jan},
 number = {1},
 pages = {1--8},
 publisher = {Informa {UK} Limited},
 title = {Artificial intelligence as digital agency},
 url = {https://doi.org/10.1080%2F0960085x.2020.1721947},
 volume = {29},
 year = {2020}
}

@article{_sterle_2010,
 abstract = {Design-oriented research in the Information Systems (IS) domain aims at delivering results which are both of scientific rigor and of relevance for practitioners. Today, however, academic researchers are facing the challenge of gaining access to and capturing knowledge from the practitioner community. Against this background, the paper proposes a method for Consortium Research, which is supposed to facilitate multilateral collaboration of researchers and practitioners during the research process. The method’s design is based on a self-evaluating design process which was carried out over a period of 20 years. The paper’s contribution is twofold. First, it addresses the science of design, since it proposes guidance to researchers for practitioner collaboration during the process of artifact design. Second, the method is an artifact itself, hence, the result of a design-oriented research process.},
 author = {Hubert Österle and Boris Otto},
 doi = {10.1007/s12599-010-0119-3},
 journal = {Business {\&}amp$\mathsemicolon$ Information Systems Engineering},
 month = {aug},
 number = {5},
 pages = {283--293},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Consortium Research},
 url = {https://doi.org/10.1007%2Fs12599-010-0119-3},
 volume = {2},
 year = {2010}
}

@article{_sterle_2010,
 abstract = {Design-oriented research in the Information Systems (IS) domain aims at delivering results which are both of scientific rigor and of relevance for practitioners. Today, however, academic researchers are facing the challenge of gaining access to and capturing knowledge from the practitioner community. Against this background, the paper proposes a method for Consortium Research, which is supposed to facilitate multilateral collaboration of researchers and practitioners during the research process. The method’s design is based on a self-evaluating design process which was carried out over a period of 20 years. The paper’s contribution is twofold. First, it addresses the science of design, since it proposes guidance to researchers for practitioner collaboration during the process of artifact design. Second, the method is an artifact itself, hence, the result of a design-oriented research process.},
 author = {Hubert Österle and Boris Otto},
 doi = {10.1007/s11576-010-0238-y},
 journal = {{WIRTSCHAFTSINFORMATIK}},
 month = {aug},
 number = {5},
 pages = {273--285},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Konsortialforschung},
 url = {https://doi.org/10.1007%2Fs11576-010-0238-y},
 volume = {52},
 year = {2010}
}

@inproceedings{_vad_2015,
 abstract = {Good UX design is becoming important within the industry when developing new products. This entails that UX skills have to be available in the development processes. This paper investigates the opportunities of using software developers as a UX work resource in the day-to-day working practice. This is done via an action research study where the developers were provided with material concerning a modified AB usability test, by training them in performing this type of work, and by using their feedback to improve the method and the material. The overall result of the study is positive and it is found that by using the developers' feedback in the modification process, the method has truly become applicable within an agile, industrial setting. In combination with a guideline and template this has induced the developers to feel confident in independently performing this type of work.},
 author = {Tina {\O}vad and Nis Bornoe and Lars Bo Larsen and Jan Stage},
 booktitle = {Proceedings of the Annual Meeting of the Australian Special Interest Group for Computer Human Interaction},
 doi = {10.1145/2838739.2838764},
 month = {dec},
 publisher = {{ACM}},
 title = {Teaching Software Developers to Perform {UX} Tasks},
 url = {https://doi.org/10.1145%2F2838739.2838764},
 year = {2015}
}

@article{_vad_2016,
 abstract = {Usability and user experience (UX) methods come from academic environments, where industrial conditions such as time and resources are not of prime importance. Furthermore, usability and UX methods originate from a time when almost all software developments followed a traditional approach, such as the waterfall model. These two facts entail that existing methods often are too resource demanding and complex to apply directly into today’s agile, industrial environments. In this paper we make the claim that methods must be updated and tailored in order to be applicable within the agile, industrial development framework of today. We pursue a solution to simplify well-known methods and to train software developers to perform the UX work. To do this, three methods are modified via an iterative process together with the development of supporting materials. Software developers in three companies are trained in the methods to assess the approach. We find that it indeed is feasible to update and tailor existing usability and UX methods to fit into an agile, industrial environment. Furthermore, we show that it is possible to train developers to perform the usability and UX methods via one-day, in-situ sessions using an ‘instructor’-teaching approach. The training is based on hands-on exercises and real-life tasks. This further boosts the developers’ confidence in performing UX work and promises a better consideration of UX in the development phases. We evaluate our approach through observations of the developers performing the UX tasks on their own at a later point in time.},
 author = {Tina {\O}vad and Lars Bo Larsen},
 doi = {10.1080/0144929x.2016.1225818},
 journal = {Behaviour {\&}amp$\mathsemicolon$ Information Technology},
 month = {sep},
 number = {12},
 pages = {1080--1090},
 publisher = {Informa {UK} Limited},
 title = {How to reduce the {UX} bottleneck {\textendash} train your software developers},
 url = {https://doi.org/10.1080%2F0144929x.2016.1225818},
 volume = {35},
 year = {2016}
}

@incollection{Aaen,
 abstract = {Software process improvement (SPI) is one of the most widely used approaches to innovate software organizations. In this study, we identify and compare two different tactics for SPI projects. The first tactic, the supertanker, is inspired by centralist thinking. It is driven by process-push, and it aims for efficient process development and diffusion. The second tactic, the motorboat, is inspired by decentralist thinking. It facilitates practice-pull, and it aims for adaptive process development and diffusion. Our analysis of 18 SPI projects at Ericsson in Gothenburg shows how the two tactics lead to different practices and outcomes. We discuss on that basis what SPI tactics to use and identify the presence of muddy and unknown waters as the key characteristic that requires motorboat tactics. We suggest that todays changing business environment calls for agile SPI practices that employ adaptive governance mechanisms at the corporate level and combines motorboat tactics with revised supertanker tactics. Full Text at Springer, may require registration or fee},
 author = {Ivan Aaen and Anna Börjesson and Lars Mathiassen},
 booktitle = {{IFIP} International Federation for Information Processing},
 doi = {10.1007/0-387-25590-7_4},
 pages = {53--71},
 publisher = {Kluwer Academic Publishers},
 title = {Navigating Software Process Improvement Projects},
 url = {https://doi.org/10.1007%2F0-387-25590-7_4}
}

@article{Aaen_2007,
 abstract = {In this study, we argue that today's changing business environment calls for agile Software Process Improvement (SPI) practices. The study combines experiences from 18 SPI projects executed from 1998 to 2002 at Ericsson in Gothenburg with insights from SPI and agility theory. We suggest that agile SPI practices are both effective and flexible; they employ adaptive governance mechanisms at the corporate level; and they combine different tactics on the project level. We identify and compare two different tactics for SPI projects. Inspired by procedural thinking, the first tactic, the supertanker, employs process-push and aims for efficient process development and diffusion. On the basis of adaptive thinking, the second tactic, the motorboat, facilitates practice-pull and aims for adaptive process development and diffusion. We also discuss how agile SPI practices require understanding of the different types of waters in which the two tactics navigate effectively. Copyright © 2006 John Wiley & Sons, Ltd.},
 author = {Ivan Aaen and Anna Börjesson and Lars Mathiassen},
 doi = {10.1002/spip.309},
 journal = {Software Process: Improvement and Practice},
 number = {3},
 pages = {267--281},
 publisher = {Wiley},
 title = {{SPI} agility: How to navigate improvement projects},
 url = {https://doi.org/10.1002%2Fspip.309},
 volume = {12},
 year = {2007}
}

@article{Aaen_2007,
 abstract = {In this study, we argue that today's changing business environment calls for agile Software Process Improvement (SPI) practices. The study combines experiences from 18 SPI projects executed from 1998 to 2002 at Ericsson in Gothenburg with insights from SPI and agility theory. We suggest that agile SPI practices are both effective and flexible; they employ adaptive governance mechanisms at the corporate level; and they combine different tactics on the project level. We identify and compare two different tactics for SPI projects. Inspired by procedural thinking, the first tactic, the supertanker, employs process-push and aims for efficient process development and diffusion. On the basis of adaptive thinking, the second tactic, the motorboat, facilitates practice-pull and aims for adaptive process development and diffusion. We also discuss how agile SPI practices require understanding of the different types of waters in which the two tactics navigate effectively. Copyright © 2006 John Wiley & Sons, Ltd.},
 author = {Ivan Aaen and Anna Börjesson and Lars Mathiassen},
 doi = {10.1002/spip.309},
 journal = {Software Process: Improvement and Practice},
 number = {3},
 pages = {267--281},
 publisher = {Wiley},
 title = {{SPI} agility: How to navigate improvement projects},
 url = {https://doi.org/10.1002%2Fspip.309},
 volume = {12},
 year = {2007}
}

@inproceedings{Abdul_2017,
 abstract = {This paper describes the innovation processes used in a partnership between a company that provides asset integrity and maintenance management consulting services in the energy sector and a university. The challenge faced by the company is to make their in-house expertise more readily available to a worldwide audience. A longitudinal embedded case study has been used to investigate how installable desktop software applications have been redesigned to create a new set of cloud hosted software services. The innovation team adapted an agile scrum process to include exploratory prototyping and manage the geographical distribution of the team members. A minimum viable product was developed that integrated functional elements of previous software tools into an end-to-end data collection, analysis and visualisation product called AimHi which uses a cloud-hosted web services approach. The paper illustrates how the scrum software development method was tailored for a product innovation context. Extended periods of evaluation and reflection (field trials), prototyping and requirement refinement were combined with periods of incremental feature development using sprints. The AimHi product emerged from a technology transfer and innovation project that has successfully reconciled conflicting demands from customers, universities, partner companies and project staff members.},
 author = {Adeniyi Abdul and Julian M. Bass and Hossein Ghavimi and Peter Adam},
 booktitle = {2017 International Conference on Information Society (i-Society)},
 doi = {10.23919/i-society.2017.8354664},
 month = {jul},
 publisher = {{IEEE}},
 title = {Product innovation with scrum: A longitudinal case study},
 url = {https://doi.org/10.23919%2Fi-society.2017.8354664},
 year = {2017}
}

@inproceedings{Abdul_2018,
 abstract = {},
 author = {Adeniyi Abdul and Julian M. Bass},
 booktitle = {2018 44th Euromicro Conference on Software Engineering and Advanced Applications ({SEAA})},
 doi = {10.1109/seaa.2018.00085},
 month = {aug},
 publisher = {{IEEE}},
 title = {Hierarchical Multi-tenancy in Business to Business Software Services},
 url = {https://doi.org/10.1109%2Fseaa.2018.00085},
 year = {2018}
}

@article{Abu_Raqabeh_2018,
 abstract = {Today’s swiftly changing technology, globalization, and integration of corporations has created a need for the introduction of IAS to higher education institutes. This study explores and examines the introduction of IAS to the higher education institutes. The readiness of the institutes, the problems they face to incorporate the IAS to the curriculum. The criteria utilized by ABET focuses on content and delivery of curriculum within the IS discipline. The advantages of incorporating the IAS in the curriculum for students and faculty.},
 author = {Tawfiq Abu-Raqabeh},
 doi = {10.5296/elr.v4i2.14045},
 journal = {Education and Linguistics Research},
 month = {dec},
 number = {2},
 pages = {104},
 publisher = {Macrothink Institute, Inc.},
 title = {Accounting Information Systems},
 url = {https://doi.org/10.5296%2Felr.v4i2.14045},
 volume = {4},
 year = {2018}
}

@article{AbuJarour_2019,
 abstract = {},
 author = {Safa{\textquotesingle}a AbuJarour and Manuel Wiesche and Antonio D{\'{\i}}az Andrade and Jane Fedorowicz and Hanna Krasnova and Sebastian Olbrich and Chee-Wee Tan and Cathy Urquhart and Viswanath Venkatesh},
 doi = {10.17705/1cais.04440},
 journal = {Communications of the Association for Information Systems},
 pages = {874--891},
 publisher = {Association for Information Systems},
 title = {{ICT}-enabled Refugee Integration: A Research Agenda},
 url = {https://doi.org/10.17705%2F1cais.04440},
 year = {2019}
}

@incollection{Acharya_2019,
 abstract = {This chapter is about action research. Action research is defined as the comparative research on the conditions and effects of various forms of social action and research leading to social action. This chapter highlights the history of action research, definition of action research, characteristics of action research, stages of action research, issues of action research, credibility and validity of action research. In action research, the ultimate objective is in the perceived functionality of chosen actions to produce desirable consequences for an organization.},
 author = {Anitha Acharya and Pankaj Kumar Mohanty},
 booktitle = {Advances in Business Information Systems and Analytics},
 doi = {10.4018/978-1-5225-5366-3.ch010},
 pages = {221--245},
 publisher = {{IGI} Global},
 title = {Action Research},
 url = {https://doi.org/10.4018%2F978-1-5225-5366-3.ch010},
 year = {2019}
}

@article{Alami_2020,
 abstract = {Participatory Action Research (PAR) is an established method to implement change in organizations. However, it cannot be applied in the open source (FOSS) communities, without adaptation to their particularities, especially to the specific control mechanisms developed in FOSS. FOSS communities are self-managed, and rely on consensus to reach decisions. This study proposes a PAR framework specifically tailored to FOSS communities. We successfully applied the framework to implement a set of quality assurance interventions in the Robot Operating System community. The framework we proposed is composed of three components, interventions design, democratization, and execution. We believe that this process will work for other FOSS communities too. We have learned that changing a particular aspect of a FOSS community is arduous. To achieve success the change must rally the community around it for support and attract motivated volunteers to implement the interventions.},
 author = {Adam Alami and Peter Axel Nielsen and Andrzej Wa{\c}sowski},
 doi = {10.1007/s10664-020-09849-0},
 journal = {Empirical Software Engineering},
 month = {aug},
 number = {5},
 pages = {3639--3670},
 publisher = {Springer Science and Business Media {LLC}},
 title = {A tailored participatory action research for foss communities},
 url = {https://doi.org/10.1007%2Fs10664-020-09849-0},
 volume = {25},
 year = {2020}
}

@article{Alles_2013,
 abstract = {In this paper we discuss Collaborative Design Research – a hybrid methodology for undertaking design science research in collaboration with industry partners – that has been applied to the area of Continuous Auditing and which also has wider applicability to AIS research. Collaborative Design Research has a role at the time in the evolution of a field when early adopting practitioners have made the decision to implement an innovation, but there is as yet no established product or set of best practices that makes it obvious what they should do. We discuss eight key issues facing researchers attempting to do collaborative design research: 1) choice of implementation partner (IP), 2) choice of projects, 3) managing expectations, 4) building on the expertise of the IP, 5) introducing innovation to the IP, 6) project evaluation and reassessment, 7) cost and resource management, and 8) publishing results.},
 author = {Michael G. Alles and Alexander Kogan and Miklos A. Vasarhelyi},
 doi = {10.1016/j.accinf.2011.06.004},
 journal = {International Journal of Accounting Information Systems},
 month = {jun},
 number = {2},
 pages = {104--112},
 publisher = {Elsevier {BV}},
 title = {Collaborative design research: Lessons from continuous auditing},
 url = {https://doi.org/10.1016%2Fj.accinf.2011.06.004},
 volume = {14},
 year = {2013}
}

@incollection{Allhutter_2010,
 abstract = {This chapter presents a critical approach to software development that implements reflective competences in software engineering teams. It is grounded within qualitative research on software engineering and critical design practice and presents conceptual work in progress. Software development is a socio-technological process of negotiation that requires mediation of different approaches. Research on the co-construction of society and technology and on the social shaping of technological artefacts and processes has highlighted social dimensions such as gender and diversity discourses that implicitly inform development practices. To help design teams implement reflective competences in this area, the authors introduce 'deconstructive design'-a critical-design approach that uses deconstruction as a tool to disclose collective processes of meaning construction. For this purpose, the idea of value-sensitive design is linked to approaches of practice-based, situated and context-sensitive learning and to the concepts of 'trading zones' and 'boundary objects'.},
 author = {Doris Allhutter and Roswitha Hofmann},
 booktitle = {Thinking Machines and the Philosophy of Computer Science},
 doi = {10.4018/978-1-61692-014-2.ch011},
 pages = {175--192},
 publisher = {{IGI} Global},
 title = {Deconstructive Design as an Approach for Opening Trading Zones},
 url = {https://doi.org/10.4018%2F978-1-61692-014-2.ch011},
 year = {2010}
}

@article{Allhutter_2011,
 abstract = {},
 author = {Doris Allhutter},
 doi = {10.1177/0162243911401633},
 journal = {Science, Technology, {\&}amp$\mathsemicolon$ Human Values},
 month = {mar},
 number = {6},
 pages = {684--707},
 publisher = {{SAGE} Publications},
 title = {Mind Scripting},
 url = {https://doi.org/10.1177%2F0162243911401633},
 volume = {37},
 year = {2011}
}

@article{Andersen_2011,
 abstract = {},
 author = {Tariq Andersen and Pernille Bj{\o}rn and Finn Kensing and Jonas Moll},
 doi = {10.1016/j.ijmedinf.2010.09.010},
 journal = {International Journal of Medical Informatics},
 month = {aug},
 number = {8},
 pages = {e112--e126},
 publisher = {Elsevier {BV}},
 title = {Designing for collaborative interpretation in telemonitoring: Re-introducing patients as diagnostic agents},
 url = {https://doi.org/10.1016%2Fj.ijmedinf.2010.09.010},
 volume = {80},
 year = {2011}
}

@inproceedings{Andersson,
 abstract = {Methods and tools that support systems development (SD) are usually motivated by a promise of better quality or increased productivity. In large software organizations specialised methods departments often manage these methods and tools. However these methods departments often focus more on purchase, tailoring and maintenance of technologies rather than on systematically diffusing methods and tools into current practices. This paper reports from a systematic improvement initiative in a large software organization. The aim of this effort was to diagnose diffusion practices, evaluate and adapt a service that can improve diffusion practices, and to diffuse this new service. Insights from this initiativet together with theoretical reflections on diffusion of SD technologies are provided. It is suggested that provision of services that help projects understand and plan diffusion of new SD technologies can play a key role in developing the focus and competencies needed to improve diffusion practices in large software organizations.},
 author = {I. Andersson and K. Nilsson},
 booktitle = {Proceedings of the 35th Annual Hawaii International Conference on System Sciences},
 doi = {10.1109/hicss.2002.994418},
 publisher = {{IEEE} Comput. Soc},
 title = {Improving diffusion practices in a software organization},
 url = {https://doi.org/10.1109%2Fhicss.2002.994418}
}

@incollection{Andersson_2002,
 abstract = {Large software organizations establish method departments to manage methods and tools aimed at supporting their software development activities. This division between software development and new technologies for software development helps develop specialized competencies, it supports standardization across software projects and departments, and it provides dedicated resources for innovation. In practice, however, such method departments are seldom perceived as sufficiently successful in diffusing new methods and tools. Reasons for this unsatisfactory performance may be found in the selfperception, learning mechanisms, and diffusion practices of these method departments.
This paper reports from practical attempts to change the attitudes and practices of a method department in a large software organization. Insights from these activities are provided together with theoretical reflections on the underlying learning and change mechanisms. It is suggested that method departments should change their role from technology supplier to service provider. The argument is concluded with practical advice on how to facilitate such a transformation.},
 author = {Ingegerd Andersson and Lars Mathiassen and Kerstin Nilsson},
 booktitle = {New Perspectives on Information Systems Development},
 doi = {10.1007/978-1-4615-0595-2_41},
 pages = {507--518},
 publisher = {Springer {US}},
 title = {Transforming a Method Department},
 url = {https://doi.org/10.1007%2F978-1-4615-0595-2_41},
 year = {2002}
}

@article{Avison_2001,
 abstract = {Action research (AR), which emphasises collaboration between researchers and practitioners, is a qualitative research method that has much potential for the information systems (IS) field. AR studies of IS phenomena are now beginning to be published in the IS research literature. However, the rigour of many AR studies in IS can be improved. When AR has been published, the findings have frequently been emphasised at the expense of the process. In this article, we look at the process in AR projects, and look at some of the key choices and alternatives in controlling AR. We discuss three aspects of control: the procedures for initiating an AR project, those for determining authority within the project, and the degree of formalisation. We analyse seven recent AR projects in IS and from this analysis distil recommendations for determining these control structures.},
 author = {David Avison and Richard Baskerville and Michael Myers},
 doi = {10.1108/09593840110384762},
 journal = {Information Technology {\&}amp$\mathsemicolon$ People},
 month = {mar},
 number = {1},
 pages = {28--45},
 publisher = {Emerald},
 title = {Controlling action research projects},
 url = {https://doi.org/10.1108%2F09593840110384762},
 volume = {14},
 year = {2001}
}

@article{Avital_2007,
 abstract = {},
 author = {Michel Avital and Kalle J. Lyytinen and John L. King and Michael D. Gordon and Edward Granger-Happ and Richard O. Mason and Richard T. Watson},
 doi = {10.17705/1cais.01925},
 journal = {Communications of the Association for Information Systems},
 publisher = {Association for Information Systems},
 title = {Leveraging Information Technology to Support Agents of World Benefit},
 url = {https://doi.org/10.17705%2F1cais.01925},
 volume = {19},
 year = {2007}
}

@incollection{B_rjesson,
 abstract = {A major challenge in process improvement is to understand process innovation and improvement efficiency and use. How do we know that process innovations and improvements give organizational benefits? We need a mechanism for measuring. In this paper, we report from a longitudinal action research study at the telecom company Ericsson where a measurement mechanism was designed and successfully used in practice to understand, learn, and measure process efficiency. In the concrete, the measurement mechanism was built through empirical testing combined with using a goalquestionmetrics (GQM) approach. The resulting measurement mechanism consists of four correlated metrics that indicate process use, process commitment, process learning, and process improvement. The same measurement mechanism can also be used to obtain feedback and evaluation, thereby allowing the organization to determine process efficiency and use, and to determine the success of the process improvements. Full Text at Springer, may require registration or fee},
 author = {Anna Börjesson and Anders Baaz and Jan Pries-Heje and Magnus Timmer{\aa}s},
 booktitle = {{IFIP} International Federation for Information Processing},
 doi = {10.1007/978-0-387-72804-9_14},
 pages = {197--216},
 publisher = {Springer {US}},
 title = {Measuring Process Innovations and Improvements},
 url = {https://doi.org/10.1007%2F978-0-387-72804-9_14}
}

@incollection{B_rjesson,
 abstract = {Traditionally, software processes improvement (SPI) has been approached. from a problem-oriented perspective, focusing on
diagnosing and solving problems using methods such as the IDEAL model and DMAIC. In contrast, appreciative inquiry is an approach
that focuses on what is best in an organization in order to further develop this to create a better future. It is, therefore,
interesting to explore if and how software organizations familiar with problem-solving approaches can benefit from using appreciative
inquiry. In this paper, we present an action research study conducted at the telecom company Ericsson in Sweden. Appreciative
inquiry was used to facilitate an SPI initiative implementing a new process and tool for requirements and test case management.
While the SPI initiative was considered successful, important lessons were learned regarding the application of appreciative
inquiry. We conclude that the use of appreciative inquiry does not eliminate the dependence of other well-known key factors
for SPI success. Also, the study indicates that the preference and satisfaction of problem-solving among individuals familiar
with problem-oriented approaches may impede the use of appreciative inquiry.},
 author = {Anna Börjesson and Lena Holmberg and Helena Holmström and Agneta Nilsson},
 booktitle = {{IFIP} International Federation for Information Processing},
 doi = {10.1007/978-0-387-72804-9_13},
 pages = {181--196},
 publisher = {Springer {US}},
 title = {Use of Appreciative Inquiry in Successful Process Improvement},
 url = {https://doi.org/10.1007%2F978-0-387-72804-9_13}
}

@incollection{B_rjesson,
 abstract = {Software process improvement (SPI) is a well-known approach to enhance software quality and business efficiency. The approach has been widely used, discussed, adopted, and criticized within the software community since Watts Humphreys introduction of SPI in 1989. SPI is a particular instance of diffusion of innovations. One challenging difficulty within diffusion of innovations is crossing the chasm between early adopters and early majority. To explore this issue in relation to SPI, we have studied an initiative implementing a new change request process and tool at the telecom company Ericsson AB in Gothenburg, Sweden. An action research approach was adopted with the double purpose of supporting the SPI initiative toward success while at the same time learning about tactics that SPI change agents can adopt to successfully cross the chasm. The study identifies a tactic, the guerrilla tactic, that SPI change agents can use to successfully cross the chasm and it discusses lessons from practicing this tactic in relation to the SPI and diffusion of innovation literature. Full Text at Springer, may require registration or fee},
 author = {Anna Börjesson and Fredrik Martinsson and Magnus Timmer{\aa}s},
 booktitle = {{IFIP} International Federation for Information Processing},
 doi = {10.1007/0-387-25590-7_7},
 pages = {111--128},
 publisher = {Kluwer Academic Publishers},
 title = {Crossing the Chasm in Software Process Improvement},
 url = {https://doi.org/10.1007%2F0-387-25590-7_7}
}

@incollection{B_rjesson,
 abstract = {It is a challenge to keep up momentum in Software Process Improvement (SPI) during organizational changes. SPI initiatives get interrupted, are sidetracked and progress slowly when changes occur in the target organization. This paper explores this crucial relation between SPI initiatives and the dynamics of the organization to be changed. The study builds on longitudinal data from the introduction of a new approach to requirements management into a software unit within Ericsson. Our focus is on the challenges involved in managing the SPI initiative as a sequence of organizational changes occurs in software development. We discuss the findings from this study in relation to the SPI literature and the literature on organizational agility and software agility. Our research indicates that SPI can benefit from agility ideas if the innovations are integrated well with other agility initiatives within the software organization. We therefore suggest that there is a need to coordinate and align the software agility movement with SPI issues to arrive at a comprehensive and holistic understanding of how software organizations can respond effectively to dynamics in their environment. Full Text at Springer, may require registration or fee},
 author = {Anna Börjesson and Lars Mathiassen},
 booktitle = {{IT} Innovation for Adaptability and Competitiveness},
 doi = {10.1007/1-4020-8000-x_8},
 pages = {135--156},
 publisher = {Kluwer Academic Publishers},
 title = {Organisational Dynamics in the Software Process Improvement: The Agility Challenge},
 url = {https://doi.org/10.1007%2F1-4020-8000-x_8}
}

@article{B_rjesson_2005,
 abstract = {Purpose
The paper seeks to explore the impact of events in Software Process Improvement (SPI) environments based on a longitudinal study of a requirements management initiative at Ericsson.

Design/methodology/approach
The paper presents the initiative from three perspectives – the improvement initiative, the targeted software practices, and the environment.

Findings
SPI initiatives easily get interrupted, are side‐tracked, and progress slowly due to changing environments. While most practitioners are painfully aware of this, the SPI literature has so far only touched on the issue. Agility principles would have helped Ericsson respond more effectively to events that impacted the initiative. Development of agile SPI practices requires coordination and alignment with other initiatives to develop agile software organizations.

Originality/value
SPI has been adopted by many organizations to help them to deliver quality software. However, its success is a matter of debate and this paper deals with the issues involved.},
 author = {Anna Börjesson and Lars Mathiassen},
 doi = {10.1108/09593840510633329},
 journal = {Information Technology {\&}amp$\mathsemicolon$ People},
 month = {dec},
 number = {4},
 pages = {359--382},
 publisher = {Emerald},
 title = {Improving software organizations: agility challenges and implications},
 url = {https://doi.org/10.1108%2F09593840510633329},
 volume = {18},
 year = {2005}
}

@article{B_rjesson_2006,
 abstract = {Inspired by the chasm between early adopters and early majority in diffusion of technological innovations, this paper investigates how agile improvement practices can help software organizations successfully implement new processes. An action research-based improvement initiative implemented a new change-request process and tool at the telecom company Ericsson AB in Gothenburg, Sweden. The study identifies a 'guerilla tactic' that change agents can use in software organizations to cross the chasm, and it discusses lessons learned in relation to literature on diffusion of innovation and software agility. The contribution of the study is that the guerrilla tactic supports agile improvement practices and facilitates successful implementation.},
 author = {Anna Börjesson and Fredrik Martinsson and Magnus Timmer{\aa}s},
 doi = {10.1057/palgrave.ejis.3000603},
 journal = {European Journal of Information Systems},
 month = {apr},
 number = {2},
 pages = {169--182},
 publisher = {Informa {UK} Limited},
 title = {Agile improvement practices in software organizations},
 url = {https://doi.org/10.1057%2Fpalgrave.ejis.3000603},
 volume = {15},
 year = {2006}
}

@article{Baaz_2010,
 abstract = {Although lessons-learned activities aid software process improvement, few IT industry organizations regularly and adequately conduct them. Recent studies explain why, identifying 19 barriers for conducting lessons learned. The Postmortem Evaluation theory proposes that organizations almost only focus on what went wrong. 4ALL, a new lessons-learned method based on the appreciative inquiry approach, aims to facilitate learning. It was developed and evaluated in close collaboration with Ericsson. Through attentive moderating and careful timing, the 4ALL method emphasizes the importance of balancing excellences and challenges. It radically increases the identification of excellences and how to learn from what went right, enhancing participants' pride, and significantly increasing the appreciation of lessons-learned workshops at Ericsson.},
 author = {Anders Baaz and Lena Holmberg and Agneta Nilsson and Helena Holmström Olsson and Anna Börjesson Sandberg},
 doi = {10.1109/ms.2009.198},
 journal = {{IEEE} Software},
 month = {jul},
 number = {4},
 pages = {72--79},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Appreciating Lessons Learned},
 url = {https://doi.org/10.1109%2Fms.2009.198},
 volume = {27},
 year = {2010}
}

@article{Baird_2017,
 abstract = {Effectively incorporating complex technology into organizational practices requires moving beyond initial plateaus of postadoption usage. However, achieving this is especially challenging for small businesses because competing priorities in addition to resource and attention constraints may lead to technology assimilation satisficing. With this context in mind, we conducted a four-year action research project in which we supported electronic health record (EHR) assimilation in 10 small physician practices by facilitating reflections to help these small organizations move beyond an initial plateau of postadoption EHR usage. Drawing from these results, we theorize reflective technology assimilation (RTA) as an emergent process of facilitating deeper learning and reflection within and across small resource- and attention-constrained organizations to enable ongoing technology assimilation. In addition, we articulate the foundational principles for reflective action research (RAR) as an approach in which researchers facilitate reflective problem solving while advancing theoretical knowledge.},
 author = {Aaron Baird and Elizabeth Davidson and Lars Mathiassen},
 doi = {10.1080/07421222.2017.1373003},
 journal = {Journal of Management Information Systems},
 month = {jul},
 number = {3},
 pages = {664--694},
 publisher = {Informa {UK} Limited},
 title = {Reflective Technology Assimilation: Facilitating Electronic Health Record Assimilation in Small Physician Practices},
 url = {https://doi.org/10.1080%2F07421222.2017.1373003},
 volume = {34},
 year = {2017}
}

@incollection{Bajec,
 abstract = {While it used to be a common belief that the use of rigorous methods in software development is beneficial if not compulsory
to assure success of software development projects, the investigations in practice reveal developers often avoid to follow
prescribed methods and that there is a wide gap between the organizations’ official methods and the work actually performed
by their developers in IT projects. According to the literature, there are many reasons contributing to this rather undesirable
situation. The two of them are rigidity of methods and their social inappropriateness. In the MasterProc project we have addressed these issues by developing a framework and tool-support for the reengineering of software development
methods. Using the framework an organisation can reengineer its existing ways of working into a method that is organisation-specific and auto-adjustable to specifics of its projects. The evaluation that was performed in five partner companies is motivating, as it shows the
framework can be very useful in improving software development practice. This paper describes the framework philosophy and
its main components.},
 author = {Marko Bajec and Damjan Vavpoti{\v{c}} and {\v{S}}tefan Furlan and Marjan Krisper},
 booktitle = {{IFIP} {\textemdash} The International Federation for Information Processing},
 doi = {10.1007/978-0-387-73947-2_22},
 pages = {283--297},
 publisher = {Springer {US}},
 title = {Software Process Improvement Based on the Method Engineering Principles},
 url = {https://doi.org/10.1007%2F978-0-387-73947-2_22}
}

@article{Bajec_2007,
 abstract = {Both practitioners and researchers agree that if software development methods were more adjustable to project-specific situations, this would increase their use in practice. Empirical investigations show that otherwise methods exist just on paper while in practice developers avoid them or do not follow them rigorously. In this paper we present an approach that deals with this problem. Process Configuration, as we named the approach, tells how to create a project-specific method from an existing one, taking into account the project circumstances. Compared to other approaches that deal with the creation of project-specific methods, our approach tends to be more flexible and easier to implement in practice as it introduces few simplifications. The proposed approach is practice-driven, i.e. it has been developed in cooperation with software development companies.},
 author = {Marko Bajec and Damjan Vavpoti{\v{c}} and Marjan Krisper},
 doi = {10.1016/j.infsof.2006.05.007},
 journal = {Information and Software Technology},
 month = {apr},
 number = {4},
 pages = {345--365},
 publisher = {Elsevier {BV}},
 title = {Practice-driven approach for creating project-specific software development methods},
 url = {https://doi.org/10.1016%2Fj.infsof.2006.05.007},
 volume = {49},
 year = {2007}
}

@article{Bajec_2008,
 abstract = {The purpose of the research described in this paper is to propose a framework and sup- porting tools that will help software companies to establish formalised methods that will be tech- nically and socially sound with their needs. Following the framework the companies can asses and improve their existing ways of working, capture them into formalised methods and continuously enrich them based on the past development experiences. Furthermore, the formalised methods that are designed based on the suggested framework are flexible and can be automatically adjusted by the supporting tools to suite circumstances of a particular project or team. This paper describes the framework philosophy and its tool support.},
 author = {Marko Bajec and Damjan Vavpoti{\v{c}}},
 doi = {10.15388/informatica.2008.216},
 journal = {Informatica},
 month = {jan},
 number = {3},
 pages = {321--344},
 publisher = {Vilnius University Press},
 title = {A Framework and Tool-Support for Reengineering Software Development Methods},
 url = {https://doi.org/10.15388%2Finformatica.2008.216},
 volume = {19},
 year = {2008}
}

@incollection{Bang_2017,
 abstract = {This paper describes an action research study focusing on adoption of UX and UX evaluation methods in a software organisation. The aim of adopting UX was to exceed a traditional approach to design of banking applications. The action research study involved collaboration over several months between the researchers and a group of developers with no prior knowledge of UX. The study demonstrates how UX methods can be introduced in an IT organisation and how UX decisions can be prioritised in the software industry. Focusing on understanding, supporting and improving the practice of the development team, we employed several adoption activities of UX evaluation methods by presenting these in a visual form (video records) and a practical form (workshops). Our results show that specific UX materials have been adopted in the development process of the IT department. Based on the study, we present our experience with adopting UX in an IT organisation with focus on the collaboration process, working with the UX definition, and the obstacles that occurred during the collaboration.
KeywordsUser experienceUXEvaluation methodsAction researchMethod adoption},
 author = {Kristine Bang and Martin Akto Kanstrup and Adam Kjems and Jan Stage},
 booktitle = {Human-Computer Interaction {\textendash} {INTERACT} 2017},
 doi = {10.1007/978-3-319-68059-0_11},
 pages = {169--188},
 publisher = {Springer International Publishing},
 title = {Adoption of {UX} Evaluation in Practice: An Action Research Study in a Software Organization},
 url = {https://doi.org/10.1007%2F978-3-319-68059-0_11},
 year = {2017}
}

@article{Barqawi_2014,
 abstract = {},
 author = {Neda Barqawi and Lars Mathiassen},
 doi = {10.2139/ssrn.2553006},
 journal = {{SSRN} Electronic Journal},
 publisher = {Elsevier {BV}},
 title = {Software Service Innovation Through Release Management: An Action Research Study},
 url = {https://doi.org/10.2139%2Fssrn.2553006},
 year = {2014}
}

@article{Barqawi_2016,
 abstract = {},
 author = {Neda Barqawi and Kamran Syed and Lars Mathiassen},
 doi = {10.1108/jbim-02-2015-0030},
 journal = {Journal of Business {\&}amp$\mathsemicolon$ Industrial Marketing},
 month = {aug},
 number = {7},
 pages = {928--940},
 publisher = {Emerald},
 title = {Applying service-dominant logic to recurrent release of software: an action research study},
 url = {https://doi.org/10.1108%2Fjbim-02-2015-0030},
 volume = {31},
 year = {2016}
}

@article{Baskerville_2009,
 abstract = {Building on neo-institutional theory and theories of innovation and diffusion, recent work in the field of management has suggested that management research and practice is characterized by fashions. A management fashion is a relatively transitory belief that a certain management technique leads rational management progress. Using bibliographic research, we apply Abrahamson's management fashion theory to information systems research and practice. Our findings reveal that information systems research and practice, like management research and practice, is indeed characterized by fashions. These "IS fashion waves" are relatively transitory and represent a burst of interest in particular topics by IS researchers and practitioners. However, while our findings show that IS research closely parallels practice, we suggest that a more proactive engagement of IS academics is needed in the IS fashion-setting process.},
 author = {Baskerville and  Myers},
 doi = {10.2307/20650319},
 journal = {{MIS} Quarterly},
 number = {4},
 pages = {647},
 publisher = {{JSTOR}},
 title = {Fashion Waves in Information Systems Research and Practice},
 url = {https://doi.org/10.2307%2F20650319},
 volume = {33},
 year = {2009}
}

@article{Baskerville_2023,
 abstract = {An increasing presence of practitioners with doctoral degrees in Information Systems and related disciplines holds promise to advance Information Systems research. The prospect is to gain more knowledge from the practical experience of developing, using, and managing information systems in context. To scientifically capitalise on this opportunity, this EJIS special issue introduces the research genre of “Information Systems Clinical Research”. The genre presents knowledge generated from practitioner-researcher interventions to achieve desired outcomes in information systems development, use, and management practice contexts. In this editorial, we introduce and conceptualise the genre; we present a research framework that defines its four key elements; and we discuss how to address its key challenges in research projects. As a result, we derive ten criteria for rigorous Information Systems Clinical Research and provide examples on how the articles published in the special issue have addressed these criteria. We conclude with a call to further advance clinical research as an important part of the Information Systems discipline.},
 author = {Richard Baskerville and Jan vom Brocke and Lars Mathiassen and Helana Scheepers},
 doi = {10.1080/0960085x.2022.2126030},
 journal = {European Journal of Information Systems},
 month = {jan},
 number = {1},
 pages = {1--9},
 publisher = {Informa {UK} Limited},
 title = {Clinical research from information systems practice},
 url = {https://doi.org/10.1080%2F0960085x.2022.2126030},
 volume = {32},
 year = {2023}
}

@article{Bass_2018,
 author = {J. M. Bass and A. O. Abdul and H. Ghavimi and N. MacRae and P. Adam},
 doi = {10.20533/ijmip.2042.4647.2018.0051},
 journal = {International Journal of Multimedia and Image Processing},
 month = {jun},
 number = {2},
 pages = {414--424},
 publisher = {Infonomics Society},
 title = {Scrum for Product Innovation: A Longitudinal Embedded Case Study},
 url = {https://doi.org/10.20533%2Fijmip.2042.4647.2018.0051},
 volume = {8},
 year = {2018}
}

@article{Beck_2011,
 abstract = {Given the challenge of re-engineering the infrastructure of a city so that it may become a force for good in the environment, what structure of governance might promote/stifle any associated technological and technical innovations? How might the 'quality' of the sought-for governance be gauged and improved? Cultural theory is introduced to address these questions and briefly elaborated. In particular, it is shown how cultural theory can be used to refurbish Dahl's theory of pluralist democracy and provide a simple (and visual) metric of deliberative quality in governance. Matters of re-engineering the water-nutrient infrastructures of the city of Atlanta within the Chattahoochee watershed in the southeastern USA provide the primary setting for eventually applying the resulting conceptual framework. Drawing together a somewhat eclectic mix of past experience and prospective approaches - ranging from practical resolutions of water conflicts in Nepal, lessons learned from previous community engagement in the Atlanta-Chattahoochee system, and two stagings of the sustainability agora of the International Water Association - a cultural theory-inspired programme of work is developed to explore and assemble those elements of governance that should, in practice, enable the re-engineering needed for a city to become a force for good in its environment.},
 author = {M. Bruce Beck and Michael Thompson and Steven Ney and Dipak Gyawali and Paul Jeffrey},
 doi = {10.1680/ensu.2011.164.2.129},
 journal = {Proceedings of the Institution of Civil Engineers - Engineering Sustainability},
 month = {jun},
 number = {2},
 pages = {129--142},
 publisher = {Thomas Telford Ltd.},
 title = {On governance for re-engineering city infrastructure},
 url = {https://doi.org/10.1680%2Fensu.2011.164.2.129},
 volume = {164},
 year = {2011}
}

@article{Benfeldt_2019,
 abstract = {While governing data as an organizational asset has clear benefits, mobilizing an organization to implement data governance remains elusive for practitioners. On that account, this paper examines why governing data is difficult in local government organizations. Based on a literature review and an empirical case study, we establish the inherent challenges and build on the notion of collective action to theorize the problem of data governance. Following an engaged scholarship approach, we collect empirical material through six group interviews with 34 representatives from 13 different Danish municipalities. We extend existing data governance research with our problem triangle that identifies and explicates the complex relations between six distinct challenges: value, collaboration, capabilities, overview, practices, and politics. We demonstrate the value in theorizing data governance as a collective action problem and argue for the necessity of ensuring researchers and practitioners achieve a common understanding of the inherent challenges, as a first step towards developing data governance solutions that are viable in practice.},
 author = {Olivia Benfeldt and John Stouby Persson and Sabine Madsen},
 doi = {10.1007/s10796-019-09923-z},
 journal = {Information Systems Frontiers},
 month = {apr},
 number = {2},
 pages = {299--313},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Data Governance as a Collective Action Problem},
 url = {https://doi.org/10.1007%2Fs10796-019-09923-z},
 volume = {22},
 year = {2019}
}

@article{Benfeldt_2019,
 abstract = {While governing data as an organizational asset has clear benefits, mobilizing an organization to implement data governance remains elusive for practitioners. On that account, this paper examines why governing data is difficult in local government organizations. Based on a literature review and an empirical case study, we establish the inherent challenges and build on the notion of collective action to theorize the problem of data governance. Following an engaged scholarship approach, we collect empirical material through six group interviews with 34 representatives from 13 different Danish municipalities. We extend existing data governance research with our problem triangle that identifies and explicates the complex relations between six distinct challenges: value, collaboration, capabilities, overview, practices, and politics. We demonstrate the value in theorizing data governance as a collective action problem and argue for the necessity of ensuring researchers and practitioners achieve a common understanding of the inherent challenges, as a first step towards developing data governance solutions that are viable in practice.},
 author = {Olivia Benfeldt and John Stouby Persson and Sabine Madsen},
 doi = {10.1007/s10796-019-09923-z},
 journal = {Information Systems Frontiers},
 month = {apr},
 number = {2},
 pages = {299--313},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Data Governance as a Collective Action Problem},
 url = {https://doi.org/10.1007%2Fs10796-019-09923-z},
 volume = {22},
 year = {2019}
}

@article{Berger_2015,
 abstract = {Action research is widespread in many of the background disciplines that underpin the e-Government field and is beginning to take root as a legitimate e-Government research method. Canonical Action Research (CAR) is the most widely used form of action research; however it relies on premises that can be problematic in the e-Government context. This article details some of those underlying assumptions, and shows the difficulties that result when applied to a relatively typical e-Government case study: the implementation of an advanced email system in Danish public administration. The empirical experience calls many of the standard premises into question, and these are categorised. The authors summarize the resulting experience as nine challenges for action researchers working in the e-Government field, and investigate some possible responses.},
 author = {Jesper B. Berger and Jeremy Rose},
 doi = {10.4018/ijegr.2015070104},
 journal = {International Journal of Electronic Government Research},
 month = {jul},
 number = {3},
 pages = {57--75},
 publisher = {{IGI} Global},
 title = {Nine Challenges for e-Government Action Researchers},
 url = {https://doi.org/10.4018%2Fijegr.2015070104},
 volume = {11},
 year = {2015}
}

@incollection{Bj_rn,
 abstract = {In this paper we apply Davis Technology Acceptance Model (TAM) in a qualitative fashion to analyze and interpret the chronological sequence of events leading to the acceptance of the Groupware technology, BSCW, in a virtual learning team. The research question investigated is: What are the factors influencing the integration process of Groupware technology in virtual learning teams in part-time adult education? The data were gathered through an in-depth qualitative action research study of one virtual learning team doing problem-oriented project work within a master education program. We find that one important factor influencing the integration process of Groupware is: How the technology provides support for social perspective awareness. In the case investigated the technology BSCW supported social awareness, which influenced both the ease-of-use and the perceived-usefulness of the Groupware technology, thus being an important condition that influenced the positive outcome of the integration process. Full Text at Springer, may require registration or fee},
 author = {Pernille Bj{\o}rn and Ada Scupola},
 booktitle = {{IT} Innovation for Adaptability and Competitiveness},
 doi = {10.1007/1-4020-8000-x_18},
 pages = {289--312},
 publisher = {Kluwer Academic Publishers},
 title = {Groupware Integration in Virtual Learning Teams},
 url = {https://doi.org/10.1007%2F1-4020-8000-x_18}
}

@article{Bj_rn_2009,
 abstract = {In this paper, we propose an approach to balance the legitimate and yet conflicting perspectives between standardization and reconfiguration embedded within hospital information systems (HIS) design activities. We report on an action research study of the customization process of an electronic triage and tracking system that was reconfigured to be used in eight Canadian emergency departments. We argue that during HIS design activities, it is essential for both practitioners and system designers to articulate and identify which aspects can be standardized without constraining important local flexibility and which aspects require local reconfiguration to function in a particular work context. To identify these differences, we suggest an analytical distinction between boundary factors and contextual contingencies, which can be used in a design and reconfiguration process. We argue that the process of designing shared electronic templates should be perceived as a common design process, where multiple stakeholders articulate, identify, and negotiate boundary factors and contextual contingencies. Boundary factors are then represented within the shared electronic system, whereas contextual contingencies form the basis for constructing localized versions of the shared application. All local versions include both boundary factors and the reconfigured contextual contingencies.},
 author = {Pernille Bj{\o}rn and Sue Burgoyne and Vicky Crompton and Teri MacDonald and Barbe Pickering and Sue Munro},
 doi = {10.1057/ejis.2009.34},
 journal = {European Journal of Information Systems},
 month = {oct},
 number = {5},
 pages = {428--441},
 publisher = {Informa {UK} Limited},
 title = {Boundary factors and contextual contingencies: configuring electronic templates for healthcare professionals},
 url = {https://doi.org/10.1057%2Fejis.2009.34},
 volume = {18},
 year = {2009}
}

@incollection{Bodea_2013,
 abstract = {The aim of this chapter is to provide a model for requirement specification, useful in developing efficient e-assessment applications with personalized feedback, which is enhanced by calling a recommender engine. The research was done in the context of using educational technology to facilitate learning processes. The data used to build the requirement model was collected from a set of interviews with the users and creators of an e-assessment application in project management. Requirement analysis assumes human effort and thus introduces uncertainties. To minimize the subjective factor, the data extracted from interviews with the users and the developers of the existing e-assessment application are clustered using a fuzzy logic solution into classes of requirements. These classes are the units of the model. The connections between classes are also mentioned: relations such as "if-then," "switch," or" contains" are explained. The requirements analysis conducts a smart set of specifications, obtained in a collaborative manner, useful for the design of e-assessment applications in project management or other similar domains.},
 author = {Constanta-Nicoleta Bodea and Maria-Iuliana Dascalu},
 booktitle = {Intelligent Techniques in Recommendation Systems},
 doi = {10.4018/978-1-4666-2542-6.ch002},
 pages = {30--48},
 publisher = {{IGI} Global},
 title = {Building Efficient Assessment Applications with Personalized Feedback},
 url = {https://doi.org/10.4018%2F978-1-4666-2542-6.ch002},
 year = {2013}
}

@article{Bolmsten_2021,
 abstract = {},
 author = {Johan Bolmsten and Michael Ekow Manuel and Adam Kaizer and Kadi Kasep{\~{o}}ld and Daniel Sköld and Monika Ziemska},
 doi = {10.1007/s13437-020-00224-w},
 journal = {{WMU} Journal of Maritime Affairs},
 month = {jan},
 number = {3},
 pages = {309--333},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Educating the Global Maritime Professional{\textemdash}a case of collaborative e-learning},
 url = {https://doi.org/10.1007%2Fs13437-020-00224-w},
 volume = {20},
 year = {2021}
}

@inproceedings{Borjesson_2003,
 abstract = {Software process improvement (SPI) has become one of the most widely used approaches to increase the capability of software organisations. Many organisations experience a successful start on their SPI initiatives only to realise that the commitment to change weakens significantly after a first phase of initial excitement. This paper explores this problem based on experiences from Ericsson. Two quite similar SPI initiatives situated within the same organisational context are compared and contrasted. Both initiatives were carefully planned and managed following the IDEAL process; they got of to a successful start; and they both developed new or improved processes. But only one of the initiatives led to improvements of engineering practices while the other had little or no effect on the software operation at Ericsson. Our research shows that the effort of the two SPI initiatives is distributed quite differently between the phases of the IDEAL model and between generic actions and actions dedicated to particular software projects. The paper explores this phenomenon both as an indicator and possible explanation of differences in implementation success. Interpretations relating to key issues in SPI are offered together with a discussion of implications for research and practice.},
 author = {A. Borjesson and L. Mathiassen},
 booktitle = {36th Annual Hawaii International Conference on System Sciences, 2003. Proceedings of the},
 doi = {10.1109/hicss.2003.1174899},
 publisher = {{IEEE}},
 title = {Making {SPI} happen: the {IDEAL} distribution of effort},
 url = {https://doi.org/10.1109%2Fhicss.2003.1174899},
 year = {2003}
}

@article{Borjesson_2006,
 abstract = {With business environments constantly changing, organisations and individuals must execute and learn in parallel to ensure they can solve today's problems and plan for tomorrow's. This action research explores how action learning can improve Software Process Improvement (SPI) success by 'improving the improvers'. The strategy is to engage SPI teams in theory studies and relate these studies to daily work to help them critically reflect on practice improvements. SPI change agents at Ericsson AB in Gothenburg, Sweden, took on this challenge, participating in a year-long action learning effort. This study presents detailed data about that effort and its impact on the organisation's SPI success rate. Four action-learning activities literature studies, workshop participation, SPI project meetings, and one-on-one coaching serve as a lens to understand and assess the effort's value. The data suggests that action learning is a useful approach for improving SPI change agents' understanding and reflection capabilities, thereby increasing the SPI success rate.},
 author = {Anna Borjesson},
 doi = {10.1504/ijbis.2006.008602},
 journal = {International Journal of Business Information Systems},
 number = {3},
 pages = {310},
 publisher = {Inderscience Publishers},
 title = {Improve by improving software process improvers},
 url = {https://doi.org/10.1504%2Fijbis.2006.008602},
 volume = {1},
 year = {2006}
}

@inproceedings{Bricknall_2007,
 abstract = {In this article, we look at the use of the balanced scorecard and how it can be used to align business and IT strategies. In particular, we have made a study of how the pharmaceutical company AstraZeneca (AZ) uses their method called the business performance management (BPeM). We have related this to the balanced scorecard and compared how they have broken down strategies, objectives, targets and measurements on both the business and IT sides of the company to see if they have alignment between business and IT. We have analysed the results of the case study in two parts firstly, a review against Henderson's and Venkatraman's strategic alignment mode (1999) and secondly, against a balanced scorecard as defined by Kaplan and Norton (1996). From these results, we appraise the level of alignment between business and IT by implementing a simple comparison process},
 author = {Richard Bricknall and Gunilla Darrell and Hans Nilsson and Kalevi Pessi},
 booktitle = {2007 40th Annual Hawaii International Conference on System Sciences ({HICSS}{\textquotesingle}07)},
 doi = {10.1109/hicss.2007.53},
 month = {jan},
 publisher = {{IEEE}},
 title = {Aligning {IT} Strategy with Business Strategy through the Balanced Scorecard in a Multinational Pharmaceutical Company},
 url = {https://doi.org/10.1109%2Fhicss.2007.53},
 year = {2007}
}

@article{Bruun_2008,
 abstract = {This paper describes the study of the distribution and integration of knowledge in a small control system development project called the Automation System for Agricultural Implements (AGRIX). The activity of integrating socially distributed knowledge is called knowledge networking. We distinguish between three modes of knowledge networking - modular, integral and translational - and argue that the project team's task-specific selection of a knowledge networking mode depends on the nature of the problem to be solved. We propose that groups tend to select different kinds of knowledge networking strategies, depending on whether the problem is perceived as well- or ill-defined. We found that the AGRIX team worked with well-defined problems in modular and translational ways, while treating ill-defined problems with integral knowledge networking. We also observed that, in the absence of major constraints, the networking mode co-evolved dynamically with the problem structure, even though the organizational core of the project remained unchanged. This suggests that our proposal is plausible and should be investigated more systematically.},
 author = {Henrik Bruun and Seppo Sierla},
 doi = {10.1177/0306312707077366},
 journal = {Social Studies of Science},
 month = {feb},
 number = {1},
 pages = {133--158},
 publisher = {{SAGE} Publications},
 title = {Distributed Problem Solving in Software Development},
 url = {https://doi.org/10.1177%2F0306312707077366},
 volume = {38},
 year = {2008}
}

@inproceedings{Campbell_2020,
 abstract = {Design Thinking (DT) is commonly used in Entrepreneurship Education, however it's capacity to support entrepreneurial competencies has not been explored sufficiently. In this study, we used a multi-method approach to gain an in-depth understanding of participants' learning journeys in two early entrepreneurship events. These were structured around DT and specifically IDEO's implementation of Human Centred Design (HCD). Through semi-structured interviews and non-participant observation we were able to link the stages of HCD to specific competencies and identify competencies that manifest across the wider process. We draw conclusions on the contribution of DT in the development of these competencies and make suggestions for using EntreComp to add nuance to DT interventions. Finally we discuss the impact of facilitation, professionalism, customization and logistical factors on the success of DT interventions.},
 author = {Duncan Campbell and Gerasimos Balis and Bijan Aryana},
 booktitle = {Proceedings of the Sixth International Conference on Design Creativity ({ICDC} 2020)},
 doi = {10.35199/icdc.2020.31},
 publisher = {The Design Society},
 title = {{BRIDGING} {DESIGN} {THINKING} {AND} {ENTRECOMP} {FOR} {ENTREPRENEURSHIP} {WORKSHOPS}: A {LEARNING} {EXPERIENCE}},
 url = {https://doi.org/10.35199%2Ficdc.2020.31},
 year = {2020}
}

@incollection{Carlsson_2007,
 abstract = {In this chapter, we focus the role of information systems (IS) integration in the context of corporate mergers and acquisitions (M&As). We address the domain from a management perspective and especially target the consequences IS integration has for the acquisition initiative. Based on a literature review, the chapter presents a framework for describing, explaining and managing IS integration in M&As. The framework is suitable both for academics conducting scientific research on IS in M&As as well as business professionals considering an acquisition or merger. The usefulness and validity of the framework is shown by a case study: the Trelleborg Industrial Hose acquisition and IS integration. Based on the framework, the case and relevant literature lessons learned and future research needs are presented and discussed.},
 author = {S. A. Carlsson},
 booktitle = {Adaptive Technologies and Business Integration},
 doi = {10.4018/978-1-59904-048-6.ch009},
 pages = {174--188},
 publisher = {{IGI} Global},
 title = {Managing Information Systems Integration in Corporate Mergers and Acquisitions},
 url = {https://doi.org/10.4018%2F978-1-59904-048-6.ch009},
 year = {2007}
}

@article{Cecez_Kecmanovic_2020,
 abstract = {The purpose of the special issue is to foster and contribute to methodological advances of qualitative research, including new philosophical approaches and innovative research designs and methods that enable more profound, critically engaged, practically relevant, and reflexive insights into information systems and organizing in the digital era. With this special issue, we seek to reignite the debate about methodological questions and invite information systems (IS) scholars to think differently about emerging and increasingly intertwined social and technological phenomena and explore bold visions and methodological innovations in conducting IS inquiries.},
 author = {Dubravka Cecez-Kecmanovic and   and "Robert M. Davison" and Walter Fernandez and Patrick Finnegan and "Shan L. Pan" and Suprateek Sarker and   and   and   and   and},
 doi = {10.17705/1jais.00599},
 journal = {Journal of the Association for Information Systems},
 pages = {246--263},
 publisher = {Association for Information Systems},
 title = {Advancing Qualitative {IS} Research Methodologies: Expanding Horizons and Seeking New Paths},
 url = {https://doi.org/10.17705%2F1jais.00599},
 year = {2020}
}

@article{Cervera_2012,
 abstract = {The Situational Method Engineering (SME) discipline emerged two decades ago to address the challenge of the in-house definition of software development methods and the construction of the corresponding supporting tools. Unfortunately, current SME approaches still have limitations that are hindering their adoption by industry. One of these limitations is that most approaches do not properly encompass two phases of the SME lifecycle, which refer to the method design and the method implementation. To address this limitation, this paper demonstrates how Model-Driven Development (MDD) techniques can contribute to successfully cover both phases. The proposal is illustrated by a real case study that is currently being used at the Valencian Regional Ministry of Infrastructure, Territory and Environment.},
 author = {Mario Cervera and Manoli Albert and Victoria Torres and Vicente Pelechano},
 doi = {10.4018/jismd.2012100105},
 journal = {International Journal of Information System Modeling and Design},
 month = {oct},
 number = {4},
 pages = {86--103},
 publisher = {{IGI} Global},
 title = {A Model-Driven Approach for the Design and Implementation of Software Development Methods},
 url = {https://doi.org/10.4018%2Fjismd.2012100105},
 volume = {3},
 year = {2012}
}

@inproceedings{Chen_2009,
 abstract = {Service engineering, the application of engineering disciplines to develop service-oriented enterprise systems (service systems) with predicable results, has faced a brand new array of challenges in recent years. Existing development approaches that might help addressing these challenges are scattered in separate research fields or in different units of an organization, just like the "blind men and the elephant." This article presents a 3-year action research case study with a Fortune 50 company in the financial services industry, validating an integrated service-oriented business-IT alignment framework, called the BITAM-SOA Framework, to shed light on complex service engineering issues, including the interplay between business-IT alignment approaches (alignment via architecture, via governance and via communication) and Service Oriented Architecture adoption as well as methodological challenges of service engineering. The importance of the social dimension of service engineering is illuminated. The results yield lessons learned, managerial insights and integrated methods for effective service engineering.},
 author = {Hong-Mei Chen and Opal Perry and Rick Kazman},
 booktitle = {Proceedings of the 11th International Conference on Electronic Commerce},
 doi = {10.1145/1593254.1593295},
 month = {aug},
 publisher = {{ACM}},
 title = {An integrated framework for service engineering},
 url = {https://doi.org/10.1145%2F1593254.1593295},
 year = {2009}
}

@article{Chen_2010,
 abstract = {This paper presents an integrated service-oriented enterprise system development framework (called the BITAM-SOA Framework) as well as an instantiated design process model (called the Service Engineering Schematic) that was a result from a three-year action research case study with a Fortune 50 company in the financial services industry. The BITAM-SOA Framework and Schematic advance are both business-IT alignment and software architecture analysis techniques supporting the engineering of enterprise-wide service-oriented systems-that is, service engineering.},
 author = {Hong-Mei Chen and Rick Kazman and Opal Perry},
 doi = {10.1109/tsc.2010.21},
 journal = {{IEEE} Transactions on Services Computing},
 month = {apr},
 number = {2},
 pages = {145--160},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {From Software Architecture Analysis to Service Engineering: An Empirical Study of Methodology Development for Enterprise {SOA} Implementation},
 url = {https://doi.org/10.1109%2Ftsc.2010.21},
 volume = {3},
 year = {2010}
}

@inproceedings{Chen_2015,
 abstract = {},
 author = {Hong-Mei Chen and Rick Kazman and Serge Haziyev and Olha Hrytsay},
 booktitle = {2015 {IEEE}/{ACM} 1st International Workshop on Big Data Software Engineering},
 doi = {10.1109/bigdse.2015.15},
 month = {may},
 publisher = {{IEEE}},
 title = {Big Data System Development: An Embedded Case Study with a Global Outsourcing Firm},
 url = {https://doi.org/10.1109%2Fbigdse.2015.15},
 year = {2015}
}

@article{Chen_2016,
 abstract = {This article contributes an architecture-centric methodology, called AABA ( A rchitecture-centric A gile B ig data A nalytics), to address the technical, organizational, and rapid technology change challenges of both big data system development and agile delivery of big data analytics for Web-based Systems (WBS). As the first of its kind, AABA fills a methodological void by adopting an architecture-centric approach, advancing and integrating software architecture analysis and design, big data modeling and agile practices. This article describes how AABA was developed, evolved and validated simultaneously in 10 empirical WBS case studies through three CPR (Collaborative Practice Research) cycles. In addition, this article presents an 11th case study illustrating the processes, methods and techniques/tools in AABA for cost-effectively achieving business goals and architecture agility in a large scale WBS. All 11 case studies showed that architecture-centric design, development, and operation is key to taming technical complexity and achieving agility necessary for successful WBS big data analytics development. Our contribution is novel and important. The use of reference architectures, a design concepts catalog and architectural spikes in AABA are advancements to architecture design methods. In addition, our architecture-centric approach to DevOps was critical for achieving strategic control over continuous big data value delivery for WBS.},
 author = {Hong-Mei Chen and Rick Kazman and Serge Haziyev},
 doi = {10.1109/tbdata.2016.2564982},
 journal = {{IEEE} Transactions on Big Data},
 month = {sep},
 number = {3},
 pages = {234--248},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Agile Big Data Analytics for Web-Based Systems: An Architecture-Centric Approach},
 url = {https://doi.org/10.1109%2Ftbdata.2016.2564982},
 volume = {2},
 year = {2016}
}

@inproceedings{Chen_2016,
 abstract = {},
 author = {Hong-Mei Chen and Rick Kazman and Serge Haziyev},
 booktitle = {2016 49th Hawaii International Conference on System Sciences ({HICSS})},
 doi = {10.1109/hicss.2016.665},
 month = {jan},
 publisher = {{IEEE}},
 title = {Agile Big Data Analytics Development: An Architecture-Centric Approach},
 url = {https://doi.org/10.1109%2Fhicss.2016.665},
 year = {2016}
}

@article{Chiasson_2009,
 abstract = {Abstract Action research (AR) has for many years been promoted and practised as one way to conduct field studies within the information systems (IS) discipline. Based on a review of articles published in leading journals, we explore how IS researchers practise AR. Our review suggests that AR lends itself strongly towards pluralist approaches which facilitate the production of both theoretical and practical knowledge. First, on the level of each study we analyse how research and problem-solving activities are mixed, in three ways: the research dominant, the problem-solving dominant and the interactive approaches. Second, in the context of the wider research programme in which the study is situated, we analyse how AR is mixed with other research methods, in two ways: the dominant and the sequential approaches. We argue that these pluralist practices of mixing types of research activities and types of research methods provide IS action researchers with a rich portfolio of approaches to knowledge production. This portfolio helps them address the risks involved in AR to ensure their efforts contribute to the literature as well as to practical problem-solving.},
 author = {Mike Chiasson and Matt Germonprez and Lars Mathiassen},
 doi = {10.1111/j.1365-2575.2008.00297.x},
 journal = {Information Systems Journal},
 month = {jan},
 number = {1},
 pages = {31--54},
 publisher = {Wiley},
 title = {Pluralist action research: a review of the information systems literature},
 url = {https://doi.org/10.1111%2Fj.1365-2575.2008.00297.x},
 volume = {19},
 year = {2009}
}

@article{Chowdhury_2013,
 abstract = {Remote diagnostics is expanding the business scope of vehicle manufacturers, ranging from products to services. In this paper, the authors focus on investigating the business challenges and opportunities related to the remote diagnostics of vehicles from an IT-based resource perspective. Remote diagnostics involves technology, human skills and intangibles. IT-based resources consist of physical IT infrastructure, human IT skills and IT-enabled intangibles. In this study, the authors find that remote diagnostics not only faces challenges in these three categories of IT-based resource, but also creates opportunities. One contribution of this paper is to provide an overview of the challenges and opportunities for business related to the technology. The paper also makes a contribution to information systems by shedding light on the discussion of digital infrastructure. It also highlights the application of IT-based resource perspective to find out the business challenges and opportunities of an emerging technology like remote diagnostics.},
 author = {Soumitra Chowdhury and Asif Akram},
 doi = {10.4018/jicthd.2013070105},
 journal = {International Journal of Information Communication Technologies and Human Development},
 month = {jul},
 number = {3},
 pages = {80--96},
 publisher = {{IGI} Global},
 title = {Challenges and Opportunities Related to Remote Diagnostics},
 url = {https://doi.org/10.4018%2Fjicthd.2013070105},
 volume = {5},
 year = {2013}
}

@article{Christiansen_2021,
 abstract = {Both organizations and the information technology (IT) community have long worked to overcome the common problem of dissatisfaction with IT investments’ outcomes in multiple ways. Much attention has been on users’ involvement in IT design, while users’ engagement in later further utilization of IT is less explored. This paper reports on action research (AR) that sought to stimulate local learning processes and increase the exploitation of a case-handling system. The experiment is done in a county administration where the senior management has, for some time, felt that the IT is not fully utilized. The local intervention was based on an awareness of a need to overcome defensive routines to establish communicative spaces to facilitate communication between various units with strong local identities. The AR project was carried out in three local interventions and presented as an experimental approach. We could not guarantee that the design could overcome the issues identified after the first round of interviews with senior management and department managers. The intervention process espoused various defensive routines, even some that the communicative space approach could not overcome. The outcomes from the three experiments are, therefore, mixed. The results indicate that creating communicative spaces is a viable approach to engaging users in systems development. Nevertheless, defensive routines, reluctant managers, and communities of practices hamper the development of communicative spaces.},
 author = {John K. Christiansen and Morten Wellendorf},
 doi = {10.1007/s11213-021-09556-x},
 journal = {Systemic Practice and Action Research},
 month = {jan},
 number = {6},
 pages = {713--750},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Exploring Opportunities with Experimental Use of Communicative Spaces to Overcome Defensive Routines and Increase Information Systems Utilization},
 url = {https://doi.org/10.1007%2Fs11213-021-09556-x},
 volume = {34},
 year = {2021}
}

@article{Christiansen_2021,
 abstract = {Both organizations and the information technology (IT) community have long worked to overcome the common problem of dissatisfaction with IT investments’ outcomes in multiple ways. Much attention has been on users’ involvement in IT design, while users’ engagement in later further utilization of IT is less explored. This paper reports on action research (AR) that sought to stimulate local learning processes and increase the exploitation of a case-handling system. The experiment is done in a county administration where the senior management has, for some time, felt that the IT is not fully utilized. The local intervention was based on an awareness of a need to overcome defensive routines to establish communicative spaces to facilitate communication between various units with strong local identities. The AR project was carried out in three local interventions and presented as an experimental approach. We could not guarantee that the design could overcome the issues identified after the first round of interviews with senior management and department managers. The intervention process espoused various defensive routines, even some that the communicative space approach could not overcome. The outcomes from the three experiments are, therefore, mixed. The results indicate that creating communicative spaces is a viable approach to engaging users in systems development. Nevertheless, defensive routines, reluctant managers, and communities of practices hamper the development of communicative spaces.},
 author = {John K. Christiansen and Morten Wellendorf},
 doi = {10.1007/s11213-021-09556-x},
 journal = {Systemic Practice and Action Research},
 month = {jan},
 number = {6},
 pages = {713--750},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Exploring Opportunities with Experimental Use of Communicative Spaces to Overcome Defensive Routines and Increase Information Systems Utilization},
 url = {https://doi.org/10.1007%2Fs11213-021-09556-x},
 volume = {34},
 year = {2021}
}

@article{Coghlan_2020,
 abstract = {This paper considers how an Action Design Research (ADR) research methodology can contribute to impactful research in sustainable tourism. ADR arguably combines the best of Action Research with Design Science, by solving an applied problem within its contextual setting (a feature of Action Research) and drawing wider lessons or universal principles from the solution (a feature of Design Science). It argues that approaches like ADR are required to address what is a fundamentally goal-oriented (through the very definition of sustainable tourism) area of research, and bridge the academic-practitioner divide. The paper presents an ADR case study on using technology to build the eco-literacy of tourists visiting Australia’s Great Barrier Reef. This natural attraction represents a highly complex ecosystem, in an educationally challenging (underwater) environment, surrounded by political and scientific controversy. The case study involves the creation of a virtual reality interpretive game (the artefact) to illustrate the four stages of ADR, namely, Problem Formulation; Build, Intervene, Evaluate; Reflect and Learn; Formalise Learning. The case study highlights the importance of ADR’s principles of “reciprocal shaping”, “mutually influencing roles” and “authentic and concurrent evaluation” to bridge the gap between practice and theory, and build impactful research that can support more sustainable tourism.},
 author = {Alexandra Coghlan},
 doi = {10.1080/09669582.2020.1838530},
 journal = {Journal of Sustainable Tourism},
 month = {nov},
 number = {9},
 pages = {2187--2206},
 publisher = {Informa {UK} Limited},
 title = {Mobilising knowledge: an action design research case study of using technology to safeguard an endangered nature-based tourism attraction},
 url = {https://doi.org/10.1080%2F09669582.2020.1838530},
 volume = {30},
 year = {2020}
}

@inproceedings{Connor_2009,
 abstract = {In this paper, we introduce the concept of the research-practice gap as it is perceived in the field of software requirements engineering. An analysis of this gap has shown that two key causes for the research-practice gap are lack of effective communication and the relatively light coverage of requirements engineering material in University programmes. We discuss the design and delivery of a masters course in software requirements engineering (SRE) that is designed to overcome some of the issues that have caused the research-practice gap. By encouraging students to share their experiences in a peer learning environment, we aim to improve shared understanding between students (many of whom are current industry practitioners) and researchers (including academic staff members) to improve the potential for effective collaborations, whilst simultaneously developing the requirements engineering skill sets of the enrolled students. Feedback from students in the course is discussed and directions for the future development of the curriculum and learning strategies are given.},
 author = {Andrew Mile Connor and Jim Buchan and Krassie Petrova},
 booktitle = {2009 Sixth International Conference on Information Technology: New Generations},
 doi = {10.1109/itng.2009.134},
 publisher = {{IEEE}},
 title = {Bridging the Research-Practice Gap in Requirements Engineering through Effective Teaching and Peer Learning},
 url = {https://doi.org/10.1109%2Fitng.2009.134},
 year = {2009}
}

@article{Crim_2011,
 abstract = {Competing Values Framework (CVF) has attracted attention in the organization literature but little is known about how competing values can inform development of voluntary organizations. Against this backdrop, we present an action research study into Right in the Community (RitC), a voluntary agency which provides services to developmentally disabled in Cobb County, Georgia. Collaborating with researchers and agency management, staff, and board, the study had a dual purpose: 1) develop agency’s identity, organization, management practices, and ability to plan for the future, and 2) adapt CVF to support development of voluntary organizations. Thus, we demonstrate the value of CVF for developing voluntary organizations by revealing how its dimensions of organizational focus, structural preference, and managerial concern positively informed the efforts at RitC. Also, tensions between heart and head were important and, therefore, in the context of voluntary organizations we propose to extend the CVF with a dimension of motivational trait.},
 author = {Timothy Crim and Louis Grabowski and Cathy S. Neher and Lars Mathiassen},
 doi = {10.2139/ssrn.1839832},
 journal = {{SSRN} Electronic Journal},
 publisher = {Elsevier {BV}},
 title = {An Investigation of Competing Values in Development of a Voluntary Organization},
 url = {https://doi.org/10.2139%2Fssrn.1839832},
 year = {2011}
}

@article{Cronholm_2012,
 abstract = {Information systems as an artefact-oriented discipline require a strong interaction between researchers, developers and users regarding design of, development of, and the study of the use of digital artefacts in social settings. During recent years, performing research in a design science research spirit has gained increasing interest. In larger scale design research endeavours, access to systems development capabilities becomes necessary. Such a unit, InnovationLab, was established in 2006 in a university setting in Sweden. In this paper we are investigating the five years’ experience of running this InnovationLab. Our findings point to an innovation lab being valuable for research in general and especially for design science research. However, in order to balance the business of an innovation lab, it will be necessary to provide services for other stakeholders (such as administrative units, teachers, and students) as a means for developing systems development capability aimed at supporting researchers.},
 author = {Stefan Cronholm and Hannes Göbel and Mikael Lind and Daniel Rudmark},
 doi = {10.1007/s10257-012-0199-3},
 journal = {Information Systems and e-Business Management},
 month = {sep},
 number = {3},
 pages = {335--355},
 publisher = {Springer Science and Business Media {LLC}},
 title = {The need for systems development capability in design science research: enabling researcher-systems developer collaboration},
 url = {https://doi.org/10.1007%2Fs10257-012-0199-3},
 volume = {11},
 year = {2012}
}

@article{Cronholm_2012,
 abstract = {Information systems as an artefact-oriented discipline require a strong interaction between researchers, developers and users regarding design of, development of, and the study of the use of digital artefacts in social settings. During recent years, performing research in a design science research spirit has gained increasing interest. In larger scale design research endeavours, access to systems development capabilities becomes necessary. Such a unit, InnovationLab, was established in 2006 in a university setting in Sweden. In this paper we are investigating the five years’ experience of running this InnovationLab. Our findings point to an innovation lab being valuable for research in general and especially for design science research. However, in order to balance the business of an innovation lab, it will be necessary to provide services for other stakeholders (such as administrative units, teachers, and students) as a means for developing systems development capability aimed at supporting researchers.},
 author = {Stefan Cronholm and Hannes Göbel and Mikael Lind and Daniel Rudmark},
 doi = {10.1007/s10257-012-0199-3},
 journal = {Information Systems and e-Business Management},
 month = {sep},
 number = {3},
 pages = {335--355},
 publisher = {Springer Science and Business Media {LLC}},
 title = {The need for systems development capability in design science research: enabling researcher-systems developer collaboration},
 url = {https://doi.org/10.1007%2Fs10257-012-0199-3},
 volume = {11},
 year = {2012}
}

@article{Cronholm_2022,
 abstract = {},
 author = {Stefan Cronholm and Hannes Göbel},
 doi = {10.1108/ijmpb-07-2021-0196},
 journal = {International Journal of Managing Projects in Business},
 month = {may},
 number = {8},
 pages = {19--47},
 publisher = {Emerald},
 title = {Action design research: integration of method support},
 url = {https://doi.org/10.1108%2Fijmpb-07-2021-0196},
 volume = {15},
 year = {2022}
}

@inproceedings{Cruzes_2016,
 abstract = {},
 author = {Daniela S. Cruzes and Nils B. Moe and Tore Dyba},
 booktitle = {2016 {IEEE} 11th International Conference on Global Software Engineering ({ICGSE})},
 doi = {10.1109/icgse.2016.27},
 month = {aug},
 publisher = {{IEEE}},
 title = {Communication between Developers and Testers in Distributed Continuous Agile Testing},
 url = {https://doi.org/10.1109%2Ficgse.2016.27},
 year = {2016}
}

@article{Davison_2004,
 abstract = {Despite the growing prominence of canonical action research (CAR) in the information systems discipline, a paucity of methodological guidance contin- ues to hamper those conducting and evaluating such studies. This article elicits a set of five principles and associated criteria to help assure both the rigor and the relevance of CAR in information systems. The first principle relates to the devel- opment of an agreement that facilitates collaboration between the action researcher and the client. The second principle is based upon a cyclical process model for action research that consists of five stages: diagnosis, planning, inter- vention, evaluation and reflection. Additional principles highlight the critical roles of theory, change through action, and the specification of learning in terms of impli- cations for both research and practice. The five principles are illustrated through the analysis of one recently published CAR study.},
 author = {Robert Davison and Maris G. Martinsons and Ned Kock},
 doi = {10.1111/j.1365-2575.2004.00162.x},
 journal = {Information Systems Journal},
 month = {jan},
 number = {1},
 pages = {65--86},
 publisher = {Wiley},
 title = {Principles of canonical action research},
 url = {https://doi.org/10.1111%2Fj.1365-2575.2004.00162.x},
 volume = {14},
 year = {2004}
}

@article{Denny_2016,
 abstract = {Introduction: E-learning collaboration in the Australian GP education and training sector represents one way to improve sustainability, innovation and reuse of existing data sources. However, few collaborative e-learning projects are currently undertaken within the sector, with previous joint ventures resulting in variable success. The purpose of this study was to investigate the potential of increased e-learning collaboration, with specific focus on exploration of the beliefs and perceptions of key stakeholders within the GP education and training sector.},
 author = {Bianca Denny and Andrea Chester and James Brown},
 doi = {10.11157/fohpe.v17i1.121},
 journal = {Focus on Health Professional Education: A Multi-Professional Journal},
 month = {apr},
 number = {1},
 pages = {45},
 publisher = {University of Otago Library},
 title = {{\textquotedblleft}Let's not reinvent the wheel{\textquotedblright}: A qualitative investigation of collaboration in the Australian {GP} education and training sector},
 url = {https://doi.org/10.11157%2Ffohpe.v17i1.121},
 volume = {17},
 year = {2016}
}

@inproceedings{Dini_2016,
 abstract = {},
 author = {Alfatika Aunuriella Dini and Oystein Saebo},
 booktitle = {2016 49th Hawaii International Conference on System Sciences ({HICSS})},
 doi = {10.1109/hicss.2016.339},
 month = {jan},
 publisher = {{IEEE}},
 title = {The Current State of Social Media Research for {eParticipation} in Developing Countries: A Literature Review},
 url = {https://doi.org/10.1109%2Fhicss.2016.339},
 year = {2016}
}

@article{Dittrich_2007,
 abstract = {The development of methods tools and process improvements is best to be based on the understanding of the development practice
to be supported. Qualitative research has been proposed as a method for understanding the social and cooperative aspects of
software development. However, qualitative research is not easily combined with the improvement orientation of an engineering
discipline. During the last 6 years, we have applied an approach we call ‘cooperative method development’, which combines
qualitative social science fieldwork, with problem-oriented method, technique and process improvement. The action research 
based approach focusing on shop floor software development practices allows an understanding of how contextual contingencies
influence the deployment and applicability of methods, processes and techniques. This article summarizes the experiences and
discusses the further development of this approach based on several research projects in cooperation with industrial partners.},
 author = {Yvonne Dittrich and Kari Rönkkö and Jeanette Eriksson and Christina Hansson and Olle Lindeberg},
 doi = {10.1007/s10664-007-9057-1},
 journal = {Empirical Software Engineering},
 month = {dec},
 number = {3},
 pages = {231--260},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Cooperative method development},
 url = {https://doi.org/10.1007%2Fs10664-007-9057-1},
 volume = {13},
 year = {2007}
}

@article{Dittrich_2007,
 abstract = {The development of methods tools and process improvements is best to be based on the understanding of the development practice
to be supported. Qualitative research has been proposed as a method for understanding the social and cooperative aspects of
software development. However, qualitative research is not easily combined with the improvement orientation of an engineering
discipline. During the last 6 years, we have applied an approach we call ‘cooperative method development’, which combines
qualitative social science fieldwork, with problem-oriented method, technique and process improvement. The action research 
based approach focusing on shop floor software development practices allows an understanding of how contextual contingencies
influence the deployment and applicability of methods, processes and techniques. This article summarizes the experiences and
discusses the further development of this approach based on several research projects in cooperation with industrial partners.},
 author = {Yvonne Dittrich and Kari Rönkkö and Jeanette Eriksson and Christina Hansson and Olle Lindeberg},
 doi = {10.1007/s10664-007-9057-1},
 journal = {Empirical Software Engineering},
 month = {dec},
 number = {3},
 pages = {231--260},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Cooperative method development},
 url = {https://doi.org/10.1007%2Fs10664-007-9057-1},
 volume = {13},
 year = {2007}
}

@inproceedings{Dittrich_2018,
 abstract = {Continuous Software Engineering (CSE)---continuous development and deployment of software---and DevOps---the close cooperation or integration of operations and software development---is about to change how software is developed. Together with the tighter integration of development and operations also with usage this will change coordination and collaboration both between IT professionals and between developers and users. In this short paper, we discuss the CHASE dimension of three core research themes that begin to crystallize in literature. This position paper is intended as a `call to arms' for the CHASE community to study CSE.},
 author = {Yvonne Dittrich and Jacob N{\o}rbjerg and Paolo Tell and Lars Bendix},
 booktitle = {Proceedings of the 11th International Workshop on Cooperative and Human Aspects of Software Engineering},
 doi = {10.1145/3195836.3195856},
 month = {may},
 publisher = {{ACM}},
 title = {Researching cooperation and communication in continuous software engineering},
 url = {https://doi.org/10.1145%2F3195836.3195856},
 year = {2018}
}

@article{Domańska_2018,
 abstract = {},
 author = {Domańska, Agnieszka},
 doi = {10.23762/FSO_VOL6_NO4_6},
 issn = {2300-5947},
 journal = {Forum Scientiae Oeconomia},
 number = {No4},
 pages = {81–94},
 place = {PL},
 publisher = {WSB University},
 title = {Cooperation between knowledge-based institutions and business: empirical studies and network theories},
 url = {https://doi.org/10.23762/FSO_VOL6_NO4_6},
 year = {2018}
}

@article{Dremel_2020,
 abstract = {The ability to generate business-relevant information from data and to exploit it to improve business processes, decision-making, products, and services (business analytics) is a key success factor for businesses today. Answering the call for further research on success-relevant practices and instruments for managing business analytics, we report on the results of a three-year action design research (ADR) project at a global car manufacturer. Drawing on the socio-technical systems theory, we identify seven meta-requirements and specify four principles for the design of an instrument to manage Analytics-as-a-Service (AaaS) portfolios. Our results reinforce the importance of coordinating different socio-technical components in business analytics initiatives and demonstrate how concrete management instruments, such as a proposed portfolio management tool, contribute to socio-technical alignment. For practitioners, the documented design components provide guidance on how to design and implement similar instruments that support the systematic management of AaaS portfolios.},
 author = {Christian Dremel and Emanuel Stoeckli and Jochen Wulf},
 doi = {10.1080/2573234x.2020.1740616},
 journal = {Journal of Business Analytics},
 month = {jan},
 number = {1},
 pages = {1--16},
 publisher = {Informa {UK} Limited},
 title = {Management of analytics-as-a-service - results from an action design research project},
 url = {https://doi.org/10.1080%2F2573234x.2020.1740616},
 volume = {3},
 year = {2020}
}

@article{Dueholm_M_ller_2013,
 abstract = {},
 author = {Sune Dueholm Müller and Peter Axel Nielsen},
 doi = {10.1108/itp-03-2013-0052},
 journal = {Information Technology {\&}amp$\mathsemicolon$ People},
 month = {may},
 number = {2},
 pages = {146--171},
 publisher = {Emerald},
 title = {Competing values in software process improvement: a study of cultural profiles},
 url = {https://doi.org/10.1108%2Fitp-03-2013-0052},
 volume = {26},
 year = {2013}
}

@article{Dueholm_Mu_ller_2020,
 abstract = {},
 author = {Sune Dueholm Müller and   and Lars Mathiassen and Carol Saunders and   and   and},
 doi = {10.17705/1jais.00591},
 journal = {Journal of the Association for Information Systems},
 pages = {23--49},
 publisher = {Association for Information Systems},
 title = {Pluralist Theory Building: A Methodology for Generalizing from Data to Theory},
 url = {https://doi.org/10.17705%2F1jais.00591},
 year = {2020}
}

@incollection{Efeo_lu_2013,
 abstract = {This paper outlines an artifact building and evaluation proposal. Design Science Research (DSR) studies usually consider encapsulated artifact that have relationships with other artifacts. The solution prototype as a composed artifact demands for a more comprehensive consideration in its systematic environment. The solution prototype that is composed from blending product and service prototype has particular impacts on the dualism of DSR's "Build" and "Evaluate". Since the mix between product and service prototyping can be varied, there is a demand for a more agile and iterative framework. Van de Ven's research framework seems to fit this purpose. Van de Ven allows for an iterative research approach to problem solving with flexible starting point. The research activity is the result between the iteration of two dimensions. This framework focuses on the natural evaluation, particularly on ex-ante validation. A correlation between Hevner's and Van de Vens framework is analyzed, and finally the proposal is presented.},
 author = {Ark{\i}n Efeo{\u{g}}lu and Charles M{\o}ller and Michel S{\'{e}}ri{\'{e}}},
 booktitle = {Design Science: Perspectives from Europe},
 doi = {10.1007/978-3-319-04090-5_7},
 pages = {61--75},
 publisher = {Springer International Publishing},
 title = {Solution Prototype: A Composed Artifact as Innovation Carrier},
 url = {https://doi.org/10.1007%2F978-3-319-04090-5_7},
 year = {2013}
}

@inproceedings{Eschler_2015,
 abstract = {In this paper, we present a practice research strategy for collaboration with practitioners to execute valid and reliable research in the field while providing valuable, theory-based insight to practitioners who sponsor the research. This approach addresses the dual needs of researchers, who must gather data in real time and meet requirements of academic rigor, while maximizing the value and relevance of the work for practitioner collaborators. We demonstrate the approach with a case study of a Fortune 30 company undertaking an extensive organizational change initiative. During our 18-month research engagement with the company, we used a theory triangulation approach to guide our inquiry and analysis, iterating on emergent findings to articulate actionable recommendations for the practitioners working on the phenomena of interest. By describing our research design, we offer one method for framing 'real world' research in a way that maximizes the benefit to researchers and practitioners.},
 author = {Jordan Eschler and Hazel Taylor and Shrikant Palkar},
 booktitle = {2015 48th Hawaii International Conference on System Sciences},
 doi = {10.1109/hicss.2015.556},
 month = {jan},
 publisher = {{IEEE}},
 title = {Researching Dynamic Phenomena in Complex Organizations: Collaborative Practice Research with Theory Triangulation},
 url = {https://doi.org/10.1109%2Fhicss.2015.556},
 year = {2015}
}

@inproceedings{Fincher_2005,
 abstract = {One indication of the maturation of Computer Science Education as a research-based discipline is the recent emergence of several large-scale studies spanning multiple institutions. This paper examines a "family" of these multi-institutional, multi-national studies, detailing core elements and points of difference in both study design and the organization of the research team, and highlighting the costs and benefits associated with the different approaches.},
 author = {Sally Fincher and Raymond Lister and Tony Clear and Anthony Robins and Josh Tenenberg and Marian Petre},
 booktitle = {Proceedings of the 2005 international workshop on Computing education research  - {ICER} {\textquotesingle}05},
 doi = {10.1145/1089786.1089797},
 publisher = {{ACM} Press},
 title = {Multi-institutional, multi-national studies in {CSEd} Research},
 url = {https://doi.org/10.1145%2F1089786.1089797},
 year = {2005}
}

@incollection{Frederiksen,
 abstract = {There is an extensive literature on design and implementation of software metrics programs, but our knowledge on how to improve and sustain metrics programs that are already implemented is limited. This paper reports from an action research effort to improve metrics practices in a large software organization. We adopt a comprehensive organizational change model to compare and contrast metrics practices before and after the intervention. Our analysis views the metrics program in its organizational context emphasizing management practices, organizational structures, people, technical systems, and underlying metrics rationale. The paper provides insights into tactics for improving software metrics practices, it provides a specific approach to assess such improvements, and it leads to suggestions for how to make software metrics improvements sustainable. Full Text at Springer, may require registration or fee},
 author = {Helle Damborg Frederiksen and Lars Mathiassen},
 booktitle = {{IT} Innovation for Adaptability and Competitiveness},
 doi = {10.1007/1-4020-8000-x_6},
 pages = {93--115},
 publisher = {Kluwer Academic Publishers},
 title = {Assessing Improvements of Software Metrics Practices},
 url = {https://doi.org/10.1007%2F1-4020-8000-x_6}
}

@incollection{Frederiksen_2002,
 abstract = {The conventional wisdom within software engineering is that metrics are useful in managing and improving software organizations and the literature on software engineering is rich on advice and experiences on how to successfully design and implement metrics programs. But we know relatively little about the opportunities and challenges related to practical use of such programs in managing and improving software operations. The paper reports from a software organization that has implemented elaborate metrics programs. A comprehensive action research effort has been established 1) to evaluate and develop approaches to support systematic diagnosis of metrics practice, and 2) to learn about challenges and possibilities related to improvement of current metrics practices. We present and discuss insights from the initial diagnosis in the light of theoretical views on information systems for management and improvement of software organizations.},
 author = {Helle Damborg Frederiksen and Lars Mathiassen},
 booktitle = {New Perspectives on Information Systems Development},
 doi = {10.1007/978-1-4615-0595-2_3},
 pages = {29--42},
 publisher = {Springer {US}},
 title = {Diagnosing Metrics Practices in a Software Organization},
 url = {https://doi.org/10.1007%2F978-1-4615-0595-2_3},
 year = {2002}
}

@article{Frederiksen_2005,
 abstract = {This paper presents an approach to enhance managerial usage of software metrics programs. The approach combines an organizational problem-solving process with a view on metrics programs as information media. A number of information-centric views are developed to engage key stakeholders in debating current metrics practices and identifying possible improvements. We present our experiences and results of using the approach at Software Inc., we offer comparisons to related approaches to software metrics, and we discuss how to use the information-centric approach for improvement purposes.},
 author = {H.D. Frederiksen and L. Mathiassen},
 doi = {10.1109/tem.2005.850737},
 journal = {{IEEE} Transactions on Engineering Management},
 month = {aug},
 number = {3},
 pages = {350--362},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Information-Centric Assessment of Software Metrics Practices},
 url = {https://doi.org/10.1109%2Ftem.2005.850737},
 volume = {52},
 year = {2005}
}

@article{Frederiksen_2008,
 abstract = {},
 author = {Helle Damborg Frederiksen and Lars Mathiassen},
 doi = {10.1109/tem.2008.2005547},
 journal = {{IEEE} Transactions on Engineering Management},
 month = {nov},
 number = {4},
 pages = {602--616},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {A Contextual Approach to Improving Software Metrics Practices},
 url = {https://doi.org/10.1109%2Ftem.2008.2005547},
 volume = {55},
 year = {2008}
}

@article{Frisk_2014,
 abstract = {The literature has traditionally focused on how decision makers choose among alternatives based on rational behaviors, organizational politics, and organized anarchies. However, there is little research on decision making as a creative process where managers discover and evaluate alternatives. We address this gap by proposing a design approach to transform decisions in organizations. The approach views decision making as a creative and adaptive process in which managers recursively collect and interpret heterogeneous evidence, explore and test different ideas, and discover and evaluate alternatives. While the approach is rooted in the know-how of the involved stakeholders, its underpinning design attitude invites managers to better understand possible alternatives based on analyses of structured as well as unstructured data. To assess its utility, we applied the approach to IT investment evaluations through a Collaborative Practice Research project involving Swedish public organizations. Building on the project findings, we discuss the proposed approach and spell out its implications for transforming decision making in organizations.},
 author = {Jane Elisabeth Frisk and Rikard Lindgren and Lars Mathiassen},
 doi = {10.1057/ejis.2013.13},
 journal = {European Journal of Information Systems},
 month = {jul},
 number = {4},
 pages = {442--461},
 publisher = {Informa {UK} Limited},
 title = {Design matters for decision makers: Discovering {IT} investment alternatives},
 url = {https://doi.org/10.1057%2Fejis.2013.13},
 volume = {23},
 year = {2014}
}

@article{Frisk_2015,
 abstract = {Failed or partially failed information systems (IS) investments continue to be a problem in both public and private sectors. Although there are many causes of such failure, lack of clarity about the goals and benefits expected and how they are to be realized is one of the major contributors. This is particularly so in the public sector where the purpose of IS investment is not to increase profits, but to accomplish social and political goals. One way of reducing failure and wastage rates is to have ex-ante evaluation. Over the past three decades IS research has proposed a plethora of new theoretical approaches to improving ex-ante evaluation, but with a few exceptions, these have had little impact on practice. This paper presents a way to address this gap between theory and practice. It proposes a way in which managers can improve IS investment evaluation by changing perspective from a focus on traditional analytic tools towards a design attitude that seeks to develop multi-criteria IS evaluation approach based on contextual experience and prior knowledge. The proposed approach enables organizations to design and develop a value case using value dials as a common language that defines what constitutes the value of particular IS investments for a specific context. To assess its effectiveness, this approach was applied using a multilevel dialogical action research project within a Swedish public organization. The findings show that managers in this organization significantly improved the effectiveness of their evaluation of IS investments.},
 author = {Jane Elisabeth Frisk and Frank Bannister and Rikard Lindgren},
 doi = {10.1057/jit.2014.9},
 journal = {Journal of Information Technology},
 month = {sep},
 number = {3},
 pages = {276--292},
 publisher = {{SAGE} Publications},
 title = {Evaluation of Information System Investments: A Value Dials approach to closing the theory-practice gap},
 url = {https://doi.org/10.1057%2Fjit.2014.9},
 volume = {30},
 year = {2015}
}

@article{Frisk_2017,
 abstract = {Purpose

Evolving digital technologies continue to enable new ways to collect and analyze data and this has led some researchers to claim that skillful use of data analytics and big data can radically improve a company’s performance, but that in order to achieve such improvements managers need to change their decision-making culture and to increase the degree of collaboration in the decision-making process. The purpose of this paper is to create an increased understanding of how a decision-making culture can be changed by using a design approach.

Design/methodology/approach

The paper presents an action research project in which the authors use a design approach.

Findings

By adopting a design approach organizations can change their decision-making culture, increase the degree of collaboration and also reduce the influence of power and politics on their decision-making.

Research limitations/implications

This paper proposes a new approach to changing a decision-making culture.

Practical implications

Using data analytics and big data, a design approach can support organizations change their decision-making culture resulting in better and more effective decisions.

Originality/value

This paper bridges design and decision-making theory in a novel approach to an old problem.},
 author = {Jane Elisabeth Frisk and Frank Bannister},
 doi = {10.1108/md-07-2016-0460},
 journal = {Management Decision},
 month = {nov},
 number = {10},
 pages = {2074--2088},
 publisher = {Emerald},
 title = {Improving the use of analytics and big data by changing the decision-making culture},
 url = {https://doi.org/10.1108%2Fmd-07-2016-0460},
 volume = {55},
 year = {2017}
}

@incollection{Germonprez_2004,
 abstract = {Action research has for many years been promoted and practiced as one way to conduct empirical research within the Information Systems discipline. While the approach can lead to highly relevant contributions, researchers are warned against the many risks involved in action research.Based on successful cases of Information Systems action research we explore the role played by conventional research methods in developing and presenting research contributions. The cases suggest that action research lends itself strongly toward multi-method approaches and facilitates the creation of multicontribution projects. We identify two approaches to mixing action research and conventional research methodsthe planned and the emergent approachesand we argue that action research can be adopted in ways that are no more risky than other conventional approaches to Information Systems research. Full Text at Springer, may require registration or fee},
 author = {Matt Germonprez and Lars Mathiassen},
 booktitle = {Information Systems Research},
 doi = {10.1007/1-4020-8095-6_19},
 pages = {335--352},
 publisher = {Springer {US}},
 title = {The Role of Conventional Research Methods in Information Systems Action Research},
 url = {https://doi.org/10.1007%2F1-4020-8095-6_19},
 year = {2004}
}

@article{Goldkuhl_2012,
 abstract = {Qualitative research is often associated with interpretivism, but alternatives do exist. Besides critical research and sometimes positivism, qualitative research in information systems can be performed following a paradigm of pragmatism. This paradigm is associated with action, intervention and constructive knowledge. This paper has picked out interpretivism and pragmatism as two possible and important research paradigms for qualitative research in information systems. It clarifies each paradigm in an ideal-typical fashion and then conducts a comparison revealing commonalities and differences. It is stated that a qualitative researcher must either adopt an interpretive stance aiming towards an understanding that is appreciated for being interesting; or a pragmatist stance aiming for constructive knowledge that is appreciated for being useful in action. The possibilities of combining pragmatism and interpretivism in qualitative research in information systems are analysed. A research case (conducted through action research (AR) and design research (DR)) that combines interpretivism and pragmatism is used as an illustration. It is stated in the paper that pragmatism has influenced IS research to a fairly large extent, albeit in a rather implicit way. The paradigmatic foundations are seldom known and explicated. This paper contributes to a further clarification of pragmatism as an explicit research paradigm for qualitative research in information systems. Pragmatism is considered an appropriate paradigm for AR and DR.},
 author = {Göran Goldkuhl},
 doi = {10.1057/ejis.2011.54},
 journal = {European Journal of Information Systems},
 month = {mar},
 number = {2},
 pages = {135--146},
 publisher = {Informa {UK} Limited},
 title = {Pragmatism $\less$i$\greater$vs$\less$/i$\greater$ interpretivism in qualitative information systems research},
 url = {https://doi.org/10.1057%2Fejis.2011.54},
 volume = {21},
 year = {2012}
}

@incollection{Goldkuhl_2018,
 abstract = {There exist different types or genres of design science research (DSR) in information systems, like laboratory-oriented and practice-oriented DSR. This paper investigates arguments for a practice-oriented approach to DSR. It uses the research approach of practice research as a starting point to elaborate on a practice-oriented DSR approach we label Practice Design Research (PDR). In doing so, we address two unresolved issues in IS DSR: Theorizing and evaluation. PDR consists of two inter-related sub-activities: theorizing and situational design inquiry. The conduct of situational design inquiry is described as iterative cycles of (1) pre-evaluate, (2) plan & design, (3) test & intervene and (4) post-evaluate. We justify the foundations of these iterative sub-activities/cycles through a theoretically informed argument based on pragmatist philosophy and practice theory.},
 author = {Göran Goldkuhl and Jonas Sjöström},
 booktitle = {Designing for a Digital and Globalized World},
 doi = {10.1007/978-3-319-91800-6_5},
 pages = {67--81},
 publisher = {Springer International Publishing},
 title = {Design Science in the Field: Practice Design Research},
 url = {https://doi.org/10.1007%2F978-3-319-91800-6_5},
 year = {2018}
}

@article{Grabowski_2014,
 abstract = {Although the widely used Competing Values Framework (CVF) has attracted considerable attention in the literature and has proven useful as an approach to organizational effectiveness, we know little about how it applies to voluntary organizations. We therefore combined CVF with rigorous action research methodology to analyze the organizational effectiveness of Right in the Community (RitC), a voluntary agency serving the developmentally disabled. As our results show, CVF’s three dimensions of organizational focus, structural preference, and managerial concern helped us improve the organization’s management of scarce resources, organizational structure and governance, and innovative capabilities. During the collaboration, we also observed tensions between heart and head that were particularly relevant for improving organizational effectiveness at RitC. We therefore propose extending CVF for voluntary organizations with a fourth dimension: motivational trait.},
 author = {Louis Grabowski and Cathy Neher and Timothy Crim and Lars Mathiassen},
 doi = {10.1177/0899764014546488},
 journal = {Nonprofit and Voluntary Sector Quarterly},
 month = {sep},
 number = {5},
 pages = {908--923},
 publisher = {{SAGE} Publications},
 title = {Competing Values Framework Application to Organizational Effectiveness in Voluntary Organizations},
 url = {https://doi.org/10.1177%2F0899764014546488},
 volume = {44},
 year = {2014}
}

@article{Guerrero_2021,
 abstract = {},
 author = {Maribel Guerrero},
 doi = {10.1561/0300000097},
 journal = {Foundations and Trends{\textregistered} in Entrepreneurship},
 number = {5{\textendash}6},
 pages = {436--650},
 publisher = {Now Publishers},
 title = {Ambidexterity and Entrepreneurship Studies: A Literature Review and Research Agenda},
 url = {https://doi.org/10.1561%2F0300000097},
 volume = {17},
 year = {2021}
}

@incollection{Haj_Bolouri_2019,
 abstract = {This paper highlights Work-Integrated Learning (WIL) as an outcome of using Action Design Research (ADR) in practice. We argue that ADR is a subtype of Design Science Research (DSR) and a prominent method for facilitating mutually beneficial collaboration between academia and practice. Subsequently, we tie our work around ADR and WIL to the Scandinavian school of IS-research and worker participation, by emphasizing reflective practice on both researcher and practitioner side. We demonstrate this through two empirical cases and four case episodes. Consequently, the cases highlight building, intervention, and evaluation in the areas of civic orientation and county administration. The narrative around each case focuses on ADR-activities that mediate reflection and learning through iterative cycles. Outcomes from the cases are reported as WIL-outcomes and finally, we conclude this paper by briefly suggesting two implications for future relevant research.},
 author = {Amir Haj-Bolouri and Christian Master Östlund and Matti Rossi and Lars Svensson},
 booktitle = {Lecture Notes in Computer Science},
 doi = {10.1007/978-3-030-19504-5_7},
 pages = {92--107},
 publisher = {Springer International Publishing},
 title = {Work-Integrated Learning as an Outcome of Using Action Design Research in Practice},
 url = {https://doi.org/10.1007%2F978-3-030-19504-5_7},
 year = {2019}
}

@inproceedings{Halonen_2007,
 abstract = {This research focuses on the change process that led to a digitized information system in academia. The development was carried out in a project where the participants represented their universities. The biggest issue to manage was to define the electronic process that was to be coded to support student mobility between universities. Action research was chosen as the research method because of the strong involvement of the researcher in the case. The output was evaluated satisfied, even excellent by the users and the goal was achieved despite minor knowledge about designing information systems in the project group.},
 author = {Raija Halonen},
 booktitle = {2006 1st International Conference on Digital Information Management},
 doi = {10.1109/icdim.2007.369222},
 month = {apr},
 publisher = {{IEEE}},
 title = {Digitizing Information Management From paper forms to electronic information system},
 url = {https://doi.org/10.1109%2Ficdim.2007.369222},
 year = {2007}
}

@article{Halonen_2008,
 abstract = {This paper discusses the growth process during which a researcher grew to become a project manager. Besides being a description of the growth process of the researcher, this article considers the change that was seen in the process of student mobility. The breeding ground of this growth process was an information system implementation that was carried out by several universities, and by their student affairs offices in particular. The research method in this study is action research with a case study. Due to the subjective nature of the research goal, action learning is emphasised. The research material is mainly gathered from a personal diary written by the researcher. This real diary, detailing the project’s ups and downs, encapsulates the reflections of the researcher. Furthermore, the outcome of the information system project proves that there have also been changes in the process of student mobility managed by the student affairs officials.},
 author = {Raija Halonen},
 doi = {10.1080/14623940701816691},
 journal = {Reflective Practice},
 month = {feb},
 number = {1},
 pages = {89--99},
 publisher = {Informa {UK} Limited},
 title = {Action learning with an information system project: subjective reflections},
 url = {https://doi.org/10.1080%2F14623940701816691},
 volume = {9},
 year = {2008}
}

@incollection{Hansen_2004,
 abstract = {Knowledge is a key parameter for software companies’ survival, as the ability to continuously become better at producing services
relies on the organisation’s abilities to develop and utilise the intellectual competencies, which its employees possess.
These abilities depend highly on the organisation’s capability to share knowledge and thus on the way knowledge flows in the
organisation. In this paper we present a knowledge management perspective on software process improvement, and describe a
technique for mapping the organisational knowledge flows in a software company. The results show that the technique successfully
helps the organisation to select relevant focus areas for planning future improvement initiatives. The study further explains
four distinct critical situations, which can be identified in a knowledge map; Hubs, Black Holes, Springs, and Missing Links.
Each covers potential problems in the organisational flows and therefore can provide guidance for organisational process improvements.},
 author = {Bo Hansen Hansen and Karlheinz Kautz},
 booktitle = {Lecture Notes in Computer Science},
 doi = {10.1007/978-3-540-30181-3_12},
 pages = {126--137},
 publisher = {Springer Berlin Heidelberg},
 title = {Knowledge Mapping: A Technique for Identifying Knowledge Flows in Software Organisations},
 url = {https://doi.org/10.1007%2F978-3-540-30181-3_12},
 year = {2004}
}

@article{Hansen_2017,
 abstract = {As organizations increasingly invest in IT-enabled innovation, practitioners become dependent on IT project portfolio management to mitigate risks generated from multiple projects. However, our knowledge about IT project portfolio governance practices and how interactions between different structural arrangements enable or hinder effective portfolio management is limited. Against that backdrop, we report a case study of IT project portfolio governance in a Danish municipality. Drawing on work design theory (WDT), we identify three types of governace problems—hierarchical decomposition, modularity, and complex network problems—and we uncovencr the network of observed governance problems in the municipality’s portfolio management practices. As a result, we offer two contributions: a detailed empirical account of IT project portfolio governance, and a demonstration of how WDT can help explain problems in IT project portfolio governance practices. In conclusion, we discuss how these results may inform future research and help organizations improve governance practices in similar contexts.},
 author = {Lars Kristian Hansen and Pernille Kr{\ae}mmergaard and Lars Mathiassen},
 doi = {10.1080/15228053.2017.1338072},
 journal = {Journal of Information Technology Case and Application Research},
 month = {apr},
 number = {2},
 pages = {81--101},
 publisher = {Informa {UK} Limited},
 title = {{IT} project portfolio governance practice: An investigation into work design problems},
 url = {https://doi.org/10.1080%2F15228053.2017.1338072},
 volume = {19},
 year = {2017}
}

@article{Hardless_2007,
 abstract = {Purpose
This paper aims to inform the design of competence development systems for project management, based on a situated learning design framework.

Design/methodology/approach
An interpretive action research study of a group support system (GSS) (“e‐discussion”) for co‐present knowledge sharing, applied in a corporate context to promote the development of project management competence.

Findings
An in‐depth qualitative description finds the way that “e‐discussion” supported and structured group interaction.

Research limitations/implications
Broader findings pertaining to the underlying situated learning design framework are not presented.

Practical implications
The paper offers a practical method to support development of project management competence and thoughts about possible modifications in its implementation.

Originality/value
The paper addresses research needs for improved understanding of competence development systems; design frameworks and design concepts based on situated learning theory; approaches to improve information technology project management practices through competence development; and interpretive research about GSSs.},
 author = {Christian B. Hardless},
 doi = {10.1108/14637150710740446},
 journal = {Business Process Management Journal},
 month = {apr},
 number = {2},
 pages = {173--192},
 publisher = {Emerald},
 title = {{\textquotedblleft}E-discussion{\textquotedblright}: a group support system for co-present knowledge sharing},
 url = {https://doi.org/10.1108%2F14637150710740446},
 volume = {13},
 year = {2007}
}

@inproceedings{Hattinger_2020,
 abstract = {This article departure from the effects that inter-organizational collaboration brings for the participating partners, specifically from design-related activities of e-learning courses and co-production. The research focus is on critical factors for inter-organizational collaborative e-learning and co-production between university and industry. We describe the process of a six-year longitudinal collaborative action research project including six cases and three phases, initialization, implementation and dissemination. The analysis is conducted from a multi-stakeholder perspective; managers, teachers, and practitioners. Overall aim is to reach for a sustainable collaborative competence e-learning model (CCeM) that will increase industrial employees’ competences. Main contribution is that co-production of knowledge entails three levels of activities among actors; to have insight into the purposes and practices of others, the capacity to transform the problems of a practice and together build common knowledge and finally the capacity of mutually co-produce knowledge acted upon in practice towards transformations in the workplace.},
 author = {Monika Hattinger and Kristina Eriksson},
 booktitle = {Proceedings of the Annual Hawaii International Conference on System Sciences},
 doi = {10.24251/hicss.2020.011},
 publisher = {Hawaii International Conference on System Sciences},
 title = {Mind the Gap: A Collaborative Competence E-learning Model between University and Industry},
 url = {https://doi.org/10.24251%2Fhicss.2020.011},
 year = {2020}
}

@incollection{Henfridsson,
 abstract = {This chapter explores the nature of action research in new product development. Characterized by pressures associated with product concept effectiveness and process performance, new product development is a challenging but rewarding setting for action research. By re-assessing a previously reported action research study in the automotive industry, we identify and analyze characteristics of managing such research in new product development. On the basis of this assessment, the chapter complements previous research on managing action research projects with specific insights applicable to settings in which new technologies are being built and tried out.},
 author = {Ola Henfridsson and Rikard Lindgren},
 booktitle = {Information Systems Action Research},
 doi = {10.1007/978-0-387-36060-7_8},
 pages = {193--216},
 publisher = {Springer {US}},
 title = {Action Research in New Product Development},
 url = {https://doi.org/10.1007%2F978-0-387-36060-7_8}
}

@article{Henningsson_2010,
 abstract = {},
 author = {Stefan Henningsson and Boriana Rukanova and Stefan Hrastinski},
 doi = {10.17705/1cais.02742},
 journal = {Communications of the Association for Information Systems},
 publisher = {Association for Information Systems},
 title = {Resource Dependencies in Socio-Technical Information Systems Design Research},
 url = {https://doi.org/10.17705%2F1cais.02742},
 volume = {27},
 year = {2010}
}

@article{Hernandez_Cazares_2019,
 abstract = {},
 author = {Rafael Hernandez-Cazares and Late Lawson-Lartego and Lars Mathiassen and Sergio Quinonez-Romandia},
 doi = {10.1108/jbim-01-2019-0042},
 journal = {Journal of Business {\&}amp$\mathsemicolon$ Industrial Marketing},
 month = {sep},
 number = {10},
 pages = {1475--1489},
 publisher = {Emerald},
 title = {Strategizing for the bottom of the pyramid: an action research into a Mexican agribusiness},
 url = {https://doi.org/10.1108%2Fjbim-01-2019-0042},
 volume = {35},
 year = {2019}
}

@incollection{Holden_Iversen,
 abstract = {This chapter shows how action research can help practitioners develop IT risk management approaches that are tailored to their organization and the specific issues they face. Based on literature and practical experience, the authors present a method for developing risk management approaches to use in real-world innovation projects. The chapter illustrates the method by presenting the results of developing a risk management approach for software process improvement projects in a software organization.},
 author = {Jakob Holden Iversen and Lars Mathiassen and Peter Axel Nielsen},
 booktitle = {Selected Readings on Information Technology Management},
 doi = {10.4018/978-1-60566-092-9.ch006},
 pages = {94--109},
 publisher = {{IGI} Global},
 title = {Building {IT} Risk Management Approaches},
 url = {https://doi.org/10.4018%2F978-1-60566-092-9.ch006}
}

@article{Holmberg_2009,
 abstract = {Traditionally, software process improvement (SPI) has been approached from a problem-oriented perspective commonly using models such as the IDEAL and the DMAIC. In contrast, appreciative inquiry is a strength-based approach focusing on bringing forward the best in people and organizations to achieve successful change. While there is a significant research on SPI initiatives and the use of problem-oriented approaches there is limited knowledge about the way in which SPI initiatives unfolds when adopting a strength-based approach. Therefore, it is interesting to explore how software organizations familiar with problem-solving approaches experience the use of a strength-based approach. We present an action research study conducted at the Swedish telecom company Ericsson using appreciative inquiry to facilitate an SPI initiative implementing a new process and tool for the requirements and test case management. While the SPI initiative was considered successful, important lessons were learned regarding the use of appreciative inquiry. We conclude that the use of appreciative inquiry does not eliminate the dependence on other well-known key factors for SPI success. Also, our study indicates that the problem-solving mind-set, i.e. the satisfaction of identifying and solving problems, found among many software engineers familiar with problem-oriented approaches may impede the use of appreciative inquiry. Copyright © 2008 John Wiley & Sons, Ltd. All authors have made an equal contribution to the paper.},
 author = {Lena Holmberg and Agneta Nilsson and Helena Holmström Olsson and Anna Börjesson Sandberg},
 doi = {10.1002/spip.407},
 journal = {Software Process: Improvement and Practice},
 month = {mar},
 number = {2},
 pages = {107--125},
 publisher = {Wiley},
 title = {Appreciative inquiry in software process improvement},
 url = {https://doi.org/10.1002%2Fspip.407},
 volume = {14},
 year = {2009}
}

@incollection{Holmqvist,
 abstract = {This case is based on sharing empirical experiences and results from several years of collaborative research. The focus is on implementation projects with solutions for spare parts distribution in the automotive industry.
The origin is a Volvo initiative with a Web portal for selling spare parts over the Internet. The journey will start with the creation of a platform for distribution of spare parts and continue with the process of introducing Web services and building new relations.
The new structure relies on the development of integration between legacy and a new information technology platform. The study followed the development of the platform as well as innovations that emerged in the new business structure. The paper describes the difficulty of creating a new platform and the even-more difficult establishment of new relations. However, the case also illustrates that continuous implementation projects deliver innovation in new relations and new channels, thereby displaying the unprecedented agility with which IT enables business value. The leverage for this is high and it is easier to roll out the new channels after the first implementation. Agility is achieved by working continuously with scenario development and by keeping implementation projects comprehensive, involving both technology and relations between supply chain actors.},
 author = {Magnus Holmqvist and Kalevi Pessi},
 booktitle = {{IFIP} International Federation for Information Processing},
 doi = {10.1007/0-387-25590-7_11},
 pages = {173--183},
 publisher = {Kluwer Academic Publishers},
 title = {Agility Through Implementation: A Case from a Global Supply Chain},
 url = {https://doi.org/10.1007%2F0-387-25590-7_11}
}

@article{Holmqvist_2006,
 abstract = {This paper presents a case from Volvo that explores an innovative RFID solution that leverages the exiting infrastructures of mobile usage. 'Smart goods' is used to explain features applied through Radio Frequency IDentification, utilization of cellular networks (GSM/GPRS) and web technology together with collaboration among supply chain actors. This has reduced traditional barriers of entry and an empirical case provide basis for evaluation from the perspectives of operational reliability, usability and productivity.},
 author = {Magnus Holmqvist and Gunnar Stefansson},
 doi = {10.1002/j.2158-1592.2006.tb00225.x},
 journal = {Journal of Business Logistics},
 month = {sep},
 number = {2},
 pages = {251--272},
 publisher = {Wiley},
 title = {`{SMART} {GOODS}' {AND} {MOBILE} {RFID} A {CASE} {WITH} {INNOVATION} {FROM} {VOLVO}},
 url = {https://doi.org/10.1002%2Fj.2158-1592.2006.tb00225.x},
 volume = {27},
 year = {2006}
}

@article{Holmqvist_2006,
 abstract = {Abstract This paper,examines,a business,and,IS/IT initiative at Volvo that involves managing,the development,and implementation,of an agile aftermarket,supply chain. The case is based on Volvo’s global initiative to create a platform, Web services, and a Web portal for selling spare parts over the Internet. Creating and integrating a new platform is difficult, and establishing new relations in global aftermarket,logistics is even,more,challenging. Agility relates to an organisa- tion’s ability to sense and,respond,rapidly to unpredictable,events in order to satisfy changing,customer,demands.,Volvo’s effort illustrates agility as achieved by working,continuously,with scenario development,and,keeping,implementa- tion projects to a comprehendible,size in order to nurture learning. The effort involved,direct actions,to manage,both,the,technology,and,the,relations among supply chain actors. As this case shows, continuous implementation projects can deliver innovation,in new,relations and,through,new,channels,–},
 author = {Magnus Holmqvist and Kalevi Pessi},
 doi = {10.1057/palgrave.ejis.3000602},
 journal = {European Journal of Information Systems},
 month = {apr},
 number = {2},
 pages = {146--158},
 publisher = {Informa {UK} Limited},
 title = {Agility through scenario development and continuous implementation: a global aftermarket logistics case},
 url = {https://doi.org/10.1057%2Fpalgrave.ejis.3000602},
 volume = {15},
 year = {2006}
}

@inproceedings{Holmqvist_2006,
 abstract = {Utilization of Radio Frequency Identification (RFID) is often presented as improving supply chain management even though there are still few in-depth studies that support the hype. In this work, the feasibility of a mobile RFID solution in the automotive business-to-business of Volvo has been studied. Currently, due to costs of fixed infrastructure installations, many RFID solutions can only be financially justified in a setup with high volumes and high value items. In this setup, an innovative mobile RFID solution, utilizing cellular networks with data package communication (GSM/GPRS), web technology and integration has been evaluated. This is done from the perspectives of operational reliability, usability and productivity. The empirical evidences come from more than 3.000 readings that together with qualitative research explore a unique context of mobility in which existing infrastructure is leveraged. The advantages and disadvantages of the solution are summarized into a business case feasibility. Recommendations include design constrains and development strategies.},
 author = {M. Holmqvist and G. Stefansson},
 booktitle = {Proceedings of the 39th Annual Hawaii International Conference on System Sciences ({HICSS}{\textquotesingle}06)},
 doi = {10.1109/hicss.2006.350},
 publisher = {{IEEE}},
 title = {Mobile {RFID} {\&}amp$\mathsemicolon$amp$\mathsemicolon${\#}8212$\mathsemicolon$ A Case from Volvo on Innovation in {SCM}},
 url = {https://doi.org/10.1109%2Fhicss.2006.350},
 year = {2006}
}

@incollection{Holmstr_m,
 abstract = {In this chapter, we investigate the role of ICT in dealing with environmental challenges facing contemporary industrial organizations. Green IS research can essentially be divided into two groups, focusing on technology per se or on providing tools that decreases environmental impact. Building on a planned research project we propose innovation of ICT-based services, and especially collaborative services, as useful strategies for providing firms with sense and respond capabilities in relation to environmental challenges. We also argue research that research relevance and multi-disciplinary competencies are key themes that IS researcher needs to acknowledge in order to contribute to practitioners efforts.},
 author = {Jonny Holmström and Lars Mathiassen and Johan Sandberg and Henrik Wimelius},
 booktitle = {Industrial Informatics Design, Use and Innovation},
 doi = {10.4018/978-1-61520-692-6.ch014},
 pages = {187--195},
 publisher = {{IGI} Global},
 title = {Green {IS}},
 url = {https://doi.org/10.4018%2F978-1-61520-692-6.ch014}
}

@article{Holt_2016,
 abstract = {Purpose
– Perceptions drawn from the construction management research (CMR) community regarding research impact (RI) and its relationship to theory generation (TG) are examined. Investigative emphasis is on RI and TG enablers and challenges (within an academic context). The paper aims to discuss these issues.

Design/methodology/approach
– Qualitative narrative data accrued from open-ended questions within a structured questionnaire survey are analysed using frequency, quantitative content analysis, and graphical methods. A model of the RI/TG interface is presented and discussed.

Findings
– Principal RI enablers are “facilitation” (industry engagement, time); while principal constraints include “internal factors” (the academic, the university) and “external factors” (collaboration, funding). Respective TG enablers are “resources” (competence, time, funding) and corresponding challenges include “external factors” (market forces, compliance). RI is considered a minor challenge to TG.

Research limitations/implications
– The study adds empirical evidence to the ongoing RI debate within the UK generally and with regard to the CMR discipline more specifically.

Originality/value
– RI research is relatively sparse, while the findings in regard to CMR are entirely novel.},
 author = {Gary D. Holt and Jack Steven Goulding and Akintola Akintoye},
 doi = {10.1108/ecam-12-2014-0161},
 journal = {Engineering, Construction and Architectural Management},
 month = {jan},
 number = {1},
 pages = {20--39},
 publisher = {Emerald},
 title = {Enablers, challenges and relationships between research impact and theory generation},
 url = {https://doi.org/10.1108%2Fecam-12-2014-0161},
 volume = {23},
 year = {2016}
}

@article{https://doi.org/10.21427/d71041,
 abstract = {},
 author = {Kenny, Aidan},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License},
 doi = {10.21427/D71041},
 language = {en},
 publisher = {Dublin Institute of Technology},
 title = {Developing a participatory consultation process for quality reviews: The initial stage of the European University Associations Quality Review of the Dublin Institute of Technology.},
 url = {http://arrow.dit.ie/cserart/27/},
 year = {2005}
}

@incollection{Hugoson_2009,
 abstract = {Evaluation of IT investments is a difficult and complicated issue. This chapter presents a framework for control of IT investments
with the aim of providing decision-makers with a clear picture of individual IT investments as well as an aggregated level
where all IT investments are combined into a total picture. The framework has been developed using an action–research approach.In
a number of workshops intermediate results have been presented, and reactions from practitioners have influenced the development.
Participants in the project come from different EU countries all directly concerned with IT investments. The framework, that
is being tested by authorities in different EU countries, is considered by participants to have the potential to improve the
decision-making processes. The framework can also potentially be used in academic teaching in IT economics. The framework
is based on a lifetime perspective in which established investment models can be applied. A main dimension is to consider
interrelations between different IT investments through aggregation into a total picture, in order to control total spending
on IT in organisations.},
 author = {Mats-{\AA}ke Hugoson and Björn Johansson and Ulf Seigerroth},
 booktitle = {Information Systems Development},
 doi = {10.1007/b137171_46},
 pages = {441--449},
 publisher = {Springer {US}},
 title = {The Total Picture {\textendash} A Framework for Control of {IT} Investments},
 url = {https://doi.org/10.1007%2Fb137171_46},
 year = {2009}
}

@incollection{Hugoson_2010,
 abstract = {The strategic role of IT and its significance throughout the organization increases in environments characterized by complexity,
variety and change. Hence IT management must deal with uncertainties and with different, conflicting and ever changing demands.
In this sense Enterprise Architecture is playing an increasingly important role in improving IT management practice. This
paper presents architectural design principles that strive to create and maintain alignment in a dynamic and uncertain business
environment. Two crucial architectural aspects will be highlighted: (1) the delineation of the information systems, (2) the
choice of interoperability principle. A case from Swedish Industry is used to demonstrate the application of the principles.
In the paper we argue that the choice of principles has an significant impact on operational as well as strategic alignment.
The larger, heterogeneous, and dynamic the business are, the more crucial are the issues of information systems delineation
and interoperability.},
 author = {Mats-{\AA}ke Hugoson and Thanos Magoulas and Kalevi Pessi},
 booktitle = {Business Information Systems Workshops},
 doi = {10.1007/978-3-642-15402-7_20},
 pages = {144--155},
 publisher = {Springer Berlin Heidelberg},
 title = {Enterprise Architecture Design Principles and Business-Driven {IT} Management},
 url = {https://doi.org/10.1007%2F978-3-642-15402-7_20},
 year = {2010}
}

@incollection{Hugoson_2011,
 abstract = {In recent years, Enterprise Architecture has gradually emerged as the preeminent means to change and transform large organizations. By employing Architectural Principles, organizations strive to master the complexity inherent in business processes and IT system and their harmonious alignment. Unfortunately, very rarely has the coevolutionary and emergent nature of alignment been taken into consideration in IS research. Even if different approaches focus on business IT alignment, most of them have a tendency to focus on alignment as a state or an outcome. In this paper we argue that a dynamic approach is necessary in order to achieve business IT alignment in a long-term perspective. Furthermore we demonstrate that the choice of architectural principles has an impact on the ability to achieve and maintain operational as well as structural alignment. A case study is used as a basis for the analysis. The conclusion is that an Enterprise-centric architecture can create freedom of action for dynamic operational alignment, and that Business-oriented IT management can keep the IS Architecture aligned with the Business Architecture in a long term perspective.},
 author = {Mats-{\AA}ke Hugoson and Kalevi Pessi},
 booktitle = {Business Information Systems Workshops},
 doi = {10.1007/978-3-642-25370-6_20},
 pages = {196--207},
 publisher = {Springer Berlin Heidelberg},
 title = {Operational and Structural Business {IT} Alignment},
 url = {https://doi.org/10.1007%2F978-3-642-25370-6_20},
 year = {2011}
}

@incollection{Hy_tyl_inen_2014,
 abstract = {},
 author = {Raimo Hyötyläinen and Magnus Simons},
 booktitle = {Encyclopedia of Information Science and Technology, Third Edition},
 doi = {10.4018/978-1-4666-5888-2.ch086},
 month = {jul},
 pages = {905--914},
 publisher = {{IGI} Global},
 title = {Organization Innovation and Its Implications for the Implementation of Information Systems},
 url = {https://doi.org/10.4018%2F978-1-4666-5888-2.ch086},
 year = {2014}
}

@article{Iversen_2003,
 abstract = {This paper reports from a case study of an organization that implements a software metrics program to measure the effects of its improvement efforts. The program measures key indicators of all completed projects and summarizes progress information in a quarterly management report. The implementation turns out to be long and complex, as the organization is confronted with dilemmas based on contradictory demands and value conflicts. The process is interpreted as a combination of a rational engineering process in which a metrics program is constructed and put into use, and an evolutionary cultivation process in which basic values of the software organization are confronted and transformed. The analysis exemplifies the difficulties and challenges that software organizations face when bringing known principles for software metrics programs into practical use. The article discusses the insights gained from the case in six lessons that may be used by Software Process Improvement managers in implementing a successful metrics program.},
 author = {Jakob Iversen and Lars Mathiassen},
 doi = {10.1046/j.1365-2575.2003.00136.x},
 journal = {Information Systems Journal},
 month = {jan},
 number = {1},
 pages = {3--19},
 publisher = {Wiley},
 title = {Cultivation and engineering of a software metrics program},
 url = {https://doi.org/10.1046%2Fj.1365-2575.2003.00136.x},
 volume = {13},
 year = {2003}
}

@article{Iversen_2004,
 abstract = {Many software organizations engage in software process improvement (SPI) initiatives to increase their capability to develop quality solutions at a competitive level. Such efforts, however, are complex and very demanding. A variety of risks makes it difficult to develop and implement new processes. We studied SPI in its organizational context through collaborative practice research (CPR), a particular form of action research. The CPR program involved close collaboration between practitioners and researchers over a three-year period to understand and improve SPI initiatives in four Danish software organizations. The problem of understanding and managing risks in SPI teams emerged in one of the participating organizations and led to this research. We draw upon insights from the literature on SPI and software risk management as well as practical lessons learned from managing SPI risks in the participating software organizations. Our research offers two contributions. First, we contribute to knowledge on SPI by proposing an approach to understand and manage risks in SPI teams. This risk management approach consists of a framework for understanding risk areas and risk resolution strategies within SPI and a related process for managing SPI risks. Second, we contribute to knowledge on risk management within the information systems and software engineering disciplines. We propose an approach to tailor risk management to specific contexts. This approach consists of a framework for understanding and choosing between different forms of risk management and a process to tailor risk management to specific contexts.},
 author = {Iversen and  Mathiassen and  Nielsen},
 doi = {10.2307/25148645},
 journal = {{MIS} Quarterly},
 number = {3},
 pages = {395},
 publisher = {{JSTOR}},
 title = {Managing Risk in Software Process Improvement: An Action Research Approach},
 url = {https://doi.org/10.2307%2F25148645},
 volume = {28},
 year = {2004}
}

@inproceedings{Jankovic_2013,
 abstract = {Empirical studies show that the use and adoption of software development methods (SDMs) in practice is still low. Not just that developers often avoid to follow what is prescribed in their organisations, very often the organisations don't even have prescribed and documented methods. This situation is recognized as one of the main reasons for failures in IT projects and a contributor to the low quality of software. In this paper we describe a PhD thesis that addresses this problem. We introduce an innovative approach and supporting tool that will semiautomatically monitor in-action methods during project performance, and capture the gained knowledge with only negligible involvement of the developers. Our expectation is that since the prescribed methods will be in this way based on the practice that is accepted in a certain organisation, its users will not perceive it as something imposed by their managers and will follow it much more rigorously. Furthermore, we intend to show that it is possible to establish a continuous software process improvement lifecycle with just a marginal user involvement.},
 author = {Marko Jankovic},
 booktitle = {{IEEE} 7th International Conference on Research Challenges in Information Science ({RCIS})},
 doi = {10.1109/rcis.2013.6577725},
 month = {may},
 publisher = {{IEEE}},
 title = {Semi-automatic improvement of software development methods: Doctoral consortium paper},
 url = {https://doi.org/10.1109%2Frcis.2013.6577725},
 year = {2013}
}

@article{Jensen_2023,
 abstract = {Big data analytics (BDA) projects are expected to provide organizations with several benefits once the project closes. Nevertheless, many BDA projects are unsuccessful as benefits did not materialize as expected. Organization can manage the expected benefits by measuring these, yet very few organizations actually measure on benefits post project development, and little has been written about BDA benefits measurements that extends beyond those typically identified in the project business case. This study examines how we should establish measures for BDA benefits in the context of a large wind turbine manufacturer investing in BDA to improve their practices when defining BDA benefits measures. We present lessons learned from our action research, that were found useful in establishing BDA benefit measurements. There are three lessons on (1) change, (2) specification of who, and (3) explicitness in establishing a useful BDA benefit measure. We contribute to BDA benefits realization in proposing the lessons to establish BDA benefits measurements. Finally, we discuss the lessons and contributions related to research on BDA value creation and benefits management.},
 author = {Maria Hoffmann Jensen and John Stouby Persson and Peter Axel Nielsen},
 doi = {10.1007/s10257-022-00620-0},
 journal = {Information Systems and e-Business Management},
 month = {feb},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Measuring benefits from big data analytics projects: an action research study},
 url = {https://doi.org/10.1007%2Fs10257-022-00620-0},
 year = {2023}
}

@article{Jonsson_2008,
 abstract = {With firms increasingly relying on ubiquitous computing to implement major business initiatives, it is becoming ever more necessary to understand the technological aspects of business developments. This paper analyzes the use of remote diagnostics systems in the manufacturing industry and discusses the opportunities and challenges for the early adopters. It pays specific attention to the impact on business aspects such as the value creation process consisting of relationships, roles, and architecture and the value proposal consisting of a business offer and customer value. The study shows how ubiquitous computing allows manufacturers to become remote service providers while customers can either become co-creators of value or passive receivers of created value. Ubiquitous computing also creates possibilities for the manufacturing industry to design new kinds of business offers based on remote presence. Studying remote diagnostics systems shows that ubiquitous computing creates value when deployed in products, and not just in relation to individuals. Moreover, the design of the value-creation process should not be limited to the single supplier or customer organization, as ubiquitous computing applications take no notice of organizational boundaries.},
 author = {Katrin Jonsson and Ulrika H Westergren and Jonny Holmström},
 doi = {10.1111/j.1365-2575.2007.00267.x},
 journal = {Information Systems Journal},
 month = {may},
 number = {3},
 pages = {227--245},
 publisher = {Wiley},
 title = {Technologies for value creation: an exploration of remote diagnostics systems in the manufacturing industry},
 url = {https://doi.org/10.1111%2Fj.1365-2575.2007.00267.x},
 volume = {18},
 year = {2008}
}

@incollection{Kaapu_2010,
 abstract = {In this paper, we focus on users’ evaluations of virtual product prototypes designed by furniture companies. Our study is
the first step towards design research in the context of physical products. We study virtual prototypes of physical products
via the concept of user experience as a subjective issue, not technology-driven as in most user experience studies. To get
an idea of users’ subjective experience, we conducted an empirical study using, as our research approach, phenomenography,
which allows outlining the differences in users’ technological understandings. In our results, the user experience of virtual
product prototypes is understood as a unique combination of various elements, the focus varying from technology to the user’s
taste and from a part of a product to a product in its environment.},
 author = {Taina Kaapu and Tarja Tiainen},
 booktitle = {Scandinavian Information Systems Research},
 doi = {10.1007/978-3-642-14874-3_2},
 pages = {18--33},
 publisher = {Springer Berlin Heidelberg},
 title = {User Experience: Consumer Understandings of Virtual Product Prototypes},
 url = {https://doi.org/10.1007%2F978-3-642-14874-3_2},
 year = {2010}
}

@incollection{Karlsson,
 abstract = {There appears to be two schools of information systems development methods research that largely pursue their own agendas
without many cross-references. On the one hand there is the method engineering research and on the other hand there is the
method-in-action research. There seems to be much to be gained from integrating these two schools, developing knowledge that
both has the formality (rigor) and reflects its enactment in practice. To achieve this, the research approach adopted has
to embrace this duality. In this paper we explore how Multi-Grounded Action Research (MGAR) can contribute to achieving this
aim. MGAR has been used in the development of a Method for Method Configuration, a research product that integrates the strengths
of both schools.},
 author = {Fredrik Karlsson and Pär J. {\AA}gerfalk},
 booktitle = {{IFIP} {\textemdash} The International Federation for Information Processing},
 doi = {10.1007/978-0-387-73947-2_4},
 pages = {19--32},
 publisher = {Springer {US}},
 title = {Multi-Grounded Action Research in Method Engineering: The {MMC} Case},
 url = {https://doi.org/10.1007%2F978-0-387-73947-2_4}
}

@article{Karlsson_2004,
 abstract = {The world of systems engineering methods is changing as rigorous ‘off-the-shelf’ methods gain popularity. The need for configuration of such methods is increasing accordingly. In this paper, method configuration is treated as a kind of method engineering, focusing on adaptation of a base method. A meta-method based on the concepts of Configuration Packages and Configuration Templates is proposed. Configuration Packages are pre-made reusable configurations of a base method suitable for a specific characteristic of a development situation. Configuration Templates with different characteristics can be related to different Configuration Packages and used as a base for reaching a situational method efficiently. The paper presents experiences from two empirical studies in which the Method for Method Configuration was developed and validated. These studies indicate that this meta-method eases the burden of the method engineer in configuring a method for particular project characteristics. Specifically it helped in deciding what in the base method to omit and to make sure that omissions made were congruent with the overall situational method.},
 author = {Fredrik Karlsson and Pär J {\AA}gerfalk},
 doi = {10.1016/j.infsof.2003.12.004},
 journal = {Information and Software Technology},
 month = {jul},
 number = {9},
 pages = {619--633},
 publisher = {Elsevier {BV}},
 title = {Method configuration: adapting to situational characteristics while creating reusable assets},
 url = {https://doi.org/10.1016%2Fj.infsof.2003.12.004},
 volume = {46},
 year = {2004}
}

@article{Karlsson_2006,
 abstract = {The complex and demanding business of developing information systems often involves the use of different systems development methods such as the Rational Unified Process or the Microsoft Solution Framework. Through these methods the development organisation can be viewed as a collective of actors following different rules in the form of prescribed actions in order to guide a work process in accord with activity theory. Very often standardised systems development methods need tailoring for unique projects and strategies for this process have been labelled method engineering. Method configuration, a sub-discipline to method engineering, is applicable in situations where a single base method is used as a starting point for the engineering process. A meta-method (method for method configuration) has been developed addressing these issues. A fundamental part of this meta-method is the method component construct as a means to facilitate efficient and rationally motivated modularisation of systems development methods. This paper is an exploration of possible benefits of combining activity theory and method engineering as theoretical grounding of the method component concept.},
 author = {Fredrik Karlsson and Kai Wistrand},
 doi = {10.1057/palgrave.ejis.3000596},
 journal = {European Journal of Information Systems},
 month = {feb},
 number = {1},
 pages = {82--90},
 publisher = {Informa {UK} Limited},
 title = {Combining method engineering with activity theory: theoretical grounding of the method component concept},
 url = {https://doi.org/10.1057%2Fpalgrave.ejis.3000596},
 volume = {15},
 year = {2006}
}

@incollection{Karlsson_2006,
 abstract = {Method engineering is a design research discipline with a focus on providing support for method engineers and systems developers.
(1996) defines it as ‘the engineering discipline to design, construct and adapt methods, techniques and tools for the development
of information systems.’ Such support is provided in the form of frameworks (e.g. Agerfalk and Wistrand, 2003), methods (e.g. Yourdon, 1989), meta-methods (e.g. Harmsen, 1997), and computerized tool support (e.g. Rossi, 1998). Subsequently, as a design science discipline we attempt to support human actions (March and Smith, 1995). Since design is about the artificial (Dahlbom, 2002) it consists of a duality involving both construction and evaluation. However, within the field of method engineering the
attention is often given to the former and often with a theoretical focus.},
 author = {Fredrik Karlsson},
 booktitle = {Advances in Information Systems Development},
 doi = {10.1007/978-0-387-36402-5_21},
 pages = {241--252},
 publisher = {Springer {US}},
 title = {Method Configuration {\textemdash} A Systems Development Project Revisited},
 url = {https://doi.org/10.1007%2F978-0-387-36402-5_21},
 year = {2006}
}

@article{Karlsson_2009,
 abstract = {Method configuration is a specific type of Method Engineering (ME) that takes an existing organization-wide Information Systems Development Method (ISDM) as its point of departure. Existing assembly-based ME approaches are not well suited to this task. As an alternative, this article suggests a metamethod approach to tailoring organization-wide ISDMs. We refer to this approach as the Method for Method Configuration (MMC). MMC takes into account the need to combine structure, which is one reason for choosing an organization-wide ISDM in the first place, with flexibility, which is essential for making the chosen ISDM fit actual projects. The metamethod is built using a three-layered reuse model comprising method components, configuration packages, and configuration templates. These concepts are combined efficiently to produce a situational method and thereby to facilitate the work of method engineers. Purchase this article to continue reading all 25 pages >},
 author = {Fredrik Karlsson and Pär J. {\AA}gerfalk},
 doi = {10.4018/jdm.2009070103},
 journal = {Journal of Database Management},
 month = {jul},
 number = {3},
 pages = {51--75},
 publisher = {{IGI} Global},
 title = {Towards Structured Flexibility in Information Systems Development},
 url = {https://doi.org/10.4018%2Fjdm.2009070103},
 volume = {20},
 year = {2009}
}

@article{Karlsson_2012,
 abstract = {},
 author = {Fredrik Karlsson and Pär J. {\AA}gerfalk},
 doi = {10.1016/j.infsof.2011.12.009},
 journal = {Information and Software Technology},
 month = {may},
 number = {5},
 pages = {501--516},
 publisher = {Elsevier {BV}},
 title = {{MC} Sandbox: Devising a tool for method-user-centered method configuration},
 url = {https://doi.org/10.1016%2Fj.infsof.2011.12.009},
 volume = {54},
 year = {2012}
}

@article{Kenny_2006,
 abstract = {The aim of this paper is to present the reader with an accessible and practical account of the evaluation as a mode of inquiry within the broad domain of social science. The starting point will be to present a general outline of the main milestones relating to the emergence of evaluation as a mode of inquiry and some of the prominent advocates of comtemporary evaluation. Particular attention will be directed towards what is termed as 'programme evaluation'. Then I will endeavour to explore whether evaluation as a mode of inquiry is practice or theory lead. A definitive answer to this question will not be presented here in this short paper; I will instead make assumptions based on my interpretation of the reviewed discourse within the field and personal reflection from practice. The case of the European University Association (EUA) Quality Review of the seven Irish universities and the Dublin Institute of Technology will be cited as an example of evaluation in practice in the Irish Higher Education sector. Issues such as the politics and power, decision making, and the use, misuse or non-use, of findings of evaluations will be briefly introduced.},
 author = {Aidan Kenny},
 doi = {10.2139/ssrn.946402},
 journal = {{SSRN} Electronic Journal},
 publisher = {Elsevier {BV}},
 title = {Evaluation: Emergence, Mode of Inquiry, Theory {\&}amp$\mathsemicolon$ Practice},
 url = {https://doi.org/10.2139%2Fssrn.946402},
 year = {2006}
}

@article{Koutsoukos_2008,
 abstract = {The increasing adoption of agile software development methodologies is amplifying the message that people are a first-order success factor of software projects. In this paper we describe a means to make certain people characteristics a first-class concern in software development projects. In particular, we present a systematic way of capturing, making explicit and effectively communicating human attitudes, beliefs and ways of thinking that influence individual and team work in software projects. Moreover, we provide an organised way to supplement and enhance software development methods, processes and project practice in order to explicitly take into account such human factors.},
 author = {Georgios Koutsoukos},
 doi = {10.1504/ijtpm.2008.016178},
 journal = {International Journal of Technology, Policy and Management},
 number = {1},
 pages = {5},
 publisher = {Inderscience Publishers},
 title = {Mentality patterns: recurring turns of mind as first-class concerns in software projects},
 url = {https://doi.org/10.1504%2Fijtpm.2008.016178},
 volume = {8},
 year = {2008}
}

@article{Koutsoukos_2008,
 abstract = {The increasing adoption of agile software development methodologies is amplifying the message that people are a first-order success factor of software projects. In this paper we describe a means to make certain people characteristics a first-class concern in software development projects. In particular, we present a systematic way of capturing, making explicit and effectively communicating human attitudes, beliefs and ways of thinking that influence individual and team work in software projects. Moreover, we provide an organised way to supplement and enhance software development methods, processes and project practice in order to explicitly take into account such human factors.},
 author = {Georgios Koutsoukos},
 doi = {10.1504/ijtpm.2008.016178},
 journal = {International Journal of Technology, Policy and Management},
 number = {1},
 pages = {5},
 publisher = {Inderscience Publishers},
 title = {Mentality patterns: recurring turns of mind as first-class concerns in software projects},
 url = {https://doi.org/10.1504%2Fijtpm.2008.016178},
 volume = {8},
 year = {2008}
}

@article{Koutsoukos_2021,
 abstract = {},
 author = {Georgios Koutsoukos},
 doi = {10.1109/tem.2019.2931147},
 journal = {{IEEE} Transactions on Engineering Management},
 month = {feb},
 number = {1},
 pages = {249--264},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {The Project Strategy Matrix: Systematizing the Design and Management of an Explicit Project Strategy},
 url = {https://doi.org/10.1109%2Ftem.2019.2931147},
 volume = {68},
 year = {2021}
}

@article{Kristian_Hansen_2013,
 abstract = {},
 author = {Lars Kristian Hansen and Pernille Kr{\ae}mmergaard},
 doi = {10.1108/17506161311308160},
 journal = {Transforming Government: People, Process and Policy},
 month = {mar},
 number = {1},
 pages = {50--75},
 publisher = {Emerald},
 title = {Transforming local government by project portfolio management},
 url = {https://doi.org/10.1108%2F17506161311308160},
 volume = {7},
 year = {2013}
}

@incollection{Kusakabe_2011,
 abstract = {The ‘Sustainable cities’ initiative has been widely accepted as a participatory development initiative to achieve environmental and social goals. In the cities in developing countries with a severe constraint in their capacity for participatory planning, a potentially effective way to build ‘sustainable city’ initiative is to use an e-government portal designed to support citizens’ participation in planning and monitoring processes and knowledge sharing among participating cities. In the Nigeria Delta region, 23 local governments were chosen to pilot this initiative. This region has been suffering from weak local governance and protracted youth unemployment caused by ‘youth bulge’ that led to severe social unrest. In such circumstances, this pilot had a strong focus on enhancing local governance and job-creation among young people in knowledge-intensive industries, particularly using information and communication technologies. This chapter investigates positive and negative sides of this approach using the cross-country and city-level survey data.},
 author = {Motoo Kusakabe},
 booktitle = {Green Technologies},
 doi = {10.4018/978-1-60960-472-1.ch711},
 pages = {1719--1738},
 publisher = {{IGI} Global},
 title = {Information and Communication Technology As Key Infrastructure for Sustainable Cities},
 url = {https://doi.org/10.4018%2F978-1-60960-472-1.ch711},
 year = {2011}
}

@article{Kuschel_2011,
 abstract = {},
 author = {Jonas Kuschel and Bjorn Remneland and Magnus Holmqvist Kuschel},
 doi = {10.1504/ijnvo.2011.042414},
 journal = {International Journal of Networking and Virtual Organisations},
 number = {2},
 pages = {123},
 publisher = {Inderscience Publishers},
 title = {Open innovation and control: a case from Volvo},
 url = {https://doi.org/10.1504%2Fijnvo.2011.042414},
 volume = {9},
 year = {2011}
}

@article{Labadie_2023,
 abstract = {},
 author = {Cl{\'{e}}ment Labadie and Christine Legner},
 doi = {10.1177/02683962221141456},
 journal = {Journal of Information Technology},
 month = {jan},
 number = {1},
 pages = {16--44},
 publisher = {{SAGE} Publications},
 title = {Building data management capabilities to address data protection regulations: Learnings from {EU}-{GDPR}},
 url = {https://doi.org/10.1177%2F02683962221141456},
 volume = {38},
 year = {2023}
}

@incollection{Lanam_ki_2016,
 abstract = {Computer-Supported Collaborative Work (CSCW) has become increasingly positioned as a subfield of human-computer interaction (HCI). Earlier, CSCW has had a closer connection to the Information Systems (IS) field, but this relationship has seemed to become more distant. In this paper we reflect on the distinct characteristics of the research communities of CSCW and IS. We identify similarities, but also stark differences between the two. The six identified issues of difference are the roles of theory, context, methodology, organizational layer, socio-technicality, and power-alignment. Our contribution is in making these differences visible. We hope this paper will promote diplomacy and understanding between these research communities, so that scholars may consider cross-disciplinary IS-CSCW publication strategies.},
 author = {Arto Lanamäki and Karin Väyrynen},
 booktitle = {{COOP} 2016: Proceedings of the 12th International Conference on the Design of Cooperative Systems, 23-27 May 2016, Trento, Italy},
 doi = {10.1007/978-3-319-33464-6_1},
 pages = {3--19},
 publisher = {Springer International Publishing},
 title = {Six Issues in Which {IS} and {CSCW} Research Communities Differ},
 url = {https://doi.org/10.1007%2F978-3-319-33464-6_1},
 year = {2016}
}

@incollection{Land_2001,
 abstract = {There is much discussion among IS academics in general and those who belong to IFIP WG 8.2 in particular of appropriate research methods and their underlying philosophical foundations. Discussion on research methods has tended to focus on the debate between those who advocate empirical methods based on validating models, frameworks, and hypotheses by means of surveys buttressed by an array of statistical tests, and the advocates of interpretive, qualitative research based on observation, interviews, and case studies. The debate has resulted in the publication of a comprehensive literature, part of which questions the validity of one or other of the approaches, but part of which attempts to define under what circumstances each is appropriate. Yet other discussants suggest the virtues of pluralistic approaches.},
 author = {Frank Land and Lars Mathiassen and Bob Galliers and Mike Cushman and Richard Baskerville},
 booktitle = {Realigning Research and Practice in Information Systems Development},
 doi = {10.1007/978-0-387-35489-7_31},
 pages = {467--470},
 publisher = {Springer {US}},
 title = {Collaboration Between Academics and Practitioners Using Action Research},
 url = {https://doi.org/10.1007%2F978-0-387-35489-7_31},
 year = {2001}
}

@article{Lawson_Lartego_2016,
 abstract = {},
 author = {Late{\textquotesingle} Lawson-Lartego and Lars Mathiassen},
 doi = {10.2139/ssrn.2866960},
 journal = {{SSRN} Electronic Journal},
 publisher = {Elsevier {BV}},
 title = {Designing and Orchestrating Embedded Innovation Networks: An Inquiry into Microfranchising in Bangladesh},
 url = {https://doi.org/10.2139%2Fssrn.2866960},
 year = {2016}
}

@article{Legner_2020,
 abstract = {},
 author = {Christine Legner and   and Tobias Pentek and Boris Otto and   and},
 doi = {10.17705/1jais.00618},
 journal = {Journal of the Association for Information Systems},
 month = {may},
 number = {3},
 pages = {735--770},
 publisher = {Association for Information Systems},
 title = {Accumulating Design Knowledge with Reference Models: Insights from 12 Years' Research into Data Management},
 url = {https://doi.org/10.17705%2F1jais.00618},
 volume = {21},
 year = {2020}
}

@article{Lemmergaard_2008,
 abstract = {},
 author = {Jeanette Lemmergaard},
 doi = {10.1108/17410390810904283},
 journal = {Journal of Enterprise Information Management},
 month = {sep},
 number = {5},
 pages = {543--556},
 publisher = {Emerald},
 title = {Roles in the {ISD} process: a collaborative approach},
 url = {https://doi.org/10.1108%2F17410390810904283},
 volume = {21},
 year = {2008}
}

@article{Lev_n_2012,
 abstract = {The paper provides an integrated view of value creation in the development of new products and services related to IT. We argue that customer and end-user integration into the development process as a whole is a key for enhanced innovation processes. Building on experiences from two regional IT innovation projects conducted with a living lab approach, we ask how this approach can help organisations utilise important resources in an open innovation system and guide universities  as driving engines in regional innovation systems  to improve their environments for research and education. Exploring the outcome from the projects and how customers are integrated into value creation processes during the course of IT design and use, we argue that innovation systems management and customer integration are important assets not only to increased efficiency and quality, but also for enhanced innovation.},
 author = {Per Lev{\'{e}}n and Jonny Holmström},
 doi = {10.1504/ijird.2012.046580},
 journal = {International Journal of Innovation and Regional Development},
 number = {2},
 pages = {129},
 publisher = {Inderscience Publishers},
 title = {Regional {IT} innovation: a living lab approach},
 url = {https://doi.org/10.1504%2Fijird.2012.046580},
 volume = {4},
 year = {2012}
}

@article{Lev_n_2014,
 abstract = {Important innovations are increasingly produced based on research engagement and fertilization across industries. However, we know little about the challenges associated with managing innovation networks in specific contexts that involves researchers in cross-industry collaboration. Against this backdrop, we draw on theory on design and orchestration of innovation networks to analyze a large-scale government sponsored program, “ProcessIT Innovations” that was designed to increase competitiveness and accelerate economic growth in Northern Sweden. The program was initiated and led by firms from the traditionally strong local process industry and engaged local researchers and firms from the emerging IT industry. Based on our analyses, we offer two contributions. First, we provide a detailed analysis of the challenges related to configuration of the network, orchestration of partnerships between participants, and facilitation of innovation in dedicated development projects. Second, we propose a model of managing research and innovation networks through fertilization across industries and between firms and research institutions.},
 author = {Per Lev{\'{e}}n and Jonny Holmström and Lars Mathiassen},
 doi = {10.1016/j.respol.2013.08.004},
 journal = {Research Policy},
 month = {feb},
 number = {1},
 pages = {156--168},
 publisher = {Elsevier {BV}},
 title = {Managing research and innovation networks: Evidence from a government sponsored cross-industry program},
 url = {https://doi.org/10.1016%2Fj.respol.2013.08.004},
 volume = {43},
 year = {2014}
}

@incollection{Lind_2010,
 abstract = {Business processes need to be aligned with business strategies. This paper elaborates on experiences from a business process
design effort in an action research project performed at Intersport Sweden. The purpose with this project was to create a
solid base for taking the retail chain Intersport into a new organizational state where the new process design is aligned
with strategic goals. Although business process modeling is concerned with creating artifacts, traditionally information systems
design science research has had little impact on research on business process models. In this paper, we address the question
of how design science research can contribute to business process design. Three heuristic guidelines for creating organizational
commitment and strategic alignment in process design are presented. The guidelines are derived from the successful actions
taken in the research project. The development of these guidelines is used as a basis to reflect upon the contribution of
design science research to business process design.

KeywordsDesign science research-business process design-action research-co-design},
 author = {Mikael Lind and Daniel Rudmark and Ulf Seigerroth},
 booktitle = {Human Benefit through the Diffusion of Information Systems Design Science Research},
 doi = {10.1007/978-3-642-12113-5_10},
 pages = {159--176},
 publisher = {Springer Berlin Heidelberg},
 title = {Design Science Research for Business Process Design: Organizational Transition at Intersport Sweden},
 url = {https://doi.org/10.1007%2F978-3-642-12113-5_10},
 year = {2010}
}

@inproceedings{Lind_2010,
 abstract = {In information systems research, significant attention has been paid to the discrepancy between organizational context and technology. In the IS discourse this is, among other initiatives, expressed as the need to create alignment between business and IT. Translated into the domain of business process management (BPM), this will put demand on achieving alignment between used models in process modeling. An action research approach has been adopted to explore a multi-layered thinking in process modeling, which has been validated through the development and application of a multi-layered framework with a consultancy firm. Applying the multi-layered framework has addressed three areas of concern related to managing alignment 1) focal areas, 2) abstraction levels, and 3) degree of formalism. In this setting, a multi-layered thinking during process modeling and design has facilitated managing alignment of business and IS/IT. Further research however concerns the application of the framework in other settings.},
 author = {Mikael Lind and Ulf Seigerroth},
 booktitle = {2010 43rd Hawaii International Conference on System Sciences},
 doi = {10.1109/hicss.2010.280},
 publisher = {{IEEE}},
 title = {Multi-Layered Process Modeling for Business and {IT} Alignment},
 url = {https://doi.org/10.1109%2Fhicss.2010.280},
 year = {2010}
}

@article{Lindgren_2004,
 abstract = {Even though the literature on competence in organizations recognizes the need to align organization level core competence with individual level job competence, it does not consider the role of information technology in managing competence across the macro and micro levels. To address this shortcoming, we embarked on an action research study that develops and tests design principles for competence management systems. This research develops an integrative model of competence that not only outlines the interaction between organizational and individual level competence and the role of technology in this process, but also incorporates a typology of competence (competence-in-stock, competence-in-use, and competence-in-the-making). Six Swedish organizations participated in our research project, which took 30 months and consisted of two action research cycles involving numerous data collection strategies and interventions such as prototypes. In addition to developing a set of design principles and considering their implications for both research and practice, this article also includes a self-assessment of the study by evaluating it according to the criteria for canonical action research.},
 author = {Lindgren and  Henfridsson and  Schultze},
 doi = {10.2307/25148646},
 journal = {{MIS} Quarterly},
 number = {3},
 pages = {435},
 publisher = {{JSTOR}},
 title = {Design Principles for Competence Management Systems: A Synthesis of an Action Research Study},
 url = {https://doi.org/10.2307%2F25148646},
 volume = {28},
 year = {2004}
}

@inproceedings{Lokhman_2013,
 abstract = {Despite the rapid rise of open source systems (OSS), it is unclear what architectural patterns enable the success of these systems. There is little guidance on architectural patterns for OSS development. Consequently the creators of OSS projects have often come to their own solutions intuitively, via trial-and-error and design iterations. To fill this void we study the architectural challenges encountered by OSS projects and identify architectural patterns that address these challenges. We propose an integrated architectural style that addresses two challenges for OSS success: 1) what architectural principles and patterns enable the active participation of a large, distributed community, and 2) how to manage OSS licensing issues that prohibit open source (and proprietary) software to mix freely. It is critical to address these issues together as architectural decisions impact on licensing issues, which have an impact on the long-term survival of the system. We contribute to OSS development by identifying, integrating and advancing existing work on OSS patterns and offer an integrated architectural style that addresses these challenges simultaneously thus guiding future OSS development. We validate our approach via empirical studies of successful OSS systems that have evolved to use this style, and report on a case study using the proposed architectural style for a new OSS project.},
 author = {Alexander Lokhman and Tommi Mikkonen and Imed Hammouda and Rick Kazman and Hong-Mei Chen},
 booktitle = {2013 46th Hawaii International Conference on System Sciences},
 doi = {10.1109/hicss.2013.34},
 month = {jan},
 publisher = {{IEEE}},
 title = {A Core-Periphery-Legality Architectural Style for Open Source System Development},
 url = {https://doi.org/10.1109%2Fhicss.2013.34},
 year = {2013}
}

@article{M_ller_2009,
 abstract = {The scale and complexity of change in software process improvement (SPI) are considerable and managerial attention to organizational culture during SPI can therefore potentially contribute to successful outcomes. However, we know little about the impact of variations in organizational subculture on SPI initiatives. On this backdrop, we present an exploratory study of a large-scale SPI project in a Danish high-technology company, Terma. Two of its business units-integrated systems (ISY) and airborne systems (ASY)-followed similar approaches over a three-year period, but with quite different outcomes. While ISY reached capability maturity model integration (CMMI) level 2 as planned, ASY struggled to implement even modest improvements. To help explain these differences, we analyzed the underlying organizational culture within ISY and ASY using two different methods for subculture assessment. The study demonstrates how variations in culture across software organizations can have important implications for SPI outcomes. Furthermore, it provides insights into how software managers can practically assess subcultures to inform decisions about and help prepare plans for SPI initiatives.},
 author = {Sune Dueholm MÜller and Pernille Kr{\AE}mmergaard and Lars Mathiassen},
 doi = {10.1109/tem.2009.2013829},
 journal = {{IEEE} Transactions on Engineering Management},
 month = {nov},
 number = {4},
 pages = {584--599},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Managing Cultural Variation in Software Process Improvement: A Comparison of Methods for Subculture Assessment},
 url = {https://doi.org/10.1109%2Ftem.2009.2013829},
 volume = {56},
 year = {2009}
}

@article{M_ller_2017,
 abstract = {For years, managers have tried to improve organizational performance through business process transformation (BPT), and their experiences have informed IS research and practice. Although extant theory acknowledges the political nature of these dynamic transformation initiatives, researchers have yet to empirically investigate and theorize how organizational politics impacts BPT behaviors and outcomes. Drawing on a pluralist methodology, we present an embedded case study of a company-wide BPT project across four business units at the high-tech firm Terma. First, we apply different perspectives on organizational politics to develop detailed accounts of each business unit's response to the transformation initiative, which reveals four distinct patterns of BPT politics: “applying the hammer”, “struggling to engage”, “walking the talk”, and “keeping up appearances”. Next, we combine the empirical findings with extant literature to theorize how transformation agents and process users engage in politics during BPT implementation. As a result, our research leverages a pluralist approach to show how alternative political perspectives and forms of politics can help managers maneuver BPT initiatives in their roles as transformation agents and process users.},
 author = {Sune Müller and   and Lars Mathiassen and Carol Saunders and Pernille Kr{\ae}mmergaard and   and   and},
 doi = {10.17705/1jais.00454},
 journal = {Journal of the Association for Information Systems},
 month = {mar},
 number = {3},
 pages = {173--205},
 publisher = {Association for Information Systems},
 title = {Political Maneuvering During Business Process Transformation: A Pluralist Approach},
 url = {https://doi.org/10.17705%2F1jais.00454},
 volume = {18},
 year = {2017}
}

@incollection{M_ller_2021,
 abstract = {We propose Pluralist Theory Building as a methodology that leverages the power of multiperspective inquiry to develop new theory from data. The chapter presents the rationale for the methodology, its combination of generalization and pluralism, and the process involved in its application. When researchers use Pluralist Theory Building, they move between description and theory and between single and multiple perspectives through four iterative steps with specific deliverables: Create Perspective Accounts, Synthesize Multiperspective Account, Create Theory Fragments, and Synthesize Pluralist Theory. Drawing on a study that served as experiential background for developing the methodology, we offer insights into the challenges involved in using the methodology and the activities in which researchers may engage to address these challenges. In conclusion, we argue that Pluralist Theory Building offers a novel and practically useful approach to empirically based theorizing that leverages Mingers’ pragmatic approach to pluralism (2001) and extends Lee and Baskerville’s (Generalizing generalizability in information systems research. Information Systems Research, 14(3), 221–243, 2003) generalization framework into a detailed iterative process with steps, deliverables, challenges, and activities.},
 author = {Sune Dueholm Müller and Lars Mathiassen and Carol Saunders},
 booktitle = {Technology, Work and Globalization},
 doi = {10.1007/978-3-030-64884-8_9},
 pages = {309--361},
 publisher = {Springer International Publishing},
 title = {Pluralist Theory Building: A Methodology for Generalizing from Data to Theory{\ast}},
 url = {https://doi.org/10.1007%2F978-3-030-64884-8_9},
 year = {2021}
}

@incollection{Madsen_2010,
 abstract = {Research suggests that achievement of a successful outsourcing relationship requires a tremendous amount of detailed management.
In this paper we draw on relationship theory to understand the management practices of a particular outsourcing setup. An
empirical study of a Danish company operating an off shore development centre with 400 employees located in India identified
a host of practices that form a seemingly complex and ambiguous picture. To make sense of the studied practice we develop
a framework that consists of four relationship management strategies coined select-a-friend, develop-a-friend, control-a-person,
and control-of-output. We provide illustrative examples of each strategy; reflect upon the alignment between the type of outsourcing
setup and the identified portfolio of practices; and outline theoretical and practi cal implications. Key findings are that
all four strategies are used, play an important role and that continuous improvement of the portfolio of relationship management 
practices is paramount to ensure effectiveness.},
 author = {Sabine Madsen and Keld B{\o}dker},
 booktitle = {Scandinavian Information Systems Research},
 doi = {10.1007/978-3-642-14874-3_1},
 pages = {1--17},
 publisher = {Springer Berlin Heidelberg},
 title = {Relationship Management at the Operational Level in Outsourcing},
 url = {https://doi.org/10.1007%2F978-3-642-14874-3_1},
 year = {2010}
}

@article{Madsen_2014,
 abstract = {In this paper, we report from a longitudinal project about knowledge transfer conducted in a major financial company headquartered in Denmark and an offshore development center located in Bangalore, India. We identify the main knowledge transfer challenges experienced by the case company. The challenges inform the conceptual design of a systematic five-step approach to the company’s knowledge transfer. Our main contribution is to illustrate how extant research can be applied to understand and solve the knowledge transfer challenges of a particular company in a way that fits with the outsourcing setup and the company culture. We also draw attention to the fact that client side managers play a crucial role in determining how and with what priority knowledge transfer can take place. Our research indicates that a first, important step towards ensuring successful knowledge transfer in outsourcing is to focus on the training and support of client side managers.},
 author = {Sabine Madsen and Keld B{\o}dker and Thomas T{\o}th},
 doi = {10.1007/s10796-014-9516-3},
 journal = {Information Systems Frontiers},
 month = {jul},
 number = {1},
 pages = {67--77},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Knowledge transfer planning and execution in offshore outsourcing: An applied approach},
 url = {https://doi.org/10.1007%2Fs10796-014-9516-3},
 volume = {17},
 year = {2014}
}

@article{Magnusson_2012,
 abstract = {With a shift in the architecture for the design and delivery of information systems (IS), new business models are emerg-ing. Professional analysts predict that by the end of 2012, a majority of all enterprise-wide information systems will be delivered by a business model dominated by services rather than by on-site installations. This paper reports on a re-search project conducted between 2009 and 2011 that involved case studies of Enterprise Resource Planning (ERP) systems delivered according to a Software as a Service (SaaS) logic. Using a business model ontology, 10 case studies in the Swedish ERP market were conducted and analyzed. After constructing generic business models that explain two types of vendors in the market—the Incumbents (the traditional ERP vendors) and the Challengers (the new SaaS ERP vendors)—a discussion follows, based on institutional logic, which examines how these two groups of vendors adapt the dominant institutional logic. As the results show, both vendor groups hybridize their business models using the other's institutional logic. At the same time, the vendors differentiate themselves as they try to establish the dominance of their own logic.},
 author = {Johan Magnusson and H{\aa}kan Enquist and Gustaf Juell-Skielse and Elin Uppström},
 doi = {10.4236/jssm.2012.51009},
 journal = {Journal of Service Science and Management},
 number = {01},
 pages = {69--76},
 publisher = {Scientific Research Publishing, Inc.},
 title = {Incumbents and Challengers: Conflicting Institutional Logics in {SaaS} {ERP} Business Models},
 url = {https://doi.org/10.4236%2Fjssm.2012.51009},
 volume = {05},
 year = {2012}
}

@article{Marijan_2021,
 abstract = {},
 author = {Dusica Marijan and Arnaud Gotlieb},
 doi = {10.1016/j.infsof.2020.106473},
 journal = {Information and Software Technology},
 month = {apr},
 pages = {106473},
 publisher = {Elsevier {BV}},
 title = {Industry-Academia research collaboration in software engineering: The Certus model},
 url = {https://doi.org/10.1016%2Fj.infsof.2020.106473},
 volume = {132},
 year = {2021}
}

@article{Marijan_2022,
 abstract = {Increasing the impact of software engineering research in the software industry and the society at large has long been a concern of high priority for the software engineering community. The problem of two cultures, research conducted in a vacuum (disconnected from the real world), or misaligned time horizons are just some of the many complex challenges standing in the way of successful industry–academia collaborations. This article reports on the experience of research collaboration and knowledge co-creation between industry and academia in software engineering as a way to bridge the research–practice collaboration gap. Our experience spans 14 years of collaboration between researchers in software engineering and the European and Norwegian software and IT industry. Using the participant observation and interview methods, we have collected and afterwards analyzed an extensive record of qualitative data. Drawing upon the findings made and the experience gained, we provide a set of 14 patterns and 14 anti-patterns for industry–academia collaborations, aimed to support other researchers and practitioners in establishing and running research collaboration projects in software engineering.},
 author = {Dusica Marijan and Sagar Sen},
 doi = {10.1145/3494519},
 journal = {{ACM} Transactions on Software Engineering and Methodology},
 month = {mar},
 number = {3},
 pages = {1--52},
 publisher = {Association for Computing Machinery ({ACM})},
 title = {Industry{\textendash}Academia Research Collaboration and Knowledge Co-creation: Patterns and Anti-patterns},
 url = {https://doi.org/10.1145%2F3494519},
 volume = {31},
 year = {2022}
}

@inproceedings{Mathiassen,
 abstract = {The complex and problematic relationship between software development methods and practices is well documented. Methods are difficult to adopt, there are several barriers towards successfully bringing methods to practice, and practices are by the end of the day quite different from method prescriptions. Methods are, however, continually developed and organizations spend considerable resources trying to improve practices through adoption of new methods. We know relatively little about the long-term dynamics involved in such adoption efforts. This research reports from a three-year effort within an IT department of a large multinational company in which a new method was first adopted, then used to support projects organization wide, and subsequently extended based on emerging practices. The study applies two complementary knowledge management perspectives, those of networks and networking, to interpret the experiences from the case. The study reveals how method perceptions and approaches shift radically through different stages of bringing software development methods to practice.},
 author = {L. Mathiassen and L. Vogelsang},
 booktitle = {Proceedings of the 38th Annual Hawaii International Conference on System Sciences},
 doi = {10.1109/hicss.2005.614},
 publisher = {{IEEE}},
 title = {The Role of Networks and Networking in Bringing Software Methods to Practice},
 url = {https://doi.org/10.1109%2Fhicss.2005.614}
}

@article{Mathiassen_2003,
 abstract = {Large software organizations establish software technology units for managing the methods and tools aimed at supporting their software engineers. This division between software development and new technologies for software development establishes specialized competencies, supports standardization across software projects and departments and provides dedicated resources for innovation. However, such software technology units are faced with complex diffusion projects that are difficult and challenging to manage and that in many cases lead to unsatisfactory results. This paper reports from attempts to improve diffusion practices within a technology unit in a large software organization. Two complementary roles for software technology units, i.e. technology supplier and service provider, are presented and used for interpreting the experiences. The research suggests that technology units in large software organizations can improve their diffusion practices by complementing the traditional role as a technology supplier with that of a service provider. The paper offers lessons on how software organizations can take steps in that direction.Journal of Information Technology 2003 18, 195209. doi:10.1080/0268396032000122150},
 author = {Lars Mathiassen and Ingegerd Andersson and Kerstin Hanson},
 doi = {10.1080/0268396032000122150},
 journal = {Journal of Information Technology},
 month = {sep},
 number = {3},
 pages = {195--209},
 publisher = {{SAGE} Publications},
 title = {Service Provision in a Software Technology Unit},
 url = {https://doi.org/10.1080%2F0268396032000122150},
 volume = {18},
 year = {2003}
}

@article{Mathiassen_2003,
 abstract = {This paper explores the practical usage of insights on knowledge management (KM) to support innovation in a software organization. The organization has for some time engaged in software process improvement (SPI) initiatives to improve its operation. The paper applies two complementary approaches to KM, the codified and the personalized, to evaluate current KM practices and to improve its SPI practices. Based on the insights from the case we review key principles within SPI and evaluate the applied KM approaches. We conclude that it is advisable for SPI efforts to explicitly address KM issues. Each software organization has to find its own balance between personalized and codified approaches, this balance needs to be dynamically adjusted as the organization matures, and the adopted KM approach should differentiate between different types of SPI services.},
 author = {Lars Mathiassen and Pouya Pourkomeylian},
 doi = {10.1108/13673270310477298},
 journal = {Journal of Knowledge Management},
 month = {may},
 number = {2},
 pages = {63--80},
 publisher = {Emerald},
 title = {Managing knowledge in a software organization},
 url = {https://doi.org/10.1108%2F13673270310477298},
 volume = {7},
 year = {2003}
}

@article{Mathiassen_2005,
 abstract = {The complex and problematic relationship between software development methods and practices is well documented. Methods are difficult to adopt. There are several barriers toward successfully bringing methods to practice, and practices are, by the end of the day, quite different from method prescriptions. Methods are, however, continually developed, and organisations spend considerable resources trying to improve practices through adoption of new methods. We know relatively little about the long-term dynamics involved in such adoption efforts. This research reports from a three-year effort within an IT department of a large multinational company in which a new method was first introduced, then used to support organisation-wide projects, and subsequently extended based on emerging practices. The study applies two complementary knowledge management perspectives networks and networking to interpret the experiences from the case. The study reveals how method perceptions and approaches shift radically through different stages of software method adoption.},
 author = {Lars Mathiassen and Lasse Vogelsang},
 doi = {10.1504/ijbis.2005.007402},
 journal = {International Journal of Business Information Systems},
 number = {1/2},
 pages = {102},
 publisher = {Inderscience Publishers},
 title = {Managing knowledge in software method adoption},
 url = {https://doi.org/10.1504%2Fijbis.2005.007402},
 volume = {1},
 year = {2005}
}

@article{Mathiassen_2008,
 abstract = {Systems development projects are complex collaborative efforts in which actors create and share knowledge across organisational boundaries and over time. We know, however, little about how knowledge is created and shared in systems development projects and how adopted development approaches shape knowledge management practices. This research draws upon concepts from knowledge management and organisational learning to investigate the complex dynamics between knowledge creation and sharing in a systems development project. Based on an analysis of both quantitative and qualitative data from the project, the research shows that the adopted approach rely on simplified notions of knowledge creation and sharing that do not take into account the dynamic relationships between the two, and neglect the factors that facilitates or inhibits them. These findings suggest important lessons on how to balance knowledge creation and sharing in systems development and they suggest that we need to critically rethink contemporary approaches to systems development.},
 author = {Lars Mathiassen and Keld Pedersen},
 doi = {10.1504/ijbis.2008.016050},
 journal = {International Journal of Business Information Systems},
 number = {1},
 pages = {1},
 publisher = {Inderscience Publishers},
 title = {Knowledge creation and sharing in a systems development project},
 url = {https://doi.org/10.1504%2Fijbis.2008.016050},
 volume = {3},
 year = {2008}
}

@article{Mathiassen_2008,
 abstract = {},
 author = {Lars Mathiassen and Keld Pedersen},
 doi = {10.17705/1cais.02327},
 journal = {Communications of the Association for Information Systems},
 publisher = {Association for Information Systems},
 title = {Managing Uncertainty in Organic Development Projects},
 url = {https://doi.org/10.17705%2F1cais.02327},
 volume = {23},
 year = {2008}
}

@article{Mathiassen_2012,
 abstract = {Examining action research publications in leading Information Systems journals as a particular genre of research communication, we develop the notion of style composition to understand how authors structure their arguments for a research contribution. We define style composition as the activity through which authors select, emphasize, and present elements of their research to establish premises, develop inferences, and present contributions in publications. Drawing on this general notion, we identify a set of styles that is characteristic of how IS action researchers compose their argument. Premise styles relate to the dual goals of action research through practical or theoretical positioning of the argument; inference styles combine insights from the problem-solving and the research cycles through inductive or deductive reasoning; and contribution styles focus on different types of contributions--experience report, field study, theoretical development, problemsolving method, and research method. Based on the considered sample, we analyze the styles adopted in selected publications and show that authors have favored certain styles while leaving others underexplored; further, we reveal important strengths and weaknesses in the composition of styles within the IS discipline. Based on these insights, we discuss how action research practices and writing can be improved, as well as how to further develop style compositions to support the publication of engaged scholarship research.},
 author = {Mathiassen and  Chiasson and  Germonprez},
 doi = {10.2307/41703459},
 journal = {{MIS} Quarterly},
 number = {2},
 pages = {347},
 publisher = {{JSTOR}},
 title = {Style Composition in Action Research Publication},
 url = {https://doi.org/10.2307%2F41703459},
 volume = {36},
 year = {2012}
}

@article{Mathiassen_2013,
 abstract = {Information Systems (IS) is a profession-based discipline that constantly seeks new ways to bridge the practice-research gap. These efforts include enacting scholar-practitioner roles across institutional boundaries, developing and disseminating new knowledge, and engaging professionally qualified doctoral students. Against this backdrop, we provide a confessional account of 10 years of Collaborative Practice Research (CPR) between Anna, an IS practitioner, and Lars, an IS researcher. The collaboration was initiated when Anna, while working full-time, engaged as doctoral student with Lars as supervisor. Combining social process modeling with theories of change and learning, we show how Anna and Lars responded to the experienced challenges and opportunities, how Anna's action strategies developed as she grew into becoming a practitioner-researcher, how the collaboration impacted the practice context, and, how the research resulted in traditional publication outcomes. On the basis of these analyses, we discuss how to engage professionally qualified doctoral students within the IS discipline. In addition, we offer lessons on how CPR can help bridge the practice-research gap as a path towards becoming a practitioner-researcher.},
 author = {Lars Mathiassen and Anna Sandberg},
 doi = {10.1057/ejis.2012.35},
 journal = {European Journal of Information Systems},
 month = {jul},
 number = {4},
 pages = {475--492},
 publisher = {Informa {UK} Limited},
 title = {How a professionally qualified doctoral student bridged the practice-research gap: a confessional account of Collaborative Practice Research},
 url = {https://doi.org/10.1057%2Fejis.2012.35},
 volume = {22},
 year = {2013}
}

@article{Mathiassen_2020,
 abstract = {To advance knowledge about evolution of practices within a software organisation, we offer a retrospective reflection based on several years of research into a software unit at Ericsson AB. Covering 16 years of evolution, we developed multiple publications from continuously expanding sources of software technology implementation data. While these publications report from specific junctures of software practice evolution at the unit, our retrospective reflection allows us to consider the impacts of the unit’s investments into two technology paradigms over the sixteen-year period: first into CMM-RUP with a focus on discipline and structured practices and years later into Agile-Lean with a focus on flexibility and responsive practices. Hence, we adopt retrospective reflection to investigate how imprints from the two paradigms, despite considerable timespan between the related technology implementations, eventually complemented each other in the unit’s software practices. Because one paradigm focuses on discipline and structured practices and the other on flexibility and responsive practices, our retrospective reflections consider how the two paradigms together impacted the software unit’s ambidextrous capability. As a result, we advance the idea that as software organisations over time invest in complementary technology paradigms they leave important technology traces with sustainable impacts on their software practices.},
 author = {Lars Mathiassen and Anna Sandberg},
 doi = {10.1080/0960085x.2020.1832867},
 journal = {European Journal of Information Systems},
 month = {oct},
 number = {6},
 pages = {642--658},
 publisher = {Informa {UK} Limited},
 title = {Complementary Technology Traces in Software Practice: A Retrospective Reflection over Sixteen Years of Evolution at Ericsson},
 url = {https://doi.org/10.1080%2F0960085x.2020.1832867},
 volume = {30},
 year = {2020}
}

@inproceedings{McGee_2011,
 abstract = {Although a number of requirements change classifications have been proposed in the literature, there is no empirical assessment of their practical value in terms of their capacity to inform change monitoring and management. This paper describes an investigation of the informative efficacy of a taxonomy of requirements change sources which distinguishes between changes arising from `market', `organisation', `project vision', `specification' and `solution'. This investigation was effected through a case study where change data was recorded over a 16 month period covering the development lifecycle of a government sector software application. While insufficiency of data precluded an investigation of changes arising due to the change source of `market', for the remainder of the change sources, results indicate a significant difference in cost, value to the customer and management considerations. Findings show that higher cost and value changes arose more often from `organisation' and `vision' sources; these changes also generally involved the co-operation of more stakeholder groups and were considered to be less controllable than changes arising from the `specification' or `solution' sources. Overall, the results suggest that monitoring and measuring change using this classification is a practical means to support change management, understanding and risk visibility.},
 author = {Sharon McGee and Des Greer},
 booktitle = {2011 {IEEE} 19th International Requirements Engineering Conference},
 doi = {10.1109/re.2011.6051641},
 month = {aug},
 publisher = {{IEEE}},
 title = {Software requirements change taxonomy: Evaluation by case study},
 url = {https://doi.org/10.1109%2Fre.2011.6051641},
 year = {2011}
}

@article{Melin_2016,
 abstract = {},
 author = {Ulf Melin and Karin Axelsson},
 doi = {10.1108/jsit-10-2015-0074},
 journal = {Journal of Systems and Information Technology},
 month = {may},
 number = {2},
 pages = {118--147},
 publisher = {Emerald},
 title = {Action in action research},
 url = {https://doi.org/10.1108%2Fjsit-10-2015-0074},
 volume = {18},
 year = {2016}
}

@article{Moll_ri_2019,
 abstract = {**Context:** Empirical research in software engineering contributes towards developing scientific knowledge in this field, which in turn is relevant to inform decision-making in industry. A number of empirical studies have been carried out to date in software engineering, and the need for guidelines for conducting and evaluating such research has been stressed.

**Objective:** The main goal of this mapping study is to identify and summarize the body of knowledge on research guidelines, assessment instruments and knowledge organization systems on how to conduct and evaluate empirical research in software engineering.

**Method:** A systematic mapping study employing manual search and snowballing techniques was carried out to identify the suitable papers. To build up the catalog, we extracted and categorized information provided by the identified papers.

**Results:** The mapping study comprises a list of 341 methodological papers, classified according to research methods, research phases covered, and type of instrument provided. Later, we derived a brief explanatory review of the instruments provided for each of the research methods.

**Conclusion:** We provide: an aggregated body of knowledge on the state of the art relating to guidelines, assessment instruments and knowledge organization systems for carrying out empirical software engineering research; an exemplary usage scenario that can be used to guide those carrying out such studies is also provided. Finally, we discuss the catalog’s implications for research practice and the needs for further research.},
 author = {Jefferson Seide Moll{\'{e}}ri and Kai Petersen and Emilia Mendes},
 doi = {10.1016/j.infsof.2018.08.008},
 journal = {Information and Software Technology},
 month = {jan},
 pages = {117--149},
 publisher = {Elsevier {BV}},
 title = {{CERSE} - Catalog for empirical research in software engineering: A Systematic mapping study},
 url = {https://doi.org/10.1016%2Fj.infsof.2018.08.008},
 volume = {105},
 year = {2019}
}

@inproceedings{Mpofu_2019,
 abstract = {},
 author = {Patience Mpofu and Colin Chibaya and Taurayi Rupere},
 booktitle = {2019 International Multidisciplinary Information Technology and Engineering Conference ({IMITEC})},
 doi = {10.1109/imitec45504.2019.9015847},
 month = {nov},
 publisher = {{IEEE}},
 title = {A hybrid {RSA}-{DH} cipher for Signed Encrypted Messages},
 url = {https://doi.org/10.1109%2Fimitec45504.2019.9015847},
 year = {2019}
}

@incollection{Nagle_2017,
 abstract = {Building on two previous papers that focused on the concept of Practitioner Design Science Research [1, 2], this paper: (i) presents the Practitioners Design Science Research (PDSR) Canvas, a visual guide for practitioners undertaking DSR, and (ii) utilises it as a lens to analyse the insights of 48 practitioners on their DSR journey. Data is primarily gathered from 48 practitioners, of which, 34 have completed a 12-month Design Science Research study, with the other 14 in the final stages of their journey. This unique practitioner perspective further develops the novel concept of PDSR which enables practitioners to engage with the academic community and not the other way around. Key findings show that practitioners have challenges with the practical (relevance) aspects of DSR as well as the research (rigour) aspects. Nonetheless, the analysis indicates that with a clear depiction of DSR, the gap between practice and research may not be as difficult to bridge as previously thought. However, this requires the IS community to rethink their definition of engaged scholarship from one that solely focuses on the academic as the researcher to one that also includes the practitioner.},
 author = {Tadhg Nagle and David Sammon and Cathal Doyle},
 booktitle = {Lecture Notes in Computer Science},
 doi = {10.1007/978-3-319-59144-5_25},
 pages = {414--428},
 publisher = {Springer International Publishing},
 title = {Insights into Practitioner Design Science Research},
 url = {https://doi.org/10.1007%2F978-3-319-59144-5_25},
 year = {2017}
}

@article{Naidu_2017,
 abstract = {Small programming consultancy organizations need to use their position in the market to remain in front of their rivals. Keeping in mind the end goal to survive, the arrangements gave by their experts must be of such quality that makes their clients come back to the organization when they require help with another venture, and the arrangements ought to guarantee a decent notoriety for the organization that draws in new clients. To guarantee high caliber in the frameworks created, organizations are subject to a decent programming improvement process. The principle parts of this procedure can be arranged out ahead of time and utilized on the whole in a firm with a specific end goal to guarantee quality, yet in each venture you will most likely keep running into circumstances where it is imperative to have the capacity to extemporize so as to keep the venture on tracks. This is particularly valid for little programming escalated organizations in turbulent conditions.},
 author = {Murali Krishna Naidu and Ch. Divakar},
 doi = {10.23956/ijarcsse/v7i7/0229},
 journal = {International Journal of Advanced Research in Computer Science and Software Engineering},
 month = {jul},
 number = {7},
 pages = {380},
 publisher = {Advance Academic Publisher},
 title = {Mentoring Programs for Knowledge Convey in a Small Software Industries},
 url = {https://doi.org/10.23956%2Fijarcsse%2Fv7i7%2F0229},
 volume = {7},
 year = {2017}
}

@article{Napier_2008,
 abstract = {Many software organizations engage in software process improvement (SPI), but process descriptions may soon become outdated especially if the organization, for a while, has given low priority to SPI. As a result, software organizations may need to re-engineer process descriptions that are inconsistent with desired process practices. While the literature addresses how organizations can re-engineer business processes and legacy systems, no guidance exists on re-engineering legacy process descriptions. Software process re-engineering (SPR) is a transitional activity that helps organizations effectively re-engage in SPI by assessing legacy process descriptions; selecting process descriptions that need to be removed, innovated, or implemented; and defining a plan to align process descriptions with desired process practices. SPR results in a repository of managed process descriptions and a plan for disciplined software process management. In this article, we derive principles for SPR, use these principles to propose a model for re-engineering legacy process descriptions, and present an industrial case study to demonstrate the effectiveness of the model. In the presented case, SPR had several benefits: it leveraged earlier investments in SPI; it engaged key stakeholders in revitalizing improvement efforts; it created a shared understanding of the organization's desired process practices; and, it established a solid platform for continued SPI. Copyright © 2008 John Wiley & Sons, Ltd.},
 author = {Nannette P. Napier and Jonathan Kim and Lars Mathiassen},
 doi = {10.1002/spip.390},
 journal = {Software Process: Improvement and Practice},
 month = {sep},
 number = {5},
 pages = {451--471},
 publisher = {Wiley},
 title = {Software process re-engineering: a model and its application to an industrial case study},
 url = {https://doi.org/10.1002%2Fspip.390},
 volume = {13},
 year = {2008}
}

@article{Napier_2009,
 abstract = {},
 author = {N.P. Napier and L. Mathiassen and R.D. Johnson},
 doi = {10.1109/tse.2009.33},
 journal = {{IEEE} Transactions on Software Engineering},
 month = {sep},
 number = {5},
 pages = {593--606},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Combining Perceptions and Prescriptions in Requirements Engineering Process Assessment: An Industrial Case Study},
 url = {https://doi.org/10.1109%2Ftse.2009.33},
 volume = {35},
 year = {2009}
}

@article{Napier_2011,
 abstract = {Software organizations increasingly face contradictory strategic choices as they develop customized and packaged solutions for the market. They need to improve efficiency of development processes while at the same time adapting to emerging customer needs; they need to exploit software products in relation to existing customers while simultaneously exploring new technology and market opportunities; and, they need to consider both incremental and radical innovations. While the integration of such opposing strategies requires software organizations to become ambidextrous, there is limited actionable advice on how managers can develop such capability. Against this backdrop, we report from a two-year action research study into a small software firm, TelSoft. Based on Pettigrew's contextualist inquiry, we develop a framework that integrates existing theory on contextual ambidexterity with a generic process for improving software organizations, and we apply this framework to analyze how TelSoft improved its coordination of products, projects, and innovation efforts. As a result, we offer principles for how software managers can build ambidextrous capability to improve firm-level coordination.},
 author = {Nannette P Napier and Lars Mathiassen and Daniel Robey},
 doi = {10.1057/ejis.2011.32},
 journal = {European Journal of Information Systems},
 month = {nov},
 number = {6},
 pages = {674--690},
 publisher = {Informa {UK} Limited},
 title = {Building contextual ambidexterity in a software company to improve firm-level coordination},
 url = {https://doi.org/10.1057%2Fejis.2011.32},
 volume = {20},
 year = {2011}
}

@incollection{Narayanaswamy,
 abstract = {The debate between rigor and relevance in information systems research has motivated methodological pluralism in the information
systems field. In the recent years IS researchers have applied various methodologies; one such method that is gaining prominence
is action research. As qualitative method that emphasis collaboration between researchers and practitioners’ action research
has been applied to study IS in various organizational settings. In this chapter we address the issues associated with action
research. In doing this we develop a set of criteria to assess the quality of information systems action research. We then
provide recommendations to improve both the incidence and the quality of action research in the field.},
 author = {Ravi Narayanaswamy and Varun Grover},
 booktitle = {Information Systems Action Research},
 doi = {10.1007/978-0-387-36060-7_14},
 pages = {327--353},
 publisher = {Springer {US}},
 title = {A Critical Assessment of Information Systems Action Research},
 url = {https://doi.org/10.1007%2F978-0-387-36060-7_14}
}

@article{Ndayikengurukiye_2022,
 abstract = {Recommender systems (RS) have emerged as a means of providing relevant content to users, whether in social networking, health, education, or elections. Furthermore, with the rapid development of cloud computing, Big Data, and the Internet of Things (IoT), the component of all this is that elections are controlled by open and accountable, neutral, and autonomous election management bodies. The use of technology in voting procedures can make them faster, more efficient, and less susceptible to security breaches. Technology can ensure the security of every vote, better and faster automatic counting and tallying, and much greater accuracy. The election data were combined by different websites and applications. In addition, it was interpreted using many recommendation algorithms such as Machine Learning Algorithms, Vector Representation Algorithms, Latent Factor Model Algorithms, and Neighbourhood Methods and shared with the election management bodies to provide appropriate recommendations. In this paper, we conduct a comparative study of the algorithms applied in the recommendations of Big data architectures. The results show us that the K-NN model works best with an accuracy of 96%. In addition, we provided the best recommendation system is the hybrid recommendation combined by content-based filtering and collaborative filtering uses similarities between users and items.},
 author = {Aristide Ndayikengurukiye and Abderrahmane Ez-zahout and Akou Aboubakr and Youssef Charkaoui and Omary Fouzia},
 doi = {10.14313/jamris/4-2021/28},
 journal = {Journal of Automation, Mobile Robotics and Intelligent Systems},
 month = {sep},
 pages = {65--75},
 publisher = {{PIAP} - Industrial Research Institute for Automation and Measurements},
 title = {Resource Optimisation in Cloud Computing: Comparative Study of Algorithms Applied to Recommendations in a Big Data Analysis Architecture},
 url = {https://doi.org/10.14313%2Fjamris%2F4-2021%2F28},
 year = {2022}
}

@article{Ngai_2013,
 abstract = {},
 author = {E.W.T Ngai and D.C.K. Chau and J.K.L. Poon and C.K.M. To},
 doi = {10.1016/j.ijpe.2012.12.018},
 journal = {International Journal of Production Economics},
 month = {dec},
 number = {2},
 pages = {453--464},
 publisher = {Elsevier {BV}},
 title = {Energy and utility management maturity model for sustainable manufacturing process},
 url = {https://doi.org/10.1016%2Fj.ijpe.2012.12.018},
 volume = {146},
 year = {2013}
}

@article{Ngwenyama_2010,
 abstract = {Software Process Improvement (SPI) projects are large-scale, complex organization-wide change initiatives. They require considerable investments in personnel, time and money and impact just about every aspect of software firms. The group charged with conducting an SPI project has, however, little formal authority to influence or force software professionals to engage in SPI work or to define and implement changes. The SPI literature suggests that successful SPI initiatives depend on strong commitment from top management. But what should the SPI group do if management support is weak? In this paper, we present an analysis of how an SPI group can use alliances to obtain influence and succeed when management support is weak. Our study is based on a 3-year longitudinal field study of SPI change initiatives at Denmark Electronics. Our findings show that a lack of top management support is not necessarily incompatible with success. This research opens an important new area of research on intra-organizational alliances and information system (IS) implementation. It has the potential to offer new theories and practical advice on how IS implementation projects can be more effectively managed.},
 author = {Ojelanki Ngwenyama and Jacob N{\o}rbjerg},
 doi = {10.1057/ejis.2010.18},
 journal = {European Journal of Information Systems},
 month = {jun},
 number = {3},
 pages = {303--319},
 publisher = {Informa {UK} Limited},
 title = {Software process improvement with weak management support: an analysis of the dynamics of intra-organizational alliances in {IS} change initiatives},
 url = {https://doi.org/10.1057%2Fejis.2010.18},
 volume = {19},
 year = {2010}
}

@article{Ngwenyama_2014,
 abstract = {A fundamental tenet of the information systems (IS) discipline holds that: (a) a lack
of formal power and influence over the organization targeted for change, (b) weak
support from top management, and (c) organizational memories of prior failures
are barriers to implementation success. Our research, informed by organization
influence, compellingly illustrates that such conditions do not necessarily doom a
project to failure. In this paper, we present an analysis of how an IS implementation
team designed and enacted a coordinated strategy of organizational influence to
achieve implementation success despite these barriers. Our empirical analysis also
found that technology implementation and change is largely an organizational
influence process (OIP), and thus technical-rational approaches alone are
inadequate for achieving success. Our findings offer managers important insights
into how they can design and enact OIPs to effectively manage IS implementation.
Further, we show how the theory of organizational influence can enhance
understanding of IS implementation dynamics and advance the development of a
theory of effective IS change agentry.},
 author = {Ojelanki Ngwenyama and Peter Axel Nielsen},
 doi = {10.1057/ejis.2012.56},
 journal = {European Journal of Information Systems},
 month = {mar},
 number = {2},
 pages = {205--222},
 publisher = {Informa {UK} Limited},
 title = {Using organizational influence processes to overcome {IS} implementation barriers: lessons from a longitudinal case study of {SPI} implementation},
 url = {https://doi.org/10.1057%2Fejis.2012.56},
 volume = {23},
 year = {2014}
}

@incollection{Nielsen,
 abstract = {There is little agreement on which criteria should be used in the design and evaluation of IS action research. Much action
research is not at all explicit about the applied criteria. This chapter seeks to remedy this by eliciting from twenty odd
years of action research six criteria. The epistemology of action research has traces back to pragmatism and with this as
background the six criteria are presented and illustrated through a piece of recent action research. The contributions of
the chapter are the six criteria, how to model these in their context of research activities and research contributions, and
how to understand these criteria in a pragmatist view.},
 author = {Peter Axel Nielsen},
 booktitle = {Information Systems Action Research},
 doi = {10.1007/978-0-387-36060-7_15},
 pages = {355--375},
 publisher = {Springer {US}},
 title = {Is Action Research and Its Criteria},
 url = {https://doi.org/10.1007%2F978-0-387-36060-7_15}
}

@incollection{Nielsen,
 abstract = {Software process improvement in small, agile organizations is often problematic. Model-based approaches seem to overlook problems. We have been seeking an alternative approach to overcome this through action research. Here we report on a piece of action research from which we developed an approach to map social networks and suggest how it can be used in software process improvement. We applied the mapping approach in a small software company to support the realization of new ways of improving software processes. The mapping approach was found useful in improving social networks, and thus furthers software process improvement. Full Text at Springer, may require registration or fee},
 author = {Peter Axel Nielsen and Gitte Tj{\o}rneh{\o}j},
 booktitle = {{IFIP} International Federation for Information Processing},
 doi = {10.1007/0-387-25590-7_5},
 pages = {73--90},
 publisher = {Kluwer Academic Publishers},
 title = {Mapping Social Networks in Software Process Improvement: An Action Research Study},
 url = {https://doi.org/10.1007%2F0-387-25590-7_5}
}

@article{Nielsen_2009,
 abstract = {Software process improvement in small organisation is often problematic and communication and knowledge sharing is more informal. To improve software processes we need to understand how they communicate and share knowledge. In this article have studied the company SmallSoft through action research. In the action research we have applied the framework of social network analysis and we show this can be used to understand the underlying structures of communication and knowledge sharing between software developers and managers. We show in detail how the analysis can be done and how the management can utilise the findings. From this we conclude that social network analysis was a useful framework together with accompanying tools and techniques. Copyright © 2009 John Wiley & Sons, Ltd.},
 author = {Peter Axel Nielsen and Gitte Tj{\o}rneh{\o}j},
 doi = {10.1002/spip.419},
 journal = {Journal of Software Maintenance and Evolution: Research and Practice},
 month = {may},
 number = {1},
 pages = {33--51},
 publisher = {Wiley},
 title = {Social networks in software process improvement},
 url = {https://doi.org/10.1002%2Fspip.419},
 volume = {22},
 year = {2009}
}

@inproceedings{Nielsen_2012,
 abstract = {Effective management of value creation with information technology (IT) is increasingly important for local governments (e.g., municipalities). The business case is a tool that has increased popularity in both the public and private sector to support the management of value creation with IT. However, experiences from local government reveal difficulties in developing effective IT business cases beyond simple cost savings. Based on collaborative action research with Danish municipalities we present insights on contemporary IT business case practices. Based on these insights we formulate lessons for business case practices in local government that we have incorporated into a business case method, that has subsequently been evaluated by IT managers in local government. These lessons have been synthesized into the four principles: minimal contents, benefits ownership, dynamic utility, and social commitment. We argue that these principles improve the content, development, and use of IT business cases in local government.},
 author = {Peter Axel Nielsen and John Stouby Persson},
 booktitle = {2012 45th Hawaii International Conference on System Sciences},
 doi = {10.1109/hicss.2012.393},
 month = {jan},
 publisher = {{IEEE}},
 title = {{IT} Business Cases in Local Government: An Action Research Study},
 url = {https://doi.org/10.1109%2Fhicss.2012.393},
 year = {2012}
}

@article{Nielsen_2016,
 abstract = {“Is this the problem?”: the question that haunts many information systems (IS) researchers when they pursue work relevant to both practice and research. Nevertheless, a deliberate answer to this question requires more than simply asking the involved IS practitioners. Deliberately formulating problems requires a more substantial engagement with the different stakeholders, especially when their problems are ill structured and situated in complex organizational settings. On this basis, we present an engaged approach to formulating IS problems with, not for, IS practitioners. We have come to understand engaged problem formulation as joint researching and as the defining of contemporary and complex problems by researchers and those practitioners who experience and know these problems. We used this approach in investigating IS management in Danish municipalities. In this paper, we present the approach to formulating problems in an engaged way. We discuss it in relation to ideas and assumptions that underpin engaged scholarship, and we discuss the implications for IS action research, design science research, and mixed approaches.},
 author = {Peter Axel Nielsen and   and John Stouby Persson and},
 doi = {10.17705/1cais.03835},
 journal = {Communications of the Association for Information Systems},
 pages = {720--737},
 publisher = {Association for Information Systems},
 title = {Engaged Problem Formulation in {IS} Research},
 url = {https://doi.org/10.17705%2F1cais.03835},
 volume = {38},
 year = {2016}
}

@article{Nielsen_2017,
 abstract = {Business cases have become popular as part of managing value creation in IS projects. Nevertheless, business cases are often poorly linked to value creation activities and organizations struggle to develop business cases that are useful and express more than simple cost savings. This action research study seeks to improve the usefulness of business cases in IS projects. We used collaborative action research with Danish municipalities to improve their practices when developing and using business cases and to change their perceptions of what constitutes a good business case that is useful during implementation and value creation. This article presents lessons learned from our action research, lessons that we incorporated into a business case method and subsequently evaluated with IS managers. There are three lessons on: (1) improving the content of business cases, (2) how to develop business cases, and (3) the use of business cases in subsequent value creation. These lessons summarize our findings and the contributions are that we in the business case method propose to: (1) include minimal contents, (2) develop social commitment, and (3) structure for dynamic use during value creation. We discuss the lessons and contributions related to research on IS business cases and value creation.},
 author = {Peter Axel Nielsen and John Stouby Persson},
 doi = {10.1057/s41303-016-0026-x},
 journal = {European Journal of Information Systems},
 month = {jan},
 number = {1},
 pages = {66--83},
 publisher = {Informa {UK} Limited},
 title = {Useful business cases: value creation in {IS} projects},
 url = {https://doi.org/10.1057%2Fs41303-016-0026-x},
 volume = {26},
 year = {2017}
}

@incollection{Nielsen_2020,
 abstract = {This paper is based on the interest to see how problems are addressed in information systems design research. Problems addressed by design research are often implicit, sometimes open, and sometimes even underdeveloped. Problem-solving processes, action research and in a broader sense, engaged scholarship all encompass the explicit addressing of problems and investigation problem situations. Such a problem-orientation is to a lesser degree part of design research. In this paper, we will investigate how we can provide a better understanding of problematizing in design research; and in particular what we may learn from other approaches with a stronger problem-orientation.},
 author = {Peter Axel Nielsen},
 booktitle = {Designing for Digital Transformation. Co-Creating Services with Citizens and Industry},
 doi = {10.1007/978-3-030-64823-7_24},
 pages = {259--271},
 publisher = {Springer International Publishing},
 title = {Problematizing in {IS} Design Research},
 url = {https://doi.org/10.1007%2F978-3-030-64823-7_24},
 year = {2020}
}

@article{Nilsson_2013,
 abstract = {In this article, we report from a 22-months long action research study in which we evaluate the usefulness of a set of software development tools in an industrial setting, a small software company. We focus on how developers in the industry use and adopt these tools, what expectations they have on them, how the tools can be improved, and how the adoption process itself can be improved. We describe these change processes from a methodological perspective, how we monitored the processes, how we reviewed the outcomes, and the strategies that we applied. We show how the processes evolved, intermediate results, and the steps that were taken along the way based on the outcomes. We believe that the described study may inspire other tool-developers and/or researchers to organize similar studies to further our understanding of the complex processes involved in the adoption of software development tools in industry.},
 author = {Agneta Nilsson and Laura M. Castro and Samuel Rivas and Thomas Arts},
 doi = {10.1007/s10009-013-0275-0},
 journal = {International Journal on Software Tools for Technology Transfer},
 month = {apr},
 number = {1},
 pages = {1--16},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Assessing the effects of introducing a new software development process: a methodological description},
 url = {https://doi.org/10.1007%2Fs10009-013-0275-0},
 volume = {17},
 year = {2013}
}

@incollection{Nilsson_2015,
 abstract = {IT projects live in dynamic and interorganizational settings. As the project context changes, IT projects run the risk of not delivering intended utility to the organization, despite delivering according to the project plan. There is a need for IT projects to continuously align themselves with their surrounding context in order to stay relevant. In this chapter, a pragmatic model for IT project alignment is presented and demonstrated. Results show how the model can be used as a support to traditional IT project management methods. The chapter is concluded with a presentation of three projects to further the understanding of IT project alignment in practice.},
 author = {Andreas Nilsson},
 booktitle = {Advances in {IT} Personnel and Project Management},
 doi = {10.4018/978-1-4666-7473-8.ch002},
 pages = {21--47},
 publisher = {{IGI} Global},
 title = {{IT} Project Alignment in Practice},
 url = {https://doi.org/10.4018%2F978-1-4666-7473-8.ch002},
 year = {2015}
}

@incollection{Nosek,
 abstract = {Usually, the action researcher is someone who is external to the organization, provides expertise in an organizational intervention,
and systematically evaluates the intervention to gain knowledge from the action. The responsibility for the research role
by researcher and practitioner within action research can vary along a continuum from where the researcher takes full responsibility
for research-oriented tasks to where the researcher coaches the practitioner in fulfilling research-oriented tasks. This chapter
explores the end of the continuum where the inside practitioner is provided with the theory and research structure to fulfill
more of the research-oriented tasks. The ill-structured problem domain of business planning is used to illustrate. Executives,
who are students within an Executive MBA Program and are also participants in organizational interventions, fulfill the role
of insider-as-researcher. Results indicate that insider action researchers can provide sensitive data to which outsider action
researchers may not have access and are capable of systematically evaluating organizational interventions.},
 author = {John Teofil Nosek},
 booktitle = {Information Systems Action Research},
 doi = {10.1007/978-0-387-36060-7_18},
 pages = {405--419},
 publisher = {Springer {US}},
 title = {Insider as Action Researcher},
 url = {https://doi.org/10.1007%2F978-0-387-36060-7_18}
}

@article{Papas_2012,
 abstract = {As Design Science (DS) establishes itself as an acceptable approach to Information Systems research, many have commented on the similarity, or otherwise, between DS and Action Research (AR). Most of the writing on this topic has been conceptual, and not grounded in practice. In this paper, we present a piece of completed research that was perceived and executed as AR, but also reflected upon as DS. The research produced a new method for diagramming electronic workflows and creating the associated digital signatures, within the domain of eGovernment. Our conclusion is that AR that produces an artefact can be quite easily, and perhaps superficially, presented as DS. Epistemologically, there is little to separate the two methodologies. However, there are some subtle differences in practice, especially with regard to the role of the artefact, the structuring of the process, the focus of evaluation of the intervention and research, and the emphasis on learning and knowledge. We provide guidance to researchers contemplating either approach, and also consider the role of pluralist attempts to combine the approaches.},
 author = {Nikolaos Papas and Robert M O{\textquotesingle}Keefe and Philip Seltsikas},
 doi = {10.1057/ejis.2011.50},
 journal = {European Journal of Information Systems},
 month = {mar},
 number = {2},
 pages = {147--159},
 publisher = {Informa {UK} Limited},
 title = {The action research$\less$i$\greater$vs$\less$/i$\greater$design science debate: reflections from an intervention in {eGovernment}},
 url = {https://doi.org/10.1057%2Fejis.2011.50},
 volume = {21},
 year = {2012}
}

@inproceedings{Peltola_2006,
 abstract = {The IEC 61499 enables different approaches for application development, and this can undermine the emerging open knowledge economy. Developers typically try to use an approach that resembles their previous programming experience, and this can result in the new features of IEC 61499 to be overlooked. Even when designers are able to turn out working software, the various components are often incompatible because they incorporate diverse design principles. In this research, we look at the different levels of the application hierarchy, in order to understand the design decisions that need to be made. We have organized a laboratory experiment with professional designers and researchers, and we use qualitative research methods to understand the design choices that participants with different backgrounds make.},
 author = {Jukka Peltola and Seppo Sierla and Mika Stromman and Kari Koskinen},
 booktitle = {2006 {IEEE} International Conference on Industrial Informatics},
 doi = {10.1109/indin.2006.275757},
 month = {aug},
 publisher = {{IEEE}},
 title = {Process Control with {IEC} 61499: Designers{\textquotesingle} Choices at Different Levels of the Application Hierarchy},
 url = {https://doi.org/10.1109%2Findin.2006.275757},
 year = {2006}
}

@incollection{Pessi_2014,
 abstract = {Enterprise Architecture (EA) has emerged as the preeminent means to change and transform large organizations. By employing architectural principles, organizations strive to master the complexity inherent in business processes and information system and their alignment. Despite the fact that Business-IT alignment has been a top concern for practitioners and researchers for years, the emergent nature of alignment in EA has rarely been taken into consideration. Even if different approaches focus on business IT alignment, most of them have a tendency to focus on alignment as a state or a process by focusing on strategy or organizational issues. Moreover, very few existing EA Frameworks give clear guidance on how to design and manage these alignment issues. In this paper we argue that the choice of architectural principles has an impact on the ability to achieve and maintain sustainable EA alignment in a dynamic business context. A case study is used as a basis for the analysis.},
 author = {Kalevi Pessi and Mats-{\AA}ke Hugoson and Thanos Magoulas and Aida Hadzic},
 booktitle = {Business Information Systems Workshops},
 doi = {10.1007/978-3-319-11460-6_19},
 pages = {214--225},
 publisher = {Springer International Publishing},
 title = {Sustainable Alignment in Enterprise Architecture: A Case Study of Architectural Principles},
 url = {https://doi.org/10.1007%2F978-3-319-11460-6_19},
 year = {2014}
}

@article{Pino_2015,
 abstract = {Establishing a research strategy that is suitable for undertaking research on software engineering is vital if we are to guarantee that research products are developed and validated following a systematic and coherent method. We took this into account as we carried out the COMPETISOFT research project, which investigated software process improvement (SPI) in the context of Latin American small companies. That experience has enabled us to develop a research strategy based on the integrated use of action research and case study methods. This paper introduces the proposed research strategy and provides extensive discussion of its application for: (1) developing the Methodological framework of COMPETISOFT for SPI, (2) putting this framework into practice in eight small software companies, and (3) refine the Methodological framework due to the practice feedback. The use of this research strategy allowed us to observe that it was suitable for developing, refining, improving, applying, and validating COMPETISOFT’s Methodology framework. Furthermore, having seen it applied, we believe that this strategy offers a successful integration of action research and case study, which can be useful for conducting research in other software engineering areas which address needs of small software companies.},
 author = {Francisco J. Pino and Fel{\'{\i}}x Garc{\'{\i}}a and Mario Piattini and Hanna Oktaba},
 doi = {10.1007/s11219-015-9278-2},
 journal = {Software Quality Journal},
 month = {may},
 number = {3},
 pages = {489--518},
 publisher = {Springer Science and Business Media {LLC}},
 title = {A research framework for building {SPI} proposals in small organizations: the {COMPETISOFT} experience},
 url = {https://doi.org/10.1007%2Fs11219-015-9278-2},
 volume = {24},
 year = {2015}
}

@incollection{Pourkomeylian_2002,
 abstract = {Software Process Improvement (SPI) has been shown to be a useful approach for improving an organisation’s software capabilities. One great challenge for organisations wrestling with SPI is how to institutionalise the newly created software processes in the whole organisation. Institutionalisation of soaftware processes is a matter of cultivating organisation-wide change, which has proven to be no small challenge for many organisations. Different factors such as the complexity of organisational change and culture, the human factor (resistance to change) and lack of a supporting organisation for change have caused problems in making change happen in organisations. These problems may cause delays, poor quality, cost overruns in software projects and even resistance to using new created software processes. This paper presents the results of a collaborative research study in which an institutionalisation model was created and implemented and analysed on the basis of a framework of organisational change management.},
 author = {Pouya Pourkomeylian},
 booktitle = {New Perspectives on Information Systems Development},
 doi = {10.1007/978-1-4615-0595-2_4},
 pages = {43--57},
 publisher = {Springer {US}},
 title = {An Approach to Institutionalisation of Software Processes},
 url = {https://doi.org/10.1007%2F978-1-4615-0595-2_4},
 year = {2002}
}

@article{Raven_2010,
 abstract = {The investigators worked together with permanent residents of Roatán, Honduras on sustainable initiatives to help improve the island’s troubled educational programs. Our initiatives focused on increasing the number of students eligible and likely to attend a university. Using a methodology based in continuous process improvement, we developed tutoring programs, college preparation workshops, long-term plans for a local school, and solicited involvement by an island educational coalition. Lessons learned from these initiatives may be used to expand other efforts on the island and can be generalized to other programs in Central America.},
 author = {Arjan Raven and Adriane B. Randolph and Shelli Heil},
 doi = {10.19030/cier.v3i1.159},
 journal = {Contemporary Issues in Education Research ({CIER})},
 month = {nov},
 number = {1},
 pages = {31},
 publisher = {Clute Institute},
 title = {Creating Sustainable Education Projects In Roat, Honduras Through Continuous Process Improvement},
 url = {https://doi.org/10.19030%2Fcier.v3i1.159},
 volume = {3},
 year = {2010}
}

@incollection{Reed_2009,
 abstract = {},
 author = {Jan Reed and Agneta Nilsson and Lena Holmberg},
 booktitle = {Handbook of Research on Information Technology Management and Clinical Data Administration in Healthcare},
 doi = {10.4018/978-1-60566-356-2.ch039},
 pages = {631--645},
 publisher = {{IGI} Global},
 title = {Appreciative Inquiry},
 url = {https://doi.org/10.4018%2F978-1-60566-356-2.ch039},
 year = {2009}
}

@article{Reichelt_2016,
 abstract = {This article reflects critically on the use of a wiki as a data repository for knowledge transfer and as a mediating technical platform for social learning in the context of a multi-country programme of agricultural research for development. The wiki was designed to foster sustainable social learning and an emergent community of practice among biophysical and social researchers acting for the first time as co-researchers. Over time, the technologically mediated element of the learning system was judged to have failed. The article is based on an inquiry that asked ‘How can learning system design cultivate learning opportunities and respond to learning challenges in an online environment to support research for development practice?’ The article also considers the wider context and institutional setting in which the knowledge work took place.},
 author = {NT Reichelt and PJ Wallis and RL Ison and J Davies and P Carberry and A Sparrow and A Hall and Y Maru},
 doi = {10.1177/0030727016675693},
 journal = {Outlook on Agriculture},
 month = {nov},
 number = {4},
 pages = {238--245},
 publisher = {{SAGE} Publications},
 title = {Mediating boundaries between knowledge and knowing},
 url = {https://doi.org/10.1177%2F0030727016675693},
 volume = {45},
 year = {2016}
}

@article{Reichelt_2016,
 abstract = {This article reflects critically on the use of a wiki as a data repository for knowledge transfer and as a mediating technical platform for social learning in the context of a multi-country programme of agricultural research for development. The wiki was designed to foster sustainable social learning and an emergent community of practice among biophysical and social researchers acting for the first time as co-researchers. Over time, the technologically mediated element of the learning system was judged to have failed. The article is based on an inquiry that asked ‘How can learning system design cultivate learning opportunities and respond to learning challenges in an online environment to support research for development practice?’ The article also considers the wider context and institutional setting in which the knowledge work took place.},
 author = {NT Reichelt and PJ Wallis and RL Ison and J Davies and P Carberry and A Sparrow and A Hall and Y Maru},
 doi = {10.1177/0030727016675693},
 journal = {Outlook on Agriculture},
 month = {nov},
 number = {4},
 pages = {238--245},
 publisher = {{SAGE} Publications},
 title = {Mediating boundaries between knowledge and knowing},
 url = {https://doi.org/10.1177%2F0030727016675693},
 volume = {45},
 year = {2016}
}

@article{Rico_2021,
 abstract = {},
 author = {Sergio Rico and Elizabeth Bjarnason and Emelie Engström and Martin Höst and Per Runeson},
 doi = {10.1002/smr.2372},
 journal = {Journal of Software: Evolution and Process},
 month = {jul},
 number = {10},
 publisher = {Wiley},
 title = {A case study of industry{\textendash}academia communication in a joint software engineering research project},
 url = {https://doi.org/10.1002%2Fsmr.2372},
 volume = {33},
 year = {2021}
}

@article{Rohde_2017,
 abstract = {In this paper, we propose Grounded Design – a particular design research (DR) approach rooted in a practice-theoretical tradition. It assesses the quality of information technology (IT) design through evaluation of emerging changes in social practices, which result from the appropriation and use of IT artifacts. The paper starts with a systematic analysis of the reasons for persistent limitations of traditional information systems DR, specifically in coping with problems of contingency and self-referentiality. Following this critique, the principles of Grounded Design are presented. Grounded Design is applied in case studies where we reconstruct the social practices observed before and during the design and appropriation of innovative IT artifacts. We call these context-specific research endeavors ‘design case studies.’ In conducting these case studies, Grounded Design builds upon well-established research methods such as ethnographical field studies, participatory design and action research. To support the transferability of its situated findings, Grounded Design suggests documenting increasing numbers of design case studies to create an extended, comparative knowledge base. Comparing cases allows for the emergence of bottom-up concepts dealing with the design and appropriation of innovative IT artifacts in social practice.},
 author = {Markus Rohde and Peter Brödner and Gunnar Stevens and Matthias Betz and Volker Wulf},
 doi = {10.1057/jit.2016.5},
 journal = {Journal of Information Technology},
 month = {jun},
 number = {2},
 pages = {163--179},
 publisher = {{SAGE} Publications},
 title = {Grounded Design - a praxeological {IS} research perspective},
 url = {https://doi.org/10.1057%2Fjit.2016.5},
 volume = {32},
 year = {2017}
}

@article{Romandia_2016,
 abstract = {},
 author = {Sergio Quinonez Romandia and Lars Mathiassen},
 doi = {10.2139/ssrn.2866909},
 journal = {{SSRN} Electronic Journal},
 publisher = {Elsevier {BV}},
 title = {An Integrated Model for Strategizing with the Base of the Pyramid: An Action Research into a Mexican Agribusiness},
 url = {https://doi.org/10.2139%2Fssrn.2866909},
 year = {2016}
}

@article{Romandia_2016,
 abstract = {},
 author = {Sergio Quinonez Romandia and Lars Mathiassen},
 doi = {10.2139/ssrn.2866909},
 journal = {{SSRN} Electronic Journal},
 publisher = {Elsevier {BV}},
 title = {An Integrated Model for Strategizing with the Base of the Pyramid: An Action Research into a Mexican Agribusiness},
 url = {https://doi.org/10.2139%2Fssrn.2866909},
 year = {2016}
}

@incollection{Rossi_2014,
 abstract = {},
 author = {Matti Rossi and Juho Lindman},
 booktitle = {Computing Handbook, Third Edition},
 doi = {10.1201/b16768-28},
 month = {may},
 pages = {23--1--23--11},
 publisher = {Chapman and Hall/{CRC}},
 title = {Identifying Opportunities for {IT}-Enabled Organizational Change},
 url = {https://doi.org/10.1201%2Fb16768-28},
 year = {2014}
}

@article{Rothe_2020,
 abstract = {We develop an empirically-grounded understanding of how design knowledge accumulates over time. Drawing from theory on knowledge creation, we conceptualize accumulation along the goals and scope of knowledge in DSR as a distinct knowledge creation problem. Through two empirical studies, we theorize knowledge accumulation in DSR by unpacking (a) three knowledge creation mechanisms and (b) explaining how their interplay forms different patterns of knowledge creation over time. We contribute a theoretical framework conducive to integrating knowledge produced through different methods by introducing knowledge creation processes as distinct unit of analysis in DSR and by pointing out that extant procedural models may need revision to account for the continuous knowledge creation occurring in potentially multi-year DSR projects.},
 author = {Hannes Rothe and   and Lauri Wessel and Ana Barquet and   and},
 doi = {10.17705/1jais.00619},
 journal = {Journal of the Association for Information Systems},
 month = {may},
 number = {3},
 pages = {771--810},
 publisher = {Association for Information Systems},
 title = {Accumulating Design Knowledge: A Mechanisms-Based Approach},
 url = {https://doi.org/10.17705%2F1jais.00619},
 volume = {21},
 year = {2020}
}

@incollection{S_rensen_2001,
 abstract = {ABSTRACT There is an ongoing debate about how to improve the quality of empirical research efforts in information systems One of the persistent issues within the debate concerns the rela - tive importance of social and technical aspects of an informa - tion system and how to study these different elements Contem - porary research within science and technology studies suggests that social science inquiries can learn from empirical enquiries within the natural sciences through the notion of recalcitrance in experimental subjects The aim of this article is to conduct an initial exploration of the usefulness of these ideas in the con - text of empirical information systems research The following three research methods are subjected to a first theoretical analysis: (1) longitudinal, interpretive case study; (2) quan - titative case study; and (3) laboratory experiments For each of the three methods, an example is studied together with reflec - tions from the researchers conducting the particular study It is concluded that although this does not represent a solution to all methodological problems, adopting the perspective of cultivating recalcitrance and designing research methods to},
 author = {Carsten S{\o}rensen and Edgar A. Whitley and Shirin Madon and Dasha Klyachko and Ian Hosein and Justine Johnstone},
 booktitle = {Realigning Research and Practice in Information Systems Development},
 doi = {10.1007/978-0-387-35489-7_20},
 pages = {297--316},
 publisher = {Springer {US}},
 title = {Cultivating Recalcitrance in Information Systems Research},
 url = {https://doi.org/10.1007%2F978-0-387-35489-7_20},
 year = {2001}
}

@incollection{S_rensen_2001,
 abstract = {ABSTRACT There is an ongoing debate about how to improve the quality of empirical research efforts in information systems One of the persistent issues within the debate concerns the rela - tive importance of social and technical aspects of an informa - tion system and how to study these different elements Contem - porary research within science and technology studies suggests that social science inquiries can learn from empirical enquiries within the natural sciences through the notion of recalcitrance in experimental subjects The aim of this article is to conduct an initial exploration of the usefulness of these ideas in the con - text of empirical information systems research The following three research methods are subjected to a first theoretical analysis: (1) longitudinal, interpretive case study; (2) quan - titative case study; and (3) laboratory experiments For each of the three methods, an example is studied together with reflec - tions from the researchers conducting the particular study It is concluded that although this does not represent a solution to all methodological problems, adopting the perspective of cultivating recalcitrance and designing research methods to},
 author = {Carsten S{\o}rensen and Edgar A. Whitley and Shirin Madon and Dasha Klyachko and Ian Hosein and Justine Johnstone},
 booktitle = {Realigning Research and Practice in Information Systems Development},
 doi = {10.1007/978-0-387-35489-7_20},
 pages = {297--316},
 publisher = {Springer {US}},
 title = {Cultivating Recalcitrance in Information Systems Research},
 url = {https://doi.org/10.1007%2F978-0-387-35489-7_20},
 year = {2001}
}

@incollection{S_rensen_2001,
 abstract = {ABSTRACT There is an ongoing debate about how to improve the quality of empirical research efforts in information systems One of the persistent issues within the debate concerns the rela - tive importance of social and technical aspects of an informa - tion system and how to study these different elements Contem - porary research within science and technology studies suggests that social science inquiries can learn from empirical enquiries within the natural sciences through the notion of recalcitrance in experimental subjects The aim of this article is to conduct an initial exploration of the usefulness of these ideas in the con - text of empirical information systems research The following three research methods are subjected to a first theoretical analysis: (1) longitudinal, interpretive case study; (2) quan - titative case study; and (3) laboratory experiments For each of the three methods, an example is studied together with reflec - tions from the researchers conducting the particular study It is concluded that although this does not represent a solution to all methodological problems, adopting the perspective of cultivating recalcitrance and designing research methods to},
 author = {Carsten S{\o}rensen and Edgar A. Whitley and Shirin Madon and Dasha Klyachko and Ian Hosein and Justine Johnstone},
 booktitle = {Realigning Research and Practice in Information Systems Development},
 doi = {10.1007/978-0-387-35489-7_20},
 pages = {297--316},
 publisher = {Springer {US}},
 title = {Cultivating Recalcitrance in Information Systems Research},
 url = {https://doi.org/10.1007%2F978-0-387-35489-7_20},
 year = {2001}
}

@incollection{Sandberg_2008,
 abstract = {Knowledge that can be expressed in words and numbers (i.e., explicit knowledge) only represents the tip of the iceberg in
organizational knowledge. Explicit knowledge may be communicated in formal, systematic language, using standard notations.
This paper reviews how explicit knowledge is used within software engineering, and has found that this tip is important to
store organizational knowledge, discuss improvements, and communicate competences. We further discuss how the tip can be viewed
as a facilitator for understanding tacit knowledge, such as context dependent actions, commitments, and involvement. To support
these arguments, we have studied software engineering units within Ericsson AB during the period 2005–2007 to learn more about
software engineering process descriptions and notations in practice. Findings indicate that unambiguous process descriptions
are dependent on obvious software process notations and that the explicit nature of described software processes serve as
a vital catalyst in initiating discussions of tacit knowledge.},
 author = {Anna Börjesson Sandberg and Carl Magnus Olsson},
 booktitle = {{IFIP} {\textendash} The International Federation for Information Processing},
 doi = {10.1007/978-0-387-87503-3_4},
 pages = {63--82},
 publisher = {Springer {US}},
 title = {Explicit as Enabler for Understanding the Tacit},
 url = {https://doi.org/10.1007%2F978-0-387-87503-3_4},
 year = {2008}
}

@article{Sandberg_2011,
 abstract = {Both the software industry and academia promote collaboration to solve challenges together that neither can solve alone. Collaboration brings opportunities to understand and improve in ways not possible when working apart, but it succeeds only if both parties are contributing. A collaboration model developed from eight years' experience setting up and managing a research center explicitly focused on industry needs is based on five success factors enabling research results (need orientation, industry goal alignment, deployment impact, industry benefit, and innovativeness), five success factors enabling research activities (management engagement, network access, collaborator match, communication ability, and continuity), and 10 action principles for industry-academia collaboration management.},
 author = {A. Sandberg and L. Pareto and T. Arts},
 doi = {10.1109/ms.2011.49},
 journal = {{IEEE} Software},
 month = {jul},
 number = {4},
 pages = {74--83},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Agile Collaborative Research: Action Principles for Industry-Academia Collaboration},
 url = {https://doi.org/10.1109%2Fms.2011.49},
 volume = {28},
 year = {2011}
}

@incollection{Sandberg_2014,
 abstract = {},
 author = {Anna Sandberg},
 booktitle = {Continuous Software Engineering},
 doi = {10.1007/978-3-319-11283-1_3},
 pages = {29--36},
 publisher = {Springer International Publishing},
 title = {Academia{\textendash}Industry Collaboration: Getting Closer is the Key!},
 url = {https://doi.org/10.1007%2F978-3-319-11283-1_3},
 year = {2014}
}

@inproceedings{Sandberg_2017,
 abstract = {},
 author = {Anna Borjesson Sandberg and Ivica Crnkovic},
 booktitle = {2017 {IEEE}/{ACM} 39th International Conference on Software Engineering: Software Engineering in Practice Track ({ICSE}-{SEIP})},
 doi = {10.1109/icse-seip.2017.20},
 month = {may},
 publisher = {{IEEE}},
 title = {Meeting Industry-Academia Research Collaboration Challenges with Agile Methodologies},
 url = {https://doi.org/10.1109%2Ficse-seip.2017.20},
 year = {2017}
}

@incollection{Schjetne_2016,
 abstract = {The paper addresses psychological knowledge in innovation processes in rural areas in the North. The empirical base is the introduction of an innovation program realized through the University of the Arctic, a cooperative network of universities, colleges and other organizations committed to higher education and research in the North. We attempted to stimulate innovation in the rural villages of Northern Russia using workshops centred on building social capital through psychological knowledge. Our analysis shows that good family health and psychological knowledge among villagers is important for sustaining the innovation process in the North. We also found that technological infrastructure is a crucial but often lacking component in this process.},
 author = {Eva Carlsdotter Schjetne and Synn{\o}ve Thomassen Andersen},
 booktitle = {{IFIP} Advances in Information and Communication Technology},
 doi = {10.1007/978-3-319-50109-3_6},
 pages = {82--95},
 publisher = {Springer International Publishing},
 title = {Innovation Processes in Indigenous Communities in the North - Cultural, Psychological and Technological Knowledge in Practice},
 url = {https://doi.org/10.1007%2F978-3-319-50109-3_6},
 year = {2016}
}

@article{Schreieck_2017,
 abstract = {The number of refugees arriving in Europe increased dramatically in 2015. Following arrival at the host country, refugees need access to information on various topics such as applying for asylum, medical care, educational offerings, jobs, or social activities. As many different parties using different channels provide this information, refugees struggle to access relevant information at the right time. Our goal in addressing this information deficit is to support a digital information platform for refugees by developing a governance strategy for the ecosystem of information providers. Within an action research study based on a nonprofit project, we evaluate the implementation of governance mechanisms derived from platform and community governance literature. Our results show that governance mechanisms are implemented differently for nonprofit platform ecosystems than for commercial platform ecosystems. These results enhance the societal impact of the information platform developed in the project. The study contributes to theory on governance of platform ecosystems and IT-enabled collaboration by evaluating established governance mechanisms in the context of nonprofit platforms.},
 author = {Maximilian Schreieck and Manuel Wiesche and Helmut Krcmar},
 doi = {10.1080/02681102.2017.1335280},
 journal = {Information Technology for Development},
 month = {jun},
 number = {3},
 pages = {618--643},
 publisher = {Informa {UK} Limited},
 title = {Governing nonprofit platform ecosystems {\textendash} an information platform for refugees},
 url = {https://doi.org/10.1080%2F02681102.2017.1335280},
 volume = {23},
 year = {2017}
}

@article{Seigerroth_2011,
 abstract = {Several scholars have argued for the need to integrate both the IT perspective and the business perspective during development of enterprises and IS/IT architectures. In this process, it is necessary to be able to deal with a number of sub-areas to succeed with the transformation. One challenge is the need to move beyond a narrow focus on one tradition or technology, as well as to use and integrate different concepts within an enterprise. This integrated view also includes the use and development of guidelines (methods, tools, etc.), in addition to research methodologies and human aspects. Therefore, enterprise modeling and enterprise architecture must treat all slices in a comprehensive alignment context. In this paper, the author presents a conceptualization of the research area Enterprise Modeling and Enterprise Architecture with a focus on transformation and alignment of business and IT.},
 author = {Ulf Seigerroth},
 doi = {10.4018/jitbag.2011010102},
 journal = {International Journal of {IT}/Business Alignment and Governance},
 month = {jan},
 number = {1},
 pages = {16--34},
 publisher = {{IGI} Global},
 title = {Enterprise Modeling and Enterprise Architecture},
 url = {https://doi.org/10.4018%2Fjitbag.2011010102},
 volume = {2},
 year = {2011}
}

@article{Sein_2011,
 abstract = {Design research (DR) positions information technology artifacts at the core of the Information Systems discipline. However, dominant DR thinking takes a technological view of the IT artifact, paying scant attention to its shaping by the organizational context. Consequently, existing DR methods focus on building the artifact and relegate evaluation to a subsequent and separate phase. They value technological rigor at the cost of organizational relevance, and fail to recognize that the artifact emerges from interaction with the organizational context even when its initial design is guided by the researchers' intent. We propose action design research (ADR) as a new DR method to address this problem. ADR reflects the premise that IT artifacts are ensembles shaped by the organizational context during development and use. The method conceptualizes the research process as containing the inseparable and inherently interwoven activities of building the IT artifact, intervening in the organization, and evaluating it concurrently. The essay describes the stages of ADR and associated principles that encapsulate its underlying beliefs and values. We illustrate ADR through a case of competence management at Volvo IT.},
 author = {Sein and  Henfridsson and  Purao and  Rossi and  Lindgren},
 doi = {10.2307/23043488},
 journal = {{MIS} Quarterly},
 number = {1},
 pages = {37},
 publisher = {{JSTOR}},
 title = {Action Design Research},
 url = {https://doi.org/10.2307%2F23043488},
 volume = {35},
 year = {2011}
}

@article{Selaolo_2014,
 abstract = {},
 author = {Tjongabangwe Selaolo and Hugo Lotriet},
 doi = {10.1108/jwl-01-2013-0001},
 journal = {Journal of Workplace Learning},
 month = {feb},
 number = {2},
 pages = {109--127},
 publisher = {Emerald},
 title = {Towards the incorporation of activity-based learning and reflection into Botswana information systems development practice},
 url = {https://doi.org/10.1108%2Fjwl-01-2013-0001},
 volume = {26},
 year = {2014}
}

@article{Shatat_2019,
 abstract = {Enterprise Resource Planning (ERP) system is a very powerful solution to many academic and non-academic institutions in case it has been implemented and used effectively. Otherwise, the system will interrupt several business processes. This research paper investigates the impact of ERP system on academic performance at Sohar University. A survey questionnaire is distributed to several academic stakeholders to investigate the impact of ERP system on academic performance within the University context. A total of 110 questionnaires was received from the key academic stakeholders to examine the relationship between the three core ERP modules i.e. the students’ information module, the financial module, and human resource module. The research outcomes indicate that there is a relationship between the three modules and the academic performance. However, only students’ information module and financial management module demonstrate a significant impact on academic performance, though the human resource module shows no impact on the academic performance at Sohar University. This study is a single case study approach, which might limit the findings to be generalized on other education institutes, but it gives a chance to other researchers to do multiple case studies in other Universities in the region.},
 author = {Ahmad Saleh Shatat and Wadha Abdullah Humaid Al Burtamani},
 doi = {10.1142/s0219649219500187},
 journal = {Journal of Information {\&}amp$\mathsemicolon$ Knowledge Management},
 month = {jun},
 number = {02},
 pages = {1950018},
 publisher = {World Scientific Pub Co Pte Lt},
 title = {The Impact of {ERP} System on Academic Performance: A Case Study Approach},
 url = {https://doi.org/10.1142%2Fs0219649219500187},
 volume = {18},
 year = {2019}
}

@inproceedings{Singh_2016,
 abstract = {},
 author = {Rajendra Singh and Vitali Mindel and Lars Mathiassen},
 booktitle = {2016 49th Hawaii International Conference on System Sciences ({HICSS})},
 doi = {10.1109/hicss.2016.396},
 month = {jan},
 publisher = {{IEEE}},
 title = {{IT}-Based Revenue Cycle Management: An Action Research into Relational Coordination},
 url = {https://doi.org/10.1109%2Fhicss.2016.396},
 year = {2016}
}

@article{Singh_2017,
 abstract = {Although hospitals increasingly consider solutions based on information technolgy (IT) for revenue cycle management, contextual constraints and numerous IT investment alternatives make it difficult to identify and realize appropriate solutions. Thus far, however, health IT theory has been silent on how IT can support financial and administrative purposes within hospitals, focusing instead on IT for clinical support. Against this backdrop, we report on an action research project involving IT-enabled revenue cycle transformation in a financially strapped rural hospital. Our research contributes to health IT theory by expanding the discourse to include revenue cycle transformation and by demonstrating how resource-constrained hospitals can improve their financial performance through selective investments in low-cost IT solutions across the revenue cycle. We also contribute to action research methodology by generalizing our interventions to propose digital options inquiry—a systematic approach to business process transformation that combines digital options theory with diagnostic process mapping—to help researchers and practitioners jointly understand and transform business processes.},
 author = {Rajendra Singh and Vitali Mindel and Lars Mathiassen},
 doi = {10.1080/07421222.2017.1373005},
 journal = {Journal of Management Information Systems},
 month = {jul},
 number = {3},
 pages = {695--726},
 publisher = {Informa {UK} Limited},
 title = {{IT}-Enabled Revenue Cycle Transformation in Resource-Constrained Hospitals: A Collaborative Digital Options Inquiry},
 url = {https://doi.org/10.1080%2F07421222.2017.1373005},
 volume = {34},
 year = {2017}
}

@article{Sonnenwald_2007,
 abstract = {},
 author = {Diane H. Sonnenwald},
 doi = {10.1002/aris.2007.1440410121},
 journal = {Annual Review of Information Science and Technology},
 number = {1},
 pages = {643--681},
 publisher = {Wiley},
 title = {Scientific collaboration},
 url = {https://doi.org/10.1002%2Faris.2007.1440410121},
 volume = {41},
 year = {2007}
}

@incollection{Stolze_2011,
 abstract = {The issue of sustainability has been among the top concerns of IT practitioners for some time now. Although sustainability of and through IT can only be reached if all stakeholders work together, current teaching and on-the-job training approaches do not provide the required understanding of how to govern the cooperation. Furthermore, there is a general gap between IS academia and practice regarding skill teaching, stakeholder informing and contributions towards sustainable business practices. In this paper, we adopt a design science research methodology to develop and evaluate a first approach to close this threefold gap.},
 author = {Carl Stolze and Matthias Boehm and Novica Zarvi{\'{c}} and Oliver Thomas},
 booktitle = {Governance and Sustainability in Information Systems. Managing the Transfer and Diffusion of {IT}},
 doi = {10.1007/978-3-642-24148-2_5},
 pages = {70--88},
 publisher = {Springer Berlin Heidelberg},
 title = {Towards Sustainable {IT} by Teaching Governance Practices for Inter-Organizational Dependencies},
 url = {https://doi.org/10.1007%2F978-3-642-24148-2_5},
 year = {2011}
}

@inproceedings{Stromman,
 abstract = {The IEC 61499 gives developers considerable freedom and offers several features that support reuse. Although this can help the adoption of the standard into an organization's development process, the range of design decisions can also harm the reusability of software, if components are developed with incompatible design principles. Guidelines are needed, but the unique backgrounds and market positions of industrial players must be respected. The paper analyzes some alternative solutions that were developed by automation designers using IEC 61499; although the solutions differ considerably, it is very difficult to rate their reuse potential absolutely. The factors that must be addressed in a reuse strategy are discussed, concluding with the suggestion that it is not possible to present detailed guidelines that would apply to the entire industry},
 author = {M. Stromman and S. Sierla and K. Koskinen},
 booktitle = {2005 {IEEE} Conference on Emerging Technologies and Factory Automation},
 doi = {10.1109/etfa.2005.1612749},
 publisher = {{IEEE}},
 title = {Control Software Reuse Strategies with {IEC} 61499},
 url = {https://doi.org/10.1109%2Fetfa.2005.1612749}
}

@inproceedings{Stromman,
 abstract = {The IEC 61499 gives developers considerable freedom and offers several features that support reuse. Although this can help the adoption of the standard into an organization's development process, the range of design decisions can also harm the reusability of software, if components are developed with incompatible design principles. Guidelines are needed, but the unique backgrounds and market positions of industrial players must be respected. The paper analyzes some alternative solutions that were developed by automation designers using IEC 61499; although the solutions differ considerably, it is very difficult to rate their reuse potential absolutely. The factors that must be addressed in a reuse strategy are discussed, concluding with the suggestion that it is not possible to present detailed guidelines that would apply to the entire industry},
 author = {M. Stromman and S. Sierla and K. Koskinen},
 booktitle = {2005 {IEEE} Conference on Emerging Technologies and Factory Automation},
 doi = {10.1109/etfa.2005.1612749},
 publisher = {{IEEE}},
 title = {Control Software Reuse Strategies with {IEC} 61499},
 url = {https://doi.org/10.1109%2Fetfa.2005.1612749}
}

@inproceedings{Stromman_2006,
 abstract = {The IEC 61499 standard enables a number solutions to the same application development problem, and this can result in components that are incompatible even though they are standards based. IEC 61499 underpins a vision for an open object-oriented knowledge economy, so the application of component-based software development principles needs further research. Such principles are not broadly used in the industry, so our goal is to understand how industrial practice needs to be changed. What are the practices that need to be replaced before the object-oriented, component-based paradigm can be accepted? We organized an intensive course on IEC 61499, where professionals and researchers automated a process in teams. Our results show that the background of a designer has a strong impact on the choice of the problem solving approach, and that this can prevent the use of many new and progressive features in IEC 61499},
 author = {Mika Stromman and Seppo Sierla and Jukka Peltola and Kari Koskinen},
 booktitle = {2006 {IEEE} Conference on Emerging Technologies and Factory Automation},
 doi = {10.1109/etfa.2006.355356},
 month = {sep},
 publisher = {{IEEE}},
 title = {Professional designers{\textquotesingle} adaptations of {IEC} 61499 to their individual work practices},
 url = {https://doi.org/10.1109%2Fetfa.2006.355356},
 year = {2006}
}

@article{Subandi_2016,
 abstract = {Institute for Research and Community Service, or called LPPM is a forum for researchers to conduct studies with internal and national scales. LPPM UMN is one of the institutions that provide the container for UMN researchers. However, in the LPPM UMN itself still does not have a webbased system that can be accessed anywhere. This website will be able to share knowledge amongst lecturers by downloading study results that have been done before. After collecting all the requirements, an application is designed using the Rapid Application Development for a limited time spent. The application is built by designing a website and applying MySQL database and PHP programming language with CodeIgniter framework 2.2.2. This website is divided into 3 parts; admins, reviewers, and researcher. Admins are able to see the whole proposal which is sent and appoint a reviewer for one of the proposals. Reviewers have some facilities to review research proposals that have been uploaded. Researchers are able to upload a research proposal. Index Terms - LPPM, Knowledge Management, Research, Website.},
 author = {Daniel Subandi and Friska Natalia},
 doi = {10.31937/si.v6i2.228},
 journal = {Jurnal {ULTIMA} {InfoSys}},
 month = {aug},
 number = {2},
 pages = {125--129},
 publisher = {Universitas Multimedia Nusantara},
 title = {Analysis and Design Web Based System in {LPPM} {UMN}},
 url = {https://doi.org/10.31937%2Fsi.v6i2.228},
 volume = {6},
 year = {2016}
}

@article{Sun_2015,
 abstract = {The implementation of enterprise resource planning (ERP) is a complex process, and the failure rate remains very high. The literature has reported over 80 critical success factors for ERP implementation, but companies typically do not know to exploit them. In this article, a step-by-step assessment and improvement method for ERP implementation is proposed and applied in three companies. First, a five-stage ERP implementation model is proposed. Second, about 80 critical success factors (CSFs) from the literature are elaborated into key performance indices (KPIs), which are associated with each stage of ERP implementation by ten local ERP experts. Third, the weights of the KPIs are calculated using the Dumpster–Shafer method and the evaluation of ten experts. During the implementation process, performance is measured at each stage and remedial actions are identified if the performance is below expectation. An implementation flowchart is developed based on a five-stage model and the philosophy of continuous improvement. Three action cases in Chinese manufacturing companies are conducted to illustrate the effects of the assessment model, which is also currently being used by a consulting company specialising in ERP implementation. With further evaluation by local experts, the model has the potential to serve as a guideline for ERP implementation in other countries.},
 author = {Hongyi Sun and Wenbin Ni and Rocky Lam},
 doi = {10.1016/j.compind.2014.12.005},
 journal = {Computers in Industry},
 month = {apr},
 pages = {40--52},
 publisher = {Elsevier {BV}},
 title = {A step-by-step performance assessment and improvement method for {ERP} implementation: Action case studies in Chinese companies},
 url = {https://doi.org/10.1016%2Fj.compind.2014.12.005},
 volume = {68},
 year = {2015}
}

@inproceedings{Svahn_2015,
 abstract = {Although extant research convincingly argues that managers can change product innovation practices by exploiting new forms of generativity afforded by digital technology, the literature has so far been silent on how incumbent firms may conceive of and implement requisite generative capability. Against this backdrop, we report from an action research study into a digital innovation initiative aimed at developing connected cars. The managers in charge of the initiative engaged us as they faced considerable skepticism and push-back from the organization. To help the firm embrace new innovation norms and practices, we therefore infused innovation theory and options thinking into the group of managers as a means to conceive of and implement generative capability. As a result, we present and validate an integrative theoretical model of how incumbent firms may leverage digital options thinking to shape their organizational and technological resources into requisite generative capability. In conclusion, we dis-cuss the contributions of the model and the empirical results to extant literature on generative capability in digital innovation.},
 author = {Fredrik Svahn and Rikard Lindgren and Lars Mathiassen},
 booktitle = {2015 48th Hawaii International Conference on System Sciences},
 doi = {10.1109/hicss.2015.497},
 month = {jan},
 publisher = {{IEEE}},
 title = {Applying Options Thinking to Shape Generativity in Digital Innovation: An Action Research into Connected Cars},
 url = {https://doi.org/10.1109%2Fhicss.2015.497},
 year = {2015}
}

@article{Svahn_2017,
 abstract = {Past research provides instructive yet incomplete answers as to how incumbent firms can address competing concerns as they embrace digital innovation. In particular, it offers only partial explanations of why different concerns emerge, how they manifest, and how firms can manage them. In response, we present a longitudinal case study of Volvo Cars’connected car initiative. Combining extant literature with insights from the case, we argue that incumbent firms face four competing concerns—capability (existing versus requisite), focus (product versus process), collaboration (internal versus external), and governance (control versus flexibility)—and that these concerns are systemically interrelated. Firms must therefore manage these concerns cohesively by continuously balancing new opportunities and established practices.},
 author = {Fredrik Svahn and   and Lars Mathiassen and Rikard Lindgren and   and},
 doi = {10.25300/misq/2017/41.1.12},
 journal = {{MIS} Quarterly},
 month = {jan},
 number = {1},
 pages = {239--253},
 publisher = {{MIS} Quarterly},
 title = {Embracing Digital Innovation in Incumbent Firms:  How Volvo Cars Managed Competing Concerns},
 url = {https://doi.org/10.25300%2Fmisq%2F2017%2F41.1.12},
 volume = {41},
 year = {2017}
}

@article{Svejvig_2014,
 abstract = {Contrary to the existing literature and studies of large-scale IT projects, empirical data from a mega IT project in mid-sized Danish Bank, Jyske Bank, demonstrates a successful implementation of a highly complex IT platform transition. Linguistic representations and especially extensive use of metaphors by executive management to form and shape the megaproject appeared to have significant impact on guidance of individual and collective action, and thereby presumably one of the important factors for the successful implementation. To learn from this case study, we investigate the metaphorical use in the megaproject and discuss how leading by metaphors are enacted. Our findings are that (1) metaphorical storytelling can act as backbone for communication, (2) metaphors can set direction for technical capabilities, and finally (3) metaphors can be used to emphasize emotional intelligence.},
 author = {Per Svejvig and Ann-Dorte Fladkj{\ae}r Nielsen},
 doi = {10.7146/jookc.v1i1.18284},
 journal = {Journal of Organizational Knowledge Communication},
 month = {oct},
 number = {1},
 pages = {31},
 publisher = {Det Kgl. Bibliotek/Royal Danish Library},
 title = {Leading by Metaphors {\textendash}A Case Study of a Mega {IT} Project in a Danish Bank},
 url = {https://doi.org/10.7146%2Fjookc.v1i1.18284},
 volume = {1},
 year = {2014}
}

@article{Svejvig_2016,
 abstract = {Purpose
The purpose of this paper is to analyze the similarities and differences between the Danish rethinking project management (RPM) initiative named Project Half Double (PHD) and the RPM research stream. The paper furthermore discusses how PHD and RPM can inspire each other in research and practice.

Design/methodology/approach
This is an empirical paper based on collaborative research between industry and researchers. PHD has developed principles and practices driven by industry consisting of ten leading stars and the impact, leadership and flow (ILF) method. The ten leading stars and ILF method are compared to RPM research. The comparative analysis is then used in a broader discussion about how the research-driven RPM initiative can enrich the industry-driven PHD initiative and vice versa depicted in a theoretical understanding of translations between global ideas and local implementations.

Findings
RPM and PHD share a focus on value creation, social processes, learning and complexity while PHD also focusses on lean thinking, agile thinking, front-end loading and leadership, which are largely topics beyond the RPM research stream.

Originality/value
The paper presents how stakeholders from Danish industry interpret the actuality in projects and how they want to move forward with a radically different project paradigm. This is expressed in the ten leading stars and ILF method, which is compared and contrasted to the existing RPM literature providing a foundation for further development of both RPM and PHD.},
 author = {Per Svejvig and Sara Grex},
 doi = {10.1108/ijmpb-11-2015-0107},
 journal = {International Journal of Managing Projects in Business},
 month = {sep},
 number = {4},
 pages = {822--844},
 publisher = {Emerald},
 title = {The Danish agenda for rethinking project management},
 url = {https://doi.org/10.1108%2Fijmpb-11-2015-0107},
 volume = {9},
 year = {2016}
}

@article{Syed_2014,
 abstract = {},
 author = {Kamran Syed and Lars Mathiassen},
 doi = {10.2139/ssrn.2553349},
 journal = {{SSRN} Electronic Journal},
 publisher = {Elsevier {BV}},
 title = {Release Cycle Management: A Contextualist Inquiry into Recurrent Software Development},
 url = {https://doi.org/10.2139%2Fssrn.2553349},
 year = {2014}
}

@inproceedings{T_rpel_2005,
 abstract = {This paper provides an overview of approaches to Participatory Design (PD) of computer applications, and briefly outlines how PD overviews are important in tackling PD's current challenges.},
 author = {Bettina Törpel},
 booktitle = {Proceedings of the 4th decennial conference on Critical computing: between sense and sensibility},
 doi = {10.1145/1094562.1094593},
 month = {aug},
 publisher = {{ACM}},
 title = {Participatory design},
 url = {https://doi.org/10.1145%2F1094562.1094593},
 year = {2005}
}

@article{Taylor_2012,
 abstract = {This paper compares implementation frameworks for Information Technology IT governance and functions of a Project Management Office PMO. While there are commonalities, the relational mechanisms called for in IT governance frameworks are omitted from the PMO functions. The authors provide a case study of a PMO at a large municipal government organization where relational mechanisms are incorporated into the risk assessment process through the use of a risk profile spider chart. Drawing conclusions from collaborative practice research, the authors discuss the use and relational aspects of the risk profile spider chart and show how this tool enables boundary spanning between the PMO and other departments by functioning as a boundary object-in-use, increasing the likelihood of buy-in for IT governance decisions. The authors conclude that the tool has potential both as a risk assessment mechanism and a boundary object for building collaboration and thus may be useful for PMOs at other organizations.},
 author = {Hazel Taylor and Jill Palzkill Woelfer and Edward Artman},
 doi = {10.4018/jitpm.2012070102},
 journal = {International Journal of Information Technology Project Management},
 month = {jul},
 number = {3},
 pages = {14--30},
 publisher = {{IGI} Global},
 title = {Information Technology Governance in Practice},
 url = {https://doi.org/10.4018%2Fjitpm.2012070102},
 volume = {3},
 year = {2012}
}

@article{Taylor_2012,
 abstract = {},
 author = {Hazel Taylor and Edward Artman and Jill Palzkill Woelfer},
 doi = {10.1057/jit.2011.29},
 journal = {Journal of Information Technology},
 month = {mar},
 number = {1},
 pages = {17--34},
 publisher = {{SAGE} Publications},
 title = {Information Technology Project Risk Management: Bridging the Gap between Research and Practice},
 url = {https://doi.org/10.1057%2Fjit.2011.29},
 volume = {27},
 year = {2012}
}

@article{Tj_rneh_j_2010,
 abstract = {Most software firms struggle to take advantage of the potential benefits of software process improvement (SPI) as they adopt this technology into the complex and dynamic realities of their day-to-day operation. Such efforts are therefore typically fluctuating between management's attempt to control SPI technology adoption and events that causes the process to drift in unpredictable directions. To further understand how management's attempt to control the process is complemented by drifting, this article investigates the role of improvisation in adoption of SPI technology in a Danish software firm, SmallSoft, over a 10-year period (1996–2005). We found that micro-level and macro-level improvisations interacted, often in uncoordinated ways, to shape SPI technology adoption at SmallSoft. The improvisations enhanced employee creativity, motivation and empowerment, created momentum in the adoption process despite constrained resources, and, most importantly, helped adapt SPI technology to the everyday practices at SmallSoft. However, we also identified un-called for improvisations and outcomes that were uncoordinated with SmallSoft's goals. Based on these findings we discuss how management in small software firms can exploit improvisations to facilitate adoption of complex technologies like SPI.},
 author = {Gitte Tj{\o}rneh{\o}j and Lars Mathiassen},
 doi = {10.1057/jit.2009.20},
 journal = {Journal of Information Technology},
 month = {mar},
 number = {1},
 pages = {20--34},
 publisher = {{SAGE} Publications},
 title = {Improvisation during Process-Technology Adoption: A Longitudinal Study of a Software Firm},
 url = {https://doi.org/10.1057%2Fjit.2009.20},
 volume = {25},
 year = {2010}
}

@article{Tjornehoj_2008,
 abstract = {Purpose
While the literature on software process improvement (SPI) offers a number of studies of small software firms, little is known about how such initiatives evolve over time. On this backdrop, this paper aims to investigate how adoption of SPI technology was shaped over a ten year period (1996‐2005) in a small Danish software firm.

Design/methodology/approach
The investigation is based on a longitudinal, interpretative case study of improvement efforts over a ten‐year period. To help structure the investigation, we focus on encounters that impacted engineering, management, and improvement practices within the firm. The study contributes to the SPI‐literature and the literature on organizational adoption of technology.

Findings
The paper finds the improvement effort fluctuating and shaped between management's attempt to control SPI technology adoption and events that caused the process to drift in unpredictable directions.

Practical implications
The experiences suggest that managers of small software firms remain flexible and constantly negotiate technology adoption practices between control and drift, creating momentum and direction according to firm goals through attempts to control, while at the same time exploring backtalk, options, and innovations from drifting forces inside and outside the firm.

Originality/value
Based on the research, the paper recommends substituting the “from control to drift” perspective on organizational adoption of complex technologies like SPI with a “negotiating control and drift” perspective.},
 author = {Gitte Tjornehoj and Lars Mathiassen},
 doi = {10.1108/09593840810860333},
 journal = {Information Technology {\&}amp$\mathsemicolon$ People},
 month = {feb},
 number = {1},
 pages = {69--90},
 publisher = {Emerald},
 title = {Between control and drift: negotiating improvement in a small software firm},
 url = {https://doi.org/10.1108%2F09593840810860333},
 volume = {21},
 year = {2008}
}

@article{Vallo_Hult_2019,
 abstract = {The medical profession is highly specialized, demanding continuous learning, while also undergoing rapid development in the rise of data-driven healthcare. Based on clinical scenarios, this study explores how resident physicians view their roles and practices in relation to informed patients and patient-centric digital technologies. The paper illustrates how the new role of patients alters physicians’ work and use of data to learn and update their professional practice. It suggests new possibilities for developing collegial competence and using patient experiences more systematically. Drawing on the notion of flipped healthcare, we argue that there is a need for new professional competencies in everyday data work, along with a change in attitudes, newly defined roles, and better ways to identify and develop reliable online sources. Finally, the role of patients, not only as consumers but also producers of healthcare, is a rather formidable and complex cultural change to be addressed.},
 author = {Helena Vallo Hult and Anders Hansson and Lars Svensson and Martin Gellerstedt},
 doi = {10.1177/1460458219833099},
 journal = {Health Informatics Journal},
 month = {mar},
 number = {3},
 pages = {587--597},
 publisher = {{SAGE} Publications},
 title = {Flipped healthcare for better or worse},
 url = {https://doi.org/10.1177%2F1460458219833099},
 volume = {25},
 year = {2019}
}

@article{Van_Zyl_2007,
 abstract = {This article presents part of the findings of the Research Marketing and Technology Commercialization Survey conducted in South Africa during 2005 and 2006. Part IV (Q4) of this survey was designed to examine nine drivers of knowledge transfer between South African universities in their research and development (R&D) collaborations with industry firms. Respondents from a judgemental sample ranked the knowledge transfer for R&D collaboration between university departments and industry as: (a) the need to extract appropriate knowledge at the right time to make critical decisions; (b) the perception that knowledge is a valuable resource; (c) the emphasis on getting a return on investment in research; (d) the need to protect knowledge for competitive advantage; (e) the need to close the knowledge gap; (f) international trade; (g) the need to protect intellectual property such as patents and trademarks; (h) geographic proximity between the knowledge source and recipient; and (i) war, terrorism and natural disasters.},
 author = {A. Van Zyl and J. Amadi-Echendu and T. J.D. Bothma},
 doi = {10.4102/sajim.v9i1.18},
 journal = {{SA} Journal of Information Management},
 month = {nov},
 number = {1},
 publisher = {{AOSIS}},
 title = {Nine drivers of knowledge transfer between universities and industry R{\&}amp$\mathsemicolon$D partners in  South Africa},
 url = {https://doi.org/10.4102%2Fsajim.v9i1.18},
 volume = {9},
 year = {2007}
}

@inproceedings{Wadhwa_2014,
 abstract = {Two key elements to bridge the academia-industry gap are communication and collaboration. The purpose of any such effort is co-creation of knowledge and developing continually informed relationships. Cloud computing has got a significant interest from both academia and industry. It offers a myriad of possibilities for software engineering researchers to study the development of multilateral software. With cloud-based products and services growing exponentially in their popularity and usage, there grew a need for a business model to effectively manage cloud costs, resources, capacity, agility and flexibility [3]. Cloud Service Brokers (CSBs) have emerged as a solution to address this growing need and facilitate smooth cloud adoption, management, migration and maintenance for cloud users and providers [4] [5]. According to Gartner, the CSB sector is expected to grow to a whopping $ 100 Billion in revenue by the end of 2014 [1]. However, there is an evident void in the academic research space in the area of CSBs. For example, owing to the absence of a centralized registry of the CSB utilities, it is extremely difficult for cloud users to select a CSB. In this paper, we provide an analysis of industry and academia role in this area highlighting industry issues in which academia can participate.},
 author = {Bimlesh Wadhwa and Aditi Jaitly and Bharti Suri},
 booktitle = {Proceedings of the 1st International Workshop on Software Engineering Research and Industrial Practices},
 doi = {10.1145/2593850.2593858},
 month = {jun},
 publisher = {{ACM}},
 title = {Making sense of academia-industry gap in the evolving cloud service brokerage},
 url = {https://doi.org/10.1145%2F2593850.2593858},
 year = {2014}
}

@article{Wang_2020,
 abstract = {},
 author = {Weian Wang and Li Luo},
 doi = {10.6007/ijarbss/v10-i6/7267},
 journal = {International Journal of Academic Research in Business and Social Sciences},
 month = {jun},
 number = {6},
 publisher = {Human Resources Management Academic Research Society ({HRMARS})},
 title = {Systematic Review of Action Research in Management Information Systems Field},
 url = {https://doi.org/10.6007%2Fijarbss%2Fv10-i6%2F7267},
 volume = {10},
 year = {2020}
}

@article{Wastell_2007,
 abstract = {},
 author = {David G Wastell and Tom McMaster and Peter Kawalek},
 doi = {10.1057/palgrave.jit.2000086},
 journal = {Journal of Information Technology},
 month = {mar},
 number = {1},
 pages = {59--68},
 publisher = {{SAGE} Publications},
 title = {The Rise of the Phoenix: Methodological Innovation as a Discourse of Renewal},
 url = {https://doi.org/10.1057%2Fpalgrave.jit.2000086},
 volume = {22},
 year = {2007}
}

@article{Weiss_2022,
 abstract = {Platform owners face multiple challenges such as on-boarding and orchestrating app developers as well as providing resources to enable the development of complementary apps. Information systems research considers digital platform governance as key to address these challenges. Thereby, the focus lies on the relationship of a platform owner and app developers. However, while there is evidence how app developers acquire skills through these interactions, there is limited knowledge of how platform owners benefit from interacting with app developers to improve their digital platforms. To address this gap, in this article, we study the emergence of a digital platform for automotive onboard apps within the BMW Group. Our results are grounded in 30 expert interviews that we conducted during a period of two years and are enriched by extensive secondary data. We identify transfer of perspective, transfer of knowledge, and transfer of artifacts as basic mechanisms that enable a platform owner to enhance its digital platform. The inherent improvements of the digital platform facilitate the app development. Our work extends the existing theory on platform emergence and provides insights into the learning process of an inexperienced platform owner. Our findings reveal valuable recommendations for organizations that are struggling to establish digital platforms.},
 author = {Niklas Weiss and Manuel Wiesche and Maximilian Schreieck and Helmut Krcmar},
 doi = {10.1109/tem.2020.3017051},
 journal = {{IEEE} Transactions on Engineering Management},
 month = {dec},
 number = {6},
 pages = {4019--4035},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Learning to be a Platform Owner: How {BMW} Enhances App Development for Cars},
 url = {https://doi.org/10.1109%2Ftem.2020.3017051},
 volume = {69},
 year = {2022}
}

@article{Williams_2005,
 abstract = {A goal of evidence-based software engineering is to provide a means by which industry practitioners can make rational decisions about technology adoption. When a technology is mature enough for potential widespread use, practitioners find empirical evidence most compelling when the study has taken place in a live, industrial situation in an environment comparable to their own. However, empirical software engineering is in need of guidelines and standards to direct industrial case studies so that the results of this research are valuable and can be combined into an evidentiary base. In this paper, we present a high-level view of a measurement framework that has been used with multiple agile software development industrial case studies. We propose that this technology-dependent framework can be used as a strawman for a guideline of data collection, analysis, and reporting of industrial case studies. Our goal in offering the framework as a strawman is to solicit input from the community on a guideline for the essential components of a technology-dependent framework for industrial case study research.},
 author = {Laurie Williams and Lucas Layman and Pekka Abrahamsson},
 doi = {10.1145/1082983.1083179},
 journal = {{ACM} {SIGSOFT} Software Engineering Notes},
 month = {may},
 number = {4},
 pages = {1--5},
 publisher = {Association for Computing Machinery ({ACM})},
 title = {On establishing the essential components of a technology-dependent framework},
 url = {https://doi.org/10.1145%2F1082983.1083179},
 volume = {30},
 year = {2005}
}

@inproceedings{Williams_2005,
 abstract = {A goal of evidence-based software engineering is to provide a means by which industry practitioners can make rational decisions about technology adoption. When a technology is mature enough for potential widespread use, practitioners find empirical evidence most compelling when the study has taken place in a live, industrial situation in an environment comparable to their own. However, empirical software engineering is in need of guidelines and standards to direct industrial case studies so that the results of this research are valuable and can be combined into an evidentiary base. In this paper, we present a high-level view of a measurement framework that has been used with multiple agile software development industrial case studies. We propose that this technology-dependent framework can be used as a strawman for a guideline of data collection, analysis, and reporting of industrial case studies. Our goal in offering the framework as a strawman is to solicit input from the community on a guideline for the essential components of a technology-dependent framework for industrial case study research.},
 author = {Laurie Williams and Lucas Layman and Pekka Abrahamsson},
 booktitle = {Proceedings of the 2005 workshop on Realising evidence-based software engineering  - {REBSE} {\textquotesingle}05},
 doi = {10.1145/1083174.1083179},
 publisher = {{ACM} Press},
 title = {On establishing the essential components of a technology-dependent framework},
 url = {https://doi.org/10.1145%2F1083174.1083179},
 year = {2005}
}

@article{Willison_2006,
 abstract = {While hackers and viruses fuel the IS security concerns for organisations, the problems posed by employee computer crime should not be underestimated. Indeed, a number of IS security researchers have turned their attention to the ‘insider’ threat. Of this group, several focus on the offender, either in terms of a series of attributes required for perpetration, or with reference to forms of safeguards aimed at negating such behaviour. These studies are complemented by those texts which examine the organisational context in which rogue employees commit computer crime. Currently, however, there has been a lack of insight into the relationship between the offender and the context, during the commission process. To address this deficiency, two criminological theories are advanced. This paper illustrates how the theories, entitled the Rational Choice Perspective and Situational Crime Prevention, can be applied to the IS domain, thereby offering a theoretical basis by which to analyse the offender/context relationship during perpetration. By so doing, practitioners may use these insights to inform and enhance the selection of safeguards in a bid to improve prevention programmes. Furthermore, the importation of the Rational Choice Perspective and Situational Crime Prevention into the IS field opens up potentially new areas for future research.},
 author = {Robert Willison},
 doi = {10.1016/j.infoandorg.2006.08.001},
 journal = {Information and Organization},
 month = {jan},
 number = {4},
 pages = {304--324},
 publisher = {Elsevier {BV}},
 title = {Understanding the perpetration of employee computer crime in the organisational context},
 url = {https://doi.org/10.1016%2Fj.infoandorg.2006.08.001},
 volume = {16},
 year = {2006}
}

@incollection{Wulf_2015,
 abstract = {The introduction of IT has changed the way we live in many ways. Historically, it can even be argued that socially embedded applications of information technology challenge and change practices to an extent rarely seen before with any other type of technological artifacts. If these IT artifacts have strong and recurrent impacts on people’s lives, we need to reconsider design practice artifacts which allow for anticipating use practices and bring together inspirational creativity with evaluative methods.},
 author = {Volker Wulf and Claudia Müller and Volkmar Pipek and David Randall and Markus Rohde and Gunnar Stevens},
 booktitle = {Computer Supported Cooperative Work},
 doi = {10.1007/978-1-4471-6720-4_7},
 pages = {111--150},
 publisher = {Springer London},
 title = {Practice-Based Computing: Empirically Grounded Conceptualizations Derived from Design Case Studies},
 url = {https://doi.org/10.1007%2F978-1-4471-6720-4_7},
 year = {2015}
}

@article{Yang_2017,
 abstract = {Action research (AR) is significant for its promise to bridge the chasm between rigor and relevance by seeking to solve real-world problems while building scientific knowledge. In this spirit, in our research project, we argue for a return to the essence of AR—that is, focusing on problem, action, and reflection. Adopting the style of AR known as dialogical AR, we address the issue of operational risk management as encountered by a financial institution in Taiwan. In this AR project, the researchers work collaboratively with workers in a bank to manage the knowledge creation process as part of an operational risk management program. Through three AR cycles, our findings demonstrate that ongoing knowledge creation facilitates the transformation of existing organizational culture and helps practitioners to identify different types of operational risks. We also highlight the conditions under which insights from reflective dialogues between practitioners and researchers can encourage managers to open themselves to new and different ways of thinking and acting. Finally, we offer principles for undertaking effective dialogical AR.},
 author = {Shirley Ou Yang and Carol Hsu and Suprateek Sarker and Allen S. Lee},
 doi = {10.1080/07421222.2017.1373006},
 journal = {Journal of Management Information Systems},
 month = {jul},
 number = {3},
 pages = {727--753},
 publisher = {Informa {UK} Limited},
 title = {Enabling Effective Operational Risk Management in a Financial Institution: An Action Research Study},
 url = {https://doi.org/10.1080%2F07421222.2017.1373006},
 volume = {34},
 year = {2017}
}

@article{Young_2016,
 abstract = {},
 author = {Brett Young and   and Lars Mathiassen and Elizabeth Davidson and   and},
 doi = {10.17705/1jais.00432},
 journal = {Journal of the Association for Information Systems},
 month = {jul},
 number = {7},
 pages = {495--520},
 publisher = {Association for Information Systems},
 title = {Inconsistent and Incongruent Frames During {IT}-enabled Change: An Action Research Study into Sales Process Innovation},
 url = {https://doi.org/10.17705%2F1jais.00432},
 volume = {17},
 year = {2016}
}

@inproceedings{Yuan_2020,
 abstract = {},
 author = {Sha Yuan and Zhou Shao and Yangxiao Liang and Jie Tang and Wendy Hall and Gang Liu and Yutian Zhang},
 booktitle = {12th {ACM} Conference on Web Science},
 doi = {10.1145/3394231.3397896},
 month = {jul},
 publisher = {{ACM}},
 title = {International Scientific Collaboration in Artificial Intelligence An Analysis based on Web Data},
 url = {https://doi.org/10.1145%2F3394231.3397896},
 year = {2020}
}

@article{Zakiah_2019,
 abstract = {},
 author = {Azizah Zakiah},
 doi = {10.1088/1742-6596/1175/1/012079},
 journal = {Journal of Physics: Conference Series},
 month = {mar},
 pages = {012079},
 publisher = {{IOP} Publishing},
 title = {Applying Action Design Research ({ADR}) to Develop Collaboration Virtual Programming Laboratory as Supporting System For Student Centered Learning},
 url = {https://doi.org/10.1088%2F1742-6596%2F1175%2F1%2F012079},
 volume = {1175},
 year = {2019}
}

@article{Zhu_2022,
 abstract = {Coauthorship prediction applies predictive analytics to bibliographic data to predict authors who are highly likely to be coauthors. In this study, we propose an approach for coauthorship prediction based on bibliographic network embedding through a graph‐based bibliographic data model that can be used to model common bibliographic data, including papers, terms, sources, authors, departments, research interests, universities, and countries. A real‐world dataset released by AMiner that includes more than 2 million papers, 8 million citations, and 1.7 million authors were integrated into a large bibliographic network using the proposed bibliographic data model. Translation‐based methods were applied to the entities and relationships to generate their low‐dimensional embeddings while preserving their connectivity information in the original bibliographic network. We applied machine learning algorithms to embeddings that represent the coauthorship relationships of the two authors and achieved high prediction results. The reference model, which is the combination of a network embedding size of 100, the most basic translation‐based method, and a gradient boosting method achieved an F1 score of 0.9 and even higher scores are obtainable with different embedding sizes and more advanced embedding methods. Thus, the strengths of the proposed approach lie in its customizable components under a unified framework.},
 author = {Yongjun Zhu and Lihong Quan and Pei-Ying Chen and Meen Chul Kim and Chao Che},
 doi = {10.1002/asi.24711},
 journal = {Journal of the Association for Information Science and Technology},
 month = {sep},
 number = {4},
 pages = {388--401},
 publisher = {Wiley},
 title = {Predicting coauthorship using bibliographic network embedding},
 url = {https://doi.org/10.1002%2Fasi.24711},
 volume = {74},
 year = {2022}
}

@article{Zielhuis_2022,
 abstract = {Knowledge from academic design research projects does not always help design professionals to actually strengthen their work. Based on a multi-case study, this paper describes how researchers view the impact of their design research projects on design practice and what they do to achieve this. Even in projects where impact on design practice is a stated ambition, several challenges can stand in the way, such as a lack of funding opportunities and unclarity on the needs of design practice. The paper provides tips for researchers and funding parties who want to inform design practice by research, including tips to operationalize design practice roles.},
 author = {Marieke Zielhuis and Froukje Sleeswijk Visser and Daan Andriessen and Pieter Jan Stappers},
 doi = {10.1016/j.destud.2021.101063},
 journal = {Design Studies},
 month = {jan},
 pages = {101063},
 publisher = {Elsevier {BV}},
 title = {Making design research relevant for design practice: What is in the way?},
 url = {https://doi.org/10.1016%2Fj.destud.2021.101063},
 volume = {78},
 year = {2022}
}

@article{Ziyarazavi_2013,
 abstract = {},
 author = {Merat Ziyarazavi and Christer Magnusson},
 doi = {10.4236/jssm.2013.61013},
 journal = {Journal of Service Science and Management},
 number = {01},
 pages = {127--142},
 publisher = {Scientific Research Publishing, Inc.},
 title = {From Theory to Practice{\textemdash}When and How to Implement Service Value Agreement},
 url = {https://doi.org/10.4236%2Fjssm.2013.61013},
 volume = {06},
 year = {2013}
}

@inproceedings{Baker,
 abstract = {The typical software engineering course consists of lectures in which concepts and theories are conveyed, along with a small "toy" software engineering project which attempts to give students the opportunity to put this knowledge into practice. Although both of these components are essential, neither one provides students with adequate practical knowledge regarding the process of software engineering. Namely, lectures allow only passive learning and projects are so constrained by the time and scope requirements of the academic environment that they cannot be large enough to exhibit many of the phenomena occurring in realworld software engineering processes. To address this problem, we have developed Problems and Programmers, an educational card game that simulates the software engineering process and is designed to teach those process issues that are not sufficiently highlighted by lectures and projects. We describe how the game is designed, the mechanics of its game play, and the results of an experiment we conducted involving students playing the game.},
 author = {A. Baker and E.O. Navarro and A. van der Hoek},
 booktitle = {Proceedings 16th Conference on Software Engineering Education and Training, 2003. ({CSEE}{\&}amp$\mathsemicolon$T 2003).},
 doi = {10.1109/csee.2003.1191379},
 publisher = {{IEEE} Comput. Soc},
 title = {An experimental card game for teaching software engineering},
 url = {https://doi.org/10.1109%2Fcsee.2003.1191379}
}

@article{Cagiltay_2007,
 abstract = {Software-engineering education programs are intended to prepare students for a field that involves rapidly changing conditions and expectations. Thus, there is always a danger that the skills and the knowledge provided may soon become obsolete. This paper describes results and draws on experiences from the implementation of a computer game-development course whose design addresses problems in software-engineering education by improving students' abilities in four areas: (1) problem solving; (2) the application of previously learned knowledge; (3) the use of independent learning; and (4) learning by doing. In order to better understand this course's effect on students' performance in a software-development project, I investigated 125 students' performance in a 1-year senior-project course. Results of this study show that the students who had taken the computer game-development course became more successful in the senior-project course than the students who had not taken it.},
 author = {Nergiz Ercil Cagiltay},
 doi = {10.1111/j.1467-8535.2007.00705.x},
 journal = {British Journal of Educational Technology},
 month = {may},
 number = {3},
 pages = {405--415},
 publisher = {Wiley},
 title = {Teaching software engineering by means of computer-game development: Challenges and opportunities},
 url = {https://doi.org/10.1111%2Fj.1467-8535.2007.00705.x},
 volume = {38},
 year = {2007}
}

@inproceedings{Chang_2007,
 abstract = {Game can be one of the educational tools. With the interactivity and competition, learners will have high motivation to play games. In order to express some abstract concept like operation system process, we designed a card game which subject is operation system process diagram. It is too hard to realize the real process lifecycle. For some students, it is uneasy to find solid examples about operating system. We hope game launch high learning motivation and interaction in operating system. Learners can experience some experience in operation system process lifecycle.},
 author = {Wen-Chih Chang and Yi-Lung Chen},
 booktitle = {2007 International Conference on Parallel Processing Workshops ({ICPPW} 2007)},
 doi = {10.1109/icppw.2007.33},
 month = {sep},
 publisher = {{IEEE}},
 title = {Cultivating Operating System Process Concept with Card Game},
 url = {https://doi.org/10.1109%2Ficppw.2007.33},
 year = {2007}
}

@incollection{Chang_2008,
 abstract = {Interactivity and competition will give learners high motivation to play game and let learners interesting in game. Educational
game not only accommodates learner entertainment, but also plays a role of educational tools. In order to assist learners
in study system analysis and design, we create a card game about Rapid Application Development. Learners can gain some experience
from requirements planning, user designing, construction and implementation. This game assists learners remember and realize
the practical experience in system design. We expect that learners can obtain the ability to make decisions and method which
solve the problem mutually when they playing this game.},
 author = {Wen-Chih Chang and Yi-Lung Chen and Tsung-Pu Lee},
 booktitle = {Lecture Notes in Computer Science},
 doi = {10.1007/978-3-540-89962-4_10},
 pages = {93--101},
 publisher = {Springer Berlin Heidelberg},
 title = {Computer Assisted Learning with Card Game in System Design Concept},
 url = {https://doi.org/10.1007%2F978-3-540-89962-4_10},
 year = {2008}
}

@inproceedings{Crnkovic,
 abstract = {As the software industry moves towards software development projects involving several sites around the world, universities should incorporate this trend into their software engineering curricula. We describe the experiences from the development of a university course in distributed software development. Some of the problems of distributed development make it inherently difficult to transfer this domain to the university environment. Also, the concept of "distribution " has penetrated not only the contents of the course but many other levels as well.},
 author = {I. Crnkovic and I. Cavrak and J. Fredriksson and R. Land and M. Zagar and M. Akerholm},
 booktitle = {{IEEE} Transactions on Image Processing},
 doi = {10.1109/iti.2003.1225351},
 publisher = {Univ. Zagreb},
 title = {On the teaching of distributed software development},
 url = {https://doi.org/10.1109%2Fiti.2003.1225351}
}

@inproceedings{Crnkovic,
 abstract = {Most software engineering courses focus exclusively on the software development process, often referring to problems related to the complexity of software products and processes. In practice, however, many problems of a complex nature arise in which system engineering and other engineering disciplines are important in the development of systems. In such cases software engineers may have difficulty in coping with the entire problem, in the same way that engineers in other fields may have difficulty in understanding the software part. This suggests that the software engineering education of today is inadequate in certain respects. This paper presents a case study of a software engineering course and discusses the difficulty for computer science students to understand and to develop a system which also requires skills in engineering of a non-software nature.},
 author = {I. Crnkovic and R. Land and A. Sjogren},
 booktitle = {Proceedings 16th Conference on Software Engineering Education and Training, 2003. ({CSEE}{\&}amp$\mathsemicolon$T 2003).},
 doi = {10.1109/csee.2003.1191371},
 publisher = {{IEEE} Comput. Soc},
 title = {Is software engineering training enough for software engineers?},
 url = {https://doi.org/10.1109%2Fcsee.2003.1191371}
}

@inproceedings{Daun_2014,
 abstract = {University education in software engineering instructs sound theoretical concepts together with method competence. It seeks to provide hands-on experience with the learning content along with insights into its application in practice. Even theoretical disciplines are beginning to adopt more experience-oriented instruction as opposed to passive, lecture-oriented instruction. One favored way for experience-oriented instructions is using case studies in lecture-accompanying assignments and/or tutorials. Compared with real-world scenarios, such case studies are often simplified in order to illustrate specific challenges related to the instructed material. This paper reports on our experience in using realistic industry-oriented case studies in a requirements engineering course with graduate students. The experience indicates a strong positive effect on student motivation as well as the degree of comprehension of the instructed theoretical material. These findings are confirmed by evaluations of the learning experience as self-reported through students' questionnaires. Comparing the exam results with previous years indicates substantial improvement in final exam scores.},
 author = {Marian Daun and Andrea Salmon and Bastian Tenbergen and Thorsten Weyer and Klaus Pohl},
 booktitle = {2014 {IEEE} 27th Conference on Software Engineering Education and Training ({CSEE}{\&}amp$\mathsemicolon$T)},
 doi = {10.1109/cseet.2014.6816775},
 month = {apr},
 publisher = {{IEEE}},
 title = {Industrial case studies in graduate requirements engineering courses: The impact on student motivation},
 url = {https://doi.org/10.1109%2Fcseet.2014.6816775},
 year = {2014}
}

@inproceedings{Daun_2016,
 abstract = {A significant challenge within university education, especially with regard to the teaching of highly theoretical topics like requirements engineering, is to maintain students' interest and motivation whilst addressing the core concepts that will enable students to work in industry upon graduation. It has long been established that experience-based learning can aid in both these feats: On the one hand, providing students with industrial case examples rather than "dry" academic assignments can increase student interest and motivation. On the other hand, a case example-centric classroom approach can yield a rich learning environment which fosters collaboration, communication, and self-directed exploration of the instructed principles. In previous work, we have reported on our experience in changing a graduate requirements engineering course towards using case examples based on real industry projects. As more and more curricula change in advance of project-based teaching paradigms, this paper discusses results from the long-term application of such a course design in a graduate setting. In addition, this paper reports our findings from the replication in an undergraduate requirements engineering course indicating that project-based learning techniques foster different teaching goals in graduate and undergraduate settings.},
 author = {Marian Daun and Andrea Salmon and Thorsten Weyer and Klaus Pohl and Bastian Tenbergen},
 booktitle = {2016 {IEEE} 29th International Conference on Software Engineering Education and Training ({CSEET})},
 doi = {10.1109/cseet.2016.15},
 month = {apr},
 publisher = {{IEEE}},
 title = {Project-Based Learning with Examples from Industry in University Courses: An Experience Report from an Undergraduate Requirements Engineering Course},
 url = {https://doi.org/10.1109%2Fcseet.2016.15},
 year = {2016}
}

@article{Daun_2022,
 abstract = {Requirements engineering (RE) has established itself as a core software engineering discipline. It is well acknowledged that good RE leads to higher quality software and considerably reduces the risk of failure or budget-overspending of software development projects. It is of vital importance to train future software engineers in RE and educate future requirements engineers to adequately manage requirements in various projects. To this date, there exists no central concept of what RE education shall comprise. To lay a foundation, we report on a systematic literature review of the field and provide a systematic map describing the current state of RE education. Doing so allows us to describe how the educational landscape has changed over the last decade. Results show that only a few established author collaborations exist and that RE education research is predominantly published in venues other than the top RE research venues (i.e., in venues other than the RE conference and journal). Key trends in RE instruction of the past decade include involvement of real or realistic stakeholders, teaching predominantly elicitation as an RE activity, and increasing student factors such as motivation or communication skills. Finally, we discuss open opportunities in RE education, such as training for security requirements and supply chain risk management, as well as developing a pedagogical foundation grounded in evidence of effective instructional approaches.},
 author = {Marian Daun and Alicia M. Grubb and Viktoria Stenkova and Bastian Tenbergen},
 doi = {10.1007/s00766-022-00381-9},
 journal = {Requirements Engineering},
 month = {may},
 publisher = {Springer Science and Business Media {LLC}},
 title = {A systematic literature review of requirements engineering education},
 url = {https://doi.org/10.1007%2Fs00766-022-00381-9},
 year = {2022}
}

@inproceedings{Dzvonyar_2018,
 abstract = {Composing well-balanced, effective development teams for software engineering project courses is important for facilitating learning, fostering student motivation as well as obtaining a successful project outcome. However, team composition is a challenging task for instructors because they have to consider a variety of possibly conflicting criteria such as practical constraints, skill distribution, or project motivation.
In this paper, we describe our process for composing development teams based on a pre-defined set of criteria that we have established from our experience conducting project courses since 2008 and constantly refined since. We reflect on these criteria by analyzing the team synergy and project satisfaction of participating students as well as their perspective on challenges in their teams in one concrete instance of a multi-project capstone course. Our findings show that lack of motivation, problems with interpersonal relationships and communication issues affect the less satisfied teams more than the others.},
 author = {Dora Dzvonyar and Lukas Alperowitz and Dominic Henze and Bernd Bruegge},
 booktitle = {Proceedings of the 2nd International Workshop on Software Engineering Education for Millennials},
 doi = {10.1145/3194779.3194782},
 month = {jun},
 publisher = {{ACM}},
 title = {Team composition in software engineering project courses},
 url = {https://doi.org/10.1145%2F3194779.3194782},
 year = {2018}
}

@inproceedings{Ellis,
 abstract = {Production of software is growing at a phenomenal rate worldwide. In addition, the increasingly global business climate has accelerated the need for business software. There are too few software engineers to produce and maintain software to meet this demand. One possible solution to correcting this shortfall is reeducating existing non-software employees to become software engineers. For the past two years, the Industry/University (UU) subgroup of the Working Group on Software Engineering Education and Training (WGSEET) has been investigating active collaborations between companies and universities in which employees without formal software education are reeducated to become software engineers. This paper reports on our findings by discussing our approach to the investigation, outlining the factors involved in successful collaboration construction and execution, and describing alumni views of the knowledge and skills transferred by the collaboration.},
 author = {H.J.C. Ellis and N.R. Mead and A.M. Moreno and S.B. Seidman},
 booktitle = {Proceedings 16th Conference on Software Engineering Education and Training, 2003. ({CSEE}{\&}amp$\mathsemicolon$T 2003).},
 doi = {10.1109/csee.2003.1191349},
 publisher = {{IEEE} Comput. Soc},
 title = {Industry/University software engineering collaborations for the successful reeducation of non-software professionals},
 url = {https://doi.org/10.1109%2Fcsee.2003.1191349}
}

@techreport{Ellis_2002,
 abstract = {},
 author = {Heidi J. Ellis and Ana Moreno and Nancy R. Mead and Stephen B. Seidman},
 doi = {10.21236/ada405789},
 month = {jul},
 publisher = {Defense Technical Information Center},
 title = {Reeducation to Expand the Software Engineering Workforce: Successful Industry/University Collaborations},
 url = {https://doi.org/10.21236%2Fada405789},
 year = {2002}
}

@article{Ellis_2002,
 abstract = {Currently, a large gap exists between the number of open software engineering positions and the number of qualified software engineers to fill those positions. The Industry/University (I/U) subgroup of the Working Group on Software Engineering Education and Training (WGSEET) is investigating active collaborations between companies and universities in which non-software professionals and practitioners without formal software education are reeducated to become software engineers. This paper describes the current status of work performed by the I/U subgroup in the investigation of reeducation collaborations. It is our goal to identify the common characteristics of successful collaborations in order to provide guidance to universities and companies when constructing a collaborative program, as well as to promote future collaborations. In this paper, we report on the current activity of the I/U subgroup, describe the features of successful collaborations identified so far in our research, and provide some conclusions as to the usefulness of such collaborations.},
 author = {Heidi J.C. Ellis and Nancy R. Mead and Ana Moreno and Cynthia D. Tanner and Dawn Ramsey},
 doi = {10.1076/csed.12.1.119.8217},
 journal = {Computer Science Education},
 month = {mar},
 number = {1-2},
 pages = {119--140},
 publisher = {Informa {UK} Limited},
 title = {Characteristics of Successful Collaborations to Produce Educated Software Engineering Professionals},
 url = {https://doi.org/10.1076%2Fcsed.12.1.119.8217},
 volume = {12},
 year = {2002}
}

@article{F_Gamble_2002,
 abstract = {Software development Training), which allows students to experience real-world project structures and goals. FIST was devised to establish a corporate-style interaction between the instructor, managers, software project teams, and customers. There are multiple courses involved in FIST. The first course is a combined senior-level/graduate course in software design and specification. In this fall semester course, instruction is given on the Unified Process and the inception phase of the project is begun. In the spring semester, senior computer science students take the capstone software engineering projects course, while graduate students enroll in project management. FIST structures these two courses in an innovative manner. Namely, graduate students perform all the duties of middle and upper management for the senior projects. The main objectives of the framework are to increase productivity, create a realistic business atmosphere, and gain needed experience in development and the application of studied management techniques. These objectives are accomplished through multiple mechanisms. First, we assign explicit roles to all participants and structure the projects, lectures, and assignments across the Unified Process. The classes meet separately so that focus on the particular course instruction can be performed. However, external team meetings are required, as well as multiple customer meetings and reviews throughout the},
 author = {Rose F. Gamble and Leigh A. Davis},
 doi = {10.28945/358},
 journal = {Journal of Information Technology Education: Research},
 pages = {223--232},
 publisher = {Informing Science Institute},
 title = {A Framework for Interaction in Software Development Training},
 url = {https://doi.org/10.28945%2F358},
 volume = {1},
 year = {2002}
}

@inproceedings{Faulk_2000,
 abstract = {Many educational institutions are developing graduate programs in software engineering targeted to working professionals. These educators face the dilemma of providing programs with both industrial relevance and academic excellence. This paper describes our experience and lessons learned in developing such a program, the Oregon Master of Software Engineering (OMSE). It describes a structured approach to curriculum design, curriculum design principles and methods that can be applied to develop a quality professional program.},
 author = {Stuart R. Faulk},
 booktitle = {Proceedings of the 22nd international conference on Software engineering  - {ICSE} {\textquotesingle}00},
 doi = {10.1145/337180.337214},
 publisher = {{ACM} Press},
 title = {Achieving industrial relevance with academic excellence},
 url = {https://doi.org/10.1145%2F337180.337214},
 year = {2000}
}

@article{Garousi_2019,
 abstract = {Context: According to various reports, many software engineering (SE) graduates often face difficulties when beginning their careers, which is mainly due to misalignment of the skills learned in university education with what is needed in the software industry. Objective: Our objective is to perform a meta-analysis to aggregate the results of the studies published in this area to provide a consolidated view on how to align SE education with industry needs, to identify the most important skills and also existing knowledge gaps. Method: To synthesize the body of knowledge, we performed a systematic literature review (SLR), in which we systematically selected a pool of 35 studies and then conducted a meta-analysis using data extracted from those studies. Results: Via a meta-analysis and using data from 13 countries and over 4,000 data points, highlights of the SLR include: (1) software requirements, design, and testing are the most important skills; and (2) the greatest knowledge gaps are in configuration management, SE models and methods, SE process, design (and architecture), as well as in testing. Conclusion: This paper provides implications for both educators and hiring managers by listing the most important SE skills and the knowledge gaps in the industry.},
 author = {Vahid Garousi and Görkem Giray and Eray Tüzün and Cagatay Catal and Michael Felderer},
 doi = {10.1016/j.jss.2019.06.044},
 journal = {Journal of Systems and Software},
 month = {oct},
 pages = {65--83},
 publisher = {Elsevier {BV}},
 title = {Aligning software engineering education with industrial needs: A meta-analysis},
 url = {https://doi.org/10.1016%2Fj.jss.2019.06.044},
 volume = {156},
 year = {2019}
}

@inproceedings{Helenius_2013,
 abstract = {The new complex digital and information services systems and industries are calling for new transdisciplinary approaches on how to achieve technical, social, and cultural knowledge and skills to serve future needs of the industry and society. The leading digital industry is in demand of engineer’s with knowledge and capabilities to collaborate and move between highly complex digital business and technical systems domains. The new reality is under constant transformation, highly intangible and non-linear interconnected system. Transformative digital business innovations, rapidly evolving business models, architectures enabled business model scalability and ultra large-scale of systems are the new characteristics of this software dominant logic. This paper aims at covering contemporary challenges of the interdisciplinary in business, service, software and systems engineering by analyzing different research ontologies and curriculum models. The paper analyses recent Computer Science (CS) and Information Systems (IS) curriculum developments and reflects through different ontologies and recent research. Paper uses Service Design and Engineering (SDE) as a didactic and curriculum model for future Information Systems Engineering (ISE) and Business and Information Systems Engineering (BISE). The new
curriculums serve the needs of global information start-ups, businesses, governments, and societies. This paper aims at describing the ontological foundations and conflicts, the axiology of the new curriculum model and proposes an integrated multi-ontology as the foundation for BISE new curriculum.},
 author = {Mika Helenius},
 booktitle = {2013 {IEEE} 15th Conference on Business Informatics},
 doi = {10.1109/cbi.2013.34},
 month = {jul},
 publisher = {{IEEE}},
 title = {Business and Information Systems Engineering -- In Quest for Research and Education Agenda in Europe},
 url = {https://doi.org/10.1109%2Fcbi.2013.34},
 year = {2013}
}

@article{J_Andriole_2006,
 abstract = {},
 author = {Stephen J. Andriole},
 doi = {10.28945/231},
 journal = {Journal of Information Technology Education: Research},
 pages = {001--012},
 publisher = {Informing Science Institute},
 title = {Business Technology Education in the Early 21st Century: The Ongoing Quest for Relevance},
 url = {https://doi.org/10.28945%2F231},
 volume = {5},
 year = {2006}
}

@inproceedings{Jaakkola_2022,
 abstract = {},
 author = {Hannu Jaakkola and Tommi Mikkonen and Kari Systä},
 booktitle = {Koli Calling {\textquotesingle}22: 22nd Koli Calling International Conference on Computing Education Research},
 doi = {10.1145/3564721.3564743},
 month = {nov},
 publisher = {{ACM}},
 title = {On Supervising Master's Theses in Industry Context},
 url = {https://doi.org/10.1145%2F3564721.3564743},
 year = {2022}
}

@inproceedings{Jwo_2015,
 abstract = {},
 author = {Jung-Sing Jwo},
 booktitle = {2015 10th International Conference on Computer Science {\&}amp$\mathsemicolon$ Education ({ICCSE})},
 doi = {10.1109/iccse.2015.7250265},
 month = {jul},
 publisher = {{IEEE}},
 title = {Teaching software engineering through comics and micro-movie design projects},
 url = {https://doi.org/10.1109%2Ficcse.2015.7250265},
 year = {2015}
}

@incollection{Landh_u_er_2017,
 abstract = {describe a computer science lab course that teaches a scientific research methodology. Our course is based on a recent research project and augments it with a motivating goal: We program a robot based on the Lego EV3 brick with plain English. Our students developed a multi-module solution; all modules were planned, implemented, and benchmarked following a research life cycle. The results of our case study indicate that a lab course can familiarize students with academic research methodologies. Interviews with the participants, conducted half a year after the lab course, confirm our positive impressions: Our participants indeed internalized the research life cycle and all told us that they wanted to pursue research in their upcoming curriculum. Three of four stated that the possibility to monitor progress by running solutions on the robot was highly motivating.},
 author = {Mathias Landhäu{\ss}er and Sebastian Weigelt and Martin Blersch},
 booktitle = {Robotics in Education},
 doi = {10.1007/978-3-319-62875-2_16},
 month = {aug},
 pages = {180--192},
 publisher = {Springer International Publishing},
 title = {Teaching Research Methodologies with a Robot in a {CS} Lab Course},
 url = {https://doi.org/10.1007%2F978-3-319-62875-2_16},
 year = {2017}
}

@inproceedings{Mahanti_2005,
 abstract = {Software is omnipresent in today's world. India is a hub to more than 1000 software companies. The software industry is a major employment providing industry in India. As a wholly intellectual artifact, software development is among the most labor demanding, intricate, and error-prone technologies in human history. Software's escalating vital role in systems of pervasive impact presents novel challenges for the education of software engineers. This paper focuses on the current status of software engineering education in India and suggestions for improvement so as to best suit the software industry's needs.},
 author = {Rupa Mahanti and P. K. Mahanti},
 booktitle = {18th Conference on Software Engineering Education {\&}amp$\mathsemicolon$ Training ({CSEET}{\textquotesingle}05)},
 doi = {10.1109/cseet.2005.30},
 month = {apr},
 publisher = {{IEEE}},
 title = {Software Engineering Education From Indian Perspective},
 url = {https://doi.org/10.1109%2Fcseet.2005.30},
 year = {2005}
}

@inproceedings{Memon_2010,
 abstract = {Requirements Engineering Education literature presents various problems that students face while taking courses in Requirements Engineering. This paper reports on an exploratory study to assess the present status of the Requirements Engineering course offered in major public universities in Malaysia. The main instrument used to gather data was the questionnaire. 47 responses were received and analyzed. The results from the questionnaire were discussed and compared with the problems presented in Requirements Engineering Education Literature.},
 author = {Rafia Naz Memon and Rodina Ahmad and Siti Salwah Salim},
 booktitle = {Proceedings of the 8th International Conference on Frontiers of Information Technology},
 doi = {10.1145/1943628.1943633},
 month = {dec},
 publisher = {{ACM}},
 title = {Problems in requirements engineering education},
 url = {https://doi.org/10.1145%2F1943628.1943633},
 year = {2010}
}

@incollection{Memon_2014,
 abstract = {Requirements Engineering (RE) is the most crucial process within software development projects. In order to prepare skilled requirements engineers, Requirements Engineering Education (REE) needs to be provided to students at the university level before they become software engineers and part of the workforce. However, RE is considered the most difficult subject within the software engineering curriculum for students to learn and for lecturers to teach due to its uncertain nature. This chapter examines the current and potential areas for research within REE. It first presents the current status of REE provided in universities and the REE problems reported in the literature that lead us to the potential research problems in REE. The REE teaching approaches proposed by researchers are then elaborated. The proposed approaches are mapped back to address the REE problems. The chapter closes with recommended directions for future REE research.},
 author = {Rafia Naz Memon and Rodina Ahmad and Siti Salwah Salim},
 booktitle = {Advances in Systems Analysis, Software Engineering, and High Performance Computing},
 doi = {10.4018/978-1-4666-6026-7.ch002},
 pages = {19--40},
 publisher = {{IGI} Global},
 title = {Critical Issues in Requirements Engineering Education},
 url = {https://doi.org/10.4018%2F978-1-4666-6026-7.ch002},
 year = {2014}
}

@inproceedings{Meziane_2004,
 abstract = {Recent years have seen much debate about the appropriate content of software engineering (SE) programs and how they relate to computer science (CS) programs, culminating in the distinguishing knowledge areas identified in the ACM/IEEE CS and SE curricula. Given these publications, a reasonable question to ask is: how do current SE programs differ from CS programs and to what extent do the differences reflect the characterizing features given in the ACM/IEEE curricula? We aim to answer these questions for SE programs offered in England. The content of a third of the SE programs in England are analyzed and summarized with respect to the knowledge areas of both the ACM/IEEE CS and SE curricula. The results reveal interesting features; such as intelligent systems is a more distinguishing feature between the CS and SE programs than the expected knowledge areas given in the SE curriculum. The main finding is that there are relatively few differences between existing SE and CS programs offered in England. We conclude with a discussion of the reasons for this situation and its likely implications.},
 author = {F. Meziane and S. Vadera},
 booktitle = {17th Conference on Software Engineering Education and Training, 2004. Proceedings.},
 doi = {10.1109/csee.2004.1276512},
 publisher = {{IEEE}},
 title = {A comparison of computer science and software engineering programmes in English universities},
 url = {https://doi.org/10.1109%2Fcsee.2004.1276512},
 year = {2004}
}

@incollection{Oh_Navarro_2009,
 abstract = {Learning theories describe how people learn. There is a large body of work concerning learning theories on which to draw, a valuable resource of which the domain of software engineering educational research has thus far not taken full advantage. In this chapter, we explore what role learning theories could play in software engineering education. We propose that learning theories can move the field of software engineering education forward by helping us to categorize, design, evaluate, and communicate about software engineering educational approaches. We demonstrate this by: (1) surveying a set of relevant learning theories, (2) presenting a categorization of common software engineering educational approaches in terms of learning theories, and (3) using one such approach (SimSE) as a case study to explore how learning theories can be used to improve existing approaches, design new approaches, and structure and guide the evaluation of an approach.},
 author = {Emily Oh Navarro},
 booktitle = {Software Engineering},
 doi = {10.4018/978-1-60566-102-5.ch003},
 pages = {38--59},
 publisher = {{IGI} Global},
 title = {On the Role of Learning Theories in Furthering Software Engineering Education},
 url = {https://doi.org/10.4018%2F978-1-60566-102-5.ch003},
 year = {2009}
}

@inproceedings{Razali_2010,
 abstract = {Software engineering offers vast variety of methods and tools for improving the quality of software development. As software products seem to be more complex to build than any other engineered artifacts, selecting suitable methods and tools appears to be crucial. Software engineers should possess broad knowledge on various technologies so that their appropriateness for a particular project could be judged sensibly. Wise judgment however requires not only knowledge but also critical minds. Case method is a discussion-based learning technique where students explore and exploit the knowledge and understanding of a subject matter themselves. The method needs the preparation of specific cases that inspire the exploration and sharing of knowledge, and also encourage critical thinking. This paper discusses the issues and shares the experience of preparing cases for teaching a software engineering course at the undergraduate level. Some guidelines are offered for future case developers of such courses to produce cases.},
 author = {Rozilawati Razali and Mahsa Chitsaz},
 booktitle = {2010 2nd International Conference on Education Technology and Computer},
 doi = {10.1109/icetc.2010.5529422},
 month = {jun},
 publisher = {{IEEE}},
 title = {Cases development for teaching software engineering},
 url = {https://doi.org/10.1109%2Ficetc.2010.5529422},
 year = {2010}
}

@article{Razali_2012,
 abstract = {Software engineers are provided with an enormous choice of technology for improving the quality of software. Being intangible, software products tend to be more intricate to build than any other artifacts. The selection of technology can thus become a critical factor for the success of software development. Software engineers are expected to be well-versed in various technologies to enable them to decide the best one for a particular development project. Sensible decisions however require not only understanding but also active minds, which can be achieved through meaningful learning. Being a discussion-based learning approach that encourages students to exploit knowledge and understanding of the subject matter, the Case Method seems to be a practical teaching and learning option. This method entails developing specific cases that promote exploration and critical thinking. To ensure the developed cases are useful, they should be evaluated. This paper presents a practical methodology for developing as well as evaluating industrial cases for teaching software engineering through the Case Method. It also shares some important lessons learned from the process. These lessons act as a guideline for future case developers to compose useful cases and motivate software engineering instructors to use cases in teaching.},
 author = {Rozilawati Razali and Dzulaiha Aryanee Putri Zainal and Mahsa Chitsaz},
 doi = {10.5539/ass.v8n16p215},
 journal = {Asian Social Science},
 month = {nov},
 number = {16},
 publisher = {Canadian Center of Science and Education},
 title = {Developing Industrial Cases for Teaching Software Engineering {\textendash} A Lesson Learned},
 url = {https://doi.org/10.5539%2Fass.v8n16p215},
 volume = {8},
 year = {2012}
}

@article{Razali_2013,
 abstract = {},
 author = {Rozilawati Razali and Dzulaiha Aryanee Putri Zainal},
 doi = {10.5539/ies.v6n6p191},
 journal = {International Education Studies},
 month = {may},
 number = {6},
 publisher = {Canadian Center of Science and Education},
 title = {Success Factors for Using Case Method in Teaching and Learning Software Engineering},
 url = {https://doi.org/10.5539%2Fies.v6n6p191},
 volume = {6},
 year = {2013}
}

@inproceedings{Rout_2007,
 abstract = {We have provided a focus on process management and improvement as a basis for conducting student group projects. This paper summarises the lessons learnt from eight years of experience in improvement-focussed projects. The approach has been based upon the establishment of the course as a separate and identifiable organization unit, with its own set of process assets. The responsibility for establishment of these assets resides with the students. Assessment for the course is based on an intensive assessment of the capability of the processes implemented by the project team. The project was assessed on three criteria: the process capability achieved; the achievement against a target capability profile defined by the student team in an Improvement Plan; and the comparison of the capability achieved compared to previous year's achievements We have found that it has been quite possible for the student project to achieve capabilities equivalent to Level 3 (as defined in ISO 15504) for a significant set of processes under their control. This work demonstrates the feasibility of maintaining organizational identification in a student project course, with the accompanying benefit of achieving improvement in process capability. The educational benefit of the course derives from exposure to process improvement as a critical goal for the students.},
 author = {Terence P. Rout and John Seagrott},
 booktitle = {20th Conference on Software Engineering Education {\&}amp$\mathsemicolon$ Training ({CSEET}{\textquotesingle}07)},
 doi = {10.1109/cseet.2007.35},
 month = {jul},
 publisher = {{IEEE}},
 title = {Maintaining High Process Capability in a Student Project Course},
 url = {https://doi.org/10.1109%2Fcseet.2007.35},
 year = {2007}
}

@inproceedings{Runeson,
 abstract = {Software plays an increasingly important role in new products of different kinds. Therefore, the need for engineers developing software is continuously increasing. However computer science education programmes are not enough to fulfil the industrial needs. Software engineering programmes are required with a holistic approach to the software life-cycle and its economics, as well as education in monitoring and managing the software process. At Lund University, Sweden, a new Bachelors software engineering programme was launched 1998. In this paper, the education programme's principles and structures are presented, as well as experiences from the first year. Software processes and methods play an important part in the education programme. It is concluded that the basic principles do function as expected, although the programme must be changed in the direction of requiring more programming skills before the introduction of systematic software processes.},
 author = {P. Runeson},
 booktitle = {Thirteenth Conference on Software Engineering Education and Training},
 doi = {10.1109/csee.2000.827048},
 publisher = {{IEEE} Comput. Soc},
 title = {A new software engineering programme - structure and initial experiences},
 url = {https://doi.org/10.1109%2Fcsee.2000.827048}
}

@incollection{Salamah_2014,
 abstract = {While many Software Engineering (SE) and Computer Science (CS) textbooks make use of case studies to introduce difference concepts and methods, the case studies introduced by these texts focus on a specific life-development phase or a particular topic within software engineering object-oriented design and implementation or requirements analysis and specification. Moreover, these case studies usually do not come with instructor guidelines on how to adopt the introduced material to the instructor's teaching style or to the particular level of the class or students in the class. The DigitalHome Case Study aims at addressing these shortcomings by providing a comprehensive set of artifacts associated with the full software development life-cycle. The project provides an extensive set of case study modules with exercises for teaching different topics in software engineering and computer science, as well as guidance for instructors on how to use these case modules. In this chapter, the authors motivate the use of the case study approach in teaching SE and CS concepts. They provide a description of the DigitalHome case study and the associated artifacts and case modules. The authors also report on the use of the developed material.},
 author = {Salamah Salamah and Massood Towhidnejad and Thomas Hilburn},
 booktitle = {Overcoming Challenges in Software Engineering Education},
 doi = {10.4018/978-1-4666-5800-4.ch017},
 pages = {333--347},
 publisher = {{IGI} Global},
 title = {Digital Home},
 url = {https://doi.org/10.4018%2F978-1-4666-5800-4.ch017},
 year = {2014}
}

@inproceedings{Simpkins_2015,
 abstract = {An application logic flaw is a type of software vulnerability related to privilege manipulation or transaction control manipulation. They are often difficult to identify using automated scanners. A case study on the eCommerce merchant software Bigcommerce, integrated with PayPal Express as a third party payment collector, was created to teach students about this topic. Case studies provide students with a real-world context, and help them understand complex topics better than traditional teaching methods. However, the computer science field, especially computer security, does not have many case studies available. The case study on logic flaws in software was taught in Spring 2015, and the teaching experience is discussed.},
 author = {Lindsay Simpkins and Xiaohong Yuan and Huiming Yu and Kenneth Williams},
 booktitle = {2015 {IEEE} Frontiers in Education Conference ({FIE})},
 doi = {10.1109/fie.2015.7344155},
 month = {oct},
 publisher = {{IEEE}},
 title = {Using a case study to teach students about finding and fixing logic flaws in software},
 url = {https://doi.org/10.1109%2Ffie.2015.7344155},
 year = {2015}
}

@inproceedings{Skevoulis_2011,
 abstract = {This paper describes an ongoing partnership between the Seidenberg School of Computer Science and Information Systems at Pace University, a Registered Education Provider (REP) for IEEE and the Information Technology Division at Bank of New York Mellon. The goal of the project is to deliver at the bank's location, a high quality, customized, graduate program in software engineering as well as to reflect on its strong and weak points and improve it. More importantly, through intense interaction with the Bank's IT Management, to ensure that the academic program matches their actual needs. The technology transfer, the customized training and the challenges are discussed.},
 author = {Sotiris Skevoulis},
 booktitle = {2011 24th {IEEE}-{CS} Conference on Software Engineering Education and Training ({CSEE}{\&}amp$\mathsemicolon$T)},
 doi = {10.1109/cseet.2011.5876105},
 month = {may},
 publisher = {{IEEE}},
 title = {Engineering a successful partnership between academia and the financial industry: A software engineering program for {IT} professionals},
 url = {https://doi.org/10.1109%2Fcseet.2011.5876105},
 year = {2011}
}

@article{Stegh_fer_2018,
 abstract = {},
 author = {Jan-Philipp Steghöfer and H{\aa}kan Burden and Regina Hebig and Gul Calikli and Robert Feldt and Imed Hammouda and Jennifer Horkoff and Eric Knauss and Grischa Liebel},
 doi = {10.1145/3152098},
 journal = {{ACM} Transactions on Computing Education},
 month = {jun},
 number = {2},
 pages = {1--32},
 publisher = {Association for Computing Machinery ({ACM})},
 title = {Involving External Stakeholders in Project Courses},
 url = {https://doi.org/10.1145%2F3152098},
 volume = {18},
 year = {2018}
}

@inproceedings{Szabo_2019,
 abstract = {Understanding how final year students build complex software systems is critical for determining whether desired graduate outcomes have been met, for identifying curriculum gaps, and for designing scaffolding and support structures. A large body of work focuses on the programming strategies employed by novice programmers, with few existing research in understanding programming strategies and development focus of final year students, in particular with respect to non-functional requirements. In this paper, we analyse consecutive revisions of 77 students across two cohorts that implemented a large and complex Distributed Systems assignment with several non-functional requirements. To obtain a qualitative overview of the students' approach to software development, we manually read and tagged all sourcefiles in all assignment revisions with specific development focus categories. Our analysis identifies how the students' development focus evolves throughout the assignment timeline. We visualise the software development process and identify several areas that require further support.},
 author = {Claudia Szabo and Michael Scott Pointon},
 booktitle = {Proceedings of the 2019 {ACM} Conference on Innovation and Technology in Computer Science Education},
 doi = {10.1145/3304221.3319774},
 month = {jul},
 publisher = {{ACM}},
 title = {Final Year Students{\textquotesingle} Approaches to Implementing Complex Distributed Systems},
 url = {https://doi.org/10.1145%2F3304221.3319774},
 year = {2019}
}

@inproceedings{Tenbergen_2019,
 abstract = {},
 author = {Bastian Tenbergen and Marian Daun},
 booktitle = {Proceedings of the Annual Hawaii International Conference on System Sciences},
 doi = {10.24251/hicss.2019.925},
 publisher = {Hawaii International Conference on System Sciences},
 title = {Industry Projects in Requirements Engineering Education:  Application in a University Course in the {US} and Comparison with Germany},
 url = {https://doi.org/10.24251%2Fhicss.2019.925},
 year = {2019}
}

@inproceedings{Trujillo_2019,
 abstract = {},
 author = {Miguel Eh{\'{e}}catl Morales Trujillo and Gabriel Alberto Garc{\'{\i}}a Mireles},
 booktitle = {Proceedings of the 2019 Federated Conference on Computer Science and Information Systems},
 doi = {10.15439/2019f279},
 month = {sep},
 publisher = {{IEEE}},
 title = {Participating in an Industry Based Social Service Program: a Report of Student Perception of What They Learn and What They Need},
 url = {https://doi.org/10.15439%2F2019f279},
 year = {2019}
}

@inproceedings{van_Solingen_2011,
 abstract = {When preparing students for an industrial or academic career in software engineering, educational institutions need to address the globally distributed character of the software engineering profession. As it will be difficult to have students actually participating in a real-life, multi-site, globally dispersed, industrial project and thus acquiring knowledge from experience, there is a challenge to properly prepare students for their future jobs. One way to teach the dynamics of global development is by letting students participate in a game in which these dynamics are primarily addressed. In this paper a board game is presented that can be used for such a purpose. The paper presents a description of the game and the findings from a controlled experiment to explore its learning effects.},
 author = {Rini van Solingen and Kevin Dullemond and Ben van Gameren},
 booktitle = {2011 {IEEE} Sixth International Conference on Global Software Engineering},
 doi = {10.1109/icgse.2011.24},
 month = {aug},
 publisher = {{IEEE}},
 title = {Evaluating the Effectiveness of Board Game Usage to Teach {GSE} Dynamics},
 url = {https://doi.org/10.1109%2Ficgse.2011.24},
 year = {2011}
}

@inproceedings{Vasudeva_Varma_2005,
 abstract = {The current approaches to the software engineering education fall short to fulfill the industry demand for quality software engineering. A constant need to create and imbibe more effective learning environments is growing in order to manage this demand. This paper discusses the learning disabilities possessed by both the conventional and the non-conventional approaches for teaching software engineering. We propose that case studies can be used as effective teaching mediums and a case study centric learning environment can address these learning disabilities. A case study approach can help the students to gain and retain realistic exposure to concepts of software engineering as they are applied in the real world, and the students of today can be groomed as excellent professionals who have experienced the intricacies and complexities of the real world as well as tried their hands to manage these complexities.},
 author = {Vasudeva Varma and  Kirti Garg},
 booktitle = {Fifth International Conference on Quality Software ({QSIC}{\textquotesingle}05)},
 doi = {10.1109/qsic.2005.18},
 publisher = {{IEEE}},
 title = {Case studies: the potential teaching instruments for software engineering education},
 url = {https://doi.org/10.1109%2Fqsic.2005.18},
 year = {2005}
}

@inproceedings{Wohlin_2013,
 abstract = {Software engineering research can be done in many ways, in particular it can be done in different ways when it comes to working with industry. This paper presents a list of top 10 challenges to work with industry based on our experience from working with industry in a very close collaboration with continuous exchange of knowledge and information. The top 10 list is based on a large number of research projects and empirical studies conducted with industrial research partners since 1983. It is concluded that close collaboration is a long-term undertaking and a large investment. The importance of addressing the top 10 challenges is stressed, since they form the basis for a long-term sustainable and successful collaboration between industry and academia.},
 author = {Claes Wohlin},
 booktitle = {2013 1st International Workshop on Conducting Empirical Studies in Industry ({CESI})},
 doi = {10.1109/cesi.2013.6618469},
 month = {may},
 publisher = {{IEEE}},
 title = {Empirical software engineering research with industry: Top 10 challenges},
 url = {https://doi.org/10.1109%2Fcesi.2013.6618469},
 year = {2013}
}

@misc{2020,
 abstract = {},
 doi = {10.32388/k9xl6b},
 month = {feb},
 publisher = {Qeios},
 title = {Asian},
 url = {https://doi.org/10.32388%2Fk9xl6b},
 year = {2020}
}

@book{2020,
 abstract = {Several decades ago, inspired by other knowledge areas, simulation 4 was introduced as a research method to Software Engineering. Motivated by 5 potential benefits achieved in other areas, the software engineering community has 6 used simulation-based studies for planning, controlling, and improving software 7 development. However, unclear expectations from simulation-based studies, a lack 8 of methodological support, as well as dispersed knowledge to support model 9 building and calibration have hindered widespread adoption of simulation-based 10 investigations. In this chapter, we delineate the role of simulation in software 11 engineering research and compile processes and guidelines into a comprehensive 12 life cycle. This chapter aims to guide software engineering researchers to conduct 13 effective simulation-based studies in real-world settings.},
 doi = {10.1007/978-3-030-32489-6},
 editor = {Michael Felderer and Guilherme Horta Travassos},
 publisher = {Springer International Publishing},
 title = {Contemporary Empirical Methods in Software Engineering},
 url = {https://doi.org/10.1007%2F978-3-030-32489-6},
 year = {2020}
}

@article{Acher_2017,
 abstract = {Software Product Line (SPL) engineering has emerged to provide the means to efficiently model, produce, and maintain multiple similar software variants, exploiting their common properties, and managing their variabilities (differences). With over two decades of existence, the community of SPL researchers and practitioners is thriving, as can be attested by the extensive research output and the numerous successful industrial projects. Education has a key role to support the next generation of practitioners to build highly complex, variability-intensive systems. Yet, it is unclear how the concepts of variability and SPLs are taught, what are the possible missing gaps and difficulties faced, what are the benefits, and what is the material available. Also, it remains unclear whether scholars teach what is actually needed by industry. In this article, we report on three initiatives we have conducted with scholars, educators, industry practitioners, and students to further understand the connection between SPLs and education, that is, an online survey on teaching SPLs we performed with 35 scholars, another survey on learning SPLs we conducted with 25 students, as well as two workshops held at the International Software Product Line Conference in 2014 and 2015 with both researchers and industry practitioners participating. We build upon the two surveys and the workshops to derive recommendations for educators to continue improving the state of practice of teaching SPLs, aimed at both individual educators as well as the wider community.},
 author = {Mathieu Acher and Roberto E. Lopez-Herrejon and Rick Rabiser},
 doi = {10.1145/3088440},
 journal = {{ACM} Transactions on Computing Education},
 month = {oct},
 number = {1},
 pages = {1--31},
 publisher = {Association for Computing Machinery ({ACM})},
 title = {Teaching Software Product Lines},
 url = {https://doi.org/10.1145%2F3088440},
 volume = {18},
 year = {2017}
}

@article{Ahmed_2022,
 abstract = {The study has been undertaken to integrate two different aspects of the triple helix model: universities and the industry. Special attention has been paid to the prevailing difference between the two, hampering their working as a coherent unit. Integrating the existing knowledge in the study, we proposed the Academia-Industry Collaboration Plan (AICP) design model. The model comprises processes, methods or approaches, and tools. Processes serve as a road map to third parties for establishing collaboration between academia and the industry. It has all the essential process models and a series of steps that help minimize the organizational complexity of the collaboration process between academia and the industry. Methods or approaches serve the purpose of implementing those processes effectively. Finally, appropriate tools are selected to integrate possible collaboration improvements that lead to innovation.},
 author = {Farah Ahmed and Muhammad Tahir Fattani and Syed Rizwan Ali and Rabia Noor Enam},
 doi = {10.3389/fpsyg.2022.875940},
 journal = {Frontiers in Psychology},
 month = {jun},
 publisher = {Frontiers Media {SA}},
 title = {Strengthening the Bridge Between Academic and the Industry Through the Academia-Industry Collaboration Plan Design Model},
 url = {https://doi.org/10.3389%2Ffpsyg.2022.875940},
 volume = {13},
 year = {2022}
}

@article{Armstrong_2020,
 abstract = {More specialized cybersecurity education programs are needed to address workforce needs, but it is unclear which knowledge, skills, and abilities (KSAs) fulfil industry needs. We interviewed 48 professionals within four cyber defense specialty areas: (1) Cyber Network Defense Analysis, (2) Cyber Network Defense Infrastructure Support, (3) Incident Response, and (4) Vulnerability Assessment and Management. The professionals rated a number of specialized KSAs along two dimensions: how important the KSA was to their job and how difficult the KSA was to learn. Overall, communication and other non-technical skills were rated as being very important for all cyber defense jobs. Findings indicated that, for some specialty areas, technical knowledge and skills vary considerably between jobs and so the ability to teach oneself is more valuable than proficiency in any one KSA. Findings may be used to inform the development of general cybersecurity curricula, as well as curricula that focus on Cyber Network Defense Analysis, Cyber Network Defense Infrastructure Support, or Vulnerability Assessment and Management.},
 author = {Miriam E. Armstrong and Keith S. Jones and Akbar Siami Namin and David C. Newton},
 doi = {10.1145/3421254},
 journal = {{ACM} Transactions on Computing Education},
 month = {nov},
 number = {4},
 pages = {1--25},
 publisher = {Association for Computing Machinery ({ACM})},
 title = {Knowledge, Skills, and Abilities for Specialized Curricula in Cyber Defense},
 url = {https://doi.org/10.1145%2F3421254},
 volume = {20},
 year = {2020}
}

@inproceedings{Badampudi_2019,
 abstract = {Usage of software engineering research in industrial practice is a well-known challenge. Synthesis of knowledge from multiple research studies is needed to provide evidence-based decision-support for industry. The objective of this paper is to present a vision of how a knowledge translation framework may look like in software engineering research, in particular how to translate research evidence into practice by combining contextualized expert opinions with research evidence. We adopted the framework of knowledge translation from health care research, adapted and combined it with a Bayesian synthesis method. The framework provided in this paper includes a description of each step of knowledge translation in software engineering. Knowledge translation using Bayesian synthesis intends to provide a systematic approach towards contextualized, collaborative and consensus-driven application of research results. In conclusion, this paper contributes towards the application of knowledge translation in software engineering through the presented framework. CCS CONCEPTS • Software and its engineering → Software design techniques;},
 author = {Deepika Badampudi and Claes Wohlin and Tony Gorschek},
 booktitle = {Proceedings of the Evaluation and Assessment on Software Engineering},
 doi = {10.1145/3319008.3319358},
 month = {apr},
 publisher = {{ACM}},
 title = {Contextualizing Research Evidence through Knowledge Translation in Software Engineering},
 url = {https://doi.org/10.1145%2F3319008.3319358},
 year = {2019}
}

@inproceedings{Baig_2018,
 abstract = {},
 author = {Mirza Zaeem Baig and Muhammad Usman Ul Haq and Hafiz Muhammad Umer Surkhail and Rabika Iqbal and Muhammad Mohsin Sheikh},
 booktitle = {Proceedings of the 2nd International Conference on High Performance Compilation, Computing and Communications},
 doi = {10.1145/3195612.3195620},
 month = {mar},
 publisher = {{ACM}},
 title = {Bridging the industry-academia collaboration gap a focus towards final year projects},
 url = {https://doi.org/10.1145%2F3195612.3195620},
 year = {2018}
}

@inproceedings{Baldassarre_2013,
 abstract = {},
 author = {Maria Teresa Baldassarre and Danilo Caivano and Giuseppe Visaggio},
 booktitle = {Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering},
 doi = {10.1145/2460999.2461020},
 month = {apr},
 publisher = {{ACM}},
 title = {Empirical studies for innovation dissemination},
 url = {https://doi.org/10.1145%2F2460999.2461020},
 year = {2013}
}

@inproceedings{Baldassarre_2019,
 abstract = {},
 author = {Maria Teresa Baldassarre and Danilo Caivano and Simone Romano and Giuseppe Scanniello},
 booktitle = {2019 45th Euromicro Conference on Software Engineering and Advanced Applications ({SEAA})},
 doi = {10.1109/seaa.2019.00047},
 month = {aug},
 publisher = {{IEEE}},
 title = {Software Models for Source Code Maintainability: A Systematic Literature Review},
 url = {https://doi.org/10.1109%2Fseaa.2019.00047},
 year = {2019}
}

@article{Baresi_2021,
 abstract = {Mobile computing is relevant, everywhere, and evolves so fast that it deserves special attention. This article builds on conversations that started during a panel session on “the role of engineering and development in mobile software” held at the IEEE/ACM International Conference on Mobile Software Engineering and Systems (MobileSoft’18). The panel highlighted that mobile computing is not just Android and mobile apps. It touched on the impact of mobile computing on software engineering practices, the problem of forming the mobile software engineering professional, and the transition of research to industry. It also addressed the problems of logical vs. physical mobility and of supporting the “always on” mentality. At the end of the panel we all felt that there was so much more to talk about, that we continued the conversation and summarized our extended discussions in this article.},
 author = {Luciano Baresi and William G. Griswold and Grace A. Lewis and Marco Autili and Ivano Malavolta and Christine Julien},
 doi = {10.1109/ms.2020.2994306},
 journal = {{IEEE} Software},
 month = {jan},
 number = {1},
 pages = {88--96},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Trends and Challenges for Software Engineering in the Mobile Domain},
 url = {https://doi.org/10.1109%2Fms.2020.2994306},
 volume = {38},
 year = {2021}
}

@incollection{Bauer_2015,
 abstract = {Adoption of structured reuse approaches in practice often poses multiple challenges. Research-industry collaborations are considered as suitable vehicle to mitigate adoption difficulties as well as to validate the applicability of scientific results. However, research cooperations with industry do not always live up to the expectations of either of the partners. Unfortunately for researchers and practitioners alike, insights behind the scenes of failed adoption and cooperation are often difficult to obtain. This hinders discussions on lessons learned by organizations during the adoption process and delays improvements. This paper aims to mitigate this issue by presenting lessons learned from interviews we conducted with practitioners in the context of a study on software reuse in industry. The study covered a wide range of aspects, including the process of reuse adoption. One of the participating companies had undertaken two attempts to adopt a form of structured reuse. However, both attempts did not succeed as expected. In our study, we identified tacit assumptions that were related to the encountered difficulties and present the lessons learned from the adoption approach. Furthermore , we report strategies that helped us to overcome the skepticism caused by a previous unsuccessful guided collaboration.},
 author = {Veronika Bauer},
 booktitle = {Product-Focused Software Process Improvement},
 doi = {10.1007/978-3-319-26844-6_3},
 pages = {24--39},
 publisher = {Springer International Publishing},
 title = {Challenges of Structured Reuse Adoption {\textemdash} Lessons Learned},
 url = {https://doi.org/10.1007%2F978-3-319-26844-6_3},
 year = {2015}
}

@article{Beasy_2022,
 abstract = {Twenty-first-century doctoral candidates face a consistently evolving employment landscape. This paper explores how gender and age influence doctoral students’ perceptions of employability preparedness provided by their higher education institution for future career pathways. A survey-based study (n = 222) was undertaken at a large regional Australian university to assess what employment pathways graduates intend to pursue, how prepared they feel for these pathways, and what strategies could be utilised to increase the effectiveness of doctoral training with a view to employability. Transition pedagogy is used as a lens to unpack and explore participants' perceptions about systems designed to support success. Key findings include (i) a surplus of candidates seeking academic careers; (ii) candidates reporting doctoral training inadequately prepares them for their preferred career path; and (iii) young males feeling most prepared by their doctoral programme and older females feeling the least prepared. We discuss how preparedness is not experienced equally, and how the conditions of higher education are constructed with assumptions of who a doctoral candidate is, with implications for who is most likely to benefit from it.},
 author = {Kim Beasy and Joseph Crawford and Sarah Young and Jo Kelder},
 doi = {10.1080/0309877x.2022.2050687},
 journal = {Journal of Further and Higher Education},
 month = {mar},
 number = {8},
 pages = {1092--1106},
 publisher = {Informa {UK} Limited},
 title = {A quantitative study on Australian doctoral students' perceptions of employability preparedness: how gender and age matter},
 url = {https://doi.org/10.1080%2F0309877x.2022.2050687},
 volume = {46},
 year = {2022}
}

@incollection{Betts_2014,
 abstract = {},
 author = {Stephen C. Betts and Michael D. Santoro},
 booktitle = {Moderne Konzepte des organisationalen Marketing},
 doi = {10.1007/978-3-658-04680-4_16},
 pages = {269--284},
 publisher = {Springer Fachmedien Wiesbaden},
 title = {Champions and Trust as Drivers of Industry/University Collaborations: A Relationship Marketing Perspective},
 url = {https://doi.org/10.1007%2F978-3-658-04680-4_16},
 year = {2014}
}

@inproceedings{Burova_2021,
 abstract = {},
 author = {Alisa Burova and Hanna Heinonen and Paulina Becerril Palma and Tuuli Keskinen and Jaakko Hakulinen and Viveka Opas and John Mäkelä and Kimmo Ronkainen and Sanni Siltanen and Roope Raisamo and Markku Turunen},
 booktitle = {Academic Mindtrek 2021},
 doi = {10.1145/3464327.3464367},
 month = {jun},
 publisher = {{ACM}},
 title = {Toward Efficient Academia-Industry Collaboration: A Case Study of Joint {VR} System Development},
 url = {https://doi.org/10.1145%2F3464327.3464367},
 year = {2021}
}

@article{Butt_2023,
 abstract = {Complex societal problems cannot be resolved without transdisciplinary research (TDR). Currently, there is no focused communication platform or commonly shared research framework for conducting TDR. The current study is a continuation of the exploration of collaborations in multidisciplinary, interdisciplinary, and TDR to identify ideas that could contribute to developing and testing a general framework for conducting TDR. The systematic literature review in this study discovered three main themes (TDR initiation, TDR management, and transdisciplinary knowledge exchange). These themes formed three phases of a general framework for conducting TDR. The novelty of the presented phased general framework for conducting TDR relates to the type of learning and outputs that are required at the end of each related action of all associated stages of the three phases to enable all participants to participate in TDR. The logical sequence of these actions and associated stages and phases were verified through a survey of academics and industry professionals internationally. The findings evidenced that improved communication between academics and industry professionals can respond to complex societal problems such as sustainable development, global environmental change, and environmental crises. The findings of the current research will enable the development of a transdisciplinary collaboration framework (TCF) for the nature-based design (NBD) of sustainable buildings aligned with the Royal Institute of British Architects (RIBA) Plan of Work.},
 author = {Anosh Nadeem Butt and Branka Dimitrijevi{\'{c}}},
 doi = {10.3390/su15054596},
 journal = {Sustainability},
 month = {mar},
 number = {5},
 pages = {4596},
 publisher = {{MDPI} {AG}},
 title = {Developing and Testing a General Framework for Conducting Transdisciplinary Research},
 url = {https://doi.org/10.3390%2Fsu15054596},
 volume = {15},
 year = {2023}
}

@article{Campean_2022,
 abstract = {The evaluation of impact of collaborative research on robust design methodologies and methods is important to both academic and industry stakeholders. This paper introduces a framework for impact evaluation which combines the broader framework adopted for the academic research impact assessment with the organisation viewpoint centred on business results, process improvement and product development teams capability improvement. A large scale empirical study conducted with evidence from technical reports on workplace projects from an automotive OEM proved the validity of the proposed framework.},
 author = {F. Campean and A. Uddin and J. Bridges and S. Fannon and U. Yildirim},
 doi = {10.1017/pds.2022.1},
 journal = {Proceedings of the Design Society},
 month = {may},
 pages = {1--10},
 publisher = {Cambridge University Press ({CUP})},
 title = {Evaluation of the Impact of Collaborative Research on Robust Design Methodologies: A Large Scale Empirical Case Study with an Automotive {OEM}},
 url = {https://doi.org/10.1017%2Fpds.2022.1},
 volume = {2},
 year = {2022}
}

@inproceedings{Carri_n_2018,
 abstract = {Requirements traceability is an important quality factor in the life cycle of the software, there is a lot of software standards that demands his implementation, for example, ISO/IEC 29110, a standard for very small entities; however, projects of small organizations do not perform an adequate application of traceability. In the literature there are proposals with a high level of abstraction; the realization of a traceability information model for small software development organizations provides a narrow alternative, reducing the gap between the theory and the reality in software development. We present a traceability information model for small organizations within the framework of ISO/IEC 29110, in this way organizations access an illustrative and reusable traceability solution that allows them to improve the quality of software development. The article contemplates the definition of the models.},
 author = {Marco Antonio Garc{\'{\i}}a Carri{\'{o}}n and Medardo Delgado Paredes and Percy Huertas Niquen and {\'{A}}lvaro Fern{\'{a}}ndez del Carpio},
 booktitle = {Proceedings of the International Conference on Geoinformatics and Data Analysis},
 doi = {10.1145/3220228.3220259},
 month = {apr},
 publisher = {{ACM}},
 title = {Traceability information model for very small entities with {ISO}/{IEC} 29110},
 url = {https://doi.org/10.1145%2F3220228.3220259},
 year = {2018}
}

@incollection{Chedid_2021,
 abstract = {The university-software industry collaboration relationship has been represented a key resource, to the extent that together they can more easily promote technological development that underpins innovation solutions. Through a literature review, this chapter aims to explore the concepts and the facilitator or inhibitor factors associated with the collaboration relationships between university and software industry, taking knowledge management into account. This chapter is organized as follows. In the first section, the
authors briefly introduce university, software industry, and knowledge management. The following section, based on the literature reviewed, provides a critical discussion of the university-software industry collaboration relationship, knowledge management in knowledge intensive organizations or community, and knowledge management in collaboration relationship between these two types of industries. Finally, in the rest of the sections, the authors point to future research directions and conclude.},
 author = {Marcello Chedid and Leonor Teixeira},
 booktitle = {Handbook of Research on Modern Educational Technologies, Applications, and Management},
 doi = {10.4018/978-1-7998-3476-2.ch028},
 pages = {114--130},
 publisher = {{IGI} Global},
 title = {Knowledge Management in University-Software Industry Collaboration},
 url = {https://doi.org/10.4018%2F978-1-7998-3476-2.ch028},
 year = {2021}
}

@inproceedings{de_Beer_2015,
 abstract = {In this paper, we describe the existing successful practices at the Fontys University of Applied Sciences, ICT in establishing and maintaining collaboration with industry within its ICT curriculum. We describe our approach and the major challenges that we face. In particular, we provide concrete examples from one semester of the Software Engineering curriculum where different forms of collaboration are employed. Our approach, experiences and lessons learned may be valuable to other software engineering programs in involving industry partners in the education process.},
 author = {Patrick de Beer and Samuil Angelov},
 booktitle = {Proceedings of the 2015 European Conference on Software Architecture Workshops},
 doi = {10.1145/2797433.2797468},
 month = {sep},
 publisher = {{ACM}},
 title = {Fontys {ICT}, Partners in Education Program},
 url = {https://doi.org/10.1145%2F2797433.2797468},
 year = {2015}
}

@inproceedings{de_la_Vara_2012,
 abstract = {Factors related to the requirements engineering process and customers have been repeatedly reported among those that most strongly influence the success of a software project. However, requirements engineering research has so far barely studied practice from a customer-based perspective. Furthermore, rigorous evidence about customers' perspectives regarding requirements engineering approaches is scarce, and links between customer-based requirements engineering research and the industrial practices are necessary. This paper argues that new research is necessary to tackle the above weaknesses. Our position is that: requirements specification approaches must be validated from a customer-based perspective; the influence of customers' characteristics on the requirements engineering process must be studied in more depth; and potential customer-based improvements in practice must be assessed. We also present situations in which the results from these activities would help practitioners, propose a research agenda to execute these activities, and discuss challenges that might hinder their execution.},
 author = {Jose Luis de la Vara and Luis Hoyos and Enrique Collado and Mehrdad Sabetzadeh},
 booktitle = {2012 Second {IEEE} International Workshop on Empirical Requirements Engineering ({EmpiRE})},
 doi = {10.1109/empire.2012.6347680},
 month = {sep},
 publisher = {{IEEE}},
 title = {Towards customer-based requirements engineering practices},
 url = {https://doi.org/10.1109%2Fempire.2012.6347680},
 year = {2012}
}

@inproceedings{de_la_Vara_2013,
 abstract = {Although past research has resulted in different means to deal with software model quality, creation of adequate software models remains challenging. Any modelling effort must be carefully analysed and planned before it starts, and definition or adoption of modelling guidelines is usually necessary. In addition, the amount of publications addressing model quality in practice is low, and the knowledge about others' experience regarding model quality is limited. This paper reports on our experience in dealing with software model quality in the context of a project between industry and academia. Such a project corresponds to a large-scale research project in which modelling has been used both as part of the necessary work for executing the project and for creating project results. We present how we have dealt with model quality in requirements modelling and in conceptual model specification, as well as a set of lessons learned. The insights provided can help both researchers and practitioners when having to deal with software model quality.},
 author = {Jose Luis de la Vara and Huascar Espinoza},
 booktitle = {2013 13th International Conference on Quality Software},
 doi = {10.1109/qsic.2013.40},
 month = {jul},
 publisher = {{IEEE}},
 title = {Dealing with Software Model Quality in Practice: Experience in a Research Project},
 url = {https://doi.org/10.1109%2Fqsic.2013.40},
 year = {2013}
}

@inproceedings{de_la_Vara_2013,
 abstract = {Evaluating requirements engineering technology is a challenging activity. It becomes even more difficult when having to evaluate the technology and thus to show its suitability in real settings, as access to industrial resources might be limited and the target domain might be complex or very sensitive. This paper reports on our experience in specifying an evaluation framework for requirements engineering technology. The technology aims to improve safety assurance and certification practices, and is being developed in the scope of a large-scale European research project. We focus on presenting the challenges encountered and the lessons learned while specifying the framework. These lessons summarise how we addressed, plan to address, or propose to address the challenges. This information can be useful for other researchers and practitioners that have to evaluate requirements engineering technology in general, and with industry and for safety assurance and certification in particular.},
 author = {Jose Luis de la Vara and Davide Falessi and Eric Verhulst},
 booktitle = {2013 3rd International Workshop on Empirical Requirements Engineering ({EmpiRE})},
 doi = {10.1109/empire.2013.6615209},
 month = {jul},
 publisher = {{IEEE}},
 title = {Specifying a framework for evaluating requirements Engineering Technology: Challenges and lessons learned},
 url = {https://doi.org/10.1109%2Fempire.2013.6615209},
 year = {2013}
}

@article{Deuter_2016,
 abstract = {The Internet of Things (IoT) is the main driver for industrial smart products produced by an increasing number of manufacturers. The overall functionality of smart products is a combination of mechanical, electrical/electronic functions (hardware functions) and software functions. For hardware and software there are different lifecycle models: Product lifecycle management (PLM) focuses on hardware, application lifecycle management (ALM) focuses on software. Smart products force manufacturers to converge both lifecycle models step by step. Although seemingly important, the research community leaves this innovative area mostly up to the PLM tool vendors and the ALM tool vendors, resulting in them driving the convergence.},
 author = {Andreas Deuter and Stefano Rizzo},
 doi = {10.1016/j.protcy.2016.08.052},
 journal = {Procedia Technology},
 pages = {405--412},
 publisher = {Elsevier {BV}},
 title = {A Critical View on {PLM}/{ALM} Convergence in Practice and Research},
 url = {https://doi.org/10.1016%2Fj.protcy.2016.08.052},
 volume = {26},
 year = {2016}
}

@inproceedings{Duarte_2015,
 abstract = {Technology and knowledge have been recognized as main sources of competitive advantage of corporations, industries and nations, particularly in the software domain. They have led to the creation of local ecosystems devoted to development and transfer activities, which ensure not only personal and institutional motivation/recognition, but also social and economic gains. An open (ended) debate panel is proposed in order to develop greater awareness and seek deeper understanding of such activities from Requirements Engineering research to industrial practice. The panel involves researchers and practitioners with the perspective of eliciting: (i) experiences in knowledge and technology development and transfer; (ii) awareness and effectiveness of models and patterns; and (iii) factors for having successful collaboration between research institutions and industry. The organizers also plan to run a survey during and after the conference, summarizing their conclusions in specific post-conference reports.},
 author = {Carlos Henrique C. Duarte and Tony Gorschek},
 booktitle = {2015 {IEEE} 23rd International Requirements Engineering Conference ({RE})},
 doi = {10.1109/re.2015.7320462},
 month = {aug},
 publisher = {{IEEE}},
 title = {Technology transfer - Requirements Engineering research to industrial practice an open (ended) debate},
 url = {https://doi.org/10.1109%2Fre.2015.7320462},
 year = {2015}
}

@article{Enke_2021,
 abstract = {Considering the technological development, and particularly the global pandemic of COVID-19, it is essential to align universities and companies as agents in the transformation of society. However, a portion of academic research results does not find application in the productive sector. To better understand such (dis)connection, this study aims to verify in the scientific literature the critical success factors proper to the collaboration between universities and companies. Therefore, a bibliographic survey was carried out in the Scopus and Web of Science databases, considering the period 2000-2020 as temporality. From a quantitative point of view, a bibliometric analysis is presented regarding the year of publication, origin, thematic categories, authorship and co-citation networks, and with a qualitative character, through content analysis, critical factors were identified, with emphasis on trust, commitment, assumption of risks, realistic and well-defined objectives, managerial engagement of project coordinators, university reputation, previous experience in collaboration, communication and organizational culture.},
 author = {Ernani Jos{\'{e}} Fortunato Lisb{\^{o}}a Enke and Mauro Luiz Martens and Cristina Dai Pr{\'{a}} Martens and Dariane Beatriz Schoffen Enke and Jos{\'{e}} Celso Contador and Thyago Bachim and Aparecido dos Reis Coutinho and Walter Cardoso Satyro},
 doi = {10.33448/rsd-v10i13.21316},
 journal = {Research, Society and Development},
 month = {oct},
 number = {13},
 pages = {e248101321316},
 publisher = {Research, Society and Development},
 title = {Critical success factors in university-industry collaboration: a bibliometric analysis},
 url = {https://doi.org/10.33448%2Frsd-v10i13.21316},
 volume = {10},
 year = {2021}
}

@inproceedings{Fard_2020,
 abstract = {},
 author = {Amir Ebrahimi Fard and Shajeeshan Lingeswaran},
 booktitle = {Companion Proceedings of the Web Conference 2020},
 doi = {10.1145/3366424.3384373},
 month = {apr},
 publisher = {{ACM}},
 title = {Misinformation Battle Revisited: Counter Strategies from Clinics to Artificial Intelligence},
 url = {https://doi.org/10.1145%2F3366424.3384373},
 year = {2020}
}

@article{Fernandes_2023,
 abstract = {University-industry R&D collaborations (UICs) play a vital role in stimulating open innovation that leads to new products, processes, and services that creates value for customers and broader societal impact. UICs, however, commonly fail to meet these stakeholders' benefits. This study identifies thirty-four critical success factors (CSFs) for improving UIC success. The study includes a systematic literature review and a longitudinal UIC case study between Bosch Car Multimedia in Portugal and University of Minho, a multi-million Euro R&D collaboration from 2013 to 2021. The importance of the CSFs is discussed in the context of the UIC lifecycle. A survey among researchers and industry practitioners involved in R&D collaborative projects was completed to confirm the analysis of the empirical results. This paper provides UIC managers with CSFs, which, when addressed competently, can provide a basis for successful UIC projects and sustainable university-industry collaborations.},
 author = {Gabriela Fernandes and Jos{\'{e}} M.R.C.A. Santos and Pedro Ribeiro and Lu{\'{\i}}s Miguel D.F. Ferreira and David O{\textquotesingle}Sullivan and Daniela Barroso and Eduardo B. Pinto},
 doi = {10.1016/j.procs.2023.01.458},
 journal = {Procedia Computer Science},
 pages = {1650--1659},
 publisher = {Elsevier {BV}},
 title = {Critical Success Factors of University-Industry R{\&}amp$\mathsemicolon$D Collaborations},
 url = {https://doi.org/10.1016%2Fj.procs.2023.01.458},
 volume = {219},
 year = {2023}
}

@inproceedings{Fowler_2016,
 abstract = {Collaborations and partnerships between academia and government agencies are common, especially when it comes to research and development in the fields of science, engineering and technology. However, collaboration between a government agency and an art school is rather atypical. This paper presents the Collaborative Student Project, which aims to explore the following challenge: The ideation, development and realization of education and public outreach products for NASA's upcoming ICESat-2 mission in collaboration with art students.},
 author = {Deborah R. Fowler and Helen-Nicole Kostis},
 booktitle = {{SIGGRAPH} {ASIA} 2016 Symposium on Education},
 doi = {10.1145/2993352.2993358},
 month = {nov},
 publisher = {{ACM}},
 title = {Collaborative computer graphics product development between academia and government},
 url = {https://doi.org/10.1145%2F2993352.2993358},
 year = {2016}
}

@inproceedings{Galster_2016,
 abstract = {},
 author = {Matthias Galster and Danny Weyns},
 booktitle = {2016 13th Working {IEEE}/{IFIP} Conference on Software Architecture ({WICSA})},
 doi = {10.1109/wicsa.2016.10},
 month = {apr},
 publisher = {{IEEE}},
 title = {Empirical Research in Software Architecture: How Far have We Come?},
 url = {https://doi.org/10.1109%2Fwicsa.2016.10},
 year = {2016}
}

@article{Garousi_2016,
 abstract = {},
 author = {Vahid Garousi and Matt M. Eskandar and Kadir Herkilo{\u{g}}lu},
 doi = {10.1007/s11219-016-9319-5},
 journal = {Software Quality Journal},
 month = {jun},
 number = {4},
 pages = {1091--1143},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Industry{\textendash}academia collaborations in software testing: experience and success stories from Canada and Turkey},
 url = {https://doi.org/10.1007%2Fs11219-016-9319-5},
 volume = {25},
 year = {2016}
}

@article{Garousi_2016,
 abstract = {Context: The global software industry and the software engineering (SE) academia are two large communities. However, unfortunately, the level of joint industry-academia collaborations in SE is still relatively very low, compared to the amount of activity in each of the two communities. It seems that the two ’camps’ show only limited interest/motivation to collaborate with one other. Many researchers and practitioners have written about the challenges, success patterns (what to do, i.e., how to collaborate) and anti-patterns (what not do do) for industry-academia collaborations.},
 author = {Vahid Garousi and Kai Petersen and Baris Ozkan},
 doi = {10.1016/j.infsof.2016.07.006},
 journal = {Information and Software Technology},
 month = {nov},
 pages = {106--127},
 publisher = {Elsevier {BV}},
 title = {Challenges and best practices in industry-academia collaborations in software engineering: A systematic literature review},
 url = {https://doi.org/10.1016%2Fj.infsof.2016.07.006},
 volume = {79},
 year = {2016}
}

@inproceedings{Garousi_2016,
 abstract = {},
 author = {Vahid Garousi and Kadir Herkiloglu},
 booktitle = {2016 {IEEE} International Conference on Software Testing, Verification and Validation ({ICST})},
 doi = {10.1109/icst.2016.7},
 month = {apr},
 publisher = {{IEEE}},
 title = {Selecting the Right Topics for Industry-Academia Collaborations in Software Testing: An Experience Report},
 url = {https://doi.org/10.1109%2Ficst.2016.7},
 year = {2016}
}

@inproceedings{Garousi_2017,
 abstract = {Research collaboration between industry and academia supports improvement and innovation in industry and helps to ensure industrial relevance in academic research. However, many researchers and practitioners believe that the level of joint industry-academia collaboration (IAC) in sooware engineering (SE) research is still relatively low, compared to the amount of activity in each of the two communities. e goal of the empirical study reported in this paper is to characterize the state of IAC with respect to a set of challenges , paaerns and anti-paaerns identiied by a recent Systematic Literature Review study. To address the above goal, we gathered the opinions of researchers and practitioners w.r.t. their experiences in IAC projects. Our dataset includes 47 opinion data points related to a large set of projects conducted in 10 diierent countries. We aim to contribute to the body of evidence in the area of IAC, for the beneet of researchers and practitioners in conducting future successful IAC projects in SE. As an output, the study presents a set of empirical ndings and evidence-based recommendations to increase the success of IAC projects. CCS CONCEPTS • Sooware and its engineering → Sooware creation and management ; • Social and professional topics → Professional topics; * Supported by FCT (Fundação para a Ciência e Tecnologia) within the Project Scope UID/CEC/00319/2013.},
 author = {Vahid Garousi and Michael Felderer and Jo{\~{a}}o M. Fernandes and Dietmar Pfahl and Mika V. Mäntylä},
 booktitle = {Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering},
 doi = {10.1145/3084226.3084279},
 month = {jun},
 publisher = {{ACM}},
 title = {Industry-academia collaborations in software engineering},
 url = {https://doi.org/10.1145%2F3084226.3084279},
 year = {2017}
}

@article{Garousi_2019,
 abstract = {},
 author = {Vahid Garousi and Dietmar Pfahl and Jo{\~{a}}o M. Fernandes and Michael Felderer and Mika V. Mäntylä and David Shepherd and Andrea Arcuri and Ahmet Co{\c{s}}kun{\c{c}}ay and Bedir Tekinerdogan},
 doi = {10.1007/s10664-019-09711-y},
 journal = {Empirical Software Engineering},
 month = {apr},
 number = {4},
 pages = {2540--2602},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Characterizing industry-academia collaborations in software engineering: evidence from 101 projects},
 url = {https://doi.org/10.1007%2Fs10664-019-09711-y},
 volume = {24},
 year = {2019}
}

@article{Garousi_2020,
 abstract = {Context: Software testing is an important and costly software engineering activity in the industry. Despite the efforts of the software testing research community in the last several decades, various studies show that still many practitioners in the industry report challenges in their software testing tasks.

Objective: To shed light on industry’s challenges in software testing, we characterize and synthesize the challenges reported by practitioners. Such concrete challenges can then be used for a variety of purposes, e.g., research collaborations between industry and academia. 

Method: Our empirical research method is opinion survey. By designing an online survey, we solicited practitioners’ opinions about their challenges in different testing activities. Our dataset includes data from 72 practitioners from eight different countries. 

Results: Our results show test management and test automation are considered the most challenging among all testing activities by practitioners. Our results also include a set of 104 concrete challenges in software testing that may need further investigations by the research community.

Conclusion: We conclude that the focal points of industrial work and academic research in software testing differ. Furthermore, the paper at hand provides valuable insights concerning practitioners’ “pain” points and, thus, provides researchers with a source of important research topics of high practical relevance.},
 author = {Vahid Garousi and Michael Felderer and Marco Kuhrmann and Kadir Herkilo{\u{g}}lu and Sigrid Eldh},
 doi = {10.1002/smr.2251},
 journal = {Journal of Software: Evolution and Process},
 month = {feb},
 number = {8},
 publisher = {Wiley},
 title = {Exploring the industry{\textquotesingle}s challenges in software testing: An empirical study},
 url = {https://doi.org/10.1002%2Fsmr.2251},
 volume = {32},
 year = {2020}
}

@article{Garousi_2020,
 abstract = {},
 author = {Vahid Garousi and Markus Borg and Markku Oivo},
 doi = {10.1007/s10664-020-09803-0},
 journal = {Empirical Software Engineering},
 month = {mar},
 number = {3},
 pages = {1687--1754},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Practical relevance of software engineering research: synthesizing the community's voice},
 url = {https://doi.org/10.1007%2Fs10664-020-09803-0},
 volume = {25},
 year = {2020}
}

@article{Gopura_2018,
 abstract = {For the past 15 years, the Sri Lankan apparel industry has been upgrading from apparel assembly to providing design and product development services. The country’s fashion education developed in response to the industry’s need for design professionals. The purpose of this study is to explore how fashion designer competencies are developed within Sri Lanka. This study adopts a qualitative approach using semi-structured interviews conducted with 28 fashion and product development professionals, selected through purposive sampling. The development of fashion designer competencies within SL in this context are analysed and discussed. The study proposes a ‘fashion education ecosystem’ that has emerged from the nexus between formal fashion education and training and professional development within the industry, supporting the upgrading of the industry through the enhancement of designer skills. Sri Lanka, as a small country that depends heavily on the apparel industry for employment and economic development, provides a model for other developing countries seeking industrial upgrading from apparel assembly to design and product development services through the fashion education ecosystem.},
 author = {Sumith Gopura and Alice Payne and Deepthi C. Bandara and Laurie Buys and Leena Seneheweera},
 doi = {10.1080/17543266.2018.1467500},
 journal = {International Journal of Fashion Design, Technology and Education},
 month = {apr},
 number = {1},
 pages = {23--34},
 publisher = {Informa {UK} Limited},
 title = {Fashion education in Sri Lanka: the nexus between formal and informal education},
 url = {https://doi.org/10.1080%2F17543266.2018.1467500},
 volume = {12},
 year = {2018}
}

@inproceedings{Gorschek_2013,
 abstract = {A little rebellion now and then is a good thing. This short position statement describes my views on some of the challenges associated with many conferences, the Requirements Engineering Conference being among them. The main concepts are; the goals, as well as criteria for paper selection for the conference should be defined explicitly, and shared with the community. Industry involvement in the conference should be increased, but the focus of all tracks should be quality - what constitutes quality however needs to be defined and agreed on. Industrial validation of research results have to be more than an intention. Last but not least, how papers are presented and discussed needs to change, focusing on quality over quantity.},
 author = {Tony Gorschek},
 booktitle = {2013 21st {IEEE} International Requirements Engineering Conference ({RE})},
 doi = {10.1109/re.2013.6636751},
 month = {jul},
 publisher = {{IEEE}},
 title = {A little rebellion now and then is a good thing: Views on the requirements engineering conference},
 url = {https://doi.org/10.1109%2Fre.2013.6636751},
 year = {2013}
}

@inproceedings{Gorschek_2015,
 abstract = {The field of Empirical Software Engineering has undergone a much-needed expansion the last decade, and papers of all shapes and sizes are more or less mandated to have an "empirical" part to be published in premiere venues. The positive trend has researchers realizing the benefits, but also the investments needed, inherent to industry collaboration. That is, real practitioners, involved in the development of software intensive product, system, and service development. This paper shortly summarizes lessons learned from over ten years experience of industrial collaboration, and knowledge and technology exchange between applied researchers and industry.},
 author = {Tony Gorschek},
 booktitle = {2015 {IEEE}/{ACM} 3rd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1109/cesi.2015.9},
 month = {may},
 publisher = {{IEEE}},
 title = {How to Increase the Likelihood of Successful Transfer to Industry -- Going Beyond the Empirical},
 url = {https://doi.org/10.1109%2Fcesi.2015.9},
 year = {2015}
}

@incollection{Gorschek_2020,
 abstract = {Industry-academia collaboration is one of the cornerstones of empirical software engineering. The role of researchers should be developing new practices and principles that enable industry in meeting the engineering challenges today and in the future. This chapter describes the third generation of industrial co-production in software engineering that includes seven steps. The co-production model and experiences associated with its use represent deep and long-term co-production with over thirty companies, many of which are still active partners in SERL},
 author = {Tony Gorschek and Krzysztof Wnuk},
 booktitle = {Contemporary Empirical Methods in Software Engineering},
 doi = {10.1007/978-3-030-32489-6_18},
 pages = {503--525},
 publisher = {Springer International Publishing},
 title = {Third Generation Industrial Co-production in Software Engineering},
 url = {https://doi.org/10.1007%2F978-3-030-32489-6_18},
 year = {2020}
}

@incollection{Gorschek_2021,
 abstract = {Studying and collaborating with any software-intensive organization demands for excellence in empirical software engineering research. The ever-growing complexity and context-dependency of software products, however, demands for more pragmatic and solution-focused research. This is a great opportunity but it also conflicts with the traditional quest for “purity” in research and a very narrow focus of the work. In this short positioning, we elaborate on challenges which emerge from academia-industry collaborations and discuss touch upon pragmatic ways of approaching them along the co-production model which emerged from SERL Sweden.},
 author = {Tony Gorschek and Daniel Mendez},
 booktitle = {Software Quality: Future Perspectives on Software Engineering Quality},
 doi = {10.1007/978-3-030-65854-0_9},
 pages = {109--116},
 publisher = {Springer International Publishing},
 title = {Solving Problems or Enabling Problem-Solving? from Purity in Empirical Software Engineering to Effective Co-production (Invited Keynote)},
 url = {https://doi.org/10.1007%2F978-3-030-65854-0_9},
 year = {2021}
}

@inproceedings{Grunbacher_2013,
 abstract = {We conducted several empirical studies over the last couple of years as part of a collaboration with industrial partners in the area of software product lines. Our studies differed regarding their motivation and goals, their scope, the research methods applied, and the involved subjects. In this experience paper we briefly summarize the studies and their key characteristics. We reflect on our experiences based on the success factors for industry-academia collaborations by Wohlin et al. We discuss the role of empirical studies in long-term industry-academia collaborations and present lessons learned.},
 author = {Paul Grunbacher and Rick Rabiser},
 booktitle = {2013 1st International Workshop on Conducting Empirical Studies in Industry ({CESI})},
 doi = {10.1109/cesi.2013.6618466},
 month = {may},
 publisher = {{IEEE}},
 title = {Success factors for empirical studies in industry-academia collaboration: A reflection},
 url = {https://doi.org/10.1109%2Fcesi.2013.6618466},
 year = {2013}
}

@incollection{Guillot_2017,
 abstract = {},
 author = {Isabelle Guillot and Geetha Paulmani and Vivekanandan Kumar and Shawn N. Fraser},
 booktitle = {Lecture Notes in Computer Science},
 doi = {10.1007/978-3-319-63874-4_15},
 pages = {196--212},
 publisher = {Springer International Publishing},
 title = {Case Studies of Industry-Academia Research Collaborations for Software Development with Agile},
 url = {https://doi.org/10.1007%2F978-3-319-63874-4_15},
 year = {2017}
}

@article{Hansen_2021,
 abstract = {},
 author = {Irina-Emily Hansen and Ola Jon Mork and Torgeir Welo and Geir Ringen},
 doi = {10.1007/s13132-021-00846-2},
 journal = {Journal of the Knowledge Economy},
 month = {nov},
 number = {4},
 pages = {3172--3194},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Bridging the `Valley of Death': Can Agile Principles Be Applied in Industry-Academia Research and Innovation Projects?},
 url = {https://doi.org/10.1007%2Fs13132-021-00846-2},
 volume = {13},
 year = {2021}
}

@incollection{Hargreaves_2017,
 abstract = {Data analytics serve as a means to detect trends and patterns from organizational data repositories. The variety and dynamism of data and analysis approaches create a wide range of opportunities for collaboration between academia and industry. Successful collaboration projects create win-win scenarios with tangible benefits for both sides. This paper reports about an ongoing project between ATB Financial and the Laboratory for Software Engineering Decision Support (SEDS) at The University of Calgary. The key content of the project was to leverage the benefits of data analytics for efficient and effective customer relationship management (CRM). More precisely, the objective was to find analytic solutions that allow us to predict the complexity of an opportunity and to connect it with the right team member in order to increase efficiency and create value for ATB’s customers. We report the results and lessons learned from running through the various steps of a systematic data analytics process.},
 author = {Ian Hargreaves and Dylan Roth and Muhammad Rezaul Karim and Maleknaz Nayebi and Günther Ruhe},
 booktitle = {Studies in Big Data},
 doi = {10.1007/978-3-319-60255-4_4},
 month = {aug},
 pages = {45--59},
 publisher = {Springer International Publishing},
 title = {Effective Customer Relationship Management at {ATB} Financial: A Case Study on Industry-Academia Collaboration in Data Analytics},
 url = {https://doi.org/10.1007%2F978-3-319-60255-4_4},
 year = {2017}
}

@article{https://doi.org/10.2312/visgap.20201109,
 abstract = {},
 author = {Gospodnetic, Petra and Rauhut, Markus and Hagen, Hans},
 doi = {10.2312/VISGAP.20201109},
 journal = {VisGap - The Gap between Visualization Research and Visualization Software},
 publisher = {The Eurographics Association},
 title = {From Research Topic to Industrial Practice: An Experience Report},
 url = {https://diglib.eg.org/handle/10.2312/visgap20201109},
 year = {2020}
}

@phdthesis{https://doi.org/10.4233/uuid:7d8ac519-f3f7-425f-82ce-1df481bc1c34,
 abstract = {},
 author = {Mohammadi, M.},
 doi = {10.4233/UUID:7D8AC519-F3F7-425F-82CE-1DF481BC1C34},
 publisher = {Delft University of Technology},
 title = {Ontology alignment: Simulated annealing-based system, statistical evaluation, and application to logistics interoperability },
 url = {http://resolver.tudelft.nl/uuid:7d8ac519-f3f7-425f-82ce-1df481bc1c34},
 year = {2020}
}

@article{https://doi.org/10.5277/e-inf160105,
 author = {Unterkalmsteiner, Michael and Abrahamsson, Pekka and XiaoFeng, Wang and Nguyen-Duc, Anh and Shah, Syed and Shahid Bajwa, Sohaib and Baltes, Guido H. and Conboy, Kieran and Cullina, Eoin and Dennehy, Denis and Edison, Henry and Fernandez-Sanchez, Carlos and Garbajosa, Juan and Gorschek, Tony and Klotins, Eriks and Hokkanen, Laura and Kon, Fabio and Lunesu, Ilaria and Marchesi, Michele and Morgan, Lorraine and Oivo, Markku and Selig, Christoph and Seppänen, Pertti and Sweetman, Roger and Tyrväinen, Pasi and Ungerer, Christina and Yagüe, Agustin},
 doi = {10.5277/E-INF160105},
 journal = {e-Informatica Vol. X},
 keywords = {Software startups},
 language = {en},
 pages = {2016; ISSN 1897-7979},
 publisher = {Institute of Applied Informatics, Wrocław University of Technology, Wrocław},
 title = {Software Startups - A Research Agenda},
 url = {http://www.e-informatyka.pl/attach/e-Informatica_-_Volume_10/eInformatica2016Art5.pdf},
 year = {2016}
}

@inproceedings{Jaakkola_2022,
 abstract = {},
 author = {Hannu Jaakkola and Tommi Mikkonen and Kari Systä},
 booktitle = {Koli Calling {\textquotesingle}22: 22nd Koli Calling International Conference on Computing Education Research},
 doi = {10.1145/3564721.3564743},
 month = {nov},
 publisher = {{ACM}},
 title = {On Supervising Master's Theses in Industry Context},
 url = {https://doi.org/10.1145%2F3564721.3564743},
 year = {2022}
}

@article{Kampschulte_2021,
 abstract = {Working within a new museological paradigm that sees museums as fluid, unbounded, and dependent upon context, this article seeks to examine the discourses that underpin collaboration as a contemporary and necessary museum education practice. In conducting this examination we will use examples from both Germany and the United States to illustrate the fact that though the two nations exist thousands of miles apart, and the museums within each nation are situated in different socio-political and cultural contexts, the underlying purpose of collaboration is the same in each nation and its museums. Collaboration seeks to change the museum from, in the immortal words of Stephen Weil, being about something to being for somebody.},
 author = {Lorenz Kampschulte and Sarah Junk Hatcher},
 doi = {10.1080/10598650.2020.1842046},
 journal = {Journal of Museum Education},
 month = {jan},
 number = {1},
 pages = {74--85},
 publisher = {Informa {UK} Limited},
 title = {Changing Museums Through Cooperation and Collaboration},
 url = {https://doi.org/10.1080%2F10598650.2020.1842046},
 volume = {46},
 year = {2021}
}

@inproceedings{Kanso_2014,
 abstract = {Collaborative research between academia and industry is considered by many the perfect combination of expertise. The strong academic theoretical background is perfectly complemented by the applied knowledge of the industry. Yet we see many collaborative projects that fail to deliver the intended results. We believe that long-term collaboration should be based on foundations that ensure its success. In this paper we aim at defining those foundations by reflecting on the successful collaborative research projects we achieved.},
 author = {Ali Kanso and Denis Monette},
 booktitle = {Proceedings of the 2014 international workshop on Long-term industrial collaboration on software engineering},
 doi = {10.1145/2647648.2647654},
 month = {sep},
 publisher = {{ACM}},
 title = {Foundations for long-term collaborative research},
 url = {https://doi.org/10.1145%2F2647648.2647654},
 year = {2014}
}

@inproceedings{Karim_2016,
 abstract = {This document describes our experience of applying data analytics at Plexina, a leading IT company working in the healthcare domain. The main goal of the project was to identify factors currently affecting issue management and to make analytics based suggestions for optimizing the process. Various statistical and machine learning techniques were applied on a data set extracted from six releases of Plexina, containing more than 666 issues. Statistical techniques successfully identified the various factors that leads to estimation inaccuracy related to issues as well as identified the hidden relationships existing among various variables. The employed predictive analytic models was also successful to some extent, in predicting effort estimation related inaccuracy associated with the issues. The insights provided by the entire data analytics study can be of great help to product managers or the developers to make more informed decisions. In addition, the guidelines presented in this paper based on the lessons learnt can be applied to other data analytics and academia-industry collaboration project.},
 author = {Muhammad Rezaul Karim and S. M. Didar Al Alam and Shaikh Jeeshan Kabeer and Günther Ruhe and Basil Baluta and Shafquat Mahmud},
 booktitle = {Proceedings of the 4th International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1145/2896839.2896845},
 month = {may},
 publisher = {{ACM}},
 title = {Applying data analytics towards optimized issue management},
 url = {https://doi.org/10.1145%2F2896839.2896845},
 year = {2016}
}

@article{Kettunen_2022,
 abstract = {},
 author = {Petri Kettunen and Janne Järvinen and Tommi Mikkonen and Tomi Männistö},
 doi = {10.1186/s40309-022-00196-5},
 journal = {European Journal of Futures Research},
 month = {apr},
 number = {1},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Energizing collaborative industry-academia learning: a present case and future visions},
 url = {https://doi.org/10.1186%2Fs40309-022-00196-5},
 volume = {10},
 year = {2022}
}

@inproceedings{Khanna_2018,
 abstract = {},
 author = {Abhirup Khanna and Amit Agarwal and Piyush Maheshwari},
 booktitle = {2018 Advances in Science and Engineering Technology International Conferences ({ASET})},
 doi = {10.1109/icaset.2018.8376929},
 month = {feb},
 publisher = {{IEEE}},
 title = {University-industry collaboration: A new way of educating future generations of engineers in India},
 url = {https://doi.org/10.1109%2Ficaset.2018.8376929},
 year = {2018}
}

@inproceedings{Kim_Soon_2014,
 abstract = {Vitalization of University and industry collaboration (UIC) is at the forefront of higher education policy making at institutional and national levels. It benefits both the industries and higher institutions with the sharing of expertise and knowhow. Industry players are investing in innovation, research and development to stay ahead of global competition. It is with this lead of future potentials and opportunities that this study was conducted on university and industry collaboration between Universiti Tun Hussein Onn Malaysia (UTHM) an anchor institution located in Batu Pahat with the industries. The respondents are the Deans, Deputy Deans and Head of Departments. Sources of external funding, adequacy of laboratory equipment, types of services offer to the industry, nature of UIC interaction and coordination were reported. Discussion and suggestion of approaches to UIC from the findings reported in this paper were also drawn from previous works and the authors' personal knowledge and experiences for stimulating and building collaboration works.},
 author = {Ng Kim-Soon and Isabella Anak Nikol and Wahid Razzaly and Abd Rahman Ahmad},
 booktitle = {2014 {IEEE} International Conference on Management of Innovation and Technology},
 doi = {10.1109/icmit.2014.6942419},
 month = {sep},
 publisher = {{IEEE}},
 title = {A Preliminary Examination of Stimulating and Building University-Industry Collaborative Works at a Public University},
 url = {https://doi.org/10.1109%2Ficmit.2014.6942419},
 year = {2014}
}

@article{Kneller_2014,
 abstract = {},
 author = {Robert Kneller and Marcel Mongeon and Jeff Cope and Cathy Garner and Philip Ternouth},
 doi = {10.1371/journal.pone.0090302},
 editor = {Alejandro Raul Hernandez Montoya},
 journal = {{PLoS} {ONE}},
 month = {mar},
 number = {3},
 pages = {e90302},
 publisher = {Public Library of Science ({PLoS})},
 title = {Industry-University Collaborations in Canada, Japan, the {UK} and {USA} {\textendash} With Emphasis on Publication Freedom and Managing the Intellectual Property Lock-Up Problem},
 url = {https://doi.org/10.1371%2Fjournal.pone.0090302},
 volume = {9},
 year = {2014}
}

@inproceedings{Lampasona_2014,
 abstract = {},
 author = {Constanza Lampasona and Philipp Diebold and Jonas Eckhardt and Rolf Schneider},
 booktitle = {Proceedings of the 8th {ACM}/{IEEE} International Symposium on Empirical Software Engineering and Measurement},
 doi = {10.1145/2652524.2652582},
 month = {sep},
 publisher = {{ACM}},
 title = {Evaluation in practice},
 url = {https://doi.org/10.1145%2F2652524.2652582},
 year = {2014}
}

@inproceedings{Lucietto,
 abstract = {},
 author = {Anne M. Lucietto and Diana L. Peters and Meher R. Taleyarkhan and Shelly Tan},
 booktitle = {2020 {CIEC} Proceedings},
 doi = {10.18260/1-2-650-38725},
 publisher = {{ASEE} Conferences},
 title = {Academic and Industry Collaboration {\textendash} A Literature Review},
 url = {https://doi.org/10.18260%2F1-2-650-38725}
}

@article{Malhotra_2022,
 abstract = {Industry-academia collaboration (IAC) has long been a source of discussion in various ways. A vital first step toward closing the gap is fostering alumni engagement in industry and academia. Industry-academia collaborations are like earth and water, and they live in harmony. They cannot exist apart from one another. The collaborative effort between industry and academia promotes improvement and innovation in technology and innovative research and enables the university to be more relevant to the industry. This article proposes a collaborative approach based on alumni influences and uses secondary data on the influences of alumni in engineering to enrich the collaboration between industry and academia. The industry and academia utilize the alumni’s potential to facilitate communication and offer their students and staff facilities. The research findings can be used by policymakers to innovate in the field of engineering and to strengthen the partnership between industry and academia in society. The model enables academia and industry to utilize the alumni strengths in enriching the collaboration; it also enhances academic research output, recruitment, fundraising, marketing, product promotion, and internship opportunities for students via alumni active participation. We propose some significant agendas for future work.},
 author = {Ruchika Malhotra and Massoud Massoudi and Rajni Jindal},
 doi = {10.1007/s10639-022-11276-1},
 journal = {Education and Information Technologies},
 month = {aug},
 number = {2},
 pages = {2263--2289},
 publisher = {Springer Science and Business Media {LLC}},
 title = {An alumni-based collaborative model to strengthen academia and industry partnership: The current challenges and strengths},
 url = {https://doi.org/10.1007%2Fs10639-022-11276-1},
 volume = {28},
 year = {2022}
}

@article{Marasco_2022,
 abstract = {As engineering educators seek to prepare students for future careers, it can be challenging to keep course materials current with industry practices and knowledge. Students also often experience a disconnect between their studies and perceived relevance to future industry roles. This study examines the potential impact of an industry-academia collaboration on the development and improvement of software engineering education while addressing these issues. A collaborative autoethnographic approach is used to concurrently analyze the experiences of both industry and academic participants in the collaboration. Common themes across the collected personal reflections show that varied benefits were experienced by all stakeholders while contributing to an improved student experience.},
 author = {Emily Marasco and Ann Barcomb and Gloria Dwomoh and Daniel Eguia and Abbas Jaffary and Garth Johnson and Lance Leonard and Ryan Shupe},
 doi = {10.24908/pceea.vi.15970},
 journal = {Proceedings of the Canadian Engineering Education Association ({CEEA})},
 month = {nov},
 publisher = {Queen{\textquotesingle}s University Library},
 title = {collaborative autoethnographic analysis of industry-academia collaboration for software engineering education development},
 url = {https://doi.org/10.24908%2Fpceea.vi.15970},
 year = {2022}
}

@inproceedings{Marijan_2020,
 abstract = {},
 author = {Dusica Marijan and Arnaud Gotlieb},
 booktitle = {2020 46th Euromicro Conference on Software Engineering and Advanced Applications ({SEAA})},
 doi = {10.1109/seaa51224.2020.00053},
 month = {aug},
 publisher = {{IEEE}},
 title = {Lessons Learned on Research Co-Creation: Making Industry-Academia Collaboration Work},
 url = {https://doi.org/10.1109%2Fseaa51224.2020.00053},
 year = {2020}
}

@article{Marijan_2021,
 abstract = {},
 author = {Dusica Marijan and Arnaud Gotlieb},
 doi = {10.1016/j.infsof.2020.106473},
 journal = {Information and Software Technology},
 month = {apr},
 pages = {106473},
 publisher = {Elsevier {BV}},
 title = {Industry-Academia research collaboration in software engineering: The Certus model},
 url = {https://doi.org/10.1016%2Fj.infsof.2020.106473},
 volume = {132},
 year = {2021}
}

@article{Marijan_2022,
 abstract = {Increasing the impact of software engineering research in the software industry and the society at large has long been a concern of high priority for the software engineering community. The problem of two cultures, research conducted in a vacuum (disconnected from the real world), or misaligned time horizons are just some of the many complex challenges standing in the way of successful industry–academia collaborations. This article reports on the experience of research collaboration and knowledge co-creation between industry and academia in software engineering as a way to bridge the research–practice collaboration gap. Our experience spans 14 years of collaboration between researchers in software engineering and the European and Norwegian software and IT industry. Using the participant observation and interview methods, we have collected and afterwards analyzed an extensive record of qualitative data. Drawing upon the findings made and the experience gained, we provide a set of 14 patterns and 14 anti-patterns for industry–academia collaborations, aimed to support other researchers and practitioners in establishing and running research collaboration projects in software engineering.},
 author = {Dusica Marijan and Sagar Sen},
 doi = {10.1145/3494519},
 journal = {{ACM} Transactions on Software Engineering and Methodology},
 month = {mar},
 number = {3},
 pages = {1--52},
 publisher = {Association for Computing Machinery ({ACM})},
 title = {Industry{\textendash}Academia Research Collaboration and Knowledge Co-creation: Patterns and Anti-patterns},
 url = {https://doi.org/10.1145%2F3494519},
 volume = {31},
 year = {2022}
}

@inproceedings{Marques_2022,
 abstract = {},
 author = {Denis Marques and T{\^{a}}mara Dallegrave and Luis Barbosa and Cleyton Rodrigues and Wylliams Santos},
 booktitle = {Proceedings of the 24th International Conference on Enterprise Information Systems},
 doi = {10.5220/0011115900003179},
 publisher = {{SCITEPRESS} - Science and Technology Publications},
 title = {Industry-Academy Collaboration in Agile Methodology: Preliminary Findings of a Systematic Literature Review},
 url = {https://doi.org/10.5220%2F0011115900003179},
 year = {2022}
}

@inproceedings{Mart_nez_Fern_ndez_2014,
 abstract = {More and more, software engineering researchers are motivated to solve real problems that bring value to industry. An example is the industry-academia collaboration described in this paper among everis, an IT consulting firm, and the GESSI research group at UPC. The goal of this paper is twofold: to evaluate the success of the collaboration, and to report the experience with conducting empirical studies in the industry and lessons learnt. We evaluated our collaboration with an existing model for technology transfer, and performed a focus group discussion to identify challenges we have faced. After initialization and alignment of the collaboration, a high maturity level has been achieved: we have obtained the first results in form of proposed solutions, scientific publications, and pilots run in real projects. In spite of this positive progress, further initiatives need to be undertaken in the last phases of the collaboration to achieve high degrees of maturity in deployment impact, industry benefit and innovativeness. Evaluating the collaboration has been positive, since we identified the next steps to be taken to achieve a high degree of technology transfer and innovation dissemination. We think it is a needed step in industry-academia collaborations in order to improve their success.},
 author = {Silverio Mart{\'{\i}}nez-Fern{\'{a}}ndez and Helena Martins Marques},
 booktitle = {Proceedings of the 2nd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1145/2593690.2593696},
 month = {jun},
 publisher = {{ACM}},
 title = {Practical experiences in designing and conducting empirical studies in industry-academia collaboration},
 url = {https://doi.org/10.1145%2F2593690.2593696},
 year = {2014}
}

@article{McClain_2018,
 abstract = {The approach to building innovative partnerships between academia and the pharmaceutical industry has expanded to investigate collaborations that offer meaningful outcomes beyond discovery and increased productivity. This case study uses a systems thinking approach to guide the process and analyse the outcome of a partnership undertaken by one pharmaceutical company and academia. The collaborative process established three tiers of evolution over a 3-year period. The outcome was an online module–based course, entitled ‘Making Medicines: The Process of Drug Development’, that provides information about the drug discovery and development process. Both the course development and the final product serve as a useful case study of how collaboration between academia and industry might be achieved. The development process itself is proposed as an appropriate approach for building educational partnerships.},
 author = {Elizabeth K. McClain and Yolanda Johnson-Moton and Bryan Larsen and Rebecca J. Bartlett Ellis and Eric Niederhoffer},
 doi = {10.1177/0950422218785826},
 journal = {Industry and Higher Education},
 month = {jul},
 number = {5},
 pages = {302--311},
 publisher = {{SAGE} Publications},
 title = {Making medicines},
 url = {https://doi.org/10.1177%2F0950422218785826},
 volume = {32},
 year = {2018}
}

@article{Menon_2021,
 abstract = {Purpose
The study has a two-fold purpose: first, to identify the enablers of partnering agility in higher education, and, second, to analyze the interplay between the enablers.

Design/methodology/approach
Total interpretive structural modelling (TISM) was used to construct a theoretical model of partnering agility enablers, and cross-impact matrix multiplication applied to classification (MICMAC) analysis was used to rank and segregate the enablers into independent, autonomous, dependent and linkage zones on the basis of their driving and dependence power.

Findings
The study helped in identifying eight enablers that can be instrumental in driving partnering agility in higher education. According to the TISM model, clarity on roles and responsibilities of partners was found to be the most crucial and vital enabler followed by resource sharing.

Practical implications
The conceptual model provides a new direction on how to develop and strengthen higher education partnerships. The model has prioritized all the crucial enablers that the management can work around in order to drive partnering agility in higher education institutions.

Originality/value
Studies in the past have majorly focused on academia–industry partnerships. This research has tried to provide a comprehensive view of the enablers and the multidirectional interplay between the enablers that can facilitate partnerships between academia and industry, Indian and international universities, and academia and community.},
 author = {Shalini Menon and M. Suresh and R. Raghu Raman},
 doi = {10.1108/heswbl-04-2021-0067},
 journal = {Higher Education, Skills and Work-Based Learning},
 month = {nov},
 number = {3},
 pages = {604--626},
 publisher = {Emerald},
 title = {Enablers facilitating industry-academia, transnational~education and university-community partnering agility in higher education},
 url = {https://doi.org/10.1108%2Fheswbl-04-2021-0067},
 volume = {12},
 year = {2021}
}

@article{Mikkonen_2018,
 abstract = {},
 author = {Tommi Mikkonen and Casper Lassenius and Tomi Männistö and Markku Oivo and Janne Järvinen},
 doi = {10.1016/j.infsof.2017.10.013},
 journal = {Information and Software Technology},
 month = {mar},
 pages = {34--45},
 publisher = {Elsevier {BV}},
 title = {Continuous and collaborative technology transfer: Software engineering research with real-time industry impact},
 url = {https://doi.org/10.1016%2Fj.infsof.2017.10.013},
 volume = {95},
 year = {2018}
}

@inproceedings{Nikov_2014,
 abstract = {In this paper, we describe the experiences from the collaboration between a software company and university. The company organizes a coding competition on which the best students from Macedonia participate. The competition quickly got the attention of university students and proved to be an arena where they show their knowledge. The involvement of the university staff in the competition directly and indirectly and the involvement of the company in the training process proved to be beneficial both for university and for company. The competition initiates skill improvement and this makes the Macedonian companies more competitive on the regional and European markets.},
 author = {Aleksandar Nikov and Igor Kulev and Pance Cavkovski and Anastas Misev and Vladimir Trajkovik and Dimitar Trajanov},
 booktitle = {Proceedings of the 2014 international workshop on Long-term industrial collaboration on software engineering},
 doi = {10.1145/2647648.2647657},
 month = {sep},
 publisher = {{ACM}},
 title = {{CodeFu}},
 url = {https://doi.org/10.1145%2F2647648.2647657},
 year = {2014}
}

@inproceedings{Perry,
 abstract = {},
 author = {Sara Perry and Emily Hunter and Steven Currall and Ed Frauenheim},
 booktitle = {2015 {ASEE} Annual Conference and Exposition Proceedings},
 doi = {10.18260/p.24548},
 publisher = {{ASEE} Conferences},
 title = {Organized Innovation: A Framework for Effectively Managing Innovation},
 url = {https://doi.org/10.18260%2Fp.24548}
}

@inproceedings{Peters,
 abstract = {},
 author = {Diane Peters and Anne Lucietto},
 booktitle = {2016 {ASEE} Annual Conference {\&}amp$\mathsemicolon$ Exposition Proceedings},
 doi = {10.18260/p.26455},
 publisher = {{ASEE} Conferences},
 title = {A Survey of Types of Industry-Academia Collaboration},
 url = {https://doi.org/10.18260%2Fp.26455}
}

@inproceedings{Petersen_2014,
 abstract = {},
 author = {Kai Petersen and Emelie Engström},
 booktitle = {Proceedings of the 2014 international workshop on Long-term industrial collaboration on software engineering},
 doi = {10.1145/2647648.2647650},
 month = {sep},
 publisher = {{ACM}},
 title = {Finding relevant research solutions for practical problems},
 url = {https://doi.org/10.1145%2F2647648.2647650},
 year = {2014}
}

@incollection{Petersen_2016,
 abstract = {Industry–academia collaboration in software engineering is essential for the relevance of research, as research may make important contributions to the improvement of software engineering. Thus, software engineering researchers are an asset in software process improvement. In this chapter, I present different experiences of being an embedded researcher in industry contributing to software process improvement. The process improvement works were focused on helping organizations to move from plan-driven processes to agile and lean processes. We will elaborate on the challenges, essential practices, and related benefits that were observed when working closely with industry in the role of embedded researchers. Supporting examples from different published cases form the basis for this experience report.},
 author = {Kai Petersen},
 booktitle = {Managing Software Process Evolution},
 doi = {10.1007/978-3-319-31545-4_12},
 pages = {235--255},
 publisher = {Springer International Publishing},
 title = {A Researcher's Experiences in Supporting Industrial Software Process Improvement},
 url = {https://doi.org/10.1007%2F978-3-319-31545-4_12},
 year = {2016}
}

@inproceedings{Pokkiyarath_2014,
 abstract = {A major challenge in engineering education today in India is preparing students with the skill set needed for a global industry. This paper describes an innovative partnership between two institutions of higher education in India and USA and a multinational corporation to address this challenge. The collaborative manner in which the industry and institutions internationalized the curriculum is a key feature of this program. This unique approach has resulted in the employees of a multinational company in India being able to get two high quality Masters-level degrees in engineering, customized to their current and future requirements at a very affordable price point. This paper looks at cost savings, collaborative course development between industry and international academia, using technology to deliver courses and on-the-job professional development program for employees while keeping the employees motivated. But there are also interesting lessons learnt regarding teaching in English, adjusting to the local cultural context and the overall integration into the Indian academic setting. The process innovation described here would be of great interest to academia, industry and education policy makers and has the potential to be replicated in the entire field of non-engineering and interdisciplinary academic programs.},
 author = {Manoj Pokkiyarath and Raghu Raman and Krishnashree Achuthan and Bharat Jayaraman},
 booktitle = {2014 {IEEE} Frontiers in Education Conference ({FIE}) Proceedings},
 doi = {10.1109/fie.2014.7044385},
 month = {oct},
 publisher = {{IEEE}},
 title = {Preparing global engineers: {USA}-India academia {\&}amp$\mathsemicolon$amp$\mathsemicolon$ industry led approach},
 url = {https://doi.org/10.1109%2Ffie.2014.7044385},
 year = {2014}
}

@inproceedings{Prechelt_2015,
 abstract = {Context: The difficulty (not just effort) of obtaining access for software engineering empirical studies in industry varies greatly. Supposedly, some of this variance in difficulty is particular, stemming from properties of individual contexts (the industrial partners and their work), while the rest is repeatable, related to properties of the research question and research design. Question: What are these recurring difficulty factors that arise from research question and research design? What mechanisms produce their influence? Method: We use ideation and knowledge extraction from research experience to identify potential difficulty factors, use expert discussion to understand their mechanisms, and use concept analysis to arrange them into a taxonomy. We evaluate the result by comparatively applying it to two research efforts pursued by the same research group. Results: We find six scope factors, five problematic intervention effects factors, and seven helpful intervention (side-)effects factors. Conclusion: Considering these factors systematically during the formulation of a research question and the design of a research method can help with balancing data collection difficulty with results validity and relevance.},
 author = {Lutz Prechelt and Franz Zieris and Holger Schmeisky},
 booktitle = {2015 {IEEE}/{ACM} 3rd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1109/cesi.2015.11},
 month = {may},
 publisher = {{IEEE}},
 title = {Difficulty Factors of Obtaining Access for Empirical Studies in Industry},
 url = {https://doi.org/10.1109%2Fcesi.2015.11},
 year = {2015}
}

@inproceedings{Rabiser_2018,
 abstract = {The study presented in this paper aims to provide evidence for the hypothesis that software product line research has been changing and that the works in industry and academia have diverged over time. We analysed a subset (140) of all (593) papers published at the Software Product Line Conference (SPLC) until 2017. The subset was randomly selected to cover all years as well as types of papers. We assessed the research type of the papers (academic or industry), the kind of evaluation (application example, empirical, etc.), and the application domain. Also, we assessed which product line life-cycle phases, development practices, and topics the papers address. We present an analysis of the topics covered by academic vs. industry research and discuss the evolution of these topics and their relation over the years. We also discuss implications for researchers and practitioners. We conclude that even though several topics have received more attention than others, academic and industry research on software product lines are actually rather in line with each other.},
 author = {Rick Rabiser and Klaus Schmid and Martin Becker and Goetz Botterweck and Matthias Galster and Iris Groher and Danny Weyns},
 booktitle = {Proceedings of the 22nd International Systems and Software Product Line Conference - Volume 1},
 doi = {10.1145/3233027.3233028},
 month = {sep},
 publisher = {{ACM}},
 title = {A study and comparison of industrial vs. academic software product line research published at {SPLC}},
 url = {https://doi.org/10.1145%2F3233027.3233028},
 year = {2018}
}

@article{Rees_2020,
 abstract = {},
 author = {Daniel J. Rees and Victoria Bates and Roderick A. Thomas and Simon B. Brooks and Hamish Laing and Gareth H. Davies and Michael Williams and Leighton Phillips and Yogesh K. Dwivedi},
 doi = {10.1108/tg-05-2020-0074},
 journal = {Transforming Government: People, Process and Policy},
 month = {aug},
 number = {1},
 pages = {169--190},
 publisher = {Emerald},
 title = {Collaborating to deliver value in health care: exploring conditions required for successful healthcare and life science sector collaboration},
 url = {https://doi.org/10.1108%2Ftg-05-2020-0074},
 volume = {15},
 year = {2020}
}

@incollection{Ric_s_2020,
 abstract = {Companies are facing constant pressure towards shorter release cycles while still maintaining a high level of quality. Agile development, continuous integration and testing are commonly used quality assurance techniques applied in industry. Increasing the level of test automation is a key ingredient to address the short release cycles. Testing at the graphical user interface (GUI) level is challenging to automate, and therefore many companies still do this manually. To help find solutions for better GUI test automation, academics are researching scriptless GUI testing to complement the script-based approach. In order to better match industrial problems with academic results, more academia-industry collaborations for case-based evaluations are needed. This paper describes such an initiative to improve, transfer and integrate an academic scriptless GUI testing tool TESTAR into the CI pipeline of a Spanish company Prodevelop. The paper describes the steps taken, the outcome, the challenges, and some lessons learned for successful industry-academia collaboration.},
 author = {Fernando Pastor Ric{\'{o}}s and Pekka Aho and Tanja Vos and Ismael Torres Boigues and Ernesto Cal{\'{a}}s Blasco and H{\'{e}}ctor Mart{\'{\i}}nez Mart{\'{\i}}nez},
 booktitle = {Leveraging Applications of Formal Methods, Verification and Validation: Verification Principles},
 doi = {10.1007/978-3-030-61362-4_31},
 pages = {543--557},
 publisher = {Springer International Publishing},
 title = {Deploying {TESTAR} to Enable Remote Testing in an Industrial {CI} Pipeline: A Case-Based Evaluation},
 url = {https://doi.org/10.1007%2F978-3-030-61362-4_31},
 year = {2020}
}

@article{Rico_2021,
 abstract = {},
 author = {Sergio Rico and Elizabeth Bjarnason and Emelie Engström and Martin Höst and Per Runeson},
 doi = {10.1002/smr.2372},
 journal = {Journal of Software: Evolution and Process},
 month = {jul},
 number = {10},
 publisher = {Wiley},
 title = {A case study of industry{\textendash}academia communication in a joint software engineering research project},
 url = {https://doi.org/10.1002%2Fsmr.2372},
 volume = {33},
 year = {2021}
}

@inproceedings{Rodr_guez_2014,
 abstract = {Collaboration between industry practitioners and researchers has been reported as a challenge to conduct empirical studies in software engineering. Gaining practitioners interest in research activities is challenging in the software development industry characterized by tough competition and short time-to-market. Often, practitioners do not see the direct value in collaborating with researchers. Meanwhile, researchers are frequently frustrated because they have no access to the real-world data that would enable them to develop scientific knowledge. Design science has become a popular research framework in Information Systems. This paper describes our lessons learned on how design science can help to attract and motivate industry practitioners to take part in empirical research. We present our practical experiences with using design science in the context of empirical software engineering, and how the design science framework helped us to bridge the collaborative gap with our industry partners. In illustrating our experiences, we present two case studies conducted in collaboration with Ericsson and Elektrobit in which the design science framework was followed. Based on our experience, design science is a suitable research framework for empirical software engineering since much of the research in the field is constructive. The similarities between the design science practices and the day-to-day work of practitioners in industry make it easy for them to understand the research approach. Thus, it supports their willingness to participate in research activities.},
 author = {Pilar Rodr{\'{\i}}guez and Pasi Kuvaja and Markku Oivo},
 booktitle = {Proceedings of the 2nd International Workshop on Conducting Empirical Studies in Industry},
 doi = {10.1145/2593690.2593694},
 month = {jun},
 publisher = {{ACM}},
 title = {Lessons learned on applying design science for bridging the collaboration gap between industry and academia in empirical software engineering},
 url = {https://doi.org/10.1145%2F2593690.2593694},
 year = {2014}
}

@inproceedings{Runeson_2014,
 abstract = {In industry–academia collaboration projects, there are many issues related to different time horizons in industry and academia. If not adressed upfront, they may hinder collabora-tion in such projects. We analyze our expe-riences from a 10 year industry–academia col-laboration program, the EASE Industrial Ex-cellence Center in Sweden, and identify issues and feasible practices to overcome the hur-dles of different time horizons. Specifically, we identify issues related to contracts, goals, re-sults, organization (in)stability, and work prac-tices. We identify several areas where the time horizon is different, and conclude that mutual awareness of these differences and management commitment to the collaboration are the key means to overcome the differences. The launch of a mediating institute may also be part of the solution.},
 author = {Per Runeson and Sten Minör and Johan Sven{\'{e}}r},
 booktitle = {Proceedings of the 2014 international workshop on Long-term industrial collaboration on software engineering},
 doi = {10.1145/2647648.2647652},
 month = {sep},
 publisher = {{ACM}},
 title = {Get the cogs in synch},
 url = {https://doi.org/10.1145%2F2647648.2647652},
 year = {2014}
}

@incollection{Saari_2020,
 abstract = {The paper examines the Third Mission of universities from the point of view of company collaboration in the prototype development process. The paper presents an implementation of university-enterprise collaboration in prototype development described by means of process modeling notation. In this article, the focus is on modeling the software prototyping process in a research context. This research paper introduces prototype development in a university environment. The prototypes are made in collaboration with companies, which offered real-world use cases. The prototype development process is introduced by a modeling procedure with four example prototype cases. The research method used is an eight-step process modeling approach. The goal was to find instances of activity, artifact, resource, and role. The results of modeling are presented using textual and graphical notation. This paper describes the data elicitation, where the process knowledge is collected using stickers-on-the-wall technique, and the creation of the model is described. Finally, the shortcomings found in our existing practices and possibilities for improving our prototype development processes and practices are discussed.},
 author = {Mika Saari and Jari Soini and Jere Grönman and Petri Rantanen and Timo Mäkinen and Pekka Sillberg},
 booktitle = {Frontiers in Artificial Intelligence and Applications},
 doi = {10.3233/faia200823},
 month = {dec},
 publisher = {{IOS} Press},
 title = {Modeling the Software Prototyping Process in a Research Context},
 url = {https://doi.org/10.3233%2Ffaia200823},
 year = {2020}
}

@inproceedings{Sandberg_2017,
 abstract = {},
 author = {Anna Borjesson Sandberg and Ivica Crnkovic},
 booktitle = {2017 {IEEE}/{ACM} 39th International Conference on Software Engineering: Software Engineering in Practice Track ({ICSE}-{SEIP})},
 doi = {10.1109/icse-seip.2017.20},
 month = {may},
 publisher = {{IEEE}},
 title = {Meeting Industry-Academia Research Collaboration Challenges with Agile Methodologies},
 url = {https://doi.org/10.1109%2Ficse-seip.2017.20},
 year = {2017}
}

@article{Sann__2019,
 abstract = {Increased competition and globalization motivate us to join forces to enhance the impact of the research conducted. Collaboration between organizations with different views can, however, be difficult to manage and needs awareness and skills to meet different expecta-tions. This article will consider both a mutual industrial and academic perspective into the development of action research and, in six research project cases, empirically explore how the impact can be enhanced by considering certain key factors in the research process. How the phases of problem formulation, methodology, and results are managed is critical for the success of a collaboration and, thereby, its impact. Counter-productive forces that could dilute the progress over time need to be considered given that combining practical relevance and scientific rigour comes with challenges.},
 author = {Anna Sannö and Anna Ericson Öberg and Erik Flores-Garcia and Mats Jackson},
 doi = {10.22215/timreview/1232},
 journal = {Technology Innovation Management Review},
 month = {apr},
 number = {4},
 pages = {37--47},
 publisher = {Carleton University},
 title = {Increasing the Impact of Industry{\textendash}Academia Collaboration through Co-Production},
 url = {https://doi.org/10.22215%2Ftimreview%2F1232},
 volume = {9},
 year = {2019}
}

@inproceedings{Santos_2020,
 abstract = {},
 author = {Italo Santos and Silvana Morita Melo and Paulo Sergio Lopes de Souza and Simone R. S. Souza},
 booktitle = {2020 {IEEE} International Conference on Software Testing, Verification and Validation Workshops ({ICSTW})},
 doi = {10.1109/icstw50294.2020.00071},
 month = {oct},
 publisher = {{IEEE}},
 title = {Towards a unified catalog of attributes to guide industry in software testing technique selection},
 url = {https://doi.org/10.1109%2Ficstw50294.2020.00071},
 year = {2020}
}

@inproceedings{Schmid_2021,
 abstract = {},
 author = {Klaus Schmid and Rick Rabiser and Martin Becker and Goetz Botterweck and Matthias Galster and Iris Groher and Danny Weyns},
 booktitle = {Proceedings of the 25th {ACM} International Systems and Software Product Line Conference - Volume A},
 doi = {10.1145/3461001.3474301},
 month = {sep},
 publisher = {{ACM}},
 title = {Bridging the gap},
 url = {https://doi.org/10.1145%2F3461001.3474301},
 year = {2021}
}

@article{Sen_2015,
 abstract = {What is gratifying to a software engineering researcher? Three of many possible answers to this question are (a) the intellectual exercise in developing/disseminating approaches that address emerging and existing challenges, (b) recognition from impact in a community of researchers and (c) widespread use of novel ideas, including software, in the society at large leading to enhancement of human ability and job creation. A culmination of these sources requires an organizational effort. This article presents a detailed account of a research-based innovation centre, Certus, to facilitate such a culmination for software engineering researchers. Certus has established a body of knowledge, methods and tools for the validation and verification of software systems in the Norwegian private and public sector. Certus works in close cooperation with five founding user partners and is hosted by the Simula Research Laboratory. We present the organizational structure of Certus and describe how Certus’s life and health is planned and evaluated on a regular basis as a research-based innovation centre. We expound two successful collaborations, with (a) the private sector entity Cisco systems, Norway and (b) the public sector entity the Norwegian Customs and Excise. We hope that this document will serve as a basis to encourage national/international funding schemes to create call for proposals for long-term research-based innovation centres. This, we believe, is one way to justify use of tax payers resources in creating a win–win situation for the triple helix: government, researchers and industry.},
 author = {Sagar Sen and Dusica Marijan and Arnaud Gotlieb},
 doi = {10.1007/s13198-015-0352-8},
 journal = {International Journal of System Assurance Engineering and Management},
 month = {mar},
 number = {2},
 pages = {313--322},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Certus: an organizational effort towards research-based innovation in software verification and validation},
 url = {https://doi.org/10.1007%2Fs13198-015-0352-8},
 volume = {9},
 year = {2015}
}

@article{Sen_2015,
 abstract = {What is gratifying to a software engineering researcher? Three of many possible answers to this question are (a) the intellectual exercise in developing/disseminating approaches that address emerging and existing challenges, (b) recognition from impact in a community of researchers and (c) widespread use of novel ideas, including software, in the society at large leading to enhancement of human ability and job creation. A culmination of these sources requires an organizational effort. This article presents a detailed account of a research-based innovation centre, Certus, to facilitate such a culmination for software engineering researchers. Certus has established a body of knowledge, methods and tools for the validation and verification of software systems in the Norwegian private and public sector. Certus works in close cooperation with five founding user partners and is hosted by the Simula Research Laboratory. We present the organizational structure of Certus and describe how Certus’s life and health is planned and evaluated on a regular basis as a research-based innovation centre. We expound two successful collaborations, with (a) the private sector entity Cisco systems, Norway and (b) the public sector entity the Norwegian Customs and Excise. We hope that this document will serve as a basis to encourage national/international funding schemes to create call for proposals for long-term research-based innovation centres. This, we believe, is one way to justify use of tax payers resources in creating a win–win situation for the triple helix: government, researchers and industry.},
 author = {Sagar Sen and Dusica Marijan and Arnaud Gotlieb},
 doi = {10.1007/s13198-015-0352-8},
 journal = {International Journal of System Assurance Engineering and Management},
 month = {mar},
 number = {2},
 pages = {313--322},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Certus: an organizational effort towards research-based innovation in software verification and validation},
 url = {https://doi.org/10.1007%2Fs13198-015-0352-8},
 volume = {9},
 year = {2015}
}

@article{Siemens_2019,
 abstract = {University-industry partnerships are common in the Sciences, but less so in the Humanities. As a result, there is little understanding of how they work in the Humanities. Using the Implementing New Knowledge Environments: Networked Open Social Scholarship (INKE:NOSS) initiative as a case study, this paper contributes to this discussion by examining the nature of the university-industry partnership with libraries and academic-adjacent organizations, and associated benefits, challenges, measures of success, and outcomes. Interviews were conducted with the collaboration’s industry partners. After several years of collaboration on the development of a grant application, industry partners have found the experience of working with academics to be a positive one overall. Industry partners are contributing primarily in-kind resources in the form of staff time, travel to meetings, and reading and commenting on documents. They have also been able to realize benefits while negotiating the challenges. Using qualitative standards, measures of success and desired outcomes are being articulated. This work developing the partnership should stand the larger INKE:NOSS team in good stead if they are successful with securing grant funding.},
 author = {Lynne Siemens and The INKE Research Group},
 doi = {10.5334/kula.42},
 journal = {{KULA}: Knowledge Creation, Dissemination, and Preservation Studies},
 month = {feb},
 pages = {15},
 publisher = {University of Victoria Libraries},
 title = {Joining Voices: University {\textendash} Industry Partnerships in the Humanities},
 url = {https://doi.org/10.5334%2Fkula.42},
 volume = {3},
 year = {2019}
}

@article{Song_2023,
 abstract = {Context
Effective industry-academia collaboration may increase software engineering research relevance by increased realism, yet very challenging for reasons like confidentiality concerns, different objectives and priorities.

Objective
We analyse industry-academia collaboration scenarios based on our own experiences as Ph.D. student and supervisor, and provide insights and recommendations to facilitate future collaborations with industry.

Method
We first present our industry-academia collaboration experiences that span over two and a half years with different companies. Then, we analyse both facilitators and problems from those scenarios and synthesize recommendations based on that.

Results
Five different scenarios are analysed, including both success and failure scenarios. Reflections and insights into these experiences as well as some general recommendations are presented.

Conclusion
We believe such experiences and insights are helpful for academic researchers to pursue industry-academia collaboration. We plan to continuously report our experience and provide our suggestions for effective collaboration with industry.},
 author = {Qunying Song and Per Runeson},
 doi = {10.1016/j.infsof.2022.107135},
 journal = {Information and Software Technology},
 month = {apr},
 pages = {107135},
 publisher = {Elsevier {BV}},
 title = {Industry-academia collaboration for realism in software engineering research: Insights and recommendations},
 url = {https://doi.org/10.1016%2Fj.infsof.2022.107135},
 volume = {156},
 year = {2023}
}

@article{Staron_2016,
 abstract = {Measurement programs in large software development organizations contain a large number of indicators, base and derived measures to monitor products, processes and projects. The diversity and the number of these measures causes the measurement programs to become large, combining multiple needs, measurement tools and organizational goals. For the measurement program to effectively support organization’s goals, it should be scalable, automated, standardized and flexible – i.e. robust. In this paper we present a method for assessing the robustness of measurement programs. The method is based on the robustness model which has been developed in collaboration between seven companies and a university. The purpose of the method is to support the companies to optimize the value obtained from the measurement programs and their cost. We evaluated the method at the seven companies and the results from applying the method to each company quantified the robustness of their programs, reflecting the real-world status of the programs and pinpointed strengths and improvements of the programs.},
 author = {Miroslaw Staron and Wilhelm Meding},
 doi = {10.1016/j.jss.2015.10.051},
 journal = {Journal of Systems and Software},
 month = {mar},
 pages = {76--100},
 publisher = {Elsevier {BV}},
 title = {{MeSRAM} {\textendash} A method for assessing robustness of measurement programs in large software development organizations and its industrial evaluation},
 url = {https://doi.org/10.1016%2Fj.jss.2015.10.051},
 volume = {113},
 year = {2016}
}

@article{Susha_2020,
 abstract = {Data analytics for public good has become a hot topic thanks to the inviting opportunities to utilize ‘new’ sources of data, such as social media insights, call detail records, satellite imagery etc. These data are sometimes shared by the private sector as part of corporate social responsibility, especially in situations of urgency, such as in case of a natural disaster. Such partnerships can be termed as ‘data collaboratives’. While experimentation grows, little is known about how such collaborations are formed and implemented. In this paper, we investigate the factors which are influential and contribute to a successful data collaborative using the Critical Success Factor (CSF) approach. As a result, we propose (1) a framework of CSFs which provides a holistic view of elements coming into play when a data collaborative is formed and (2) a list of Top 15 factors which highlights the elements which typically have a greater influence over the success of the partnership. We validated our findings in two case studies and discussed three broad factors which were found to be critical for the formation of data collaboratives: value proposition, trust, and public pressure. Our results can be used to help organizations prioritize and distribute resources accordingly when engaging in a data collaborative.},
 author = {Iryna Susha},
 doi = {10.3233/ip-180117},
 journal = {Information Polity},
 month = {mar},
 number = {1},
 pages = {3--24},
 publisher = {{IOS} Press},
 title = {Establishing and implementing data collaborations for public good: A critical factor analysis to scale up the practice},
 url = {https://doi.org/10.3233%2Fip-180117},
 volume = {25},
 year = {2020}
}

@article{Takahashi_2018,
 abstract = {Many businesses seeking enhanced innovation have corporate research teams that engage in collaborative research projects (CRPs), with external entities such as universities, public organizations, or customers. Anecdotal evidence, however, suggests mixed outcomes of CRPs in terms of corporate research impact, which implies successful transfer of novel knowledge generated within CRPs to company-internal business networks to develop radically innovative products. We use the multiple regression quadratic assignment procedure (MRQAP) and meta-analysis to analyze six CRP networks. Our findings indicate that the network’s relational characteristics (tie strength) and structural characteristics (network range) are important determinants of knowledge transfer at the fuzzy front end of innovation.},
 author = {Marissa Takahashi and Marta Indulska and John Steen},
 doi = {10.1177/8756972818781630},
 journal = {Project Management Journal},
 month = {jul},
 number = {4},
 pages = {36--52},
 publisher = {{SAGE} Publications},
 title = {Collaborative Research Project Networks},
 url = {https://doi.org/10.1177%2F8756972818781630},
 volume = {49},
 year = {2018}
}

@article{Unterkalmsteiner_2015,
 abstract = {},
 author = {Michael Unterkalmsteiner and Tony Gorschek and Robert Feldt and Niklas Lavesson},
 doi = {10.1007/s10664-015-9410-8},
 journal = {Empirical Software Engineering},
 month = {nov},
 number = {6},
 pages = {2324--2365},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Large-scale information retrieval in software engineering - an experience report from industrial application},
 url = {https://doi.org/10.1007%2Fs10664-015-9410-8},
 volume = {21},
 year = {2015}
}

@article{Unterkalmsteiner_2015,
 abstract = {The development of large, software-intensive systems is a complex undertaking that we generally tackle by a divide and conquer strategy. Companies thereby face the challenge of coordinating individual aspects of software development, in particular between requirements engineering (RE) and software testing (ST). A lack of REST alignment can not only lead to wasted effort but also to defective software. However, before a company can improve the mechanisms of coordination they need to be understood first. With REST-bench we aim at providing an assessment tool that illustrates the coordination in software development projects and identify concrete improvement opportunities. We have developed REST-bench on the sound fundamentals of a taxonomy on REST alignment methods and validated the method in five case studies. Following the principles of technical action research, we collaborated with five companies, applying REST-bench and iteratively improving the method based on the lessons we learned. We applied REST-bench both in Agile and plan-driven environments, in projects lasting from weeks to years, and staffed as large as 1000 employees. The improvement opportunities we identified and the feedback we received indicate that the assessment was effective and efficient. Furthermore, participants confirmed that their understanding on the coordination between RE and ST improved.},
 author = {Michael Unterkalmsteiner and Tony Gorschek and Robert Feldt and Eriks Klotins},
 doi = {10.1016/j.jss.2015.07.018},
 journal = {Journal of Systems and Software},
 month = {nov},
 pages = {62--77},
 publisher = {Elsevier {BV}},
 title = {Assessing requirements engineering and software test alignment{\textemdash}Five case studies},
 url = {https://doi.org/10.1016%2Fj.jss.2015.07.018},
 volume = {109},
 year = {2015}
}

@inproceedings{Wohlin_2013,
 abstract = {Software engineering research can be done in many ways, in particular it can be done in different ways when it comes to working with industry. This paper presents a list of top 10 challenges to work with industry based on our experience from working with industry in a very close collaboration with continuous exchange of knowledge and information. The top 10 list is based on a large number of research projects and empirical studies conducted with industrial research partners since 1983. It is concluded that close collaboration is a long-term undertaking and a large investment. The importance of addressing the top 10 challenges is stressed, since they form the basis for a long-term sustainable and successful collaboration between industry and academia.},
 author = {Claes Wohlin},
 booktitle = {2013 1st International Workshop on Conducting Empirical Studies in Industry ({CESI})},
 doi = {10.1109/cesi.2013.6618469},
 month = {may},
 publisher = {{IEEE}},
 title = {Empirical software engineering research with industry: Top 10 challenges},
 url = {https://doi.org/10.1109%2Fcesi.2013.6618469},
 year = {2013}
}

@incollection{Wohlin_2013,
 abstract = {Evidence-based software engineering has emerged as an important part of software engineering. The need for empirical evaluation and hence evidence when developing new models, methods, techniques and tools in research has grown in the last couple of decades. Furthermore, industrial decision-making ought to become more evidence-based. The objective here is to develop and present an evidence-based profile, which could be used to divide pieces of evidence into different types and hence create an overall picture of evidence in a specific case. The evidence profile is developed in such a way that it allows evidence to be judged in context. The evidence profile consists of five types of evidence, and it is illustrated for perspective-based reading. It is shown how pieces of evidence can be classified into the different types. It is concluded that this type of approach may be useful for capturing the evidence with respect to a specific topic and in a specific context. Further work will include applying the evidence profile to evidence collected from different types of studies and contexts. © 2013 Springer-Verlag Berlin Heidelberg. All rights are reserved.},
 author = {Claes Wohlin},
 booktitle = {Perspectives on the Future of Software Engineering},
 doi = {10.1007/978-3-642-37395-4_10},
 pages = {145--157},
 publisher = {Springer Berlin Heidelberg},
 title = {An Evidence Profile for Software Engineering Research and Practice},
 url = {https://doi.org/10.1007%2F978-3-642-37395-4_10},
 year = {2013}
}

@article{Wohlin_2015,
 abstract = {There exists no generally accepted theory in software engineering, and at the same time a scientific discipline needs theories. Some laws, hypotheses and conjectures exist, but yet no generally accepted theory. Several researchers and initiatives emphasize the need for theory in the discipline. The objective of this paper is to formulate a theory of software engineering. The theory is generated from empirical observations of industry practice, including several case studies and many years of experience in working closely between academia and industry. The theory captures the balancing of three different intellectual capitals: human, social and organizational capitals respectively. The theory is formulated using a method for building theories in software engineering. It results in a theory where the relationships between the three different intellectual capitals are explored and explained. The theory is illustrated based on an industrial case study, where it is shown how decisions made in industry practice are explainable with the formulated theory, and the consequences of the decisions are made explicit. Based on the positive results, it is concluded that the theory may have a good explanatory power, although more evaluations are needed.},
 author = {Claes Wohlin and Darja {\v{S}}mite and Nils Brede Moe},
 doi = {10.1016/j.jss.2015.08.009},
 journal = {Journal of Systems and Software},
 month = {nov},
 pages = {229--242},
 publisher = {Elsevier {BV}},
 title = {A general theory of software engineering: Balancing human, social and organizational capitals},
 url = {https://doi.org/10.1016%2Fj.jss.2015.08.009},
 volume = {109},
 year = {2015}
}

@article{Wohlin_2021,
 abstract = {},
 author = {Claes Wohlin and Per Runeson},
 doi = {10.1016/j.infsof.2021.106678},
 journal = {Information and Software Technology},
 month = {dec},
 pages = {106678},
 publisher = {Elsevier {BV}},
 title = {Guiding the selection of research methodology in industry{\textendash}academia collaboration in software engineering},
 url = {https://doi.org/10.1016%2Fj.infsof.2021.106678},
 volume = {140},
 year = {2021}
}

@article{Wohlin_2022,
 abstract = {},
 author = {Claes Wohlin and Marcos Kalinowski and Katia Romero Felizardo and Emilia Mendes},
 doi = {10.1016/j.infsof.2022.106908},
 journal = {Information and Software Technology},
 month = {jul},
 pages = {106908},
 publisher = {Elsevier {BV}},
 title = {Successful combination of database search and snowballing for identification of primary studies in systematic literature studies},
 url = {https://doi.org/10.1016%2Fj.infsof.2022.106908},
 volume = {147},
 year = {2022}
}

@article{Zhang_2013,
 abstract = {With software analytics, software practitioners explore and analyze data to obtain insightful, actionable information for tasks regarding software development, systems, and users. The StackMine project produced a software analytics system for Microsoft product teams. The project provided lessons on applying software analytics technologies to positively impact software development practice. The lessons include focusing on problems that practitioners care about, using domain knowledge for correct data understanding and problem modeling, building prototypes early to get practitioners' feedback, taking into account scalability and customizability, and evaluating analysis results using criteria related to real tasks.},
 author = {Dongmei Zhang and Shi Han and Yingnong Dang and Jian-Guang Lou and Haidong Zhang and Tao Xie},
 doi = {10.1109/ms.2013.94},
 journal = {{IEEE} Software},
 month = {sep},
 number = {5},
 pages = {30--37},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Software Analytics in Practice},
 url = {https://doi.org/10.1109%2Fms.2013.94},
 volume = {30},
 year = {2013}
}

