@inproceedings{Bate,
 abstract = {The purpose of this paper is to investigate the issues related to task attribute assignment on an individual processor. The majority of papers on fixed priority scheduling make the assumption that tasks have their attributes (deadline, period, offset and priority) pre-assigned. This makes priority assignment trivial. However in practice, the system's timing requirements are specified and it is expected that the task attributes are synthesised from these. This paper is to present work that has been developed to solve this problem},
 author = {I. Bate and A. Burns},
 booktitle = {Proceedings of 11th Euromicro Conference on Real-Time Systems. Euromicro {RTS}{\textquotesingle}99},
 doi = {10.1109/emrts.1999.777449},
 publisher = {{IEEE} Comput. Soc},
 title = {An approach to task attribute assignment for uniprocessor systems},
 url = {https://doi.org/10.1109%2Femrts.1999.777449}
}

@article{Bennett_1996,
 abstract = {In this report, diverse technology transfer situations are represented that highlight the importance of the relationships among the people offering and the people accepting the proposed technology. By taking the framework of partnership, actions that should be taken to create significant results are outlined.},
 author = {John L. Bennett},
 doi = {10.1145/234215.234468},
 journal = {Communications of the {ACM}},
 month = {sep},
 number = {9},
 pages = {35--36},
 publisher = {Association for Computing Machinery ({ACM})},
 title = {Building relationships for technology transfer},
 url = {https://doi.org/10.1145%2F234215.234468},
 volume = {39},
 year = {1996}
}

@inproceedings{Dalziel_1994,
 abstract = {This paper presents an investigation of university-industry
technology transfer in robotics and intelligent systems in Canada. The
objective of the investigation was to determine which mechanisms for
technology transfer are most effective and how to bring about an
increase in effective technology transfer. This study shows that the
most effective methods for transmitting and exploiting knowledge in the
field of robotics and intelligent systems involve accessing the
knowledge source directly (as opposed to acquiring the knowledge
produced), building relationships, and focusing the research effort on a
particular application or need. Strategies for increasing effective
technology transfer include: involving industry in applied research,
increasing industry R&D investment, increasing funding for the most
effective technology transfer mechanisms, and changing the university
environment to facilitate, properly evaluate, and reward interaction
with industry},
 author = {Dalziel},
 booktitle = {Proceedings of Canadian Conference on Electrical and Computer Engineering {CCECE}-94},
 doi = {10.1109/ccece.1994.405858},
 publisher = {{IEEE}},
 title = {Effective university-industry technology transfer},
 url = {https://doi.org/10.1109%2Fccece.1994.405858},
 year = {1994}
}

@article{Lee_1994,
 abstract = {The present national technology transfer policy suffers from the limited focus on structural barriers, as well as the reluctance of American business to invest in precommercial research and development. A growing consensus from the national debate suggests that policy attention be reoriented, thereby giving a greater emphasis to precommercial technology development (TD) research. This paper examines whether the nation's research-intensive universities, a reservoir of virtually unlimited scientific and technological resources, can possibly go beyond basic research and produce economically viable technology efficiently. To this end, the paper introduces key principles that help organize TD research within the research-intensive university. It also presents the results of a large-scale TD experiment being carried out by a research-intensive university under federal sponsorship. The midterm result strongly indicates that with modest financial support and some internal cultural adjustment, research-intensive universities can break through their ideological barriers and efficiently translate new scientific advances into commercially viable, cutting-edge technology. This is possible because, among other factors, the research-intensive university can build on its awn comparative advantage of strong fundamental research.},
 author = {Yong Lee and Richard Gaertner},
 doi = {10.1111/j.1541-0072.1994.tb01476.x},
 journal = {Policy Studies Journal},
 month = {jun},
 number = {2},
 pages = {384--399},
 publisher = {Wiley},
 title = {Technology Transfer from University to Industry. A Large-Scale Experiment with Technology Development and Commercialization},
 url = {https://doi.org/10.1111%2Fj.1541-0072.1994.tb01476.x},
 volume = {22},
 year = {1994}
}

@article{Scholtz_1996,
 abstract = {Perhaps the most viable way of transferring technology is to show someone how that technology works in a context the person can understand. Thus, using prototypes to transfer technology is an extremely effective way to demonstrate a new concept. Advanced software development labs at Intel are committed to making the PC the communication device of choice. Researchers in these labs focus on finding matches between new technologies for the PC and people's changing communication needs.},
 author = {Jean Scholtz},
 doi = {10.1145/234215.234464},
 journal = {Communications of the {ACM}},
 month = {sep},
 number = {9},
 pages = {26--27},
 publisher = {Association for Computing Machinery ({ACM})},
 title = {Technology transfer through prototypes},
 url = {https://doi.org/10.1145%2F234215.234464},
 volume = {39},
 year = {1996}
}

@inproceedings{Shaw,
 abstract = {Over the past decade, software architecture research has emerged as the principled study of the overall structure of software systems, especially the relations among subsystems and components. From its roots in qualitative descriptions of useful system organizations, software architecture has matured to encompass broad explorations of notations, tools, and analysis techniques. Whereas initially the research area interpreted software practice, it now offers concrete guidance for complex software design and development. We can understand the evolution and prospects of software architecture research by examining the research paradigms used to establish its results. These are, for the most part, the paradigms of software engineering. We advance our fundamental understanding by posing research questions of several kinds ana applying appropriate research techniques, which differ from one type of problem to another, yield correspondingly different kinds of results, and require different methods of validation. Unfortunately, these paradigms are not recognized explicitly and are often not carried out correctly; indeed not all are consistently accepted as valid. This retrospective on a decade-plus of software architecture research examines the maturation of the software architecture research area by tracing the types of research questions and techniques used at various stages. We will see how early qualitative results set the stage for later precision, formality, and automation and how results build up over time. This generates advice to the field and projections about future impact.},
 author = {M. Shaw},
 booktitle = {Proceedings of the 23rd International Conference on Software Engineering. {ICSE} 2001},
 doi = {10.1109/icse.2001.919142},
 publisher = {{IEEE} Comput. Soc},
 title = {The coming-of-age of software architecture research},
 url = {https://doi.org/10.1109%2Ficse.2001.919142}
}

@book{1993,
 abstract = {We have only begun to understand the experimental nature of software engineering, the role of empirical studies and measurement within software engineering, and the mechanisms needed to apply them successfully. This volume presents the proceedings of a workshop whose purpose was to gather those members of the software engineering community who support an engineering approach based upon empirical studies to provide an interchange of ideas and paradigms for research. The papers in the volume are grouped into six parts corresponding to the workshop sessions: The experimental paradigm in software engineering; Objectives and context of measurement/experimentation; Procedures and mechanisms for measurement/experimentation; Measurement-based modeling; packaging for reuse/reuse of models; and technology transfer, teaching and training. Each part opens with a keynote paper and ends with a discussion summary. The workshop served as an important event in continuing to strengthen empirical software engineering as a major subdiscipline ofsoftware engineering. The deep interactions and important accomplishments from the meeting documented in these proceedings have helped identify key issues in moving software engineering as a whole towards a true engineering discipline.},
 doi = {10.1007/3-540-57092-6},
 editor = {H. Dieter Rombach and Victor R. Basili and Richard W. Selby},
 publisher = {Springer Berlin Heidelberg},
 title = {Experimental Software Engineering Issues: Critical Assessment and Future Directions},
 url = {https://doi.org/10.1007%2F3-540-57092-6},
 year = {1993}
}

@misc{Basili_2002,
 abstract = {Reuse of products, processes, and experience originating from the system life cycle is seen today as a feasible solution to the problem of developing higher quality systems at a lower cost. In fact, quality improvement is very often achieved by repeatedly reusing and modifying the same elements, learning about them by direct experience.},
 author = {Victor R. Basili and Gianluigi Caldiera and H. Dieter Rombach},
 doi = {10.1002/0471028959.sof110},
 month = {jan},
 publisher = {John Wiley {\&} Sons, Inc.},
 title = {Experience Factory},
 url = {https://doi.org/10.1002%2F0471028959.sof110},
 year = {2002}
}

@article{Barbolla_2009,
 abstract = {This study provides insight into the reality of university-industry technology transfer through the assessment of some of the most influential factors for success or failure in research contracts. This widespread mechanism of technology transfer is examined in the light of exhaustive information and experience gathered from 30 interviews with qualified university researchers. The interviewees, who have been directly involved in collaborative projects with industry partners, have deeply described both sound and unsatisfactory cooperation cases, in order to explore which relevant circumstances have led to success or failure. The analysis drives to conclude that there are some features (beyond technological ones) related to the corporate partner's strategic and functional characteristics, which come to be decisive for success. For example, company's real interest and involvement during the technology transfer process, its capacity to assimilate new knowledge and a confident attitude towards the university research group are identified to be key elements for attaining an effective technology transfer. In this contribution, the importance of these aspects is contextualised and summarised in a model for successful technology transfer.},
 author = {Ana M. Bernardos Barbolla and Jos{\'{e}} R. Casar Corredera},
 doi = {10.1080/09537320902969133},
 journal = {Technology Analysis {\&}amp$\mathsemicolon$ Strategic Management},
 month = {jul},
 number = {5},
 pages = {599--616},
 publisher = {Informa {UK} Limited},
 title = {Critical factors for success in university{\textendash}industry research projects},
 url = {https://doi.org/10.1080%2F09537320902969133},
 volume = {21},
 year = {2009}
}

@article{Bekkers_2008,
 abstract = {There is a wide variety of channels through which knowledge and technology is being transferred between universities and industry. This paper aims to explain the relative importance of these different channels in different contexts. For this purpose, responses from two questionnaires were analysed, addressing Dutch industrial and university researchers, respectively. A reassuring result is that the perceived importance of the 23 distinct transfer channels we distinguished hardly differs between industry and university: we did not observe a major mismatch. Overall, our results suggest that the industrial activities of firms do not significantly explain differences in importance of a wide variety of channels through which knowledge between university and industry might be transferred. Instead, this variety is better explained by the disciplinary origin, the characteristics of the underlying knowledge, the characteristics of researchers involved in producing and using this knowledge (individual characteristics), and the environment in which knowledge is produced and used (institutional characteristics). Based on our findings, we offer policy recommendations.},
 author = {Rudi Bekkers and Isabel Maria Bodas Freitas},
 doi = {10.1016/j.respol.2008.07.007},
 journal = {Research Policy},
 month = {dec},
 number = {10},
 pages = {1837--1853},
 publisher = {Elsevier {BV}},
 title = {Analysing knowledge transfer channels between universities and industry: To what degree do sectors also matter?},
 url = {https://doi.org/10.1016%2Fj.respol.2008.07.007},
 volume = {37},
 year = {2008}
}

@inproceedings{Callo_Arias_2009,
 abstract = {An execution view is an important asset for developing large and complex systems. An execution view helps practitioners to describe, analyze, and communicate what a software system does at runtime and how it does it. In this paper, we present an approach to define execution viewpoints for an existing large and complex software intensive system. This definition approach enables the customization and extension of a set of predefined viewpoints to address the requirements of a specific development organization. The application of this approach has helped us to identify a set of execution viewpoints that we are currently using to construct execution views of an MRI system, a large software-intensive system in the healthcare domain.},
 author = {Trosky B. Callo Arias and Pierre America and Paris Avgeriou},
 booktitle = {2009 Joint Working {IEEE}/{IFIP} Conference on Software Architecture {\&}amp$\mathsemicolon$ European Conference on Software Architecture},
 doi = {10.1109/wicsa.2009.5290784},
 month = {sep},
 publisher = {{IEEE}},
 title = {Defining execution viewpoints for a large and complex software-intensive system},
 url = {https://doi.org/10.1109%2Fwicsa.2009.5290784},
 year = {2009}
}

@article{Cummings_2003,
 abstract = {Based on a study of knowledge transfer within more than 15 industries, across three forms of governance, and between both domestic and international R&D partners, knowledge transfer success was found to be associated with several key variables, and to hinge upon (a) both R&D units’ understanding where the desired knowledge resides within the source, (b) the extent to which the parties share similar knowledge bases, and the extent of interactions between the source and the recipient to (c) transfer the knowledge and (d) participate in an articulation process through which the source’s knowledge is made accessible to the recipient.},
 author = {Jeffrey L Cummings and Bing-Sheng Teng},
 doi = {10.1016/s0923-4748(03)00004-3},
 journal = {Journal of Engineering and Technology Management},
 month = {jun},
 number = {1-2},
 pages = {39--68},
 publisher = {Elsevier {BV}},
 title = {Transferring R{\&}amp$\mathsemicolon$D knowledge: the key factors affecting knowledge transfer success},
 url = {https://doi.org/10.1016%2Fs0923-4748%2803%2900004-3},
 volume = {20},
 year = {2003}
}

@article{Perkmann_2009,
 abstract = {We analyze the impact of university--industry relationships on public research. Our inductive study of university--industry collaboration in engineering suggests that basic projects are more likely to yield academically valuable knowledge than applied projects. However, applied projects show higher degrees of partner interdependence and therefore enable exploratory learning by academics, leading to new ideas and projects. This result holds especially for research-oriented academics working in the "sciences of the artificial" and engaging in multiple relationships with industry. Our learning-centred interpretation qualifies the notion of entrepreneurial science as a driver of applied university--industry collaboration. We conclude with implications for science and technology policy. Copyright 2009 The Author 2009. Published by Oxford University Press on behalf of Associazione ICC. All rights reserved., Oxford University Press.},
 author = {M. Perkmann and K. Walsh},
 doi = {10.1093/icc/dtp015},
 journal = {Industrial and Corporate Change},
 month = {jun},
 number = {6},
 pages = {1033--1065},
 publisher = {Oxford University Press ({OUP})},
 title = {The two faces of collaboration: impacts of university-industry relations on public research},
 url = {https://doi.org/10.1093%2Ficc%2Fdtp015},
 volume = {18},
 year = {2009}
}

@article{Potts_1993,
 abstract = {The author discusses three major changes that he suggests are occurring as a result of the software engineering industry adopting the industry-as-laboratory approach, in which researchers identify problems through close involvement with industrial projects and create and evaluate solutions in an almost indivisible research activity. This approach emphasizes what people actually do or can do in practice, rather than what is possible in principle. The three changes are a greater reliance on empirical definition of problems, an emphasis on real case studies, and a greater emphasis on contextual issues.< >},
 author = {C. Potts},
 doi = {10.1109/52.232392},
 journal = {{IEEE} Software},
 month = {sep},
 number = {5},
 pages = {19--28},
 publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
 title = {Software-engineering research revisited},
 url = {https://doi.org/10.1109%2F52.232392},
 volume = {10},
 year = {1993}
}

@inproceedings{Pressburger,
 abstract = {Research in the software engineering community continues to lead to new development techniques that encompass processes, methods and tools. However, a number of obstacles impede their infusion into software development practices. These are the recurring obstacles common to many forms of research. Practitioners cannot readily identify the emerging techniques that may benefit them, and cannot afford to risk time and effort evaluating and trying one out while there remains uncertainty about whether it will work for them. Researchers cannot readily identify the practitioners whose problems would be amenable to their techniques, and, lacking feedback from practical applications, are hard-pressed to gauge the where and in what ways to evolve their techniques to make them more likely to be successful. This paper describes an ongoing effort conducted by a software engineering research infusion team established by NASA's software engineering initiative to overcome these obstacles},
 author = {T. Pressburger and M. Hinchey and B. di Vito and L. Markosian and M.S. Feather and L.C. Trevino},
 booktitle = {2006 {IEEE} Aerospace Conference},
 doi = {10.1109/aero.2006.1656014},
 publisher = {{IEEE}},
 title = {Infusing Software Assurance Research Techniques into Use},
 url = {https://doi.org/10.1109%2Faero.2006.1656014}
}

@article{Punter_2009,
 abstract = {},
 author = {Teade Punter and Ren{\'{e}} L. Krikhaar and Reinder J. Bril},
 doi = {10.1016/j.jss.2008.12.035},
 journal = {Journal of Systems and Software},
 month = {jun},
 number = {6},
 pages = {993--1003},
 publisher = {Elsevier {BV}},
 title = {Software engineering technology innovation {\textendash} Turning research results into industrial success},
 url = {https://doi.org/10.1016%2Fj.jss.2008.12.035},
 volume = {82},
 year = {2009}
}

