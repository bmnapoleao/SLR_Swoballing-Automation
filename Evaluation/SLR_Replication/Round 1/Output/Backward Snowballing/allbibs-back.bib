@article{1957,
 abstract = {},
 doi = {10.1086/287572},
 journal = {Philosophy of Science},
 month = {oct},
 number = {4},
 pages = {376--376},
 publisher = {Cambridge University Press ({CUP})},
 title = {Abstracts},
 url = {https://doi.org/10.1086%2F287572},
 volume = {24},
 year = {1957}
}

@inproceedings{5316010,
 abstract = {In order to draw valid conclusions when aggregating evidence it is important to describe the context in which industrial studies were conducted. This paper structures the context for empirical industrial studies and provides a checklist. The aim is to aid researchers in making informed decisions concerning which parts of the context to include in the descriptions. Furthermore, descriptions of industrial studies were surveyed.},
 author = {Petersen, Kai and Wohlin, Claes},
 booktitle = {2009 3rd International Symposium on Empirical Software Engineering and Measurement},
 doi = {10.1109/ESEM.2009.5316010},
 issn = {1949-3789},
 keywords = {},
 month = {Oct},
 number = {},
 pages = {401-404},
 title = {Context in industrial software engineering research},
 volume = {},
 year = {2009}
}

@inproceedings{6693226,
 abstract = {Background - Validity threats should be considered and consistently reported to judge the value of an empirical software engineering research study. The relevance of specific threats for a particular research study depends on the worldview or philosophical worldview of the researchers of the study. Problem/Gap - In software engineering, different categorizations exist, which leads to inconsistent reporting and consideration of threats. Contribution - In this paper, we relate different worldviews to software engineering research methods, identify generic categories for validity threats, and provide a categorization of validity threats with respect to their relevance for different world views. Thereafter, we provide a checklist aiding researchers in identifying relevant threats. Method - Different threat categorizations and threats have been identified in literature, and are reflected on in relation to software engineering research. Results - Software engineering is dominated by the pragmatist worldviews, and therefore use multiple methods in research. Maxwell's categorization of validity threats has been chosen as very suitable for reporting validity threats in software engineering research. Conclusion - We recommend to follow a checklist approach, and reporting first the philosophical worldview of the researcher when doing the research, the research methods and all threats relevant, including open, reduced, and mitigated threats.},
 author = {Petersen, Kai and Gencel, Cigdem},
 booktitle = {2013 Joint Conference of the 23rd International Workshop on Software Measurement and the 8th International Conference on Software Process and Product Measurement},
 doi = {10.1109/IWSM-Mensura.2013.22},
 issn = {},
 keywords = {},
 month = {Oct},
 number = {},
 pages = {81-89},
 title = {Worldviews, Research Methods, and their Relationship to Validity in Empirical Software Engineering Research},
 volume = {},
 year = {2013}
}

@incollection{Baca_2010,
 abstract = {Software security is an important quality aspect of a software system. 
Therefore, it is important to integrate software security touch points 
throughout the development life-cycle. So far, the focus of touch points in the 
early phases has been on the identification of threats and attacks. In this 
paper we propose a novel method focusing on the end product by prioritizing 
countermeasures. The method provides an extension to attack trees and a process 
for identification and prioritization of countermeasures. The approach has been 
applied on an open-source application and showed that countermeasures could be 
identified. Furthermore, an analysis of the effectiveness and cost-efficiency 
of the countermeasures could be provided.},
 author = {Dejan Baca and Kai Petersen},
 booktitle = {Product-Focused Software Process Improvement},
 doi = {10.1007/978-3-642-13792-1_15},
 pages = {176--190},
 publisher = {Springer Berlin Heidelberg},
 title = {Prioritizing Countermeasures through the Countermeasure Method for Software Security ({CM}-Sec)},
 url = {https://doi.org/10.1007%2F978-3-642-13792-1_15},
 year = {2010}
}

@article{Baca_2012,
 abstract = {Software security can be improved by identifying and correcting vulnerabilities. In order to reduce the cost of rework, vulnerabilities should be detected as early and efficiently as possible. Static automated code analysis is an approach for early detection. So far, only few empirical studies have been conducted in an industrial context to evaluate static automated code analysis. A case study was conducted to evaluate static code analysis in industry focusing on defect detection capability, deployment, and usage of static automated code analysis with a focus on software security. We identified that the tool was capable of detecting memory related vulnerabilities, but few vulnerabilities of other types. The deployment of the tool played an important role in its success as an early vulnerability detector, but also the developers perception of the tools merit. Classifying the warnings from the tool was harder for the developers than to correct them. The correction of false positives in some cases created new vulnerabilities in previously safe code. With regard to defect detection ability, we conclude that static code analysis is able to identify vulnerabilities in different categories. In terms of deployment, we conclude that the tool should be integrated with bug reporting systems, and developers need to share the responsibility for classifying and reporting warnings. With regard to tool usage by developers, we propose to use multiple persons (at least two) in classifying a warning. The same goes for making the decision of how to act based on the warning. Copyright © 2012 John Wiley & Sons, Ltd.},
 author = {Dejan Baca and Bengt Carlsson and Kai Petersen and Lars Lundberg},
 doi = {10.1002/spe.2109},
 journal = {Software: Practice and Experience},
 month = {feb},
 number = {3},
 pages = {259--279},
 publisher = {Wiley},
 title = {Improving software security with static automated code analysis in an industry setting},
 url = {https://doi.org/10.1002%2Fspe.2109},
 volume = {43},
 year = {2012}
}

@article{Baca_2013,
 abstract = {Software security risk analysis is an important part of improving software quality. In previous research we proposed countermeasure graphs (CGs), an approach to conduct risk analysis, combining the ideas of different risk analysis approaches. The approach was designed for reuse and easy evolvability to support agile software development. CGs have not been evaluated in industry practice in agile software development. In this research we evaluate the ability of CGs to support practitioners in identifying the most critical threats and countermeasures. The research method used is participatory action research where CGs were evaluated in a series of risk analyses on four different telecom products. With Peltier (used prior to the use of CGs at the company) the practitioners identified attacks with low to medium risk level. CGs allowed practitioners to identify more serious risks (in the first iteration 1 serious threat, 5 high risk threats, and 11 medium threats). The need for tool support was identified very early, tool support allowed the practitioners to play through scenarios of which countermeasures to implement, and supported reuse. The results indicate that CGs support practitioners in identifying high risk security threats, work well in an agile software development context, and are cost-effective.},
 author = {Dejan Baca and Kai Petersen},
 doi = {10.1016/j.jss.2013.04.023},
 journal = {Journal of Systems and Software},
 month = {sep},
 number = {9},
 pages = {2411--2428},
 publisher = {Elsevier {BV}},
 title = {Countermeasure graphs for software security risk assessment: An action research},
 url = {https://doi.org/10.1016%2Fj.jss.2013.04.023},
 volume = {86},
 year = {2013}
}

@article{Baskerville_1999,
 abstract = {Action research is an established research method in use in the social and medical sciences since the mid-twentieth century, and has increased in importance for information systems toward the end of the 1990s. Its particular philosophic context is couched in strongly post-positivist assumptions such as idiographic and interpretive research ideals. Action research has developed a history within information systems that can be explicitly linked to early work by Lewin and the Tavistock Institute. Action research varies in form, and responds to particular problem domains. The most typical form is a participatory method based on a five-step model, which is exemplified by published IS research.},
 author = {Richard L. Baskerville},
 doi = {10.17705/1cais.00219},
 journal = {Communications of the Association for Information Systems},
 publisher = {Association for Information Systems},
 title = {Investigating Information Systems with Action Research},
 url = {https://doi.org/10.17705%2F1cais.00219},
 volume = {2},
 year = {1999}
}

@inproceedings{Bengtsson_1999,
 abstract = {},
 author = {PerOlof Bengtsson and Jan Bosch},
 booktitle = {Proceedings of the 21st international conference on Software engineering},
 doi = {10.1145/302405.302684},
 month = {may},
 publisher = {{ACM}},
 title = {Haemo dialysis software architecture design experiences},
 url = {https://doi.org/10.1145%2F302405.302684},
 year = {1999}
}

@article{Blum_1955,
 abstract = {The concept of action-research has been developed during the last decade, mainly at the Research Center for Group Dynamics, University of Michigan, Ann Arbor and at the Commission for Community Interrelations of the American Jewish Congress—centers founded by the late Kurt Lewin whose original and creative mind has made many contributions to social-psychological and sociological research. I owe my acquaintance with this new approach to the Research Center, particularly to Ronald Lippitt and Alvin Zander. Yet most of the following observations are based on my research experience during the last four years. The responsibility for what I am saying is, therefore, completely my own.},
 author = {Fred H. Blum},
 doi = {10.1086/287381},
 journal = {Philosophy of Science},
 month = {jan},
 number = {1},
 pages = {1--7},
 publisher = {Cambridge University Press ({CUP})},
 title = {Action Research{\textemdash}A Scientific Approach?},
 url = {https://doi.org/10.1086%2F287381},
 volume = {22},
 year = {1955}
}

@article{Coghlan_2000,
 abstract = {},
 author = {David Coghlan},
 doi = {10.1108/lodj.2000.21.1.62.3},
 journal = {Leadership {\&}amp$\mathsemicolon$ Organization Development Journal},
 month = {feb},
 number = {1},
 pages = {62--64},
 publisher = {Emerald},
 title = {Organization  Development:  Behavioral Science  Interventions for  Organization  Improvement (6th ed.)20003Wendell L. French and Cecil H. Bell. $\less$i$\greater$Organization  Development:  Behavioral Science  Interventions for  Organization  Improvement (6th ed.)$\less$/i$\greater$. Englewood Cliffs, {NJ}: Prentice-Hall  1999. 343 pp., {ISBN}: {ISBN} 0-13 242231-X (paperback) {US}{\textdollar}47.95},
 url = {https://doi.org/10.1108%2Flodj.2000.21.1.62.3},
 volume = {21},
 year = {2000}
}

@article{Elberzhager_2012,
 abstract = {},
 author = {Frank Elberzhager and Alla Rosbach and Jürgen Münch and Robert Eschbach},
 doi = {10.1016/j.infsof.2012.04.007},
 journal = {Information and Software Technology},
 month = {oct},
 number = {10},
 pages = {1092--1106},
 publisher = {Elsevier {BV}},
 title = {Reducing test effort: A systematic mapping study on existing approaches},
 url = {https://doi.org/10.1016%2Fj.infsof.2012.04.007},
 volume = {54},
 year = {2012}
}

@article{Fern_ndez_Medina_2005,
 abstract = {},
 author = {Eduardo Fern{\'{a}}ndez-Medina and Mario Piattini},
 doi = {10.1016/j.infsof.2004.09.013},
 journal = {Information and Software Technology},
 month = {may},
 number = {7},
 pages = {463--477},
 publisher = {Elsevier {BV}},
 title = {Designing secure databases},
 url = {https://doi.org/10.1016%2Fj.infsof.2004.09.013},
 volume = {47},
 year = {2005}
}

@article{Gencel_2013,
 abstract = {Software organizations face challenges in managing and sustaining their measurement programs over time. The complexity of measurement programs increase with exploding number of goals and metrics to collect. At the same time, organizations usually have limited budget and resources for metrics collection. It has been recognized for quite a while that there is the need for prioritizing goals, which then ought to drive the selection of metrics. On the other hand, the dynamic nature of the organizations requires measurement programs to adapt to the changes in the stakeholders, their goals, information needs and priorities. Therefore, it is crucial for organizations to use structured approaches that provide transparency, traceability and guidance in choosing an optimum set of metrics that would address the highest priority information needs considering limited resources. This paper proposes a decision support framework for metrics selection (DSFMS) which is built upon the widely used Goal Question Metric (GQM) approach. The core of the framework includes an iterative goal-based metrics selection process incorporating decision making mechanisms in metrics selection, a pre-defined Attributes/Metrics Repository, and a Traceability Model among GQM elements. We also discuss alternative prioritization and optimization techniques for organizations to tailor the framework according to their needs. The evaluation of the GQM-DSFMS framework was done through a case study in a CMMI Level 3 software company.},
 author = {Cigdem Gencel and Kai Petersen and Aftab Ahmad Mughal and Muhammad Imran Iqbal},
 doi = {10.1016/j.jss.2013.07.022},
 journal = {Journal of Systems and Software},
 month = {dec},
 number = {12},
 pages = {3091--3108},
 publisher = {Elsevier {BV}},
 title = {A decision support framework for metrics selection in goal-based measurement programs: {GQM}-{DSFMS}},
 url = {https://doi.org/10.1016%2Fj.jss.2013.07.022},
 volume = {86},
 year = {2013}
}

@article{Glass_2002,
 abstract = {In this paper, we examine the state of software engineering (SE) research from the point of view of the following research questions:1.What topics do SE researchers address?2.What research approaches do SE researchers use?3.What research methods do SE researchers use?4.On what reference disciplines does SE research depend?5.At what levels of analysis do SE researchers conduct research?To answer those questions, we examined 369 papers in six leading research journals in the SE field, answering those research questions for each paper.From that examination, we conclude that SE research is diverse regarding topic, narrow regarding research approach and method, inwardly-focused regarding reference discipline, and technically focused (as opposed to behaviorally focused) regarding level of analysis.We pass no judgment on the SE field as a result of these findings. Instead, we present them as groundwork for future SE research efforts.},
 author = {R.L. Glass and I. Vessey and V. Ramesh},
 doi = {10.1016/s0950-5849(02)00049-6},
 journal = {Information and Software Technology},
 month = {jun},
 number = {8},
 pages = {491--506},
 publisher = {Elsevier {BV}},
 title = {Research in software engineering: an analysis of the literature},
 url = {https://doi.org/10.1016%2Fs0950-5849%2802%2900049-6},
 volume = {44},
 year = {2002}
}

@article{Heckmann_1975,
 abstract = {},
 author = {Irvin L. Heckmann and Wendell L. French and Cecil H. Bell},
 doi = {10.2307/2521470},
 journal = {Industrial and Labor Relations Review},
 month = {jan},
 number = {2},
 pages = {332},
 publisher = {{JSTOR}},
 title = {Organization Development: Behavioral Science Interventions for Organization Improvement.},
 url = {https://doi.org/10.2307%2F2521470},
 volume = {28},
 year = {1975}
}

@article{Ivarsson_2009,
 abstract = {One of the main goals of an applied research field such as requirements engineering is the transfer of research results to
industrial use. To promote industrial adoption of technologies developed in academia, researchers need to provide tangible
evidence of the advantages of using them. This can be done through industry validation, enabling researchers to test and validate
technologies in a real setting with real users and applications. The evidence obtained, together with detailed information
on how the validation was conducted, offers rich decision support material for industrial practitioners seeking to adopt new
technologies. This paper presents a comprehensive systematic literature review of all papers published in the Requirements
Engineering journal containing any type of technology evaluation. The aim is to gauge the support for technology transfer,
i.e., to what degree industrial practitioners can use the reporting of technology evaluations in the journal as decision support 
for adopting the technologies in industrial practice. Findings show that very few evaluations offer full technology transfer 
support, i.e., have a realistic scale, application or subjects. The major improvement potential concerning support for technology
transfer is found to be the subjects used in the evaluations. Attaining company support, including support for using practitioners
as subjects, is vital for technology transfer and for researchers seeking to validate technologies.},
 author = {Martin Ivarsson and Tony Gorschek},
 doi = {10.1007/s00766-009-0080-1},
 journal = {Requirements Engineering},
 month = {mar},
 number = {3},
 pages = {155--175},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Technology transfer decision support in requirements engineering research: a systematic review of {REj}},
 url = {https://doi.org/10.1007%2Fs00766-009-0080-1},
 volume = {14},
 year = {2009}
}

@article{Ivarsson_2010,
 abstract = {One of the main goals of an applied research field such as software engineering is the transfer and widespread use of research
results in industry. To impact industry, researchers developing technologies in academia need to provide tangible evidence
of the advantages of using them. This can be done trough step-wise validation, enabling researchers to gradually test and
evaluate technologies to finally try them in real settings with real users and applications. The evidence obtained, together
with detailed information on how the validation was conducted, offers rich decision support material for industry practitioners
seeking to adopt new technologies and researchers looking for an empirical basis on which to build new or refined technologies.
This paper presents model for evaluating the rigor and industrial relevance of technology evaluations in software engineering.
The model is applied and validated in a comprehensive systematic literature review of evaluations of requirements engineering
technologies published in software engineering journals. The aim is to show the applicability of the model and to characterize
how evaluations are carried out and reported to evaluate the state-of-research. The review shows that the model can be applied
to characterize evaluations in requirements engineering. The findings from applying the model also show that the majority
of technology evaluations in requirements engineering lack both industrial relevance and rigor. In addition, the research
field does not show any improvements in terms of industrial relevance over time.},
 author = {Martin Ivarsson and Tony Gorschek},
 doi = {10.1007/s10664-010-9146-4},
 journal = {Empirical Software Engineering},
 month = {oct},
 number = {3},
 pages = {365--395},
 publisher = {Springer Science and Business Media {LLC}},
 title = {A method for evaluating rigor and industrial relevance of technology evaluations},
 url = {https://doi.org/10.1007%2Fs10664-010-9146-4},
 volume = {16},
 year = {2010}
}

@article{Kauppinen_2004,
 abstract = {This paper aims at identifying critical factors affecting organization-wide implementation of requirements engineering (RE) processes. The paper is based on a broad literature review and three longitudinal case studies that were carried out using an action research method. The results indicate that RE process implementation is a demanding undertaking, and its success greatly depends on such human factors as motivation, commitment and enthusiasm. Therefore, it is essential that the RE process is useful for its individual users. Furthermore, the results indicate that organizations can gain benefits from RE by defining a simple RE process, by focusing on a small set of RE practices, and by supporting the systematic usage of these practices.},
 author = {Marjo Kauppinen and Matti Vartiainen and Jyrki Kontio and Sari Kujala and Reijo Sulonen},
 doi = {10.1016/j.infsof.2004.04.002},
 journal = {Information and Software Technology},
 month = {nov},
 number = {14},
 pages = {937--953},
 publisher = {Elsevier {BV}},
 title = {Implementing requirements engineering processes throughout organizations: success factors and challenges},
 url = {https://doi.org/10.1016%2Fj.infsof.2004.04.002},
 volume = {46},
 year = {2004}
}

@inproceedings{Kautz_2000,
 abstract = {Software process improvement is a demanding and complex undertaking. To support the constitution and implementation of software process improvement schemes the Software Engineering Institute (SEI) proposes a framework, the so-called IDEAL model. This model is based on experiences from large organizations. The aim of the research described here was to investigate the suitability of the model for small software enterprises. It has therefore been deployed and adjusted for successful use in a small Danish software company. The course of the project and the application of the model are presented and the case is reflected on the background of current knowledge about managing software process improvement as organizational change.},
 author = {Karlheinz Kautz and Henrik Westergaard Hansen and Kim Thaysen},
 booktitle = {Proceedings of the 22nd international conference on Software engineering  - {ICSE} {\textquotesingle}00},
 doi = {10.1145/337180.337492},
 publisher = {{ACM} Press},
 title = {Applying and adjusting a software process improvement model in practice},
 url = {https://doi.org/10.1145%2F337180.337492},
 year = {2000}
}

@article{Mahdavi_Hezavehi_2013,
 abstract = {},
 author = {Sara Mahdavi-Hezavehi and Matthias Galster and Paris Avgeriou},
 doi = {10.1016/j.infsof.2012.08.010},
 journal = {Information and Software Technology},
 month = {feb},
 number = {2},
 pages = {320--343},
 publisher = {Elsevier {BV}},
 title = {Variability in quality attributes of service-based software systems: A systematic literature review},
 url = {https://doi.org/10.1016%2Fj.infsof.2012.08.010},
 volume = {55},
 year = {2013}
}

@inproceedings{Maiden_2005,
 abstract = {},
 author = {Neil Maiden and Suzanne Robertson},
 booktitle = {Proceedings of the 27th international conference on Software engineering  - {ICSE} {\textquotesingle}05},
 doi = {10.1145/1062455.1062555},
 publisher = {{ACM} Press},
 title = {Developing use cases and scenarios in the requirements process},
 url = {https://doi.org/10.1145%2F1062455.1062555},
 year = {2005}
}

@techreport{McFeeley_1996,
 abstract = {},
 author = {Bob McFeeley},
 doi = {10.21236/ada305472},
 month = {feb},
 publisher = {Defense Technical Information Center},
 title = {{IDEAL}: A User{\textquotesingle}s Guide for Software Process Improvement.},
 url = {https://doi.org/10.21236%2Fada305472},
 year = {1996}
}

@article{McKay_2001,
 abstract = {Keywords Information systems, Research, Methodology, Action research

Abstract 

Action research (AR) is not without its critics, and those who reject some of the
paradigmatic assumptions embodied in AR maintain that AR is little more than consultancy,
that it is impossible to establish causal relationships, that it is difficult to generalize from AR
studies, that there is a risk of researcher bias, and that generally speaking, it lacks some of the
key qualities that are normally associated with rigorous research. The authors are sensitive to
such criticisms, for although they are committed action researchers, they have elsewhere
voiced their concerns about the quality of AR practice in the field of information systems. The
authors argue that part of the issue concerns the way in which we currently conceptualize AR.
In this article, the argument for a deeper and more reflective analysis of the meaning and full
implications of AR is developed, culminating in a model of AR being developed that explicitly
includes both a problem solving interest cycle and a research interest cycle. Important
implications of this new model are articulated, with examples to illustrate these points being
drawn from a real-life AR study.},
 author = {Judy McKay and Peter Marshall},
 doi = {10.1108/09593840110384771},
 journal = {Information Technology {\&}amp$\mathsemicolon$ People},
 month = {mar},
 number = {1},
 pages = {46--59},
 publisher = {Emerald},
 title = {The dual imperatives of action research},
 url = {https://doi.org/10.1108%2F09593840110384771},
 volume = {14},
 year = {2001}
}

@article{Meyer_2000,
 abstract = {},
 author = {Julienne Meyer},
 doi = {10.1093/oxfordjournals.ageing.a008104},
 journal = {Age and Ageing},
 month = {sep},
 number = {suppl{\_}2},
 pages = {8--10},
 publisher = {Oxford University Press ({OUP})},
 title = {Evaluating action research},
 url = {https://doi.org/10.1093%2Foxfordjournals.ageing.a008104},
 volume = {29},
 year = {2000}
}

@article{Munir_2014,
 abstract = {},
 author = {Hussan Munir and Misagh Moayyed and Kai Petersen},
 doi = {10.1016/j.infsof.2014.01.002},
 journal = {Information and Software Technology},
 month = {apr},
 number = {4},
 pages = {375--394},
 publisher = {Elsevier {BV}},
 title = {Considering rigor and relevance when evaluating test driven development: A systematic review},
 url = {https://doi.org/10.1016%2Fj.infsof.2014.01.002},
 volume = {56},
 year = {2014}
}

@article{Petersen_2014,
 abstract = {},
 author = {Kai Petersen and Cigdem Gencel and Negin Asghari and Stefanie Betz},
 doi = {10.1007/s10664-014-9306-z},
 journal = {Empirical Software Engineering},
 month = {mar},
 number = {4},
 pages = {968--1005},
 publisher = {Springer Science and Business Media {LLC}},
 title = {An elicitation instrument for operationalising {GQM}$\mathplus$Strategies ({GQM}$\mathplus$S-{EI})},
 url = {https://doi.org/10.1007%2Fs10664-014-9306-z},
 volume = {20},
 year = {2014}
}

@article{Polo_2002,
 abstract = {This article explains our experience of using Action Research to develop a software maintenance methodology involving two organizations: a group of university researchers and a software services organization. The concept of 'methodology' comprises a wide set of elements whose identification, definition and integration is not a trivial task, due to the magnitude of the project and to the different nature of the organizations. The use of Action Research was a key factor in the progress of the research and has been essential in the adoption of the methodology within the software services organization.},
 author = {Macario Polo and Mario Piattini and Francisco Ruiz},
 doi = {10.1002/spe.481},
 journal = {Software: Practice and Experience},
 number = {13},
 pages = {1239--1260},
 publisher = {Wiley},
 title = {Using a qualitative research method for building a software maintenance methodology},
 url = {https://doi.org/10.1002%2Fspe.481},
 volume = {32},
 year = {2002}
}

@article{Runeson_2008,
 abstract = {Abstract,Case study is a suitable research methodology,for software engineering,research since it studies contemporary phenomena in its natural context. However, the understanding of what constitutes a case study varies, and hence the quality of the resulting studies. This paper aims,at providing,an introduction to case study methodology,and,guidelines for researchers,conducting,case studies and,readers studying,reports of such,studies. The content is based on the authors’ own,experience from conducting,and reading case studies. The terminology,and,guidelines are compiled,from,different methodology,handbooks,in other research domains, in particular social science and information systems, and adapted to the needs,in software,engineering. We,present,recommended,practices for software engineering,case studies as well,as empirically,derived,and,evaluated,checklists for researchers and readers of case study research. Keywords,Casestudy.Research methodology.Checklists .Guidelines},
 author = {Per Runeson and Martin Höst},
 doi = {10.1007/s10664-008-9102-8},
 journal = {Empirical Software Engineering},
 month = {dec},
 number = {2},
 pages = {131--164},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Guidelines for conducting and reporting case study research in software engineering},
 url = {https://doi.org/10.1007%2Fs10664-008-9102-8},
 volume = {14},
 year = {2008}
}

@article{Staron_2008,
 abstract = {Defects discovered during the testing phase in software projects need to be removed before the software is shipped to the customers. The removal of defects can constitute a significant amount of effort in a project and project managers are faced with a decision whether to continue development or shift some resources to cope with defect removal. The goal of this research is to improve the practice of project management by providing a method for predicting the number of defects reported into the defect database in the project. In this paper we present a method for predicting the number of defects reported into the defect database in a large software project on a weekly basis. The method is based on using project progress data, in particular the information about the test progress, to predict defect inflow in the next three coming weeks. The results show that the prediction accuracy of our models is up to 72% (mean magnitude of relative error for predictions of 1 week in advance is 28%) when used in ongoing large software projects. The method is intended to support project managers in more accurate adjusting resources in the project, since they are notified in advance about the potentially large effort needed to correct defects.},
 author = {Miroslaw Staron and Wilhelm Meding},
 doi = {10.1016/j.infsof.2007.10.001},
 journal = {Information and Software Technology},
 month = {jun},
 number = {7-8},
 pages = {782--796},
 publisher = {Elsevier {BV}},
 title = {Predicting weekly defect inflow in large software projects based on project planning and test status},
 url = {https://doi.org/10.1016%2Fj.infsof.2007.10.001},
 volume = {50},
 year = {2008}
}

@article{Staron_2009,
 abstract = {As in every engineering discipline, metrics play an important role in software development, with the difference that almost all software projects need the customization of metrics used. In other engineering disciplines, the notion of a measurement system (i.e. a tool used to collect, calculate, and report quantitative data) is well known and defined, whereas it is not as widely used in software engineering. In this paper we present a framework for developing custom measurement systems and its industrial evaluation in a software development unit within Ericsson. The results include the framework for designing measurement systems and its evaluation in real life projects at the company. The results show that with the help of ISO/IEC standards, measurement systems can be effectively used in software industry and that the presented framework improves the way of working with metrics. This paper contributes with the presentation of how automation of metrics collection and processing can be successfully introduced into a large organization and shows the benefits of it: increased efficiency of metrics collection, increased adoption of metrics in the organization, independence from individuals and standardized nomenclature for metrics in the organization.},
 author = {Miroslaw Staron and Wilhelm Meding and Christer Nilsson},
 doi = {10.1016/j.infsof.2008.10.001},
 journal = {Information and Software Technology},
 month = {apr},
 number = {4},
 pages = {721--737},
 publisher = {Elsevier {BV}},
 title = {A framework for developing measurement systems and its industrial evaluation},
 url = {https://doi.org/10.1016%2Fj.infsof.2008.10.001},
 volume = {51},
 year = {2009}
}

@article{Susman_1978,
 abstract = {This article describes the deficiencies of positivist science for generating knowledge for use in solving problems that members of organizations face. Action research is introduced as a method for correcting these deficiencies. When action research is tested against the criteria of positivist science, action research is found not to meet its critical tests. The appropriateness of positivist science is questioned as a basis for judging the scientific merits of action research. Action research can base its legitimacy as science in philosophical traditions that are different from those which legitimate positivist science. Criteria and methods of science appropriate to action research are offered.},
 author = {Gerald I. Susman and Roger D. Evered},
 doi = {10.2307/2392581},
 journal = {Administrative Science Quarterly},
 month = {dec},
 number = {4},
 pages = {582},
 publisher = {{JSTOR}},
 title = {An Assessment of the Scientific Merits of Action Research},
 url = {https://doi.org/10.2307%2F2392581},
 volume = {23},
 year = {1978}
}

@article{TICH__1974,
 abstract = {Introduction. 1 Preliminaries. 2 Popper's Logical Definition of Verisimilitude. 3 Popper's Probabilistic Definition of Verisimilitude. 4 Conclusion.},
 author = {PAVEL TICH{\'{Y}}},
 doi = {10.1093/bjps/25.2.155},
 journal = {The British Journal for the Philosophy of Science},
 month = {jun},
 number = {2},
 pages = {155--160},
 publisher = {University of Chicago Press},
 title = {{ON} {POPPER}{\textquotesingle}S {DEFINITIONS} {OF} {VERISIMILITUDE}$\less$sup$\greater$1$\less$/sup$\greater$},
 url = {https://doi.org/10.1093%2Fbjps%2F25.2.155},
 volume = {25},
 year = {1974}
}

@article{Westfall_1999,
 abstract = {An abstract is not available.},
 author = {Ralph Westfall},
 doi = {10.17705/1cais.00214},
 journal = {Communications of the Association for Information Systems},
 publisher = {Association for Information Systems},
 title = {An {IS} Research Relevancy Manifesto},
 url = {https://doi.org/10.17705%2F1cais.00214},
 volume = {2},
 year = {1999}
}

@book{Wohlin_2000,
 abstract = {},
 author = {Claes Wohlin and Per Runeson and Martin Höst and Magnus C. Ohlsson and Björn Regnell and Anders Wessl{\'{e}}n},
 doi = {10.1007/978-1-4615-4625-2},
 publisher = {Springer {US}},
 title = {Experimentation in Software Engineering},
 url = {https://doi.org/10.1007%2F978-1-4615-4625-2},
 year = {2000}
}

@article{5963631,
 abstract = {Collaboration between industry and academia supports improvement and innovation in industry and helps to ensure industrial relevance in academic research. This article presents an exploratory study of the factors for successful collaboration between industry and academia in software research.},
 author = {Wohlin, Claes and Aurum, Aybuke and Angelis, Lefteris and Phillips, Laura and Dittrich, Yvonne and Gorschek, Tony and Grahn, Hakan and Henningsson, Kennet and Kagstrom, Simon and Low, Graham and Rovegard, Per and Tomaszewski, Piotr and van Toorn, Christine and Winter, Jeff},
 doi = {10.1109/MS.2011.92},
 issn = {1937-4194},
 journal = {IEEE Software},
 keywords = {},
 month = {March},
 number = {2},
 pages = {67-73},
 title = {The Success Factors Powering Industry-Academia Collaboration},
 volume = {29},
 year = {2012}
}

@inproceedings{6328160,
 abstract = {Lean principles have attracted the attention of software development companies due to their potential to improve competitiveness. However, the application of such principles in the software domain is still in its infancy. This paper presents a proposal for adapting the Lean Enterprise Self-Assessment Tool (LESAT) to guide the transformation of software development companies toward Lean. LESAT, developed by the Lean Advancement Initiative (LAI) at the Massachusetts Institute of Technology (MIT), has been widely used in other domains. In this study, concepts and expressions of LESAT were analyzed and mapped to software development following the ISO/IEC 12207 standard. Seven assessment items concerning life-cycle processes were modified from the original LESAT. The modified LESAT for software was compared with a lean assessment approach called "Lean amplifier, " which has been developed and successfully used in practice by Ericsson R&D in Finland. The results indicated that LESAT may complement lean assessment in the software domain at enterprise level, involving the entire value stream. Moreover, they clearly emphasized the role of leadership in the transformation.},
 author = {Karvonen, Teemu and Rodriguez, Pilar and Kuvaja, Pasi and Mikkonen, Kirsi and Oivo, Markku},
 booktitle = {2012 38th Euromicro Conference on Software Engineering and Advanced Applications},
 doi = {10.1109/SEAA.2012.51},
 issn = {2376-9505},
 keywords = {},
 month = {Sep.},
 number = {},
 pages = {266-273},
 title = {Adapting the Lean Enterprise Self-Assessment Tool for the Software Development Domain},
 volume = {},
 year = {2012}
}

@inproceedings{6618463,
 abstract = {Empirical Software Engineering research has achieved considerable results in building our knowledge about selecting and applying appropriate empirical methods for technology evaluation. Empirical studies in general and empirical studies in industrial settings in particular have played an important role in successful transition of many Software Engineering technologies to industry, for example, defect detection techniques and automated test cases. However, conducting empirical research in industrial settings remains a challenging undertaking for a variety of reasons. There is no substantial literature reporting on the challenges and complexities involved in conducting empirical studies in an industry in general and in settings whose business models are built around global sourcing. This paper reports some of our experiences and lessons learned from conducting empirical research in industry. Some of the observed challenges include short time horizon for research, high expectations, limited research skills, and the ‘acceptable’ research rigor. The paper discusses some of these issues with relevant examples and provides some strategies for overcoming these issues. We also stress that researchers and practitioners should share their experiences of conducting empirical research in order to help build a body of knowledge to guide the future efforts.},
 author = {Jain, Shilpi and Ali Babar, Muhammad and Fernandez, Jude},
 booktitle = {2013 1st International Workshop on Conducting Empirical Studies in Industry (CESI)},
 doi = {10.1109/CESI.2013.6618463},
 issn = {},
 keywords = {},
 month = {May},
 number = {},
 pages = {9-14},
 title = {Conducting empirical studies in industry: Balancing rigor and relevance},
 volume = {},
 year = {2013}
}

@inproceedings{6618469,
 abstract = {Software engineering research can be done in many ways, in particular it can be done in different ways when it comes to working with industry. This paper presents a list of top 10 challenges to work with industry based on our experience from working with industry in a very close collaboration with continuous exchange of knowledge and information. The top 10 list is based on a large number of research projects and empirical studies conducted with industrial research partners since 1983. It is concluded that close collaboration is a long-term undertaking and a large investment. The importance of addressing the top 10 challenges is stressed, since they form the basis for a long-term sustainable and successful collaboration between industry and academia.},
 author = {Wohlin, Claes},
 booktitle = {2013 1st International Workshop on Conducting Empirical Studies in Industry (CESI)},
 doi = {10.1109/CESI.2013.6618469},
 issn = {},
 keywords = {},
 month = {May},
 number = {},
 pages = {43-46},
 title = {Empirical software engineering research with industry: Top 10 challenges},
 volume = {},
 year = {2013}
}

@inproceedings{6618470,
 abstract = {Academia and industry have been collaborating for over a century in different formats, including research projects' funds, commercialization of academic knowledge, academic consultancy in industrial projects, etc. Yet, academic researchers face various difficulties and challenges when performing research in industry. In this paper we describe several challenges we faced during a long-term case study research we performed in collaboration with a global IT firm. We present each challenge including its illustration in the context of our case study, describe the actions taken in the attempt to meet it, and discuss lessons learned.},
 author = {Sherman, Sofia and Hadar, Irit},
 booktitle = {2013 1st International Workshop on Conducting Empirical Studies in Industry (CESI)},
 doi = {10.1109/CESI.2013.6618470},
 issn = {},
 keywords = {},
 month = {May},
 number = {},
 pages = {47-50},
 title = {Conducting a long-term case study in a software firm: An experience report},
 volume = {},
 year = {2013}
}

@inproceedings{6759188,
 abstract = {Lean Software Development has attracted a great deal of attention during last years. However, it remains unclear how Lean is implemented in a domain that fundamentally differs from the automotive industry in which it originated. This study provides empirical evidence of how Lean can be combined with Agile methods to enhance software development processes. A case study was conducted at Elektrobit Wireless Segment, which has used Agile from 2007 and began to adopt Lean in 2010. Our findings evidence numerous compatibilities between Lean and Agile. In addition to well-established practices in Agile, Lean thinking has brought new elements to software development such as Kanban and work-in-progress limits, a “pull” and “less waste” oriented culture, and a stronger emphasis on transparency and collaborative development. Scaling flexibility, business management involvement and waste reduction were found as challenges, whilst setting up teams, self-organization and empowerment appeared easier to achieve.},
 author = {Rodríguez, Pilar and Partanen, Jari and Kuvaja, Pasi and Oivo, Markku},
 booktitle = {2014 47th Hawaii International Conference on System Sciences},
 doi = {10.1109/HICSS.2014.586},
 issn = {1530-1605},
 keywords = {},
 month = {Jan},
 number = {},
 pages = {4770-4779},
 title = {Combining Lean Thinking and Agile Methods for Software Development: A Case Study of a Finnish Provider of Wireless Embedded Systems Detailed},
 volume = {},
 year = {2014}
}

@article{Bichler_2006,
 abstract = {},
 author = {Martin Bichler},
 doi = {10.1007/s11576-006-0028-8},
 journal = {{WIRTSCHAFTSINFORMATIK}},
 month = {apr},
 number = {2},
 pages = {133--135},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Design science in information systems research},
 url = {https://doi.org/10.1007%2Fs11576-006-0028-8},
 volume = {48},
 year = {2006}
}

@article{Jones_2007,
 abstract = {Design work and design knowledge in Information Systems (IS) is important
for both research and practice. Yet there has been comparatively
little critical attention paid to the problem of specifying design
theory so that it can be communicated, justified, and developed cumulatively.
In this essay we focus on the structural components or anatomy of
design theories in IS as a special class of theory. In doing so,
we aim to extend the work of Walls, Widemeyer and El Sawy (1992)
on the specification of information systems design theories (ISDT),
drawing on other streams of thought on design research and theory
to provide a basis for a more systematic and useable formulation
of these theories. We identify eight separate components of design
theories: (1) purpose and scope, (2) constructs, (3) principles of
form and function, (4) artifact mutability, (5) testable propositions,
(6) justificatory knowledge (kernel theories), (7) principles of
implementation, and (8) an expository instantiation. This specification
includes components missing in the Walls et al. adaptation of Dubin
(1978) and Simon (1969) and also addresses explicitly problems associated
with the role of instantiations and the specification of design theories
for methodologies and interventions as well as for products and applications.
The essay is significant as the unambiguous establishment of design
knowledge as theory gives a sounder base for arguments for the rigor
and legitimacy of IS as an applied discipline and for its continuing
progress. A craft can proceed with the copying of one example of
a design artifact by one artisan after another. A discipline cannot.},
 author = {David Jones and   and Shirley Gregor and},
 doi = {10.17705/1jais.00129},
 journal = {Journal of the Association for Information Systems},
 month = {may},
 number = {5},
 pages = {312--335},
 publisher = {Association for Information Systems},
 title = {The Anatomy of a Design Theory},
 url = {https://doi.org/10.17705%2F1jais.00129},
 volume = {8},
 year = {2007}
}

@article{Kuechler_2008,
 abstract = {The common understanding of design science research in information systems (DSRIS) continues to evolve. Only in the broadest terms has there been consensus: that DSRIS involves, in some way, learning through the act of building. However, what is to be built – the definition of the DSRIS artifact – and how it is to be built – the methodology of DSRIS – has drawn increasing discussion in recent years. The relationship of DSRIS to theory continues to make up a significant part of the discussion: how theory should inform DSRIS and whether or not DSRIS can or should be instrumental in developing and refining theory. In this paper, we present the exegesis of a DSRIS research project in which creating a (prescriptive) design theory through the process of developing and testing an information systems artifact is inextricably bound to the testing and refinement of its kernel theory.},
 author = {Bill Kuechler and Vijay Vaishnavi},
 doi = {10.1057/ejis.2008.40},
 journal = {European Journal of Information Systems},
 month = {oct},
 number = {5},
 pages = {489--504},
 publisher = {Informa {UK} Limited},
 title = {On theory development in design science research: anatomy of a research project},
 url = {https://doi.org/10.1057%2Fejis.2008.40},
 volume = {17},
 year = {2008}
}

@article{March_1995,
 abstract = {Research in IT must address the design tasks faced by practitioners. Real problems must be properly conceptualized and represented, appropriate techniques for their solution must be constructed, and solutions must be implemented and evaluated using appropriate criteria. If significant progress is to be made, IT research must also develop an understanding of how and why IT systems work or do not work. Such an understanding must tie together natural laws governing IT systems with natural laws governing the environments in which they operate. This paper presents a two dimensional framework for research in information technology. The first dimension is based on broad types of design and natural science research activities: build, evaluate, theorize, and justify. The second dimension is based on broad types of outputs produced by design research: representational constructs, models, methods, and instantiations. We argue that both design science and natural science activities are needed to insure that IT research is both relevant and effective.},
 author = {Salvatore T. March and Gerald F. Smith},
 doi = {10.1016/0167-9236(94)00041-2},
 journal = {Decision Support Systems},
 month = {dec},
 number = {4},
 pages = {251--266},
 publisher = {Elsevier {BV}},
 title = {Design and natural science research on information technology},
 url = {https://doi.org/10.1016%2F0167-9236%2894%2900041-2},
 volume = {15},
 year = {1995}
}

@article{Peffers_2007,
 abstract = {The paper motivates, presents, demonstrates in use, and evaluates
a methodology for conducting design science (DS) research in information
systems (IS). DS is of importance in a discipline oriented to the
creation of successful artifacts. Several researchers have pioneered
DS research in IS, yet over the past 15 years, little DS research
has been done within the discipline. The lack of a methodology to
serve as a commonly accepted framework for DS research and of a template
for its presentation may have contributed to its slow adoption. The
design science research methodology (DSRM) presented here incorporates
principles, practices, and procedures required to carry out such
research and meets three objectives: it is consistent with prior
literature, it provides a nominal process model for doing DS research,
and it provides a mental model for presenting and evaluating DS research
in IS. The DS process includes six steps: problem identification
and motivation, definition of the objectives for a solution, design
and development, demonstration, evaluation, and communication. We
demonstrate and evaluate the methodology by presenting four case
studies in terms of the DSRM, including cases that present the design
of a database to support health assessment methods, a software reuse
measure, an Internet video telephony application, and an IS planning
method. The designed methodology effectively satisfies the three
objectives and has the potential to help aid the acceptance of DS
research in the IS discipline.},
 author = {Ken Peffers and Tuure Tuunanen and Marcus A. Rothenberger and Samir Chatterjee},
 doi = {10.2753/mis0742-1222240302},
 journal = {Journal of Management Information Systems},
 month = {dec},
 number = {3},
 pages = {45--77},
 publisher = {Informa {UK} Limited},
 title = {A Design Science Research Methodology for Information Systems Research},
 url = {https://doi.org/10.2753%2Fmis0742-1222240302},
 volume = {24},
 year = {2007}
}

@inproceedings{Rodr_guez_2013,
 abstract = {},
 author = {Pilar Rodr{\'{\i}}guez and Kirsi Mikkonen and Pasi Kuvaja and Markku Oivo and Juan Garbajosa},
 booktitle = {Proceedings of the 2013 International Conference on Software and System Process},
 doi = {10.1145/2486046.2486064},
 month = {may},
 publisher = {{ACM}},
 title = {Building lean thinking in a telecom software development organization: strengths and challenges},
 url = {https://doi.org/10.1145%2F2486046.2486064},
 year = {2013}
}

@article{Tremblay_2010,
 abstract = {Focus groups to investigate new ideas are widely used in many research fields. The use of focus groups in design research poses interesting opportunities and challenges. Traditional focus group methods must be adapted to meet two specific goals of design research. For the refinement of an artifact design, exploratory focus groups (EFGs) study the artifact to propose improvements in the design. The cycle of build and evaluate using EFGs continues until the artifact is released for field test in the application environment. Then, the field test of the design artifact may employ confirmatory focus groups (CFGs) to establish the utility of the artifact in field use. Rigorous investigation of the artifact requires multiple CFGs to be run with opportunities for quantitative and qualitative data collection and analyses across the multiple CFGs. In this paper, we discuss the adaptation of focus groups to design research projects. We demonstrate the use of both EFGs and CFGs in a design research project in the health care field.},
 author = {Monica Chiarini Tremblay and Alan R. Hevner and Donald J. Berndt},
 doi = {10.17705/1cais.02627},
 journal = {Communications of the Association for Information Systems},
 publisher = {Association for Information Systems},
 title = {Focus Groups for Artifact Refinement and Evaluation in Design Research},
 url = {https://doi.org/10.17705%2F1cais.02627},
 volume = {26},
 year = {2010}
}

@article{4012630,
 abstract = {Successful technology transfer requires close cooperation and collaboration between researchers and practitioners. Researchers need to observe the challenges facing industry firsthand and tailor their work accordingly. Practitioners can help shape technology development on the basis of tangible issues identified on site. This article presents a seven-step technology transfer model that reflects collaborations between university researchers and practitioners at two Swedish companies. The authors discuss key lessons learned for each of these seven steps.},
 author = {Gorschek, Tony and Garre, Per and Larsson, Stig and Wohlin, Claes},
 doi = {10.1109/MS.2006.147},
 issn = {1937-4194},
 journal = {IEEE Software},
 keywords = {},
 month = {Nov},
 number = {6},
 pages = {88-95},
 title = {A Model for Technology Transfer in Practice},
 volume = {23},
 year = {2006}
}

@article{5733335,
 abstract = {Both the software industry and academia promote collaboration to solve challenges together that neither can solve alone. Collaboration brings opportunities to understand and improve in ways not possible when working apart, but it succeeds only if both parties are contributing. A collaboration model developed from eight years' experience setting up and managing a research center explicitly focused on industry needs is based on five success factors enabling research results (need orientation, industry goal alignment, deployment impact, industry benefit, and innovativeness), five success factors enabling research activities (management engagement, network access, collaborator match, communication ability, and continuity), and 10 action principles for industry-academia collaboration management.},
 author = {Sandberg, Anna and Pareto, Lars and Arts, Thomas},
 doi = {10.1109/MS.2011.49},
 issn = {1937-4194},
 journal = {IEEE Software},
 keywords = {},
 month = {July},
 number = {4},
 pages = {74-83},
 title = {Agile Collaborative Research: Action Principles for Industry-Academia Collaboration},
 volume = {28},
 year = {2011}
}

@article{5963631,
 abstract = {Collaboration between industry and academia supports improvement and innovation in industry and helps to ensure industrial relevance in academic research. This article presents an exploratory study of the factors for successful collaboration between industry and academia in software research.},
 author = {Wohlin, Claes and Aurum, Aybuke and Angelis, Lefteris and Phillips, Laura and Dittrich, Yvonne and Gorschek, Tony and Grahn, Hakan and Henningsson, Kennet and Kagstrom, Simon and Low, Graham and Rovegard, Per and Tomaszewski, Piotr and van Toorn, Christine and Winter, Jeff},
 doi = {10.1109/MS.2011.92},
 issn = {1937-4194},
 journal = {IEEE Software},
 keywords = {},
 month = {March},
 number = {2},
 pages = {67-73},
 title = {The Success Factors Powering Industry-Academia Collaboration},
 volume = {29},
 year = {2012}
}

@inproceedings{6200202,
 abstract = {Industry - academia collaboration is critical for empirical research to exist. However, there are many obstacles in the collaboration process. This paper reports on the experiences gained by the author, in a 2-year collaboration project on software testing which involved on-site work by the researcher in the industry premises. Based on notes, minutes of meetings, and progress reports, the project history is outlined. The project is analyzed, using collaboration models as a frame of reference. We conclude that there must be a balance between company 'pull' and academia 'push' in the collaboration Management support is inevitably a key factor to success, while other factors like cross-cultural skills and interfaces towards key resources also contribute.},
 author = {Runeson, Per},
 booktitle = {2012 IEEE Fifth International Conference on Software Testing, Verification and Validation},
 doi = {10.1109/ICST.2012.190},
 issn = {2159-4848},
 keywords = {},
 month = {April},
 number = {},
 pages = {872-877},
 title = {It Takes Two to Tango -- An Experience Report on Industry -- Academia Collaboration},
 volume = {},
 year = {2012}
}

@inproceedings{6618469,
 abstract = {Software engineering research can be done in many ways, in particular it can be done in different ways when it comes to working with industry. This paper presents a list of top 10 challenges to work with industry based on our experience from working with industry in a very close collaboration with continuous exchange of knowledge and information. The top 10 list is based on a large number of research projects and empirical studies conducted with industrial research partners since 1983. It is concluded that close collaboration is a long-term undertaking and a large investment. The importance of addressing the top 10 challenges is stressed, since they form the basis for a long-term sustainable and successful collaboration between industry and academia.},
 author = {Wohlin, Claes},
 booktitle = {2013 1st International Workshop on Conducting Empirical Studies in Industry (CESI)},
 doi = {10.1109/CESI.2013.6618469},
 issn = {},
 keywords = {},
 month = {May},
 number = {},
 pages = {43-46},
 title = {Empirical software engineering research with industry: Top 10 challenges},
 volume = {},
 year = {2013}
}

@incollection{Ali_Babar_2007,
 abstract = {To support software architecture evaluation practices, several efforts have been made to provide a basis for comparing and
assessing evaluation methods, document various best practices, and report the factors that may influence industrial practices.
However, there has been no study to explore the experiences and perceptions of architects for determining the factors that
influence architecture evaluation practices in a wide range of organizations. Hence, there is little empirically founded knowledge
available on the factors that influence the industrial practices of software architecture evaluation. The goal of this paper
is to report the results of an empirical study aimed at gaining an understanding of different factors involved in evaluating
architectures in industry. The results of this study shed light on the factors that influence architecture evaluation practices
based on the experiences and perception of architects who regularly evaluate architectures of various sizes of applications.
It also discusses some of the strategies that practitioners apply to deal with the influence of the identified factors.},
 author = {Muhammad Ali Babar and Len Bass and Ian Gorton},
 booktitle = {Lecture Notes in Computer Science},
 doi = {10.1007/978-3-540-77619-2_6},
 pages = {90--107},
 publisher = {Springer Berlin Heidelberg},
 title = {Factors Influencing Industrial Practices of Software Architecture Evaluation: An Empirical Investigation},
 url = {https://doi.org/10.1007%2F978-3-540-77619-2_6},
 year = {2007}
}

@article{Babar_2011,
 abstract = {When following architecture-driven strategies to develop large software-intensive systems, the analysis of the dependencies is not an easy task. In this paper, we report a systematic literature review on dependency analysis solutions. Dependency analysis ...},
 author = {Muhammad Ali Babar and Patricia Lago and Arie Van Deursen},
 doi = {10.1007/s10664-011-9168-6},
 journal = {Empirical Software Engineering},
 month = {jul},
 number = {5},
 pages = {539--543},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Empirical research in software architecture: opportunities, challenges, and approaches},
 url = {https://doi.org/10.1007%2Fs10664-011-9168-6},
 volume = {16},
 year = {2011}
}

@inproceedings{Baldassarre_2013,
 abstract = {},
 author = {Maria Teresa Baldassarre and Danilo Caivano and Giuseppe Visaggio},
 booktitle = {Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering},
 doi = {10.1145/2460999.2461020},
 month = {apr},
 publisher = {{ACM}},
 title = {Empirical studies for innovation dissemination},
 url = {https://doi.org/10.1145%2F2460999.2461020},
 year = {2013}
}

@article{MacCormack_2011,
 abstract = {},
 author = {Alan MacCormack and John Rusnak and Carliss Y. Baldwin},
 doi = {10.2139/ssrn.1104745},
 journal = {{SSRN} Electronic Journal},
 publisher = {Elsevier {BV}},
 title = {Exploring the Duality between Product and Organizational Architectures: A Test of the Mirroring Hypothesis},
 url = {https://doi.org/10.2139%2Fssrn.1104745},
 year = {2011}
}

@incollection{Mart_nez_Fern_ndez_2013,
 abstract = {Reference architectures (RA) have been studied to create a consistent notion of what constitutes them as well as their benefits and drawbacks. However, few empirical studies have been conducted to provide evidence that support the claims made. To increase this evidence, this paper investigates the actual industrial practice of using RAs. The study consists of a survey with 28 stakeholders from everis, a multinational consulting company based in Spain. We report the findings and contextualize them with previous research.},
 author = {Silverio Mart{\'{\i}}nez-Fern{\'{a}}ndez and Claudia P. Ayala and Xavier Franch and Helena Martins Marques},
 booktitle = {Software Architecture},
 doi = {10.1007/978-3-642-39031-9_26},
 pages = {307--310},
 publisher = {Springer Berlin Heidelberg},
 title = {Benefits and Drawbacks of Reference Architectures},
 url = {https://doi.org/10.1007%2F978-3-642-39031-9_26},
 year = {2013}
}

@incollection{Mart_nez_Fern_ndez_2013,
 abstract = {To remain competitive, organizations are challenged to make informed and feasible value-driven design decisions in order to ensure the quality of their software systems. However, there is a lack of support for evaluating the economic impact of these decisions with regard to software reference architectures. This damages the communication among architects and management, which can result in poor decisions. This paper aims at ameliorating this problem by presenting a pragmatic preliminary economic model to perform cost-benefit analysis on the adoption of software reference architectures as a key asset for optimizing architectural decision-making. The model is based on existing value-based metrics and economics-driven models used in other areas. A preliminary validation based on a retrospective study showed the ability of the model to support a cost-benefit analysis presented to the management of an IT consulting company. This validation involved a cost-benefit analysis related to reuse and maintenance; other qualities will be integrated as our research progresses.},
 author = {Silverio Mart{\'{\i}}nez-Fern{\'{a}}ndez and Claudia P. Ayala and Xavier Franch and Helena Martins Marques},
 booktitle = {Safe and Secure Software Reuse},
 doi = {10.1007/978-3-642-38977-1_7},
 pages = {97--112},
 publisher = {Springer Berlin Heidelberg},
 title = {{REARM}: A Reuse-Based Economic Model for Software Reference Architectures},
 url = {https://doi.org/10.1007%2F978-3-642-38977-1_7},
 year = {2013}
}

@inproceedings{Mart_nez_Fern_ndez_2014,
 abstract = {Context: Software reference architectures (SRA) have emerged as an approach to systematically reuse architectural knowledge and software elements in the development of software systems. Over the last years, research has been conducted to uncover the artifacts that SRAs provide in order to build software systems. However, empirical studies have not focused on providing industrial evidence about such artifacts. Aim: This paper investigates which artifacts constitute an SRA, how SRAs are designed, the potential reuse of SRA's artifacts, and how they are used in practice. Method: The study consists of a case study made in collaboration with a multinational consulting company that designs SRAs for diverse client organizations. A total of nine European client organizations that use an SRA participated in the study. We analyzed available documentation and contacted 28 practitioners. Results: In the nine analyzed projects, we observed that the artifacts that constitute an SRA are mainly software elements, guidelines and documentation. The design and implementation of SRAs are influenced by the reuse of artifacts from previous software system development and experiences, and the reuse of an SRA across different business domains may be possible when they are platform-oriented. Regarding SRAs usage, we observed that conformance checking is seldom performed. Conclusions: This study reports artifacts of SRAs as stated by practitioners in order to help software architects and scientists in the inception, design, and application of SRAs.},
 author = {Silverio Mart{\'{\i}}nez-Fern{\'{a}}ndez and Claudia Ayala and Xavier Franch and Helena Martins Marques},
 booktitle = {Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering},
 doi = {10.1145/2601248.2601282},
 month = {may},
 publisher = {{ACM}},
 title = {Artifacts of software reference architectures},
 url = {https://doi.org/10.1145%2F2601248.2601282},
 year = {2014}
}

@article{Pfleeger_1999,
 abstract = {Technology transfer in software engineering involves more than a new idea or evidence that it works. This paper illustrates how technology transfer requires a good idea, the generation of evidence, analysis of that evidence, good packaging and support, and careful consideration of the audience for the technology. By learning from other disciplines, we present a model of technology transfer that can be tailored to a particular organisation's needs.},
 author = {S.L Pfleeger},
 doi = {10.1016/s0164-1212(99)00031-x},
 journal = {Journal of Systems and Software},
 month = {jul},
 number = {2-3},
 pages = {111--124},
 publisher = {Elsevier {BV}},
 title = {Understanding and improving technology transfer in software engineering},
 url = {https://doi.org/10.1016%2Fs0164-1212%2899%2900031-x},
 volume = {47},
 year = {1999}
}

@article{4012630,
 abstract = {Successful technology transfer requires close cooperation and collaboration between researchers and practitioners. Researchers need to observe the challenges facing industry firsthand and tailor their work accordingly. Practitioners can help shape technology development on the basis of tangible issues identified on site. This article presents a seven-step technology transfer model that reflects collaborations between university researchers and practitioners at two Swedish companies. The authors discuss key lessons learned for each of these seven steps.},
 author = {Gorschek, Tony and Garre, Per and Larsson, Stig and Wohlin, Claes},
 doi = {10.1109/MS.2006.147},
 issn = {1937-4194},
 journal = {IEEE Software},
 keywords = {},
 month = {Nov},
 number = {6},
 pages = {88-95},
 title = {A Model for Technology Transfer in Practice},
 volume = {23},
 year = {2006}
}

@article{5733335,
 abstract = {Both the software industry and academia promote collaboration to solve challenges together that neither can solve alone. Collaboration brings opportunities to understand and improve in ways not possible when working apart, but it succeeds only if both parties are contributing. A collaboration model developed from eight years' experience setting up and managing a research center explicitly focused on industry needs is based on five success factors enabling research results (need orientation, industry goal alignment, deployment impact, industry benefit, and innovativeness), five success factors enabling research activities (management engagement, network access, collaborator match, communication ability, and continuity), and 10 action principles for industry-academia collaboration management.},
 author = {Sandberg, Anna and Pareto, Lars and Arts, Thomas},
 doi = {10.1109/MS.2011.49},
 issn = {1937-4194},
 journal = {IEEE Software},
 keywords = {},
 month = {July},
 number = {4},
 pages = {74-83},
 title = {Agile Collaborative Research: Action Principles for Industry-Academia Collaboration},
 volume = {28},
 year = {2011}
}

@article{5963631,
 abstract = {Collaboration between industry and academia supports improvement and innovation in industry and helps to ensure industrial relevance in academic research. This article presents an exploratory study of the factors for successful collaboration between industry and academia in software research.},
 author = {Wohlin, Claes and Aurum, Aybuke and Angelis, Lefteris and Phillips, Laura and Dittrich, Yvonne and Gorschek, Tony and Grahn, Hakan and Henningsson, Kennet and Kagstrom, Simon and Low, Graham and Rovegard, Per and Tomaszewski, Piotr and van Toorn, Christine and Winter, Jeff},
 doi = {10.1109/MS.2011.92},
 issn = {1937-4194},
 journal = {IEEE Software},
 keywords = {},
 month = {March},
 number = {2},
 pages = {67-73},
 title = {The Success Factors Powering Industry-Academia Collaboration},
 volume = {29},
 year = {2012}
}

@inproceedings{6200202,
 abstract = {Industry - academia collaboration is critical for empirical research to exist. However, there are many obstacles in the collaboration process. This paper reports on the experiences gained by the author, in a 2-year collaboration project on software testing which involved on-site work by the researcher in the industry premises. Based on notes, minutes of meetings, and progress reports, the project history is outlined. The project is analyzed, using collaboration models as a frame of reference. We conclude that there must be a balance between company 'pull' and academia 'push' in the collaboration Management support is inevitably a key factor to success, while other factors like cross-cultural skills and interfaces towards key resources also contribute.},
 author = {Runeson, Per},
 booktitle = {2012 IEEE Fifth International Conference on Software Testing, Verification and Validation},
 doi = {10.1109/ICST.2012.190},
 issn = {2159-4848},
 keywords = {},
 month = {April},
 number = {},
 pages = {872-877},
 title = {It Takes Two to Tango -- An Experience Report on Industry -- Academia Collaboration},
 volume = {},
 year = {2012}
}

@inproceedings{6618469,
 abstract = {Software engineering research can be done in many ways, in particular it can be done in different ways when it comes to working with industry. This paper presents a list of top 10 challenges to work with industry based on our experience from working with industry in a very close collaboration with continuous exchange of knowledge and information. The top 10 list is based on a large number of research projects and empirical studies conducted with industrial research partners since 1983. It is concluded that close collaboration is a long-term undertaking and a large investment. The importance of addressing the top 10 challenges is stressed, since they form the basis for a long-term sustainable and successful collaboration between industry and academia.},
 author = {Wohlin, Claes},
 booktitle = {2013 1st International Workshop on Conducting Empirical Studies in Industry (CESI)},
 doi = {10.1109/CESI.2013.6618469},
 issn = {},
 keywords = {},
 month = {May},
 number = {},
 pages = {43-46},
 title = {Empirical software engineering research with industry: Top 10 challenges},
 volume = {},
 year = {2013}
}

@article{6671600,
 abstract = {JavaScript is a sequential programming language, and Thread-Level Speculation has been proposed to dynamically extract parallelism in order to take advantage of parallel hardware. In previous work, we have showed significant speed-ups with a simple on/off speculation heuristic. In this paper, we propose and evaluate three heuristics for dynamically adapt the speculation: a 2-bit heuristic, an exponential heuristic, and a combination of these two. Our results show that the combined heuristic is able to both increase the number of successful speculations and decrease the execution time for 15 popular web applications.},
 author = {Martinsen, Jan Kasper and Grahn, Håkan and Isberg, Anders},
 doi = {10.1109/L-CA.2013.26},
 issn = {1556-6064},
 journal = {IEEE Computer Architecture Letters},
 keywords = {},
 month = {July},
 number = {2},
 pages = {77-80},
 title = {Heuristics for Thread-Level Speculation in Web Applications},
 volume = {13},
 year = {2014}
}

@inproceedings{6928785,
 abstract = {One way to understand the structure of an open source community is by applying network analysis to its source code repositories. In this paper a new method for the analysis of committers' networks is proposed. The method deals with directed and weighted committers' networks. The method is then applied to the Android open source project. The analysis results show how a large, company sponsored, and industry backed open source project, i.e. An open source project with the majority of the community members affiliated with the industry, is structured. In particular, it shows that the involvement of an entire industry eco system within a company sponsored open source project does not imply more equal distribution of the participating community members' influences in terms of committers' networks.},
 author = {Orucevic-Alagic, Alma and Höst, Martin},
 booktitle = {2014 40th EUROMICRO Conference on Software Engineering and Advanced Applications},
 doi = {10.1109/SEAA.2014.50},
 issn = {2376-9505},
 keywords = {},
 month = {Aug},
 number = {},
 pages = {25-29},
 title = {Network Analysis of a Large Scale Open Source Project},
 volume = {},
 year = {2014}
}

@article{Bjarnason_2013,
 abstract = {},
 author = {Elizabeth Bjarnason and Per Runeson and Markus Borg and Michael Unterkalmsteiner and Emelie Engström and Björn Regnell and Giedre Sabaliauskaite and Annabella Loconsole and Tony Gorschek and Robert Feldt},
 doi = {10.1007/s10664-013-9263-y},
 journal = {Empirical Software Engineering},
 month = {jul},
 number = {6},
 pages = {1809--1855},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Challenges and practices in aligning requirements with verification and validation: a case study of six companies},
 url = {https://doi.org/10.1007%2Fs10664-013-9263-y},
 volume = {19},
 year = {2013}
}

@inproceedings{Bjarnason_2014,
 abstract = {Coordinating a software project across distances is challenging. Even without geographical and time zone distances, other distances within a project can cause communication gaps. For example, organisational and cognitive distances between product owners and development-near roles such as developers and testers can lead to weak alignment of the software and the business requirements. Applying good software development practices, known to enhance alignment, can alleviate these challenges. We present a theoretical model called the Gap Model of how alignment practices affect different types of distances. This model has been inductively generated from empirical data. We also present an initial version of a theory based on this model that explains, at a general level, how practices affect communication within a project by impacting distances between people, activities and artefacts. The presented results provide a basis for further research and can be used by software organisations to improve on software practice.},
 author = {Elizabeth Bjarnason and Kari Smolander and Emelie Engström and Per Runeson},
 booktitle = {Proceedings of the 3rd {SEMAT} Workshop on General Theories of Software Engineering},
 doi = {10.1145/2593752.2593757},
 month = {jun},
 publisher = {{ACM}},
 title = {Alignment practices affect distances in software development: a theory and a model},
 url = {https://doi.org/10.1145%2F2593752.2593757},
 year = {2014}
}

@inproceedings{Magnusson_2013,
 abstract = {In this demo we will show how devices from different vendors, using different protocols, can be combined and made to work together without detailed low-level programming by the user. The small example we have chosen uses a radio-controlled power socket from one vendor and a temperature sensor from another vendor. We use these to create a remotely controlled electric kettle, which keeps the water at the point of boiling, ready to make tea at any time. We also show how we very easy can use a mobile phone for remote control and monitoring of the kettle. It is all built with a simple-to-use graphical user interface offered by the PalCom middleware, and will be modified as part of the demo.},
 author = {Boris Magnusson and Björn A. Johnsson},
 booktitle = {Proceedings of the 2013 {ACM} conference on Pervasive and ubiquitous computing adjunct publication},
 doi = {10.1145/2494091.2494110},
 month = {sep},
 publisher = {{ACM}},
 title = {Some like it hot},
 url = {https://doi.org/10.1145%2F2494091.2494110},
 year = {2013}
}

@book{Runeson_2012,
 abstract = {Introduction Design of the Case Study Data Collection Data Analysis Reporting and Dissemination Lessons Learned},
 author = {Per Runeson and Martin Höst and Austen Rainer and Björn Regnell},
 doi = {10.1002/9781118181034},
 month = {feb},
 publisher = {Wiley},
 title = {Case Study Research in Software Engineering},
 url = {https://doi.org/10.1002%2F9781118181034},
 year = {2012}
}

@article{1996,
 abstract = {},
 doi = {10.5860/choice.34-1636},
 journal = {Choice Reviews Online},
 month = {nov},
 number = {03},
 pages = {34--1636--34--1636},
 publisher = {American Library Association},
 title = {A Guide to the project management body of knowledge},
 url = {https://doi.org/10.5860%2Fchoice.34-1636},
 volume = {34},
 year = {1996}
}

@article{4012630,
 abstract = {Successful technology transfer requires close cooperation and collaboration between researchers and practitioners. Researchers need to observe the challenges facing industry firsthand and tailor their work accordingly. Practitioners can help shape technology development on the basis of tangible issues identified on site. This article presents a seven-step technology transfer model that reflects collaborations between university researchers and practitioners at two Swedish companies. The authors discuss key lessons learned for each of these seven steps.},
 author = {Gorschek, Tony and Garre, Per and Larsson, Stig and Wohlin, Claes},
 doi = {10.1109/MS.2006.147},
 issn = {1937-4194},
 journal = {IEEE Software},
 keywords = {},
 month = {Nov},
 number = {6},
 pages = {88-95},
 title = {A Model for Technology Transfer in Practice},
 volume = {23},
 year = {2006}
}

@article{469759,
 abstract = {The 4+1 View Model organizes a description of a software architecture using five concurrent views, each of which addresses a specific set of concerns. Architects capture their design decisions in four views and use the fifth view to illustrate and validate them. The logical view describes the design's object model when an object-oriented design method is used. To design an application that is very data driven, you can use an alternative approach to develop some other form of logical view, such as an entity-relationship diagram. The process view describes the design's concurrency and synchronization aspects. The physical view describes the mapping of the software onto the hardware and reflects its distributed aspect. The development view describes the software's static organization in its development environment.<>},
 author = {Kruchten, P.B.},
 doi = {10.1109/52.469759},
 issn = {1937-4194},
 journal = {IEEE Software},
 keywords = {},
 month = {Nov},
 number = {6},
 pages = {42-50},
 title = {The 4+1 View Model of architecture},
 volume = {12},
 year = {1995}
}

@article{5733335,
 abstract = {Both the software industry and academia promote collaboration to solve challenges together that neither can solve alone. Collaboration brings opportunities to understand and improve in ways not possible when working apart, but it succeeds only if both parties are contributing. A collaboration model developed from eight years' experience setting up and managing a research center explicitly focused on industry needs is based on five success factors enabling research results (need orientation, industry goal alignment, deployment impact, industry benefit, and innovativeness), five success factors enabling research activities (management engagement, network access, collaborator match, communication ability, and continuity), and 10 action principles for industry-academia collaboration management.},
 author = {Sandberg, Anna and Pareto, Lars and Arts, Thomas},
 doi = {10.1109/MS.2011.49},
 issn = {1937-4194},
 journal = {IEEE Software},
 keywords = {},
 month = {July},
 number = {4},
 pages = {74-83},
 title = {Agile Collaborative Research: Action Principles for Industry-Academia Collaboration},
 volume = {28},
 year = {2011}
}

@inproceedings{6200202,
 abstract = {Industry - academia collaboration is critical for empirical research to exist. However, there are many obstacles in the collaboration process. This paper reports on the experiences gained by the author, in a 2-year collaboration project on software testing which involved on-site work by the researcher in the industry premises. Based on notes, minutes of meetings, and progress reports, the project history is outlined. The project is analyzed, using collaboration models as a frame of reference. We conclude that there must be a balance between company 'pull' and academia 'push' in the collaboration Management support is inevitably a key factor to success, while other factors like cross-cultural skills and interfaces towards key resources also contribute.},
 author = {Runeson, Per},
 booktitle = {2012 IEEE Fifth International Conference on Software Testing, Verification and Validation},
 doi = {10.1109/ICST.2012.190},
 issn = {2159-4848},
 keywords = {},
 month = {April},
 number = {},
 pages = {872-877},
 title = {It Takes Two to Tango -- An Experience Report on Industry -- Academia Collaboration},
 volume = {},
 year = {2012}
}

@inproceedings{6618469,
 abstract = {Software engineering research can be done in many ways, in particular it can be done in different ways when it comes to working with industry. This paper presents a list of top 10 challenges to work with industry based on our experience from working with industry in a very close collaboration with continuous exchange of knowledge and information. The top 10 list is based on a large number of research projects and empirical studies conducted with industrial research partners since 1983. It is concluded that close collaboration is a long-term undertaking and a large investment. The importance of addressing the top 10 challenges is stressed, since they form the basis for a long-term sustainable and successful collaboration between industry and academia.},
 author = {Wohlin, Claes},
 booktitle = {2013 1st International Workshop on Conducting Empirical Studies in Industry (CESI)},
 doi = {10.1109/CESI.2013.6618469},
 issn = {},
 keywords = {},
 month = {May},
 number = {},
 pages = {43-46},
 title = {Empirical software engineering research with industry: Top 10 challenges},
 volume = {},
 year = {2013}
}

@inproceedings{6823890,
 abstract = {Background: Test managers have to repeatedly select test cases for test activities during evolution of large software systems. Researchers have widely studied automated test scoping, but have not fully investigated decision support with human interaction. We previously proposed the introduction of visual analytics for this purpose. Aim: In this empirical study we investigate how to design such decision support. Method: We explored the use of visual analytics using heat maps of historical test data for test scoping support by letting test managers evaluate prototype visualizations in three focus groups with in total nine industrial test experts. Results: All test managers in the study found the visual analytics useful for supporting test planning. However, our results show that different tasks and contexts require different types of visualizations. Conclusion: Important properties for test planning support are: ability to overview testing from different perspectives, ability to filter and zoom to compare subsets of the testing with respect to various attributes and the ability to manipulate the subset under analysis by selecting and deselecting test cases. Our results may be used to support the introduction of visual test analytics in practice.},
 author = {Engström, Emelie and Mantylä, Mika and Runeson, Per and Borg, Markus},
 booktitle = {2014 IEEE Seventh International Conference on Software Testing, Verification and Validation},
 doi = {10.1109/ICST.2014.41},
 issn = {2159-4848},
 keywords = {},
 month = {March},
 number = {},
 pages = {283-292},
 title = {Supporting Regression Test Scoping with Visual Analytics},
 volume = {},
 year = {2014}
}

@article{Engstr_m_2010,
 abstract = {Regression testing is verifying that previously functioning software remains after a change. With the goal of finding a basis for further research in a joint industry-academia research project, we conducted a systematic review of empirical evaluations of regression test selection techniques. We identified 27 papers reporting 36 empirical studies, 21 experiments and 15 case studies. In total 28 techniques for regression test selection are evaluated. We present a qualitative analysis of the findings, an overview of techniques for regression test selection and related empirical evidence. No technique was found clearly superior since the results depend on many varying factors. We identified a need for empirical studies where concepts are evaluated rather than small variations in technical implementations.},
 author = {Emelie Engström and Per Runeson and Mats Skoglund},
 doi = {10.1016/j.infsof.2009.07.001},
 journal = {Information and Software Technology},
 month = {jan},
 number = {1},
 pages = {14--30},
 publisher = {Elsevier {BV}},
 title = {A systematic review on regression test selection techniques},
 url = {https://doi.org/10.1016%2Fj.infsof.2009.07.001},
 volume = {52},
 year = {2010}
}

@incollection{Pedersen_Notander_2013,
 abstract = {Context. Development of safety-critical systems is mostly governed by process-heavy paradigms, while increasing demands on flexibility and agility also reach this domain. Objectives. We wanted to explore in more detail the industrial needs and challenges when facing this trend. Method. We launched a qualitative survey, interviewing engineers from four companies in four different industry domains. Results. The survey identifies human factors (skills, experience, and attitudes) being key in safety-critical systems development, as well as good documentation. Certification cost is related to change frequency, which is limiting flexibility. Component reuse and iterative processes were found to increase adaptability to changing customer needs. Conclusions. We conclude that agile development and flexibility may co-exist with safety-critical software development, although there are specific challenges to address.},
 author = {Jesper Pedersen Notander and Martin Höst and Per Runeson},
 booktitle = {Product-Focused Software Process Improvement},
 doi = {10.1007/978-3-642-39259-7_23},
 pages = {283--297},
 publisher = {Springer Berlin Heidelberg},
 title = {Challenges in Flexible Safety-Critical Software Development {\textendash} An Industrial Qualitative Survey},
 url = {https://doi.org/10.1007%2F978-3-642-39259-7_23},
 year = {2013}
}

@article{5210118,
 abstract = {Metaheuristic search techniques have been extensively used to automate the process of generating test cases, and thus providing solutions for a more cost-effective testing process. This approach to test automation, often coined “Search-based Software Testing” (SBST), has been used for a wide variety of test case generation purposes. Since SBST techniques are heuristic by nature, they must be empirically investigated in terms of how costly and effective they are at reaching their test objectives and whether they scale up to realistic development artifacts. However, approaches to empirically study SBST techniques have shown wide variation in the literature. This paper presents the results of a systematic, comprehensive review that aims at characterizing how empirical studies have been designed to investigate SBST cost-effectiveness and what empirical evidence is available in the literature regarding SBST cost-effectiveness and scalability. We also provide a framework that drives the data collection process of this systematic review and can be the starting point of guidelines on how SBST techniques can be empirically assessed. The intent is to aid future researchers doing empirical studies in SBST by providing an unbiased view of the body of empirical evidence and by guiding them in performing well-designed and executed empirical studies.},
 author = {Ali, Shaukat and Briand, Lionel C. and Hemmati, Hadi and Panesar-Walawege, Rajwinder Kaur},
 doi = {10.1109/TSE.2009.52},
 issn = {1939-3520},
 journal = {IEEE Transactions on Software Engineering},
 keywords = {},
 month = {Nov},
 number = {6},
 pages = {742-762},
 title = {A Systematic Review of the Application and Empirical Investigation of Search-Based Test Case Generation},
 volume = {36},
 year = {2010}
}

@inproceedings{6571626,
 abstract = {A method for model-based test generation of safety-critical embedded applications using Programmable Logic Controllers and implemented in a programming language such as Function Block Diagram (FBD) is described. The FBD component model is based on the IEC 1131 standard and it is used primarily for embedded systems, in which timeliness is an important property to be tested. Our method involves the transformation of FBD programs with timed annotations into timed automata models which are used to automatically generate test suites. Specifically we demonstrate how to use model transformation for formalization and model-checking of FBD programs using the UPPAAL tool. Many benefits emerge from this method, including the ability to automatically generate test suites from a formal model in order to ensure compliance to strict quality requirements including unit testing and specific coverage measurements. The approach is experimentally assessed on a train control system in terms of consumed resources.},
 author = {Enoiu, Eduard Paul and Sundmark, Daniel and Pettersson, Paul},
 booktitle = {2013 IEEE Sixth International Conference on Software Testing, Verification and Validation Workshops},
 doi = {10.1109/ICSTW.2013.27},
 issn = {},
 keywords = {},
 month = {March},
 number = {},
 pages = {158-167},
 title = {Model-Based Test Suite Generation for Function Block Diagrams Using the UPPAAL Model Checker},
 volume = {},
 year = {2013}
}

@inproceedings{6605711,
 abstract = {In this paper we present a new testing tool for safety critical applications described in Function Block Diagram (FBD) language aimed to support both a model and a search-based approach. Many benefits emerge from this tool, including the ability to automatically generate test suites from an FBD program in order to comply to quality requirements such as component testing and specific coverage measurements. Search-based testing methods are used to generate test data based on executable code rather than the FBD program, alleviating any problems that may arise from the ambiguities that occur while creating FBD programs. Test cases generated by both approaches are executed and used as a way of cross validation. In the current work, we describe the architecture of the tool, its workflow process, and a case study in which the tool has been applied in a real industrial setting to test a train control management system.},
 author = {Enoiu, Eduard Paul and Doganay, Kivanc and Bohlin, Markus and Sundmark, Daniel and Pettersson, Paul},
 booktitle = {2013 1st International Workshop on Combining Modelling and Search-Based Software Engineering (CMSBSE)},
 doi = {10.1109/CMSBSE.2013.6605711},
 issn = {},
 keywords = {},
 month = {May},
 number = {},
 pages = {55-60},
 title = {MOS: An integrated model-based and search-based testing tool for Function Block Diagrams},
 volume = {},
 year = {2013}
}

@inproceedings{6618476,
 abstract = {Research collaborations must be set up for a win-win relationship, avoiding many hurdles along the way. In this short paper the goal is to identify some considerations when conducting empirical studies in industry. These considerations deal with problem solution approaches, communication focus, unpleasant results, mismatching interpretations and scope, business aspects and some evaluation criteria for a successful collaboration.},
 author = {Eldh, Sigrid},
 booktitle = {2013 1st International Workshop on Conducting Empirical Studies in Industry (CESI)},
 doi = {10.1109/CESI.2013.6618476},
 issn = {},
 keywords = {},
 month = {May},
 number = {},
 pages = {69-70},
 title = {Some researcher considerations when conducting empirical studies in industry},
 volume = {},
 year = {2013}
}

@article{Czarnitzki_2011,
 abstract = {},
 author = {Dirk Czarnitzki and Christoph Grimpe and Andrew A. Toole},
 doi = {10.2139/ssrn.1786378},
 journal = {{SSRN} Electronic Journal},
 publisher = {Elsevier {BV}},
 title = {Delay and Secrecy: Does Industry Sponsorship Jeopardize Disclosure of Academic Research?},
 url = {https://doi.org/10.2139%2Fssrn.1786378},
 year = {2011}
}

@article{Dooley_2007,
 abstract = {},
 author = {Lawrence Dooley and David Kirk},
 doi = {10.1108/14601060710776734},
 editor = {Mar{\'{\i}}a Paz Salmador},
 journal = {European Journal of Innovation Management},
 month = {aug},
 number = {3},
 pages = {316--332},
 publisher = {Emerald},
 title = {University-industry collaboration},
 url = {https://doi.org/10.1108%2F14601060710776734},
 volume = {10},
 year = {2007}
}

@incollection{Enoiu_2013,
 abstract = {In model-driven development, testers are often focusing on functional model-level testing, enabling verification of design models against their specifications. In addition, in safety-critical software development, testers are required to show that tests cover the structure of the implementation. Testing cost and time savings could be achieved if the process of deriving test cases for logic coverage is automated and provided test cases are ready to be executed. The logic coverage artifacts, i.e., predicates and clauses, are required for different logic coverage, e.g., MC/DC. One way of dealing with test case generation for ensuring logic coverage is to approach it as a model-checking problem, such that model-checking tools automatically create test cases. We show how logic coverage criteria can be formalized and used by a model-checker to provide test cases for ensuring this coverage on safety-critical software described in the Function Block Diagram programming language. Based on our experiments, this approach, supported by a tool chain, is an applicable and useful way of generating test cases for covering Function Block Diagrams.},
 author = {Eduard Paul Enoiu and Daniel Sundmark and Paul Pettersson},
 booktitle = {Testing Software and Systems},
 doi = {10.1007/978-3-642-41707-8_1},
 pages = {1--16},
 publisher = {Springer Berlin Heidelberg},
 title = {Using Logic Coverage to Improve Testing Function Block Diagrams},
 url = {https://doi.org/10.1007%2F978-3-642-41707-8_1},
 year = {2013}
}

@article{Lee_1996,
 abstract = {This article examines the emerging ‘technology transfer’ role US academics are expected to play in economic development, what specific roles they believe they can play in industrial innovations, and how they might go about collaborating with private industry. Based on a national survey response of approximately 1000 faculty members at research-intensive universities it concludes that US academics in the 1990s believe that they are more favorably disposed than in the 1980s toward closer university-industry collaboration. A majority of the respondents supports the idea that their universities participate actively in local and regional economic development, facilitate commercialization of academic research, and encourage faculty consulting for private firms. A majority of these respondents, however, refuses to support the idea of their universities getting involved in close business partnership with private industry by way of, for example, start-up assistance or equity investment. Of various organizational and motivational underpinnings analyzed from the data, two factors stand out as central to the current debate on university transfer: one is the perception of declining federal R&D support, which threatens the vitality of their research enterprise, and the other is the impact of close university-industry cooperation, which is likely to interfere with academic freedom — the freedom to pursue long-term, disinterested, fundamental research. A search for the boundaries of university-industry collaboration is, therefore, seen as a balancing act between these two competing concerns.},
 author = {Yong S. Lee},
 doi = {10.1016/0048-7333(95)00857-8},
 journal = {Research Policy},
 month = {sep},
 number = {6},
 pages = {843--863},
 publisher = {Elsevier {BV}},
 title = {`Technology transfer' and the research university: a search for the boundaries of university-industry collaboration},
 url = {https://doi.org/10.1016%2F0048-7333%2895%2900857-8},
 volume = {25},
 year = {1996}
}

@article{Lee_2000,
 abstract = {The concept of university-industry collaboration is an important social experiment in the nation's innovation system. This study examines the sustainability of this collaborative experience by focusing on the actual "give-and-take" outcomes between university faculty members and industrial firms. Based on two separate but similar surveys conducted in 1997, one for faculty members and another for industry technology managers, the study reports that participants in research collaboration appear to realize significant benefits, some expected and others unexpected. The most significant benefit realized by firms is an increased access to new university research and discoveries, and the most significant benefits by faculty members is complementing their own academic research by securing funds for graduate students and lab equipment, and by seeking insights into their own research. Reflecting on their collaborative experience, an overwhelming majority of these participants say that in the future they would expand or at least sustain the present level of collaboration. Copyright 2000 by Kluwer Academic Publishers},
 author = {Yong S. Lee},
 doi = {10.1023/a:1007895322042},
 journal = {The Journal of Technology Transfer},
 number = {2},
 pages = {111--133},
 publisher = {Springer Science and Business Media {LLC}},
 url = {https://doi.org/10.1023%2Fa%3A1007895322042},
 volume = {25},
 year = {2000}
}

@article{Perkmann_2007,
 abstract = {This article was published in the journal, International Journal of Management Reviews [© Blackwell Publishing] and the definitive version is available at http://www.blackwell-synergy.com/loi/ijmr Organisations increasingly rely on external sources of innovation via interorganisational network relationships. This article explores the diffusion and characteristics of collaborative relationships between universities and industry, and develops a research agenda informed by an ‘open innovation’ perspective. A framework is proposed, distinguishing university-industry relationships from other mechanisms such as technology transfer or human mobility. On the basis of the existing body of research, the role of practices such as collaborative research, university-industry research centres, contract research and academic consulting is analysed. The evidence suggests that such university-industry relationships are widely practiced whereby differences exist across industries and scientific disciplines. While most existing research focuses on the effects of university-industry links on innovation-specific variables, such as patents or firm innovativeness, the organisational dynamics of these relationships remain under-researched. A detailed research agenda addresses research needs in two main areas: search and match processes between universities and firms, and the organisation and management of collaborative relationships.},
 author = {Markus Perkmann and Kathryn Walsh},
 doi = {10.1111/j.1468-2370.2007.00225.x},
 journal = {International Journal of Management Reviews},
 month = {dec},
 number = {4},
 pages = {259--280},
 publisher = {Wiley},
 title = {University{\textendash}industry relationships and open innovation: Towards a research agenda},
 url = {https://doi.org/10.1111%2Fj.1468-2370.2007.00225.x},
 volume = {9},
 year = {2007}
}

@article{Perkmann_2008,
 abstract = {We present a conceptual framework of academic consulting and explore its impacts on universities and the benefits to innovating firms. We distinguish between three types of academic consulting: opportunity-driven, commercialization-driven and research-driven. Exploring the implications of these different types, first, we postulate that consulting has limited impact on biasing academic research towards more 'applied' themes. Secondly, while we expect research-driven consulting activities to be positively associated with research productivity, opportunity-driven consulting will have a negative impact. Thirdly, we differentiate between different functions of academic consulting for different types of firms.},
 author = {Markus Perkmann and Kathryn Walsh},
 doi = {10.1016/j.respol.2008.07.009},
 journal = {Research Policy},
 month = {dec},
 number = {10},
 pages = {1884--1891},
 publisher = {Elsevier {BV}},
 title = {Engaging the scholar: Three types of academic consulting and their impact on universities and industry},
 url = {https://doi.org/10.1016%2Fj.respol.2008.07.009},
 volume = {37},
 year = {2008}
}

@article{Wong_2008,
 abstract = {This paper presents the findings of a five-year study of the top scholars and institutions in the systems and software engineering field, as measured by the quantity of papers published in the journals of the field in 2001–2005. The top scholar is Magne Jørgensen of Simula Research Laboratory, Norway, and the top institution is Korea Advanced Institute of Science and Technology, Korea.This paper is part of an ongoing study, conducted annually, that identifies the top 15 scholars and institutions in the most recent five-year period.},
 author = {W. Eric Wong and T.H. Tse and Robert L. Glass and Victor R. Basili and T.Y. Chen},
 doi = {10.1016/j.jss.2007.09.018},
 journal = {Journal of Systems and Software},
 month = {jun},
 number = {6},
 pages = {1059--1062},
 publisher = {Elsevier {BV}},
 title = {An assessment of systems and software engineering scholars and institutions (2001{\textendash}2005)},
 url = {https://doi.org/10.1016%2Fj.jss.2007.09.018},
 volume = {81},
 year = {2008}
}

@inproceedings{493439,
 abstract = {Software engineering needs to follow the model of other physical sciences and develop an experimental paradigm for the field. This paper proposes the approach towards developing an experimental component of such a paradigm. The approach is based upon a quality improvement paradigm that addresses the role of experimentation and process improvement in the content of industrial development. The paper outlines a classification scheme for characterizing such experiments.},
 author = {Basili, V.R.},
 booktitle = {Proceedings of IEEE 18th International Conference on Software Engineering},
 doi = {10.1109/ICSE.1996.493439},
 issn = {0270-5257},
 keywords = {},
 month = {March},
 number = {},
 pages = {442-449},
 title = {The role of experimentation in software engineering: past, current, and future},
 volume = {},
 year = {1996}
}

@article{5963631,
 abstract = {Collaboration between industry and academia supports improvement and innovation in industry and helps to ensure industrial relevance in academic research. This article presents an exploratory study of the factors for successful collaboration between industry and academia in software research.},
 author = {Wohlin, Claes and Aurum, Aybuke and Angelis, Lefteris and Phillips, Laura and Dittrich, Yvonne and Gorschek, Tony and Grahn, Hakan and Henningsson, Kennet and Kagstrom, Simon and Low, Graham and Rovegard, Per and Tomaszewski, Piotr and van Toorn, Christine and Winter, Jeff},
 doi = {10.1109/MS.2011.92},
 issn = {1937-4194},
 journal = {IEEE Software},
 keywords = {},
 month = {March},
 number = {2},
 pages = {67-73},
 title = {The Success Factors Powering Industry-Academia Collaboration},
 volume = {29},
 year = {2012}
}

@inproceedings{6618466,
 abstract = {We conducted several empirical studies over the last couple of years as part of a collaboration with industrial partners in the area of software product lines. Our studies differed regarding their motivation and goals, their scope, the research methods applied, and the involved subjects. In this experience paper we briefly summarize the studies and their key characteristics. We reflect on our experiences based on the success factors for industry-academia collaborations by Wohlin et al. We discuss the role of empirical studies in long-term industry-academia collaborations and present lessons learned.},
 author = {Grünbacher, Paul and Rabiser, Rick},
 booktitle = {2013 1st International Workshop on Conducting Empirical Studies in Industry (CESI)},
 doi = {10.1109/CESI.2013.6618466},
 issn = {},
 keywords = {},
 month = {May},
 number = {},
 pages = {27-32},
 title = {Success factors for empirical studies in industry-academia collaboration: A reflection},
 volume = {},
 year = {2013}
}

@article{Barnes_2002,
 abstract = {There is a growing world-wide trend toward greater collaboration between academia and industry, an activity encouraged by governments as a means of enhancing national competitiveness and wealth creation. Warwick Manufacturing Group (WMG) is well known for its extensive links with industry, and provided an excellent opportunity for a study of management practice within university–industry collaborative research projects. This paper evaluates the findings of six collaborative research projects. The objective was to identify factors which, if managed correctly, increase the probability of a collaboration being perceived as successful by both academic and industrial partners. The outcome was a good practice model for successful university–industry research collaborations.},
 author = {Tina Barnes and Ian Pashby and Anne Gibbons},
 doi = {10.1016/s0263-2373(02)00044-0},
 journal = {European Management Journal},
 month = {jun},
 number = {3},
 pages = {272--285},
 publisher = {Elsevier {BV}},
 title = {Effective University {\textendash} Industry Interaction:},
 url = {https://doi.org/10.1016%2Fs0263-2373%2802%2900044-0},
 volume = {20},
 year = {2002}
}

@book{Darwin_1860,
 abstract = {},
 author = {Charles Darwin},
 doi = {10.1037/14088-000},
 publisher = {John Murray},
 title = {On the origin of species by means of natural selection: Or the preservation of the favoured races in the struggle for life.},
 url = {https://doi.org/10.1037%2F14088-000},
 year = {1860}
}

@book{Darwin_1904,
 abstract = {},
 author = {Charles Darwin},
 doi = {10.5962/bhl.title.51879},
 publisher = {[s.n.]},
 title = {The origin of species by means of natural selecti : or, The preservation of favored races in the struggle for life /},
 url = {https://doi.org/10.5962%2Fbhl.title.51879},
 year = {1904}
}

@article{Gaspar_1998,
 abstract = {Will improvements in information technology eliminate face-to-face interactions and make cities obsolete? In this paper, we present a model where people make contacts and choose a mode of interaction: meeting face-to-face or communicating electronically. Cities are a means of reducing the fixed travel costs involved in face-to-face interactions. When telecommunications technology improves, there will be two opposing effects on cities and face-to-face interactions. First, some relationships that would have been face-to-face will be conducted electronically. Second, the increase in frequency of contact between individuals caused by improvements in telecommunications technology may result in more face-to-face interactions. If the second effect dominates, telecommunications improvements will complement both face-to-face interactions and cities. Our empirical work suggests that telecommunications may be a complement to, or at least not a strong substitute for, cities and face-to-face interactions.},
 author = {Jess Gaspar and Edward L. Glaeser},
 doi = {10.1006/juec.1996.2031},
 journal = {Journal of Urban Economics},
 month = {jan},
 number = {1},
 pages = {136--156},
 publisher = {Elsevier {BV}},
 title = {Information Technology and the Future of Cities},
 url = {https://doi.org/10.1006%2Fjuec.1996.2031},
 volume = {43},
 year = {1998}
}

@article{Runeson_2008,
 abstract = {Abstract,Case study is a suitable research methodology,for software engineering,research since it studies contemporary phenomena in its natural context. However, the understanding of what constitutes a case study varies, and hence the quality of the resulting studies. This paper aims,at providing,an introduction to case study methodology,and,guidelines for researchers,conducting,case studies and,readers studying,reports of such,studies. The content is based on the authors’ own,experience from conducting,and reading case studies. The terminology,and,guidelines are compiled,from,different methodology,handbooks,in other research domains, in particular social science and information systems, and adapted to the needs,in software,engineering. We,present,recommended,practices for software engineering,case studies as well,as empirically,derived,and,evaluated,checklists for researchers and readers of case study research. Keywords,Casestudy.Research methodology.Checklists .Guidelines},
 author = {Per Runeson and Martin Höst},
 doi = {10.1007/s10664-008-9102-8},
 journal = {Empirical Software Engineering},
 month = {dec},
 number = {2},
 pages = {131--164},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Guidelines for conducting and reporting case study research in software engineering},
 url = {https://doi.org/10.1007%2Fs10664-008-9102-8},
 volume = {14},
 year = {2008}
}

@article{Shaw_2002,
 abstract = {Physics, biology, and medicine have well-refined public explanations of their research processes. Even in simplified form, these provide guidance about what counts as "good research" both inside and outside the field. Soft- ware engineering has not yet explicitly identified and explained either our re- search processes or the ways we recognize excellent work. Science and engineering research fields can be characterized in terms of the kinds of questions they find worth investigating, the research methods they adopt, and the criteria by which they evaluate their results. I will present such a characterization for software engineering, showing the diversity of research strategies and the way they shift as ideas mature. Understanding these strategies should help software engineers design research plans and report the results clearly; it should also help explain the character of software engineering re- search to computer science at large and to other scientists.},
 author = {Mary Shaw},
 doi = {10.1007/s10009-002-0083-4},
 journal = {International Journal on Software Tools for Technology Transfer},
 month = {oct},
 number = {1},
 pages = {1--7},
 publisher = {Springer Science and Business Media {LLC}},
 url = {https://doi.org/10.1007%2Fs10009-002-0083-4},
 volume = {4},
 year = {2002}
}

@inproceedings{1191351,
 abstract = {This paper discusses a role for industry in software engineering education, specifically presenting a university-industry partnership between the Cardiac Rhythm Management (CRM) organization at the Guidant Corporation and Embry-Riddle Aeronautical University (ERAU). The focus of the partnership is technology transition. The partnership involves fostering students' professional development, providing students experience solving realworld problems, and exploring modern directions of software engineering. The critical component of the partnership is a student-oriented research laboratory. After discussing the background and history of the project, we focus on the partnership's accomplishments. These include facilitating the transition of graduates from student to employee by developing in them extended software engineering skills and in-depth understanding of the application domain.},
 author = {Kornecki, A.J. and Khajenoori, S. and Gluch, D. and Kameli, N.},
 booktitle = {Proceedings 16th Conference on Software Engineering Education and Training, 2003. (CSEE&T 2003).},
 doi = {10.1109/CSEE.2003.1191351},
 issn = {1093-0175},
 keywords = {},
 month = {March},
 number = {},
 pages = {60-69},
 title = {On a partnership between software industry and academia},
 volume = {},
 year = {2003}
}

@article{4012630,
 abstract = {Successful technology transfer requires close cooperation and collaboration between researchers and practitioners. Researchers need to observe the challenges facing industry firsthand and tailor their work accordingly. Practitioners can help shape technology development on the basis of tangible issues identified on site. This article presents a seven-step technology transfer model that reflects collaborations between university researchers and practitioners at two Swedish companies. The authors discuss key lessons learned for each of these seven steps.},
 author = {Gorschek, Tony and Garre, Per and Larsson, Stig and Wohlin, Claes},
 doi = {10.1109/MS.2006.147},
 issn = {1937-4194},
 journal = {IEEE Software},
 keywords = {},
 month = {Nov},
 number = {6},
 pages = {88-95},
 title = {A Model for Technology Transfer in Practice},
 volume = {23},
 year = {2006}
}

@article{5963631,
 abstract = {Collaboration between industry and academia supports improvement and innovation in industry and helps to ensure industrial relevance in academic research. This article presents an exploratory study of the factors for successful collaboration between industry and academia in software research.},
 author = {Wohlin, Claes and Aurum, Aybuke and Angelis, Lefteris and Phillips, Laura and Dittrich, Yvonne and Gorschek, Tony and Grahn, Hakan and Henningsson, Kennet and Kagstrom, Simon and Low, Graham and Rovegard, Per and Tomaszewski, Piotr and van Toorn, Christine and Winter, Jeff},
 doi = {10.1109/MS.2011.92},
 issn = {1937-4194},
 journal = {IEEE Software},
 keywords = {},
 month = {March},
 number = {2},
 pages = {67-73},
 title = {The Success Factors Powering Industry-Academia Collaboration},
 volume = {29},
 year = {2012}
}

@article{5963631,
 abstract = {Collaboration between industry and academia supports improvement and innovation in industry and helps to ensure industrial relevance in academic research. This article presents an exploratory study of the factors for successful collaboration between industry and academia in software research.},
 author = {Wohlin, Claes and Aurum, Aybuke and Angelis, Lefteris and Phillips, Laura and Dittrich, Yvonne and Gorschek, Tony and Grahn, Hakan and Henningsson, Kennet and Kagstrom, Simon and Low, Graham and Rovegard, Per and Tomaszewski, Piotr and van Toorn, Christine and Winter, Jeff},
 doi = {10.1109/MS.2011.92},
 issn = {1937-4194},
 journal = {IEEE Software},
 keywords = {},
 month = {March},
 number = {2},
 pages = {67-73},
 title = {The Success Factors Powering Industry-Academia Collaboration},
 volume = {29},
 year = {2012}
}

@inproceedings{6200202,
 abstract = {Industry - academia collaboration is critical for empirical research to exist. However, there are many obstacles in the collaboration process. This paper reports on the experiences gained by the author, in a 2-year collaboration project on software testing which involved on-site work by the researcher in the industry premises. Based on notes, minutes of meetings, and progress reports, the project history is outlined. The project is analyzed, using collaboration models as a frame of reference. We conclude that there must be a balance between company 'pull' and academia 'push' in the collaboration Management support is inevitably a key factor to success, while other factors like cross-cultural skills and interfaces towards key resources also contribute.},
 author = {Runeson, Per},
 booktitle = {2012 IEEE Fifth International Conference on Software Testing, Verification and Validation},
 doi = {10.1109/ICST.2012.190},
 issn = {2159-4848},
 keywords = {},
 month = {April},
 number = {},
 pages = {872-877},
 title = {It Takes Two to Tango -- An Experience Report on Industry -- Academia Collaboration},
 volume = {},
 year = {2012}
}

@article{636668,
 abstract = {When it comes to software engineering education, there is a gap between what industry needs and what universities offer. To close this gap, the authors propose a comprehensive collaboration between academic software engineering programs and industry. They offer a model for this collaboration and highlight three real-world ventures.},
 author = {Beckman, K. and Coulter, N. and Khajenoori, S. and Mead, N.R.},
 doi = {10.1109/52.636668},
 issn = {1937-4194},
 journal = {IEEE Software},
 keywords = {},
 month = {Nov},
 number = {6},
 pages = {49-57},
 title = {Collaborations: closing the industry-academia gap},
 volume = {14},
 year = {1997}
}

@inproceedings{755175,
 abstract = {This paper presents a collection of experience related to success factors in graduate and postgraduate education. The experiences are mainly concerned with how to make the education relevant from an industrial viewpoint. This is emphasized as a key issue in software engineering education and research, since the main objective is to give the students a good basis for large-scale software development in an industrial environment. The presentation is divided into experiences at the graduate and postgraduate levels respectively. For each level a number of strategies to achieve industrial relevance are presented. These strategies have been successful, but it is concluded that more can be done regarding industrial collaboration in the planning and conduction of experiments and case studies. Another interesting strategy for the future is a special postgraduate programme for people employed in industry.},
 author = {Wohlin, C. and Regnell, B.},
 booktitle = {Proceedings 12th Conference on Software Engineering Education and Training (Cat. No.PR00131)},
 doi = {10.1109/CSEE.1999.755175},
 issn = {1093-0175},
 keywords = {},
 month = {March},
 number = {},
 pages = {16-25},
 title = {Achieving industrial relevance in software engineering education},
 volume = {},
 year = {1999}
}

@article{841782,
 abstract = {A recognized engineering profession must have an established body of knowledge and skill that its practitioners understand and use consistently. After 30 years, there is still a wide gap between the best and the typical software engineering practices. To close this gap, we need a deeper partnership among industry, academia, and professional societies. We have spent some time considering the reasons for SE's immaturity. All of us are heavily involved in both industry and academia and have been active in professional societies that aim to promote SE as a profession. Promotion efforts are by no means limited to the US, but because our experience is primarily with US activities, that is our focus in this article. Our main goal is to explore, from a multifaceted perspective, why we are where we are now and how we can move forward.},
 author = {Pour, G. and Griss, M.L. and Lutz, M.},
 doi = {10.1109/2.841782},
 issn = {1558-0814},
 journal = {Computer},
 keywords = {},
 month = {May},
 number = {5},
 pages = {35-43},
 title = {The push to make software engineering respectable},
 volume = {33},
 year = {2000}
}

@inproceedings{Basili_2002,
 abstract = {For 25 years the NASA/GSFC Software Engineering Laboratory (SEL) has been a major resource in software process improvement activities. But due to a changing climate at NASA, agency reorganization, and budget cuts, the SEL has lost much of its impact. In this paper we describe the history of the SEL and give some lessons learned on what we did right, what we did wrong, and what others can learn from our experiences. We briefly describe the research that was conducted by the SEL, describe how we evolved our understanding of software process improvement, and provide a set of lessons learned and hypotheses that should enable future groups to learn from and improve on our quarter century of experiences.},
 author = {Victor R. Basili and Frank E. McGarry and Rose Pajerski and Marvin V. Zelkowitz},
 booktitle = {Proceedings of the 24th international conference on Software engineering  - {ICSE} {\textquotesingle}02},
 doi = {10.1145/581339.581351},
 publisher = {{ACM} Press},
 title = {Lessons learned from 25 years of process improvement},
 url = {https://doi.org/10.1145%2F581339.581351},
 year = {2002}
}

@article{Gorschek_2005,
 abstract = {Software requirements arrive in different shapes and forms to development organizations. This is particularly the case in
market-driven requirements engineering, where the requirements are on products rather than directed towards projects. This
results in challenges related to making different requirements comparable. In particular, this situation was identified in
a collaborative effort between academia and industry. A model, with four abstraction levels, was developed as a response to
the industrial need. The model allows for placement of requirements on different levels and supports abstraction or break
down of requirements to make them comparable to each other. The model was successfully validated in several steps at a company.
The results from the industrial validation point to the usefulness of the model. The model will allow companies to ensure
comparability between requirements, and hence it generates important input to activities such as prioritization and packaging
of requirements before launching a development project.},
 author = {Tony Gorschek and Claes Wohlin},
 doi = {10.1007/s00766-005-0020-7},
 journal = {Requirements Engineering},
 month = {nov},
 number = {1},
 pages = {79--101},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Requirements Abstraction Model},
 url = {https://doi.org/10.1007%2Fs00766-005-0020-7},
 volume = {11},
 year = {2005}
}

@article{Gorschek_2007,
 abstract = {Software requirements are often formulated on different levels and hence they are difficult to compare to each other. To address
this issue, a model that allows for placing requirements on different levels has been developed. The model supports both abstraction
and refinement of requirements, and hence requirements can both be compared with each other and to product strategies. Comparison
between requirements will allow for prioritization of requirements, which in many cases is impossible if the requirements
are described on different abstraction levels. Comparison to product strategies will enable early and systematic acceptance
or dismissal of requirements, minimizing the risk for overloading. This paper presents an industrial evaluation of the model.
It has been evaluated in two different companies, and the experiences and findings are presented. It is concluded that the
requirements abstraction model provides helpful improvements to the industrial requirements engineering process.},
 author = {Tony Gorschek and Per Garre and Stig B. M. Larsson and Claes Wohlin},
 doi = {10.1007/s00766-007-0047-z},
 journal = {Requirements Engineering},
 month = {may},
 number = {3},
 pages = {163--190},
 publisher = {Springer Science and Business Media {LLC}},
 title = {Industry evaluation of the Requirements Abstraction Model},
 url = {https://doi.org/10.1007%2Fs00766-007-0047-z},
 volume = {12},
 year = {2007}
}

@article{Hevner_2004,
 abstract = {Two paradigms characterize much of the research in the Information Systems discipline: behavioral science and design science. The behavioral-science paradigm seeks to develop and verify theories that explain or predict human or organizational behavior. The design-science paradigm seeks to extend the boundaries of human and organizational capabilities by creating new and innovative artifacts. Both paradigms are foundational to the IS discipline, positioned as it is at the confluence of people, organizations, and technology. Our objective is to describe the performance of design-science research in Information Systems via a concise conceptual framework and clear guidelines for understanding, executing, and evaluating the research. In the design-science paradigm, knowledge and understanding of a problem domain and its solution are achieved in the building and application of the designed artifact. Three recent exemplars in the research literature are used to demonstrate the application of these guidelines. We conclude with an analysis of the challenges of performing high-quality design-science research in the context of the broader IS community.},
 author = {Hevner and  March and  Park and  Ram},
 doi = {10.2307/25148625},
 journal = {{MIS} Quarterly},
 number = {1},
 pages = {75},
 publisher = {{JSTOR}},
 title = {Design Science in Information Systems Research},
 url = {https://doi.org/10.2307%2F25148625},
 volume = {28},
 year = {2004}
}

@article{Staron_2006,
 abstract = {Stereotypes were introduced into the Unified Modeling Language to provide means of customizing this general purpose modeling language for its usage in specific application domains. The primary role of stereotypes is to brand an existing model element with specific semantics, but stereotypes can also be used to provide means of a secondary classification of modeling elements. This paper elaborates on the influence of stereotypes on the comprehension of models. The paper describes a set of controlled experiments performed in academia and industry which were aimed at evaluating the role of stereotypes in improving comprehension of UML models. The results of the experiments show that stereotypes play a significant role in the comprehension of models and the improvement achieved both by students and industry professionals.},
 author = {Miroslaw Staron and Ludwik Kuzniarz and Claes Wohlin},
 doi = {10.1016/j.jss.2005.09.014},
 journal = {Journal of Systems and Software},
 month = {may},
 number = {5},
 pages = {727--742},
 publisher = {Elsevier {BV}},
 title = {Empirical assessment of using stereotypes to improve comprehension of {UML} models: A set of experiments},
 url = {https://doi.org/10.1016%2Fj.jss.2005.09.014},
 volume = {79},
 year = {2006}
}

@inproceedings{Votta_1995,
 abstract = {},
 author = {Lawrence G. Votta and Adam Porter},
 booktitle = {Proceedings of the 17th international conference on Software engineering  - {ICSE} {\textquotesingle}95},
 doi = {10.1145/225014.225040},
 publisher = {{ACM} Press},
 title = {Experimental software engineering},
 url = {https://doi.org/10.1145%2F225014.225040},
 year = {1995}
}

@article{4012630,
 abstract = {Successful technology transfer requires close cooperation and collaboration between researchers and practitioners. Researchers need to observe the challenges facing industry firsthand and tailor their work accordingly. Practitioners can help shape technology development on the basis of tangible issues identified on site. This article presents a seven-step technology transfer model that reflects collaborations between university researchers and practitioners at two Swedish companies. The authors discuss key lessons learned for each of these seven steps.},
 author = {Gorschek, Tony and Garre, Per and Larsson, Stig and Wohlin, Claes},
 doi = {10.1109/MS.2006.147},
 issn = {1937-4194},
 journal = {IEEE Software},
 keywords = {},
 month = {Nov},
 number = {6},
 pages = {88-95},
 title = {A Model for Technology Transfer in Practice},
 volume = {23},
 year = {2006}
}

@inproceedings{4221610,
 abstract = {The rapid and complex research and innovation processes require high-tech companies to optimize their technology transfer processes. It is clearly not sufficient to solely rely on internal R&D; strategic cooperations with external research centers of excellence are needed in order to compete in the global innovation market. Candidates for such strategic cooperations are universities, research institutions, and technology focused consulting companies. Key challenge is the effective integration of external competences into the company-internal innovation processes. In this paper we present a survey of the state-of-the-art in technology transfer, high-light promising success cases for the future, and derive success criteria for successful technology transfer in a global world. The cooperation between Siemens and Fraunhofer IESE is presented as a concrete example.},
 author = {Rombach, Dieter and Achatz, Reinhold},
 booktitle = {Future of Software Engineering (FOSE '07)},
 doi = {10.1109/FOSE.2007.16},
 issn = {},
 keywords = {},
 month = {May},
 number = {},
 pages = {29-36},
 title = {Research Collaborations between Academia and Industry},
 volume = {},
 year = {2007}
}

@article{Applegate_1999,
 abstract = {},
 author = {Lynda M. Applegate},
 doi = {10.2307/249402},
 journal = {{MIS} Quarterly},
 month = {mar},
 number = {1},
 pages = {1},
 publisher = {{JSTOR}},
 title = {Rigor and Relevance in {MIS} Research-Introduction},
 url = {https://doi.org/10.2307%2F249402},
 volume = {23},
 year = {1999}
}

@inproceedings{Arts_2006,
 abstract = {We present a case study in which a novel testing tool, Quviq QuickCheck, is used to test an industrial implementation of the Megaco protocol. We considered positive and negative testing and we used our developed specification to test an old version in order to estimate how useful QuickCheck could potentially be when used early in development. The results of the case study indicate that, by using Quviq QuickCheck, we would have been able to detect faults early in the development. We detected faults that had not been detected by other testing techniques. We found unclarities in the specifications and potential faults when the software is used in a different setting. The results are considered promising enough to Ericsson that they are investing in an even larger case study, this time from the beginning of the development of a new product.},
 author = {Thomas Arts and John Hughes and Joakim Johansson and Ulf Wiger},
 booktitle = {Proceedings of the 2006 {ACM} {SIGPLAN}  workshop on Erlang},
 doi = {10.1145/1159789.1159792},
 month = {sep},
 publisher = {{ACM}},
 title = {Testing telecoms software with quviq {QuickCheck}},
 url = {https://doi.org/10.1145%2F1159789.1159792},
 year = {2006}
}

@article{Barnes_2002,
 abstract = {There is a growing world-wide trend toward greater collaboration between academia and industry, an activity encouraged by governments as a means of enhancing national competitiveness and wealth creation. Warwick Manufacturing Group (WMG) is well known for its extensive links with industry, and provided an excellent opportunity for a study of management practice within university–industry collaborative research projects. This paper evaluates the findings of six collaborative research projects. The objective was to identify factors which, if managed correctly, increase the probability of a collaboration being perceived as successful by both academic and industrial partners. The outcome was a good practice model for successful university–industry research collaborations.},
 author = {Tina Barnes and Ian Pashby and Anne Gibbons},
 doi = {10.1016/s0263-2373(02)00044-0},
 journal = {European Management Journal},
 month = {jun},
 number = {3},
 pages = {272--285},
 publisher = {Elsevier {BV}},
 title = {Effective University {\textendash} Industry Interaction:},
 url = {https://doi.org/10.1016%2Fs0263-2373%2802%2900044-0},
 volume = {20},
 year = {2002}
}

@article{Beer_2001,
 abstract = {},
 author = {Michael Beer},
 doi = {10.1162/152417301570383},
 journal = {Reflections: The {SoL} Journal},
 month = {mar},
 number = {3},
 pages = {58--65},
 publisher = {{MIT} Press - Journals},
 title = {Why Management Research Findings Are Unimplementable: An Action Science Perspective},
 url = {https://doi.org/10.1162%2F152417301570383},
 volume = {2},
 year = {2001}
}

@inproceedings{Borjesson_2007,
 abstract = {To prevent skilled professionals from being phased out or forced into professions for which they are not talented, organized forms of lifelong learning are needed. Continuing professional development is an approach supporting lifelong learning. This approach is however criticized for being expensive and not providing the necessary knowledge. In response to this, we have executed a study in order to understand how universities can effectively support continuous professional development. By involving industry professionals as participants in university courses using problem based learning, we have designed what we call Practitioner Integrated Learning (PIL). This learning approach has shown positive effects in terms of level of learning, realism, knowledge diffusion, study load and costs. We present a 15-months action research project integrating 16 industry managers and 16 university students in a continuing professional development effort. Based on this study, we argue that PIL is a learning approach that effectively supports continuing professional development.},
 author = {Anna Borjesson and Lars Pareto and Ulrika Lundh Snis and Miroslaw Staron},
 booktitle = {Companion to the 22nd {ACM} {SIGPLAN} conference on Object-oriented programming systems and applications companion},
 doi = {10.1145/1297846.1297941},
 month = {oct},
 publisher = {{ACM}},
 title = {Continuing professional development by practitioner integrated learning},
 url = {https://doi.org/10.1145%2F1297846.1297941},
 year = {2007}
}

@article{Califf_2012,
 abstract = {},
 author = {Chris Califf and Tanya Beaulieu and Todd Martin},
 doi = {10.1080/15228053.2012.10845707},
 journal = {Journal of Information Technology Case and Application Research},
 month = {jul},
 number = {3},
 pages = {52--56},
 publisher = {Informa {UK} Limited},
 title = {Engaged Scholarship: A Guide for Organizational and Social Research},
 url = {https://doi.org/10.1080%2F15228053.2012.10845707},
 volume = {14},
 year = {2012}
}

@article{Checkoway_1985,
 abstract = {},
 author = {Barry Checkoway and Donald A. Schon},
 doi = {10.2307/3324262},
 journal = {Journal of Policy Analysis and Management},
 number = {3},
 pages = {476},
 publisher = {{JSTOR}},
 title = {The Reflective Practitioner: How Professionals Think in Action},
 url = {https://doi.org/10.2307%2F3324262},
 volume = {4},
 year = {1985}
}

@article{Mathiassen_2002,
 abstract = {Reports from a systems development research tradition in which emphasis is put on relating research activities to practice and on establishing fruitful collaboration between groups of researchers and practitioners. Describes and evaluates a specific research project in which a large group of researchers and practitioners worked together to understand, support, and improve systems development practices in four organisations over a period of three years. Uses the case to reflect on the research goals, approaches, and results involved in this tradition for researching systems development practice. Proposes collaborative practice research as a way to organise and conduct research into systems development practice based on close collaboration between researchers and practitioners. Exemplifies the use of pluralist research methodology by combining action research with experiments and conventional practice studies. Argues that collaborative practice research offers one practical way to strike a useful balance between relevance and rigour. Concludes with a discussion of the implications for the relation between research and practice within the systems development discipline and with lessons on how to design research efforts as collaborations between researchers and practitioners.},
 author = {Lars Mathiassen},
 doi = {10.1108/09593840210453115},
 journal = {Information Technology {\&}amp$\mathsemicolon$ People},
 month = {dec},
 number = {4},
 pages = {321--345},
 publisher = {Emerald},
 title = {Collaborative practice research},
 url = {https://doi.org/10.1108%2F09593840210453115},
 volume = {15},
 year = {2002}
}

@article{Mora_Valentin_2004,
 abstract = {This paper reviews the economic literature on the role of fees in patent systems. Two main research questions are usually addressed: the impact of patent fees on the behavior of applicants and the question of optimal fees. Studies in the former group confirm that a range of fees affect the behavior of applicants and suggest that a patent is an inelastic good. Studies in the latter group provide grounds for both low and high application (or pre-grant) fees and renewal (or post-grant) fees, depending on the structural context and on the policy objectives. The paper also presents new stylized facts on patent fees of thirty patent offices worldwide. It is shown that application fees are generally lower than renewal fees, and renewal fees increase more than proportionally with patent age (to the notable exception of Switzerland and the U.S.).},
 author = {Eva M Mora-Valentin and Angeles Montoro-Sanchez and Luis A Guerras-Martin},
 doi = {10.1016/s0048-7333(03)00087-8},
 journal = {Research Policy},
 month = {jan},
 number = {1},
 pages = {17--40},
 publisher = {Elsevier {BV}},
 title = {Determining factors in the success of R{\&}amp$\mathsemicolon$D cooperative agreements between firms and research organizations},
 url = {https://doi.org/10.1016%2Fs0048-7333%2803%2900087-8},
 volume = {33},
 year = {2004}
}

@incollection{Pareto_2009,
 abstract = {Contemporary model driven development tools only partially support the abstractions occurring in complex embedded systems
development. The paper presents an interpretive case study in which the concerns held by 7 engineers in a large product developing
organization were compared to the concerns supported by the modeling tool in use. The paper’s main finding is an empirically
grounded catalogue of concerns, categorized with respect to visibility in models and other artefacts in use. In the studied
case, 26% of the concerns were visible in the models, whereas 38% were visible elsewhere and 36% not visible at all. The catalogue
has been presented to several stakeholders in the unit studied, with positive feedback: particularly appreciated were the
notion of concern visibility as indicator of degree of implementation of model driven development, and that concerns have
traceable connections to experiences of the unit’s engineers.},
 author = {Lars Pareto and Peter Eriksson and Staffan Ehnebom},
 booktitle = {Model Driven Engineering Languages and Systems},
 doi = {10.1007/978-3-642-04425-0_15},
 pages = {196--210},
 publisher = {Springer Berlin Heidelberg},
 title = {Concern Visibility in Base Station Development {\textendash} An Empirical Investigation},
 url = {https://doi.org/10.1007%2F978-3-642-04425-0_15},
 year = {2009}
}

@article{Staron_2009,
 abstract = {As in every engineering discipline, metrics play an important role in software development, with the difference that almost all software projects need the customization of metrics used. In other engineering disciplines, the notion of a measurement system (i.e. a tool used to collect, calculate, and report quantitative data) is well known and defined, whereas it is not as widely used in software engineering. In this paper we present a framework for developing custom measurement systems and its industrial evaluation in a software development unit within Ericsson. The results include the framework for designing measurement systems and its evaluation in real life projects at the company. The results show that with the help of ISO/IEC standards, measurement systems can be effectively used in software industry and that the presented framework improves the way of working with metrics. This paper contributes with the presentation of how automation of metrics collection and processing can be successfully introduced into a large organization and shows the benefits of it: increased efficiency of metrics collection, increased adoption of metrics in the organization, independence from individuals and standardized nomenclature for metrics in the organization.},
 author = {Miroslaw Staron and Wilhelm Meding and Christer Nilsson},
 doi = {10.1016/j.infsof.2008.10.001},
 journal = {Information and Software Technology},
 month = {apr},
 number = {4},
 pages = {721--737},
 publisher = {Elsevier {BV}},
 title = {A framework for developing measurement systems and its industrial evaluation},
 url = {https://doi.org/10.1016%2Fj.infsof.2008.10.001},
 volume = {51},
 year = {2009}
}
